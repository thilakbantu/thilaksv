[
    {
    "id": "agile_001",
    "question": "Which of the following is a key value of the Agile Manifesto?",
    "options": [
      { "id": "option_1", "text": "Comprehensive documentation over working software", "isCorrect": false },
      { "id": "option_2", "text": "Processes and tools over individuals and interactions", "isCorrect": false },
      { "id": "option_3", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_4", "text": "Following a plan over responding to change", "isCorrect": false }
    ],
    "hint": "Think about Agile's emphasis on teamwork and customer involvement.",
    "answerDescription": "Agile values customer collaboration over contract negotiation to ensure responsiveness to customer needs."
  },
  {
    "id": "agile_002",
    "question": "What does the Agile Manifesto prioritize over processes and tools?",
    "options": [
      { "id": "option_1", "text": "Contract negotiations", "isCorrect": false },
      { "id": "option_2", "text": "Individuals and interactions", "isCorrect": true },
      { "id": "option_3", "text": "Following strict documentation", "isCorrect": false },
      { "id": "option_4", "text": "Detailed planning", "isCorrect": false }
    ],
    "hint": "Agile focuses on people more than rigid processes.",
    "answerDescription": "Agile values individuals and interactions over processes and tools to encourage collaboration and adaptability."
  },
  {
    "id": "agile_003",
    "question": "Which Agile principle promotes delivering working software frequently?",
    "options": [
      { "id": "option_1", "text": "Customer satisfaction through early and continuous delivery", "isCorrect": true },
      { "id": "option_2", "text": "Simplicityâ€”the art of maximizing work not done", "isCorrect": false },
      { "id": "option_3", "text": "Continuous attention to technical excellence", "isCorrect": false },
      { "id": "option_4", "text": "Face-to-face communication is the best form of communication", "isCorrect": false }
    ],
    "hint": "Think about iterative development and early releases.",
    "answerDescription": "Agile promotes early and continuous delivery of valuable software to meet customer needs efficiently."
  },
  {
    "id": "agile_004",
    "question": "Which of the following best describes Agile's approach to responding to change?",
    "options": [
      { "id": "option_1", "text": "Strictly following a set plan", "isCorrect": false },
      { "id": "option_2", "text": "Adapting plans as needed", "isCorrect": true },
      { "id": "option_3", "text": "Rejecting all changes", "isCorrect": false },
      { "id": "option_4", "text": "Making changes only at the end of a project", "isCorrect": false }
    ],
    "hint": "Agile values flexibility and adaptability.",
    "answerDescription": "Agile embraces change, even late in development, to improve customer satisfaction."
  },
  {
    "id": "agile_005",
    "question": "What is the primary measure of progress in Agile?",
    "options": [
      { "id": "option_1", "text": "Number of completed documentation pages", "isCorrect": false },
      { "id": "option_2", "text": "Number of meetings held", "isCorrect": false },
      { "id": "option_3", "text": "Working software", "isCorrect": true },
      { "id": "option_4", "text": "Adherence to the project plan", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering tangible outcomes.",
    "answerDescription": "In Agile, working software is the primary measure of progress as it ensures real value delivery."
  },
  {
    "id": "agile_006",
    "question": "Which Agile principle emphasizes motivated individuals and a supportive environment?",
    "options": [
      { "id": "option_1", "text": "Simplicity is essential", "isCorrect": false },
      { "id": "option_2", "text": "Build projects around motivated individuals", "isCorrect": true },
      { "id": "option_3", "text": "Deliver working software frequently", "isCorrect": false },
      { "id": "option_4", "text": "Business people and developers must work separately", "isCorrect": false }
    ],
    "hint": "Agile believes in fostering motivated teams.",
    "answerDescription": "Agile recommends building projects around motivated individuals and providing them the support they need to succeed."
  },
  {
    "id": "agile_007",
    "question": "Which Agile principle promotes sustainable development?",
    "options": [
      { "id": "option_1", "text": "Technical excellence should be ignored", "isCorrect": false },
      { "id": "option_2", "text": "Simplicity is the key", "isCorrect": false },
      { "id": "option_3", "text": "Maintain a constant pace indefinitely", "isCorrect": true },
      { "id": "option_4", "text": "Strict deadlines over quality work", "isCorrect": false }
    ],
    "hint": "Agile encourages a steady work pace.",
    "answerDescription": "Agile promotes sustainable development where teams maintain a constant pace indefinitely."
  },
  {
    "id": "agile_008",
    "question": "What does the Agile principle of 'simplicity' refer to?",
    "options": [
      { "id": "option_1", "text": "Maximizing work done", "isCorrect": false },
      { "id": "option_2", "text": "Focusing on complex solutions", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing the amount of work not done", "isCorrect": true },
      { "id": "option_4", "text": "Writing extensive documentation", "isCorrect": false }
    ],
    "hint": "Agile encourages minimizing unnecessary work.",
    "answerDescription": "Agile values simplicity, meaning maximizing the amount of work not done to focus on what truly matters."
  },
  {
    "id": "agile_009",
    "question": "What is the role of face-to-face communication in Agile?",
    "options": [
      { "id": "option_1", "text": "It is discouraged in favor of emails", "isCorrect": false },
      { "id": "option_2", "text": "It is the most effective form of communication", "isCorrect": true },
      { "id": "option_3", "text": "It should only be used for final approvals", "isCorrect": false },
      { "id": "option_4", "text": "It slows down Agile development", "isCorrect": false }
    ],
    "hint": "Agile values direct communication methods.",
    "answerDescription": "Face-to-face communication is considered the most effective way to share information in Agile teams."
  },
  {
    "id": "agile_010",
    "question": "Which Agile principle emphasizes continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Retrospectives to reflect and adjust", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_3", "text": "Limiting feedback from teams", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on speed, not quality", "isCorrect": false }
    ],
    "hint": "Agile teams frequently reflect on how to improve.",
    "answerDescription": "Agile teams conduct retrospectives to reflect on their processes and make necessary adjustments for continuous improvement."
 },
 {
    "id": "agile_11",
    "question": "What is the main goal of Agile development?",
    "options": [
      { "id": "option_1", "text": "Following strict project plans", "isCorrect": false },
      { "id": "option_2", "text": "Delivering valuable software quickly", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing project documentation", "isCorrect": false }
    ],
    "hint": "Agile prioritizes speed and value delivery.",
    "answerDescription": "The main goal of Agile is to deliver valuable software quickly through iterative development and customer feedback."
  },
  {
    "id": "agile_12",
    "question": "Which of the following best describes Agile teams?",
    "options": [
      { "id": "option_1", "text": "They rely on rigid hierarchies", "isCorrect": false },
      { "id": "option_2", "text": "They are self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_3", "text": "They follow a fixed set of roles", "isCorrect": false },
      { "id": "option_4", "text": "They avoid collaboration with stakeholders", "isCorrect": false }
    ],
    "hint": "Agile promotes team autonomy.",
    "answerDescription": "Agile teams are self-organizing and cross-functional, allowing them to adapt quickly and make decisions collaboratively."
  },
  {
    "id": "agile_13",
    "question": "How does Agile handle changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By avoiding changes after planning", "isCorrect": false },
      { "id": "option_2", "text": "By embracing and incorporating changes", "isCorrect": true },
      { "id": "option_3", "text": "By delaying changes until the next project phase", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring late-stage feedback", "isCorrect": false }
    ],
    "hint": "Agile thrives on flexibility.",
    "answerDescription": "Agile welcomes changing customer requirements, even late in development, to enhance product value."
  },
  {
    "id": "agile_14",
    "question": "What is an Agile retrospective?",
    "options": [
      { "id": "option_1", "text": "A project closure report", "isCorrect": false },
      { "id": "option_2", "text": "A meeting to reflect and improve", "isCorrect": true },
      { "id": "option_3", "text": "A session for planning future work", "isCorrect": false },
      { "id": "option_4", "text": "A document review process", "isCorrect": false }
    ],
    "hint": "It helps teams learn from past iterations.",
    "answerDescription": "An Agile retrospective is a meeting where teams reflect on their processes and identify areas for improvement."
  },
  {
    "id": "agile_15",
    "question": "Which Agile principle focuses on technical excellence?",
    "options": [
      { "id": "option_1", "text": "Delivering software as quickly as possible", "isCorrect": false },
      { "id": "option_2", "text": "Continuous attention to technical excellence", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding unnecessary work", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing customer collaboration", "isCorrect": false }
    ],
    "hint": "Agile promotes high-quality development practices.",
    "answerDescription": "Continuous attention to technical excellence ensures that Agile teams build high-quality software that is maintainable and scalable."
  },
  {
    "id": "agile_16",
    "question": "What is the Agile approach to risk management?",
    "options": [
      { "id": "option_1", "text": "Ignoring risks until they occur", "isCorrect": false },
      { "id": "option_2", "text": "Managing risks through iterative feedback", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Using lengthy approval processes", "isCorrect": false }
    ],
    "hint": "Agile addresses risks through continuous iteration.",
    "answerDescription": "Agile manages risks through iterative development and regular feedback, allowing teams to identify and resolve issues early."
  },
  {
    "id": "agile_17",
    "question": "Why does Agile prefer shorter development cycles?",
    "options": [
      { "id": "option_1", "text": "To reduce documentation efforts", "isCorrect": false },
      { "id": "option_2", "text": "To get faster feedback and adaptability", "isCorrect": true },
      { "id": "option_3", "text": "To decrease collaboration needs", "isCorrect": false },
      { "id": "option_4", "text": "To avoid customer involvement", "isCorrect": false }
    ],
    "hint": "Short iterations help improve responsiveness.",
    "answerDescription": "Shorter development cycles in Agile allow for faster feedback and quick adaptation to changing requirements."
  },
  {
    "id": "agile_18",
    "question": "Which Agile principle ensures that software is always in a releasable state?",
    "options": [
      { "id": "option_1", "text": "Maximizing team size", "isCorrect": false },
      { "id": "option_2", "text": "Continuous integration", "isCorrect": true },
      { "id": "option_3", "text": "Only testing at the final stage", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing customer feedback", "isCorrect": false }
    ],
    "hint": "Agile promotes frequent testing and merging of code.",
    "answerDescription": "Continuous integration ensures that software is always in a releasable state by integrating and testing code frequently."
  },
  {
    "id": "agile_19",
    "question": "What is the role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "To act as the sole developer", "isCorrect": false },
      { "id": "option_2", "text": "To prioritize backlog items", "isCorrect": true },
      { "id": "option_3", "text": "To write code exclusively", "isCorrect": false },
      { "id": "option_4", "text": "To manage project finances", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on defining priorities.",
    "answerDescription": "The Product Owner is responsible for prioritizing the product backlog and ensuring the team delivers maximum value."
  },
  {
    "id": "agile_20",
    "question": "How does Agile improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By reducing customer interactions", "isCorrect": false },
      { "id": "option_2", "text": "By delivering valuable software frequently", "isCorrect": true },
      { "id": "option_3", "text": "By following a rigid project plan", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding scope changes", "isCorrect": false }
    ],
    "hint": "Frequent deliveries keep customers engaged.",
    "answerDescription": "Agile improves customer satisfaction by delivering valuable software frequently and incorporating customer feedback."
},
{
    "id": "agile_21",
    "question": "What is a key benefit of using Agile methodologies?",
    "options": [
      { "id": "option_1", "text": "Rigid planning reduces uncertainty", "isCorrect": false },
      { "id": "option_2", "text": "Minimal collaboration increases efficiency", "isCorrect": false },
      { "id": "option_3", "text": "Faster adaptation to changing requirements", "isCorrect": true },
      { "id": "option_4", "text": "Extensive documentation takes priority", "isCorrect": false }
    ],
    "hint": "Agile is known for its flexibility.",
    "answerDescription": "One of the key benefits of Agile is its ability to quickly adapt to changing requirements and market conditions."
  },
  {
    "id": "agile_22",
    "question": "Which Agile framework is based on time-boxed iterations called Sprints?",
    "options": [
      { "id": "option_1", "text": "Kanban", "isCorrect": false },
      { "id": "option_2", "text": "Lean", "isCorrect": false },
      { "id": "option_3", "text": "Scrum", "isCorrect": true },
      { "id": "option_4", "text": "Extreme Programming", "isCorrect": false }
    ],
    "hint": "This framework uses defined short cycles.",
    "answerDescription": "Scrum is an Agile framework that divides work into fixed-length iterations known as Sprints."
  },
  {
    "id": "agile_23",
    "question": "What is the purpose of a Daily Standup in Agile?",
    "options": [
      { "id": "option_1", "text": "To review project finances", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "To quickly discuss progress and obstacles", "isCorrect": true },
      { "id": "option_4", "text": "To create detailed reports", "isCorrect": false }
    ],
    "hint": "This meeting is short and happens daily.",
    "answerDescription": "A Daily Standup is a brief meeting where team members share updates on progress, blockers, and plans for the day."
  },
  {
    "id": "agile_24",
    "question": "What is a Product Backlog in Agile?",
    "options": [
      { "id": "option_1", "text": "A list of completed tasks", "isCorrect": false },
      { "id": "option_2", "text": "A document describing the final product", "isCorrect": false },
      { "id": "option_3", "text": "A prioritized list of work items for the team", "isCorrect": true },
      { "id": "option_4", "text": "A fixed plan for the entire project", "isCorrect": false }
    ],
    "hint": "This backlog helps manage work priorities.",
    "answerDescription": "A Product Backlog is a dynamic list of tasks, features, and requirements that the Agile team prioritizes and works on."
  },
  {
    "id": "agile_25",
    "question": "What role does a Scrum Master play in Agile development?",
    "options": [
      { "id": "option_1", "text": "They act as the project manager", "isCorrect": false },
      { "id": "option_2", "text": "They make final business decisions", "isCorrect": false },
      { "id": "option_3", "text": "They facilitate the Scrum process", "isCorrect": true },
      { "id": "option_4", "text": "They write most of the code", "isCorrect": false }
    ],
    "hint": "This role focuses on guiding the team.",
    "answerDescription": "A Scrum Master helps the team follow Agile principles, removes impediments, and ensures efficient workflow."
  },
  {
    "id": "agile_26",
    "question": "What is the primary purpose of a Sprint Review in Agile?",
    "options": [
      { "id": "option_1", "text": "To finalize project funding", "isCorrect": false },
      { "id": "option_2", "text": "To discuss long-term plans", "isCorrect": false },
      { "id": "option_3", "text": "To demonstrate completed work to stakeholders", "isCorrect": true },
      { "id": "option_4", "text": "To document every task in detail", "isCorrect": false }
    ],
    "hint": "This meeting involves stakeholders.",
    "answerDescription": "A Sprint Review is held at the end of a Sprint to showcase completed work and gather feedback from stakeholders."
  },
  {
    "id": "agile_27",
    "question": "What is the function of User Stories in Agile?",
    "options": [
      { "id": "option_1", "text": "They serve as detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "They define final project deadlines", "isCorrect": false },
      { "id": "option_3", "text": "They describe requirements from a user's perspective", "isCorrect": true },
      { "id": "option_4", "text": "They assign specific coding tasks", "isCorrect": false }
    ],
    "hint": "User Stories focus on user needs.",
    "answerDescription": "User Stories describe features from the end-user's perspective, helping teams understand and implement requirements effectively."
  },
  {
    "id": "agile_28",
    "question": "Which of the following best describes an Agile Sprint Planning meeting?",
    "options": [
      { "id": "option_1", "text": "A meeting to review past mistakes", "isCorrect": false },
      { "id": "option_2", "text": "A session for finalizing all project tasks", "isCorrect": false },
      { "id": "option_3", "text": "A collaborative meeting to define Sprint goals", "isCorrect": true },
      { "id": "option_4", "text": "A one-time strategy meeting", "isCorrect": false }
    ],
    "hint": "This meeting starts each Sprint.",
    "answerDescription": "Sprint Planning is a meeting where the team selects and defines work for the upcoming Sprint based on priorities."
  },
  {
    "id": "agile_29",
    "question": "How does Agile ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By strictly following initial plans", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding process reviews", "isCorrect": false },
      { "id": "option_3", "text": "By holding retrospectives and making adjustments", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging changes", "isCorrect": false }
    ],
    "hint": "Teams reflect on their work and improve iteratively.",
    "answerDescription": "Agile ensures continuous improvement through retrospectives, where teams reflect on their work and make necessary changes."
 },
{
    "id": "agile_30",
    "question": "What is the main reason Agile teams use Velocity as a metric?",
    "options": [
      { "id": "option_1", "text": "To compare teams against each other", "isCorrect": false },
      { "id": "option_2", "text": "To measure individual performance", "isCorrect": false },
      { "id": "option_3", "text": "To track the teamâ€™s work capacity over time", "isCorrect": true },
      { "id": "option_4", "text": "To reduce customer involvement", "isCorrect": false }
    ],
    "hint": "Velocity helps teams plan future work.",
    "answerDescription": "Velocity measures the amount of work a team completes in a Sprint, helping them estimate workload capacity for future iterations."
},  {
    "id": "agile_31",
    "question": "Which Agile framework uses time-boxed iterations called sprints?",
    "options": [
      { "id": "option_1", "text": "Kanban", "isCorrect": false },
      { "id": "option_2", "text": "Lean", "isCorrect": false },
      { "id": "option_3", "text": "XP (Extreme Programming)", "isCorrect": false },
      { "id": "option_4", "text": "Scrum", "isCorrect": true }
    ],
    "hint": "This framework emphasizes iterative development cycles.",
    "answerDescription": "Scrum is an Agile framework that structures work into time-boxed iterations called sprints, typically lasting two to four weeks."
  },
  {
    "id": "agile_32",
    "question": "What is the primary responsibility of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "To dictate team tasks", "isCorrect": false },
      { "id": "option_2", "text": "To control project scope", "isCorrect": false },
      { "id": "option_3", "text": "To approve product features", "isCorrect": false },
      { "id": "option_4", "text": "To remove impediments and facilitate Scrum practices", "isCorrect": true }
    ],
    "hint": "The Scrum Master helps the team perform efficiently.",
    "answerDescription": "The Scrum Master is responsible for facilitating Agile practices, removing impediments, and ensuring the team follows Scrum principles."
  },
  {
    "id": "agile_33",
    "question": "What does a burndown chart represent in Agile?",
    "options": [
      { "id": "option_1", "text": "A list of upcoming features", "isCorrect": false },
      { "id": "option_2", "text": "A comparison of team members' performance", "isCorrect": false },
      { "id": "option_3", "text": "A roadmap for future sprints", "isCorrect": false },
      { "id": "option_4", "text": "The amount of remaining work over time", "isCorrect": true }
    ],
    "hint": "This chart helps track progress toward sprint goals.",
    "answerDescription": "A burndown chart visualizes the remaining work in a sprint or project, helping teams monitor progress and adjust their workload accordingly."
  },
  {
    "id": "agile_34",
    "question": "Why is customer collaboration important in Agile development?",
    "options": [
      { "id": "option_1", "text": "To validate the final product before release", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for iteration", "isCorrect": false },
      { "id": "option_3", "text": "To avoid scope creep", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the product meets user needs", "isCorrect": true }
    ],
    "hint": "Agile values customer feedback throughout the project.",
    "answerDescription": "Customer collaboration is crucial in Agile as it ensures continuous feedback, helping teams build a product that aligns with user expectations."
  },
  {
    "id": "agile_35",
    "question": "Which Agile artifact contains all the work needed for a product?",
    "options": [
      { "id": "option_1", "text": "Sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Burndown chart", "isCorrect": false },
      { "id": "option_3", "text": "Release plan", "isCorrect": false },
      { "id": "option_4", "text": "Product backlog", "isCorrect": true }
    ],
    "hint": "This is managed by the Product Owner.",
    "answerDescription": "The product backlog is an ordered list of all the work required for a product, managed by the Product Owner."
  },
  {
    "id": "agile_36",
    "question": "What is the main goal of daily stand-up meetings in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign new tasks", "isCorrect": false },
      { "id": "option_2", "text": "To report to managers", "isCorrect": false },
      { "id": "option_3", "text": "To discuss long-term planning", "isCorrect": false },
      { "id": "option_4", "text": "To synchronize team progress and identify blockers", "isCorrect": true }
    ],
    "hint": "These meetings are short and focused.",
    "answerDescription": "Daily stand-ups are brief meetings where team members discuss their progress, plans, and any obstacles, ensuring alignment and quick issue resolution."
  },
  {
    "id": "agile_37",
    "question": "What is the primary benefit of continuous deployment in Agile?",
    "options": [
      { "id": "option_1", "text": "Faster documentation", "isCorrect": false },
      { "id": "option_2", "text": "Reduced need for automated testing", "isCorrect": false },
      { "id": "option_3", "text": "Infrequent software updates", "isCorrect": false },
      { "id": "option_4", "text": "Frequent and reliable releases", "isCorrect": true }
    ],
    "hint": "This helps deliver value quickly and frequently.",
    "answerDescription": "Continuous deployment enables frequent and reliable software releases, ensuring that improvements and fixes reach users faster."
  },
  {
    "id": "agile_38",
    "question": "How does Agile encourage innovation?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_3", "text": "By limiting feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "By promoting iterative development and feedback", "isCorrect": true }
    ],
    "hint": "Agile allows teams to refine and improve their ideas.",
    "answerDescription": "Agile fosters innovation by enabling teams to experiment, iterate, and gather feedback, ensuring continuous improvement."
  },
  {
    "id": "agile_39",
    "question": "What is the Agile Manifestoâ€™s stance on responding to change?",
    "options": [
      { "id": "option_1", "text": "Avoid changes to maintain stability", "isCorrect": false },
      { "id": "option_2", "text": "Only allow changes in early stages", "isCorrect": false },
      { "id": "option_3", "text": "Delay changes until the next iteration", "isCorrect": false },
      { "id": "option_4", "text": "Embrace change for customer advantage", "isCorrect": true }
    ],
    "hint": "Agile views change as a competitive advantage.",
    "answerDescription": "The Agile Manifesto values responding to change over following a plan, ensuring teams can adapt quickly to meet customer needs."
  },
  {
    "id": "agile_40",
    "question": "What is a key characteristic of Agile leadership?",
    "options": [
      { "id": "option_1", "text": "Command and control management", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on business outcomes", "isCorrect": false },
      { "id": "option_3", "text": "Strictly enforcing predefined rules", "isCorrect": false },
      { "id": "option_4", "text": "Empowering teams to self-organize", "isCorrect": true }
    ],
    "hint": "Agile leaders support and enable teams rather than dictate tasks.",
    "answerDescription": "Agile leadership emphasizes empowering teams to self-organize, make decisions, and continuously improve processes."
  },
  {
    "id": "agile_41",
    "question": "What is the primary focus of Agile development?",
    "options": [
      { "id": "option_1", "text": "Delivering working software frequently", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to documentation", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Following a fixed schedule", "isCorrect": false }
    ],
    "hint": "Agile values rapid and continuous delivery.",
    "answerDescription": "Agile focuses on delivering working software frequently to ensure responsiveness to change and continuous improvement."
  },
  {
    "id": "agile_42",
    "question": "Which Agile framework uses time-boxed iterations called sprints?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": true },
      { "id": "option_2", "text": "Kanban", "isCorrect": false },
      { "id": "option_3", "text": "Waterfall", "isCorrect": false },
      { "id": "option_4", "text": "Extreme Programming (XP)", "isCorrect": false }
    ],
    "hint": "This framework divides work into fixed-length iterations.",
    "answerDescription": "Scrum is an Agile framework that organizes work into sprints, which are time-boxed iterations used for iterative development."
  },
  {
    "id": "agile_43",
    "question": "What is a key benefit of daily stand-up meetings in Agile?",
    "options": [
      { "id": "option_1", "text": "Improved team communication and coordination", "isCorrect": true },
      { "id": "option_2", "text": "Eliminating documentation requirements", "isCorrect": false },
      { "id": "option_3", "text": "Lengthening project timelines", "isCorrect": false },
      { "id": "option_4", "text": "Reducing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "These meetings enhance transparency among team members.",
    "answerDescription": "Daily stand-up meetings help Agile teams improve communication, coordinate tasks, and address blockers quickly."
  },
  {
    "id": "agile_44",
    "question": "Which Agile artifact represents the prioritized work items for a project?",
    "options": [
      { "id": "option_1", "text": "Product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Sprint review", "isCorrect": false },
      { "id": "option_3", "text": "Retrospective log", "isCorrect": false },
      { "id": "option_4", "text": "Project charter", "isCorrect": false }
    ],
    "hint": "It is a dynamic list managed by the Product Owner.",
    "answerDescription": "The product backlog is a prioritized list of work items that guide the development efforts in Agile projects."
  },
  {
    "id": "agile_45",
    "question": "Why does Agile encourage working in cross-functional teams?",
    "options": [
      { "id": "option_1", "text": "To enhance collaboration and adaptability", "isCorrect": true },
      { "id": "option_2", "text": "To avoid customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on specialized tasks", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the number of iterations", "isCorrect": false }
    ],
    "hint": "Cross-functional teams combine diverse skills.",
    "answerDescription": "Agile promotes cross-functional teams to enhance collaboration, adaptability, and faster delivery of working solutions."
  },
  {
    "id": "agile_46",
    "question": "What is the primary responsibility of the Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating the Agile process and removing obstacles", "isCorrect": true },
      { "id": "option_2", "text": "Defining business requirements", "isCorrect": false },
      { "id": "option_3", "text": "Writing code for the project", "isCorrect": false },
      { "id": "option_4", "text": "Managing project finances", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports the team and maintains Agile practices.",
    "answerDescription": "The Scrum Master facilitates the Agile process by ensuring the team follows best practices and addressing any blockers."
  },
  {
    "id": "agile_47",
    "question": "Which Agile principle promotes sustainable development?",
    "options": [
      { "id": "option_1", "text": "Maintaining a constant pace indefinitely", "isCorrect": true },
      { "id": "option_2", "text": "Working extensive overtime to meet deadlines", "isCorrect": false },
      { "id": "option_3", "text": "Delivering as fast as possible at any cost", "isCorrect": false },
      { "id": "option_4", "text": "Only focusing on immediate goals", "isCorrect": false }
    ],
    "hint": "Agile encourages balanced workloads.",
    "answerDescription": "Agile promotes sustainable development by encouraging teams to maintain a consistent work pace for long-term productivity."
  },
  {
    "id": "agile_48",
    "question": "What does 'incremental development' mean in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering work in small, functional pieces", "isCorrect": true },
      { "id": "option_2", "text": "Completing all features before releasing", "isCorrect": false },
      { "id": "option_3", "text": "Building software in a single phase", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on bug fixes before delivery", "isCorrect": false }
    ],
    "hint": "Agile focuses on continuous value delivery.",
    "answerDescription": "Incremental development in Agile means delivering software in small, functional pieces to ensure continuous improvement and feedback."
  },
  {
    "id": "agile_49",
    "question": "What is a key advantage of using Agile over traditional methods?",
    "options": [
      { "id": "option_1", "text": "Faster adaptation to changing requirements", "isCorrect": true },
      { "id": "option_2", "text": "More rigid project planning", "isCorrect": false },
      { "id": "option_3", "text": "Longer feedback cycles", "isCorrect": false },
      { "id": "option_4", "text": "Minimal team collaboration", "isCorrect": false }
    ],
    "hint": "Agile allows continuous changes.",
    "answerDescription": "Agile provides faster adaptation to changes by incorporating feedback and making incremental improvements throughout development."
  },
  {
    "id": "agile_50",
    "question": "What does the term 'velocity' measure in Agile?",
    "options": [
      { "id": "option_1", "text": "The amount of work completed per iteration", "isCorrect": true },
      { "id": "option_2", "text": "The speed of coding tasks", "isCorrect": false },
      { "id": "option_3", "text": "The total number of backlog items", "isCorrect": false },
      { "id": "option_4", "text": "The number of meetings held", "isCorrect": false }
    ],
    "hint": "Velocity helps predict team performance.",
    "answerDescription": "In Agile, velocity is a metric that measures the amount of work a team completes during an iteration, helping with future planning."
  }, {
    "id": "agile_51",
    "question": "What is the primary benefit of using Agile over traditional project management?",
    "options": [
      { "id": "option_1", "text": "It reduces customer collaboration", "isCorrect": false },
      { "id": "option_2", "text": "It allows for flexibility and faster feedback", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for planning", "isCorrect": false },
      { "id": "option_4", "text": "It follows a strict, linear process", "isCorrect": false }
    ],
    "hint": "Agile focuses on adaptability and iterative progress.",
    "answerDescription": "Agile provides flexibility, continuous feedback, and iterative progress, making it more adaptive than traditional approaches."
  },
  {
    "id": "agile_52",
    "question": "Which Agile framework is best known for its time-boxed iterations?",
    "options": [
      { "id": "option_1", "text": "Kanban", "isCorrect": false },
      { "id": "option_2", "text": "Scrum", "isCorrect": true },
      { "id": "option_3", "text": "Lean", "isCorrect": false },
      { "id": "option_4", "text": "Extreme Programming (XP)", "isCorrect": false }
    ],
    "hint": "This framework uses sprints to manage work.",
    "answerDescription": "Scrum is an Agile framework that organizes work into time-boxed iterations called sprints, allowing teams to deliver incremental progress."
  },
  {
    "id": "agile_53",
    "question": "What does a Scrum Master primarily do?",
    "options": [
      { "id": "option_1", "text": "Assigns tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Facilitates Agile processes and removes impediments", "isCorrect": true },
      { "id": "option_3", "text": "Manages the product backlog", "isCorrect": false },
      { "id": "option_4", "text": "Sets deadlines for the team", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports the team and ensures smooth workflow.",
    "answerDescription": "A Scrum Master facilitates Agile processes, removes obstacles, and helps the team follow Scrum practices effectively."
  },
  {
    "id": "agile_54",
    "question": "Why is customer collaboration important in Agile development?",
    "options": [
      { "id": "option_1", "text": "It increases project cost", "isCorrect": false },
      { "id": "option_2", "text": "It ensures the final product meets expectations", "isCorrect": true },
      { "id": "option_3", "text": "It speeds up coding efforts", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for planning", "isCorrect": false }
    ],
    "hint": "Customer feedback helps refine the product.",
    "answerDescription": "Customer collaboration in Agile helps align development with user needs, leading to a more successful product."
  },
  {
    "id": "agile_55",
    "question": "What is a key characteristic of Agile teams?",
    "options": [
      { "id": "option_1", "text": "They work in isolation", "isCorrect": false },
      { "id": "option_2", "text": "They are self-organizing", "isCorrect": true },
      { "id": "option_3", "text": "They follow strict hierarchies", "isCorrect": false },
      { "id": "option_4", "text": "They avoid direct communication", "isCorrect": false }
    ],
    "hint": "Agile teams make decisions collectively.",
    "answerDescription": "Self-organizing teams in Agile have the autonomy to manage their work and collaborate effectively without strict hierarchies."
  },
  {
    "id": "agile_56",
    "question": "How does Agile improve product quality?",
    "options": [
      { "id": "option_1", "text": "By reducing testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "By integrating continuous feedback and testing", "isCorrect": true },
      { "id": "option_3", "text": "By skipping documentation", "isCorrect": false },
      { "id": "option_4", "text": "By following a rigid process", "isCorrect": false }
    ],
    "hint": "Agile includes continuous testing and refinement.",
    "answerDescription": "Agile improves quality through iterative feedback, continuous testing, and incremental enhancements to the product."
  },
  {
    "id": "agile_57",
    "question": "Which Agile ceremony is focused on planning the next sprint?",
    "options": [
      { "id": "option_1", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This meeting helps decide what work to focus on next.",
    "answerDescription": "Sprint Planning is an Agile ceremony where the team decides on the work to complete in the upcoming sprint."
  },
  {
    "id": "agile_58",
    "question": "What is the purpose of a Daily Standup meeting?",
    "options": [
      { "id": "option_1", "text": "To discuss long-term strategy", "isCorrect": false },
      { "id": "option_2", "text": "To quickly align the team on progress and blockers", "isCorrect": true },
      { "id": "option_3", "text": "To finalize project documentation", "isCorrect": false },
      { "id": "option_4", "text": "To assign individual tasks", "isCorrect": false }
    ],
    "hint": "It's a short meeting to keep the team aligned.",
    "answerDescription": "A Daily Standup is a quick Agile meeting where team members share updates, discuss blockers, and coordinate efforts."
  },
  {
    "id": "agile_59",
    "question": "Which Agile practice ensures that code is always in a deployable state?",
    "options": [
      { "id": "option_1", "text": "Pair programming", "isCorrect": false },
      { "id": "option_2", "text": "Continuous integration", "isCorrect": true },
      { "id": "option_3", "text": "Sprint retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "Backlog grooming", "isCorrect": false }
    ],
    "hint": "This practice involves frequent code integration and testing.",
    "answerDescription": "Continuous integration ensures that code is frequently merged, tested, and always in a deployable state."
  },
  {
    "id": "agile_60",
    "question": "Why are shorter iterations beneficial in Agile?",
    "options": [
      { "id": "option_1", "text": "They reduce customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "They allow for faster feedback and adaptability", "isCorrect": true },
      { "id": "option_3", "text": "They minimize team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "They eliminate the need for retrospectives", "isCorrect": false }
    ],
    "hint": "Short iterations help refine and improve the product quickly.",
    "answerDescription": "Shorter iterations allow Agile teams to gather feedback faster, adapt to changes, and deliver incremental improvements efficiently."
  },  {
    "id": "agile_61",
    "question": "What is the purpose of a Sprint Review in Agile?",
    "options": [
      { "id": "option_1", "text": "To create a detailed project plan", "isCorrect": false },
      { "id": "option_2", "text": "To finalize project documentation", "isCorrect": false },
      { "id": "option_3", "text": "To inspect and adapt the product increment", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks for the next sprint", "isCorrect": false }
    ],
    "hint": "Sprint Reviews focus on product feedback.",
    "answerDescription": "A Sprint Review is held at the end of a sprint to inspect the product increment and gather feedback for future improvements."
  },
  {
    "id": "agile_62",
    "question": "Which Agile framework uses time-boxed iterations called Sprints?",
    "options": [
      { "id": "option_1", "text": "Kanban", "isCorrect": false },
      { "id": "option_2", "text": "Extreme Programming (XP)", "isCorrect": false },
      { "id": "option_3", "text": "Scrum", "isCorrect": true },
      { "id": "option_4", "text": "Lean", "isCorrect": false }
    ],
    "hint": "This framework organizes work into short, fixed-length cycles.",
    "answerDescription": "Scrum uses Sprints, which are time-boxed iterations, to deliver incremental improvements to the product."
  },
  {
    "id": "agile_63",
    "question": "What is the recommended duration of a daily stand-up meeting in Agile?",
    "options": [
      { "id": "option_1", "text": "60 minutes", "isCorrect": false },
      { "id": "option_2", "text": "45 minutes", "isCorrect": false },
      { "id": "option_3", "text": "15 minutes", "isCorrect": true },
      { "id": "option_4", "text": "30 minutes", "isCorrect": false }
    ],
    "hint": "It's meant to be quick and focused.",
    "answerDescription": "The daily stand-up meeting should not exceed 15 minutes to ensure it remains concise and efficient."
  },
  {
    "id": "agile_64",
    "question": "What is the role of the Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To make all technical decisions", "isCorrect": false },
      { "id": "option_3", "text": "To facilitate Agile processes and remove impediments", "isCorrect": true },
      { "id": "option_4", "text": "To act as the sole decision-maker", "isCorrect": false }
    ],
    "hint": "The Scrum Master focuses on process facilitation.",
    "answerDescription": "The Scrum Master ensures that Agile principles are followed and helps the team remove any obstacles that hinder progress."
  },
  {
    "id": "agile_65",
    "question": "What is the main purpose of backlog refinement in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign work to developers", "isCorrect": false },
      { "id": "option_2", "text": "To finalize project timelines", "isCorrect": false },
      { "id": "option_3", "text": "To ensure backlog items are well-defined and prioritized", "isCorrect": true },
      { "id": "option_4", "text": "To replace sprint planning", "isCorrect": false }
    ],
    "hint": "Backlog refinement helps maintain clarity in future work.",
    "answerDescription": "Backlog refinement ensures that user stories are clear, detailed, and prioritized before they are selected for a sprint."
  },
  {
    "id": "agile_66",
    "question": "Why is customer collaboration important in Agile?",
    "options": [
      { "id": "option_1", "text": "To increase project costs", "isCorrect": false },
      { "id": "option_2", "text": "To slow down development", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the product meets user needs", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate team autonomy", "isCorrect": false }
    ],
    "hint": "Agile values customer involvement.",
    "answerDescription": "Customer collaboration ensures continuous feedback, helping the team develop a product that truly meets user needs."
  },
  {
    "id": "agile_67",
    "question": "What is the key benefit of iterative development in Agile?",
    "options": [
      { "id": "option_1", "text": "It eliminates testing", "isCorrect": false },
      { "id": "option_2", "text": "It allows for last-minute changes", "isCorrect": false },
      { "id": "option_3", "text": "It enables continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "It removes the need for feedback", "isCorrect": false }
    ],
    "hint": "Iterative development helps refine the product over time.",
    "answerDescription": "Agileâ€™s iterative approach allows teams to continuously improve the product by incorporating feedback and making incremental enhancements."
  },
  {
    "id": "agile_68",
    "question": "Which metric is commonly used to measure team velocity in Agile?",
    "options": [
      { "id": "option_1", "text": "Number of meetings held", "isCorrect": false },
      { "id": "option_2", "text": "Total project budget", "isCorrect": false },
      { "id": "option_3", "text": "Story points completed per sprint", "isCorrect": true },
      { "id": "option_4", "text": "Number of team members", "isCorrect": false }
    ],
    "hint": "This metric tracks work completed in a sprint.",
    "answerDescription": "Team velocity is measured by the number of story points completed per sprint, helping teams estimate future work capacity."
  },
  {
    "id": "agile_69",
    "question": "What does the term 'Definition of Done' (DoD) mean in Agile?",
    "options": [
      { "id": "option_1", "text": "The point when coding is complete", "isCorrect": false },
      { "id": "option_2", "text": "A checklist for final project approval", "isCorrect": false },
      { "id": "option_3", "text": "A shared agreement on when work is considered complete", "isCorrect": true },
      { "id": "option_4", "text": "The end of the sprint planning phase", "isCorrect": false }
    ],
    "hint": "It defines when a task or story is fully completed.",
    "answerDescription": "The Definition of Done is a shared team agreement that outlines the criteria required for a task to be considered complete."
  },
  {
    "id": "agile_70",
    "question": "Why is continuous deployment beneficial in Agile development?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for automation", "isCorrect": false },
      { "id": "option_2", "text": "It limits customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "It allows for faster delivery of features", "isCorrect": true },
      { "id": "option_4", "text": "It increases manual testing effort", "isCorrect": false }
    ],
    "hint": "Continuous deployment helps release software quickly.",
    "answerDescription": "By enabling frequent and automated deployments, continuous deployment helps teams deliver new features faster while reducing risks."
  },  {
    "id": "agile_71",
    "question": "What is the primary benefit of Agile methodology?",
    "options": [
      { "id": "option_1", "text": "Strict project control", "isCorrect": false },
      { "id": "option_2", "text": "Minimized stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "Extended development cycles", "isCorrect": false },
      { "id": "option_4", "text": "Flexibility and faster delivery", "isCorrect": true }
    ],
    "hint": "Agile is known for adaptability and speed.",
    "answerDescription": "Agile provides flexibility and faster delivery by allowing teams to adapt to changing requirements quickly."
  },
  {
    "id": "agile_72",
    "question": "Which Agile framework is best suited for scaling across multiple teams?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Kanban", "isCorrect": false },
      { "id": "option_3", "text": "Lean", "isCorrect": false },
      { "id": "option_4", "text": "SAFe (Scaled Agile Framework)", "isCorrect": true }
    ],
    "hint": "It is designed for enterprise-level Agile adoption.",
    "answerDescription": "SAFe (Scaled Agile Framework) is used to scale Agile practices across multiple teams in large organizations."
  },
  {
    "id": "agile_73",
    "question": "What does the term 'incremental development' mean in Agile?",
    "options": [
      { "id": "option_1", "text": "Completing all work in a single phase", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding early testing", "isCorrect": false },
      { "id": "option_3", "text": "Delivering the entire product at the end", "isCorrect": false },
      { "id": "option_4", "text": "Building and delivering software in small steps", "isCorrect": true }
    ],
    "hint": "Agile delivers value iteratively.",
    "answerDescription": "Incremental development means delivering software in small, functional pieces to allow for continuous improvement and feedback."
  },
  {
    "id": "agile_74",
    "question": "Which Agile ceremony is focused on planning the upcoming sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_3", "text": "Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Planning", "isCorrect": true }
    ],
    "hint": "It happens at the start of each sprint.",
    "answerDescription": "Sprint Planning is an Agile ceremony where teams define the work they will complete in the upcoming sprint."
  },
  {
    "id": "agile_75",
    "question": "What is the role of the Scrum Master in Agile development?",
    "options": [
      { "id": "option_1", "text": "To define business priorities", "isCorrect": false },
      { "id": "option_2", "text": "To develop code", "isCorrect": false },
      { "id": "option_3", "text": "To approve budgets", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate the Agile process and remove obstacles", "isCorrect": true }
    ],
    "hint": "The Scrum Master ensures smooth Agile execution.",
    "answerDescription": "A Scrum Master helps the Agile team by facilitating processes, coaching team members, and removing obstacles that hinder progress."
  },
  {
    "id": "agile_76",
    "question": "How does Agile improve quality in software development?",
    "options": [
      { "id": "option_1", "text": "By delaying testing until the final stage", "isCorrect": false },
      { "id": "option_2", "text": "By reducing collaboration among team members", "isCorrect": false },
      { "id": "option_3", "text": "By following a strict waterfall approach", "isCorrect": false },
      { "id": "option_4", "text": "By emphasizing continuous testing and feedback", "isCorrect": true }
    ],
    "hint": "Testing is done throughout the development cycle.",
    "answerDescription": "Agile ensures quality through continuous integration, automated testing, and frequent feedback loops."
  },
  {
    "id": "agile_77",
    "question": "Which of the following is a key characteristic of Agile teams?",
    "options": [
      { "id": "option_1", "text": "Strict hierarchy with top-down decisions", "isCorrect": false },
      { "id": "option_2", "text": "Fixed, unchangeable roles", "isCorrect": false },
      { "id": "option_3", "text": "Working in silos without collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Self-organizing and cross-functional teamwork", "isCorrect": true }
    ],
    "hint": "Agile promotes autonomy and collaboration.",
    "answerDescription": "Agile teams are self-organizing and cross-functional, enabling flexibility and faster decision-making."
  },
  {
    "id": "agile_78",
    "question": "What is the purpose of a Daily Standup meeting?",
    "options": [
      { "id": "option_1", "text": "To review the final project report", "isCorrect": false },
      { "id": "option_2", "text": "To discuss non-work-related topics", "isCorrect": false },
      { "id": "option_3", "text": "To finalize product requirements", "isCorrect": false },
      { "id": "option_4", "text": "To quickly align the team on progress and blockers", "isCorrect": true }
    ],
    "hint": "It helps keep the team synchronized daily.",
    "answerDescription": "The Daily Standup is a brief Agile meeting where team members share updates, challenges, and plans to stay aligned."
  },
  {
    "id": "agile_79",
    "question": "What is the primary purpose of a product backlog in Agile?",
    "options": [
      { "id": "option_1", "text": "To store completed tasks", "isCorrect": false },
      { "id": "option_2", "text": "To list high-level business goals", "isCorrect": false },
      { "id": "option_3", "text": "To track team performance", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize and manage upcoming work", "isCorrect": true }
    ],
    "hint": "It is an ordered list of work items.",
    "answerDescription": "A product backlog contains prioritized tasks and features that the Agile team will work on in future iterations."
  },
  {
    "id": "agile_80",
    "question": "What does the term 'velocity' represent in Agile?",
    "options": [
      { "id": "option_1", "text": "The number of team members", "isCorrect": false },
      { "id": "option_2", "text": "The length of a sprint", "isCorrect": false },
      { "id": "option_3", "text": "The amount of work estimated for future sprints", "isCorrect": false },
      { "id": "option_4", "text": "The measure of completed work in a sprint", "isCorrect": true }
    ],
    "hint": "Velocity helps forecast work completion rates.",
    "answerDescription": "Velocity is an Agile metric that tracks the amount of work a team completes in each sprint, helping in future planning."
},
{
    "id": "agile_81",
    "question": "What is a key benefit of Agile over traditional project management?",
    "options": [
      { "id": "option_1", "text": "Faster adaptability to changes", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_3", "text": "Minimal customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Limited collaboration among teams", "isCorrect": false }
    ],
    "hint": "Agile is known for its flexibility and responsiveness.",
    "answerDescription": "Agile enables faster adaptability to changes, allowing teams to respond quickly to new requirements and challenges."
  },
  {
    "id": "agile_82",
    "question": "What does the Agile Manifesto prioritize over processes and tools?",
    "options": [
      { "id": "option_1", "text": "Individuals and interactions", "isCorrect": true },
      { "id": "option_2", "text": "Comprehensive documentation", "isCorrect": false },
      { "id": "option_3", "text": "Fixed schedules", "isCorrect": false },
      { "id": "option_4", "text": "Detailed contracts", "isCorrect": false }
    ],
    "hint": "Agile values human collaboration more than rigid procedures.",
    "answerDescription": "The Agile Manifesto emphasizes individuals and interactions over processes and tools, promoting teamwork and communication."
  },
  {
    "id": "agile_83",
    "question": "Why are Agile projects divided into sprints or iterations?",
    "options": [
      { "id": "option_1", "text": "To deliver incremental value", "isCorrect": true },
      { "id": "option_2", "text": "To avoid frequent customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To minimize testing requirements", "isCorrect": false },
      { "id": "option_4", "text": "To ensure fixed scope throughout", "isCorrect": false }
    ],
    "hint": "Each iteration in Agile delivers a usable product increment.",
    "answerDescription": "Sprints or iterations in Agile help teams deliver incremental value by continuously improving the product based on feedback."
  },
  {
    "id": "agile_84",
    "question": "What is a major advantage of Agileâ€™s incremental delivery model?",
    "options": [
      { "id": "option_1", "text": "Reduced risk and early feedback", "isCorrect": true },
      { "id": "option_2", "text": "Lower emphasis on team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Less frequent testing", "isCorrect": false },
      { "id": "option_4", "text": "Delays in customer involvement", "isCorrect": false }
    ],
    "hint": "Agile delivers work in small, manageable parts.",
    "answerDescription": "Incremental delivery in Agile reduces risk by allowing early feedback and continuous improvements."
  },
  {
    "id": "agile_85",
    "question": "What is the Scrum Masterâ€™s primary role in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Removing obstacles and facilitating progress", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Managing team finances", "isCorrect": false },
      { "id": "option_4", "text": "Acting as the projectâ€™s main developer", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports the team rather than directing it.",
    "answerDescription": "The Scrum Masterâ€™s role is to remove obstacles, facilitate collaboration, and ensure the team follows Agile principles."
  },
  {
    "id": "agile_86",
    "question": "Which Agile framework is most commonly associated with time-boxed iterations?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": true },
      { "id": "option_2", "text": "Kanban", "isCorrect": false },
      { "id": "option_3", "text": "Waterfall", "isCorrect": false },
      { "id": "option_4", "text": "Lean", "isCorrect": false }
    ],
    "hint": "This framework divides work into short, fixed-duration cycles.",
    "answerDescription": "Scrum uses time-boxed iterations called sprints to ensure consistent progress and delivery."
  },
  {
    "id": "agile_87",
    "question": "What is the purpose of a daily stand-up meeting in Agile?",
    "options": [
      { "id": "option_1", "text": "To synchronize team activities", "isCorrect": true },
      { "id": "option_2", "text": "To finalize project documentation", "isCorrect": false },
      { "id": "option_3", "text": "To discuss long-term planning", "isCorrect": false },
      { "id": "option_4", "text": "To assign individual tasks", "isCorrect": false }
    ],
    "hint": "This meeting is meant to keep the team aligned.",
    "answerDescription": "A daily stand-up helps Agile teams stay aligned, share progress, and quickly address obstacles."
  },
  {
    "id": "agile_88",
    "question": "How does Agile promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Through regular retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding frequent changes", "isCorrect": false },
      { "id": "option_3", "text": "By limiting stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By following fixed plans", "isCorrect": false }
    ],
    "hint": "Agile teams reflect and refine their processes regularly.",
    "answerDescription": "Agile promotes continuous improvement by holding retrospectives where teams identify areas for enhancement."
  },
  {
    "id": "agile_89",
    "question": "Why is working software valued over comprehensive documentation in Agile?",
    "options": [
      { "id": "option_1", "text": "To focus on delivering functional products", "isCorrect": true },
      { "id": "option_2", "text": "To eliminate the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To reduce team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To ensure long approval processes", "isCorrect": false }
    ],
    "hint": "Agile prioritizes working deliverables over extensive paperwork.",
    "answerDescription": "Agile values working software over comprehensive documentation to focus on delivering real functionality quickly."
  },
  {
    "id": "agile_90",
    "question": "What is the primary measure of progress in Agile development?",
    "options": [
      { "id": "option_1", "text": "Working software", "isCorrect": true },
      { "id": "option_2", "text": "Detailed project reports", "isCorrect": false },
      { "id": "option_3", "text": "Amount of documentation produced", "isCorrect": false },
      { "id": "option_4", "text": "Strict adherence to schedules", "isCorrect": false }
    ],
    "hint": "Agile focuses on real output rather than paperwork.",
    "answerDescription": "The primary measure of progress in Agile is working software, ensuring that teams deliver valuable, usable products."
},
{
  "id": "agile_91",
  "question": "What is a key benefit of Agile over traditional project management?",
  "options": [
    { "id": "option_1", "text": "Fixed scope and timelines", "isCorrect": false },
    { "id": "option_2", "text": "Flexibility to adapt to changes", "isCorrect": true },
    { "id": "option_3", "text": "Minimal customer involvement", "isCorrect": false },
    { "id": "option_4", "text": "Detailed upfront planning", "isCorrect": false }
  ],
  "hint": "Agile embraces change throughout the project.",
  "answerDescription": "Agile provides flexibility to adapt to changing requirements, making it more responsive to customer needs."
},
{
  "id": "agile_92",
  "question": "Which Agile framework is known for its structured roles and events?",
  "options": [
    { "id": "option_1", "text": "Kanban", "isCorrect": false },
    { "id": "option_2", "text": "Scrum", "isCorrect": true },
    { "id": "option_3", "text": "Lean", "isCorrect": false },
    { "id": "option_4", "text": "Extreme Programming", "isCorrect": false }
  ],
  "hint": "This framework includes roles like Scrum Master and Product Owner.",
  "answerDescription": "Scrum is an Agile framework that defines structured roles, events, and artifacts to improve project efficiency."
},
{
  "id": "agile_93",
  "question": "What is the purpose of a sprint backlog in Agile?",
  "options": [
    { "id": "option_1", "text": "To define the project scope", "isCorrect": false },
    { "id": "option_2", "text": "To track work planned for the sprint", "isCorrect": true },
    { "id": "option_3", "text": "To document customer feedback", "isCorrect": false },
    { "id": "option_4", "text": "To maintain a record of past sprints", "isCorrect": false }
  ],
  "hint": "It contains tasks committed for a sprint.",
  "answerDescription": "The sprint backlog contains the tasks and user stories that the team commits to completing within a sprint."
},
{
  "id": "agile_94",
  "question": "How does Agile promote continuous improvement?",
  "options": [
    { "id": "option_1", "text": "By following fixed processes", "isCorrect": false },
    { "id": "option_2", "text": "By holding regular retrospectives", "isCorrect": true },
    { "id": "option_3", "text": "By limiting feedback sessions", "isCorrect": false },
    { "id": "option_4", "text": "By avoiding changes during a project", "isCorrect": false }
  ],
  "hint": "Teams reflect on past performance to improve.",
  "answerDescription": "Regular retrospectives in Agile help teams analyze their performance and identify areas for improvement."
},
{
  "id": "agile_95",
  "question": "What is the primary purpose of a daily stand-up meeting?",
  "options": [
    { "id": "option_1", "text": "To create detailed documentation", "isCorrect": false },
    { "id": "option_2", "text": "To discuss progress and blockers", "isCorrect": true },
    { "id": "option_3", "text": "To approve new project features", "isCorrect": false },
    { "id": "option_4", "text": "To finalize the sprint goal", "isCorrect": false }
  ],
  "hint": "It is a short meeting held every day.",
  "answerDescription": "A daily stand-up allows team members to discuss their progress, identify obstacles, and align efforts."
},
{
  "id": "agile_96",
  "question": "What is a key characteristic of a successful Agile team?",
  "options": [
    { "id": "option_1", "text": "Large and hierarchical", "isCorrect": false },
    { "id": "option_2", "text": "Self-organizing and collaborative", "isCorrect": true },
    { "id": "option_3", "text": "Dependent on strict supervision", "isCorrect": false },
    { "id": "option_4", "text": "Fixed and unchanging", "isCorrect": false }
  ],
  "hint": "Agile teams work best when they manage themselves.",
  "answerDescription": "Successful Agile teams are self-organizing, collaborative, and empowered to make decisions."
},
{
  "id": "agile_97",
  "question": "What is the role of the Scrum Master in Agile?",
  "options": [
    { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
    { "id": "option_2", "text": "To facilitate the Agile process", "isCorrect": true },
    { "id": "option_3", "text": "To dictate team decisions", "isCorrect": false },
    { "id": "option_4", "text": "To prioritize the product backlog", "isCorrect": false }
  ],
  "hint": "This role focuses on removing obstacles.",
  "answerDescription": "The Scrum Master ensures that Agile practices are followed and removes impediments that hinder team progress."
},
{
  "id": "agile_98",
  "question": "Which Agile practice helps in visualizing work and workflow?",
  "options": [
    { "id": "option_1", "text": "Retrospective meetings", "isCorrect": false },
    { "id": "option_2", "text": "Using a Kanban board", "isCorrect": true },
    { "id": "option_3", "text": "Writing user stories", "isCorrect": false },
    { "id": "option_4", "text": "Backlog grooming", "isCorrect": false }
  ],
  "hint": "It is a tool used to manage work visually.",
  "answerDescription": "A Kanban board helps teams visualize their workflow, track progress, and manage tasks efficiently."
},
{
  "id": "agile_99",
  "question": "How does Agile handle changing priorities?",
  "options": [
    { "id": "option_1", "text": "By locking project scope", "isCorrect": false },
    { "id": "option_2", "text": "By adapting backlog items", "isCorrect": true },
    { "id": "option_3", "text": "By delaying changes until project completion", "isCorrect": false },
    { "id": "option_4", "text": "By requiring formal approval processes", "isCorrect": false }
  ],
  "hint": "Agile allows changes at any stage of development.",
  "answerDescription": "Agile teams continuously refine and adapt backlog items to accommodate changing priorities."
},
{
  "id": "agile_100",
  "question": "What is a major advantage of delivering in iterations in Agile?",
  "options": [
    { "id": "option_1", "text": "It allows for less testing", "isCorrect": false },
    { "id": "option_2", "text": "It provides frequent feedback opportunities", "isCorrect": true },
    { "id": "option_3", "text": "It reduces team collaboration", "isCorrect": false },
    { "id": "option_4", "text": "It eliminates the need for planning", "isCorrect": false }
  ],
  "hint": "Each iteration brings a chance to refine the product.",
  "answerDescription": "Delivering in iterations allows teams to gather feedback early and make improvements based on user input."
},
{
  "id": "agile_101",
  "question": "Which Agile framework is known for its time-boxed iterations called Sprints?",
  "options": [
    { "id": "option_1", "text": "Kanban", "isCorrect": false },
    { "id": "option_2", "text": "Lean", "isCorrect": false },
    { "id": "option_3", "text": "Scrum", "isCorrect": true },
    { "id": "option_4", "text": "Extreme Programming (XP)", "isCorrect": false }
  ],
  "hint": "This framework includes roles like Scrum Master and Product Owner.",
  "answerDescription": "Scrum is an Agile framework that organizes work into fixed-length iterations called Sprints."
},
{
  "id": "agile_102",
  "question": "What is the purpose of a daily stand-up meeting in Agile?",
  "options": [
    { "id": "option_1", "text": "To review project budget", "isCorrect": false },
    { "id": "option_2", "text": "To assign blame for issues", "isCorrect": false },
    { "id": "option_3", "text": "To discuss progress and obstacles", "isCorrect": true },
    { "id": "option_4", "text": "To finalize product requirements", "isCorrect": false }
  ],
  "hint": "This meeting is short and focused on daily updates.",
  "answerDescription": "The daily stand-up is a brief meeting where team members discuss progress, challenges, and next steps."
},
{
  "id": "agile_103",
  "question": "Which Agile artifact helps teams manage work in progress?",
  "options": [
    { "id": "option_1", "text": "Product Roadmap", "isCorrect": false },
    { "id": "option_2", "text": "Release Plan", "isCorrect": false },
    { "id": "option_3", "text": "Task Board", "isCorrect": true },
    { "id": "option_4", "text": "Customer Persona", "isCorrect": false }
  ],
  "hint": "This visual tool helps track tasks and their status.",
  "answerDescription": "A task board is a visual representation of work items that helps Agile teams track progress and manage workflow."
},
{
  "id": "agile_104",
  "question": "What is a key characteristic of Agile project management?",
  "options": [
    { "id": "option_1", "text": "Strict adherence to initial plans", "isCorrect": false },
    { "id": "option_2", "text": "Minimal communication with customers", "isCorrect": false },
    { "id": "option_3", "text": "Iterative and adaptive approach", "isCorrect": true },
    { "id": "option_4", "text": "Heavy reliance on documentation", "isCorrect": false }
  ],
  "hint": "Agile embraces flexibility and continuous improvement.",
  "answerDescription": "Agile project management is iterative and adaptive, allowing teams to respond to change effectively."
},
{
  "id": "agile_105",
  "question": "Which Agile concept focuses on delivering value in small increments?",
  "options": [
    { "id": "option_1", "text": "Big Bang Deployment", "isCorrect": false },
    { "id": "option_2", "text": "Waterfall Methodology", "isCorrect": false },
    { "id": "option_3", "text": "Incremental Development", "isCorrect": true },
    { "id": "option_4", "text": "Traditional Project Planning", "isCorrect": false }
  ],
  "hint": "Agile promotes frequent deliveries in smaller parts.",
  "answerDescription": "Incremental development ensures that small, usable parts of the software are delivered frequently to gather feedback and improve quality."
},
{
  "id": "agile_106",
  "question": "What is the primary role of a Scrum Master in Agile?",
  "options": [
    { "id": "option_1", "text": "Assigning tasks to developers", "isCorrect": false },
    { "id": "option_2", "text": "Controlling the project scope", "isCorrect": false },
    { "id": "option_3", "text": "Facilitating Agile processes and removing blockers", "isCorrect": true },
    { "id": "option_4", "text": "Managing stakeholder budgets", "isCorrect": false }
  ],
  "hint": "The Scrum Master helps the team work efficiently.",
  "answerDescription": "A Scrum Master ensures that Agile processes are followed and helps the team overcome any obstacles."
},
{
  "id": "agile_107",
  "question": "Which Agile principle emphasizes regular collaboration with customers?",
  "options": [
    { "id": "option_1", "text": "Detailed contract negotiations", "isCorrect": false },
    { "id": "option_2", "text": "Delivering all features at once", "isCorrect": false },
    { "id": "option_3", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
    { "id": "option_4", "text": "Following a rigid project timeline", "isCorrect": false }
  ],
  "hint": "Agile values customer input throughout the project.",
  "answerDescription": "One of Agileâ€™s core values is customer collaboration, ensuring that the product aligns with user needs."
},
{
  "id": "agile_108",
  "question": "Why are Agile teams encouraged to work in small, cross-functional units?",
  "options": [
    { "id": "option_1", "text": "To reduce accountability", "isCorrect": false },
    { "id": "option_2", "text": "To limit team interactions", "isCorrect": false },
    { "id": "option_3", "text": "To enhance collaboration and flexibility", "isCorrect": true },
    { "id": "option_4", "text": "To increase dependency on specialists", "isCorrect": false }
  ],
  "hint": "Agile promotes teamwork and adaptability.",
  "answerDescription": "Small, cross-functional teams improve communication, collaboration, and adaptability to changing requirements."
},
{
  "id": "agile_109",
  "question": "How does Agile ensure continuous improvement?",
  "options": [
    { "id": "option_1", "text": "By sticking to a fixed process", "isCorrect": false },
    { "id": "option_2", "text": "By limiting team feedback sessions", "isCorrect": false },
    { "id": "option_3", "text": "By conducting regular retrospectives", "isCorrect": true },
    { "id": "option_4", "text": "By avoiding process adjustments", "isCorrect": false }
  ],
  "hint": "Teams use this meeting to reflect on their work and make improvements.",
  "answerDescription": "Regular retrospectives help teams analyze their performance and implement changes to enhance efficiency."
},
{
  "id": "agile_110",
  "question": "What is a key benefit of using Agile methodologies?",
  "options": [
    { "id": "option_1", "text": "Fixed and rigid planning", "isCorrect": false },
    { "id": "option_2", "text": "Limited stakeholder involvement", "isCorrect": false },
    { "id": "option_3", "text": "Faster response to changes", "isCorrect": true },
    { "id": "option_4", "text": "Heavy reliance on documentation", "isCorrect": false }
  ],
  "hint": "Agile is designed to be flexible and adaptable.",
  "answerDescription": "Agile allows teams to quickly adjust to changing requirements, ensuring a more responsive and efficient development process."
},
{
  "id": "agile_111",
  "question": "What is the primary benefit of Agile over traditional project management?",
  "options": [
    { "id": "option_1", "text": "More detailed upfront planning", "isCorrect": false },
    { "id": "option_2", "text": "Less customer involvement", "isCorrect": false },
    { "id": "option_3", "text": "Longer development cycles", "isCorrect": false },
    { "id": "option_4", "text": "Faster adaptability to change", "isCorrect": true }
  ],
  "hint": "Agile thrives on flexibility and responsiveness.",
  "answerDescription": "Agile's ability to adapt quickly to changing requirements makes it more effective than traditional methods in dynamic environments."
},
{
  "id": "agile_112",
  "question": "Which Agile framework uses time-boxed iterations called Sprints?",
  "options": [
    { "id": "option_1", "text": "Kanban", "isCorrect": false },
    { "id": "option_2", "text": "Lean", "isCorrect": false },
    { "id": "option_3", "text": "Extreme Programming (XP)", "isCorrect": false },
    { "id": "option_4", "text": "Scrum", "isCorrect": true }
  ],
  "hint": "This framework is one of the most popular Agile methodologies.",
  "answerDescription": "Scrum uses Sprints, which are time-boxed iterations to deliver incremental improvements to a product."
},
{
  "id": "agile_113",
  "question": "What does a 'user story' represent in Agile?",
  "options": [
    { "id": "option_1", "text": "A task assigned to a developer", "isCorrect": false },
    { "id": "option_2", "text": "A detailed technical specification", "isCorrect": false },
    { "id": "option_3", "text": "A list of software requirements", "isCorrect": false },
    { "id": "option_4", "text": "A simple description of a feature from the userâ€™s perspective", "isCorrect": true }
  ],
  "hint": "It focuses on end-user needs rather than technical details.",
  "answerDescription": "A user story is a short, simple description of a software feature from the perspective of the end-user."
},
{
  "id": "agile_114",
  "question": "Why are daily stand-up meetings important in Agile?",
  "options": [
    { "id": "option_1", "text": "To finalize project documentation", "isCorrect": false },
    { "id": "option_2", "text": "To assign tasks to team members", "isCorrect": false },
    { "id": "option_3", "text": "To replace sprint planning", "isCorrect": false },
    { "id": "option_4", "text": "To synchronize team progress and remove blockers", "isCorrect": true }
  ],
  "hint": "These meetings help improve communication and resolve issues quickly.",
  "answerDescription": "Daily stand-up meetings allow teams to align on progress, identify blockers, and ensure smooth workflow."
},
{
  "id": "agile_115",
  "question": "What is the purpose of backlog grooming in Agile?",
  "options": [
    { "id": "option_1", "text": "To assign user stories to developers", "isCorrect": false },
    { "id": "option_2", "text": "To finalize sprint goals", "isCorrect": false },
    { "id": "option_3", "text": "To document past project progress", "isCorrect": false },
    { "id": "option_4", "text": "To refine and prioritize backlog items", "isCorrect": true }
  ],
  "hint": "This process helps keep the backlog well-organized and relevant.",
  "answerDescription": "Backlog grooming ensures that user stories are well-defined, prioritized, and ready for upcoming sprints."
},
{
  "id": "agile_116",
  "question": "Which metric is commonly used in Agile to measure work complexity?",
  "options": [
    { "id": "option_1", "text": "Number of completed tasks", "isCorrect": false },
    { "id": "option_2", "text": "Project duration", "isCorrect": false },
    { "id": "option_3", "text": "Number of developers", "isCorrect": false },
    { "id": "option_4", "text": "Story points", "isCorrect": true }
  ],
  "hint": "This metric helps estimate effort rather than time.",
  "answerDescription": "Story points measure the complexity of work in Agile, helping teams estimate effort without assigning specific time values."
},
{
  "id": "agile_117",
  "question": "What is a key characteristic of Agile documentation?",
  "options": [
    { "id": "option_1", "text": "Extensive and highly detailed", "isCorrect": false },
    { "id": "option_2", "text": "Only written at project completion", "isCorrect": false },
    { "id": "option_3", "text": "Focused only on management reports", "isCorrect": false },
    { "id": "option_4", "text": "Lightweight and just enough to be useful", "isCorrect": true }
  ],
  "hint": "Agile documentation aims to be minimal but effective.",
  "answerDescription": "Agile documentation follows the principle of 'just enough' documentation to support development while avoiding unnecessary overhead."
},
{
  "id": "agile_118",
  "question": "What is the primary benefit of using Agile frameworks like Scrum?",
  "options": [
    { "id": "option_1", "text": "Strict adherence to long-term plans", "isCorrect": false },
    { "id": "option_2", "text": "Reduced need for customer involvement", "isCorrect": false },
    { "id": "option_3", "text": "Faster adaptation to changes", "isCorrect": true },
    { "id": "option_4", "text": "More detailed documentation", "isCorrect": false }
  ],
  "hint": "Agile focuses on flexibility and continuous improvement.",
  "answerDescription": "Agile allows teams to quickly adjust to evolving requirements and market conditions."
},
{
  "id": "agile_119",
  "question": "Which of the following best describes a cross-functional Agile team?",
  "options": [
    { "id": "option_1", "text": "A team with only developers", "isCorrect": false },
    { "id": "option_2", "text": "A group of specialists working in isolation", "isCorrect": false },
    { "id": "option_3", "text": "A team with diverse skills to complete tasks independently", "isCorrect": true },
    { "id": "option_4", "text": "A team that only focuses on testing", "isCorrect": false }
  ],
  "hint": "Agile teams are structured to be self-sufficient and adaptable.",
  "answerDescription": "Cross-functional teams include members with different expertise to complete tasks without external dependencies."
},
{
  "id": "agile_120",
  "question": "What is the role of a Scrum Master in an Agile team?",
  "options": [
    { "id": "option_1", "text": "Assigning tasks to developers", "isCorrect": false },
    { "id": "option_2", "text": "Creating the product backlog", "isCorrect": false },
    { "id": "option_3", "text": "Facilitating team collaboration and removing impediments", "isCorrect": true },
    { "id": "option_4", "text": "Approving all work before release", "isCorrect": false }
  ],
  "hint": "This role focuses on helping the team function effectively.",
  "answerDescription": "The Scrum Master serves as a facilitator, ensuring Agile principles are followed and obstacles are addressed."
},
{
  "id": "agile_121",
  "question": "Which Agile principle focuses on maintaining a sustainable work pace?",
  "options": [
    { "id": "option_1", "text": "Delivering the entire product at once", "isCorrect": false },
    { "id": "option_2", "text": "Working overtime to meet deadlines", "isCorrect": false },
    { "id": "option_3", "text": "Promoting sustainable development", "isCorrect": true },
    { "id": "option_4", "text": "Minimizing collaboration to reduce delays", "isCorrect": false }
  ],
  "hint": "Agile encourages teams to work at a pace that can be maintained indefinitely.",
  "answerDescription": "Sustainable development prevents burnout and promotes long-term efficiency."
},
{
  "id": "agile_122",
  "question": "How does Agile handle risk management?",
  "options": [
    { "id": "option_1", "text": "By planning everything upfront", "isCorrect": false },
    { "id": "option_2", "text": "By avoiding changes to prevent uncertainty", "isCorrect": false },
    { "id": "option_3", "text": "By iterating and adapting based on feedback", "isCorrect": true },
    { "id": "option_4", "text": "By creating extensive risk documentation", "isCorrect": false }
  ],
  "hint": "Agile embraces change to reduce risks over time.",
  "answerDescription": "Agile mitigates risks by frequently delivering small increments and gathering feedback."
},
{
  "id": "agile_123",
  "question": "What is the purpose of a Minimum Viable Product (MVP) in Agile?",
  "options": [
    { "id": "option_1", "text": "To develop a complete product before release", "isCorrect": false },
    { "id": "option_2", "text": "To maximize stakeholder documentation", "isCorrect": false },
    { "id": "option_3", "text": "To test core functionalities with minimal effort", "isCorrect": true },
    { "id": "option_4", "text": "To avoid releasing software until perfection is achieved", "isCorrect": false }
  ],
  "hint": "MVPs allow early testing of key features.",
  "answerDescription": "An MVP helps teams validate ideas with real users while minimizing development costs."
},
{
  "id": "agile_124",
  "question": "Why are short feedback loops important in Agile development?",
  "options": [
    { "id": "option_1", "text": "To reduce testing time", "isCorrect": false },
    { "id": "option_2", "text": "To minimize team communication", "isCorrect": false },
    { "id": "option_3", "text": "To enable rapid course correction", "isCorrect": true },
    { "id": "option_4", "text": "To finalize requirements early", "isCorrect": false }
  ],
  "hint": "Agile relies on continuous feedback to refine work.",
  "answerDescription": "Short feedback loops ensure that teams adjust based on user needs and emerging issues."
},
{
  "id": "agile_125",
  "question": "What is the main purpose of Agile release planning?",
  "options": [
    { "id": "option_1", "text": "To lock in all project details upfront", "isCorrect": false },
    { "id": "option_2", "text": "To ensure the team follows a strict timeline", "isCorrect": false },
    { "id": "option_3", "text": "To provide a roadmap for delivering increments", "isCorrect": true },
    { "id": "option_4", "text": "To avoid making scope adjustments", "isCorrect": false }
  ],
  "hint": "Agile release planning ensures delivery aligns with evolving priorities.",
  "answerDescription": "Release planning helps teams map out deliverables while allowing flexibility for change."
},
{
  "id": "agile_126",
  "question": "How does Agile encourage continuous improvement?",
  "options": [
    { "id": "option_1", "text": "By avoiding changes to minimize disruption", "isCorrect": false },
    { "id": "option_2", "text": "By prioritizing documentation over delivery", "isCorrect": false },
    { "id": "option_3", "text": "By conducting retrospectives after each iteration", "isCorrect": true },
    { "id": "option_4", "text": "By defining all tasks at the start", "isCorrect": false }
  ],
  "hint": "Agile teams reflect on their work at the end of each sprint.",
  "answerDescription": "Retrospectives help teams identify strengths and areas for improvement in future sprints."
},
{
  "id": "agile_127",
  "question": "Why is incremental delivery important in Agile?",
  "options": [
    { "id": "option_1", "text": "To avoid making changes after development begins", "isCorrect": false },
    { "id": "option_2", "text": "To ensure all requirements are finalized upfront", "isCorrect": false },
    { "id": "option_3", "text": "To deliver value to users as early as possible", "isCorrect": true },
    { "id": "option_4", "text": "To reduce the need for customer feedback", "isCorrect": false }
  ],
  "hint": "Incremental delivery ensures stakeholders see progress early.",
  "answerDescription": "By delivering increments, Agile teams provide value continuously and adapt to feedback."
},
{
  "id": "agile_128",
  "question": "What is the primary focus of Agile development?",
  "options": [
    { "id": "option_1", "text": "Detailed upfront planning", "isCorrect": false },
    { "id": "option_2", "text": "Strict adherence to deadlines", "isCorrect": false },
    { "id": "option_3", "text": "Delivering value through iterative improvements", "isCorrect": true },
    { "id": "option_4", "text": "Minimizing customer involvement", "isCorrect": false }
  ],
  "hint": "Agile focuses on continuous delivery and customer feedback.",
  "answerDescription": "Agile emphasizes delivering value incrementally through iterative development and frequent stakeholder feedback."
},
{
  "id": "agile_129",
  "question": "What is the purpose of the Daily Standup in Agile?",
  "options": [
    { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
    { "id": "option_2", "text": "To report project delays to management", "isCorrect": false },
    { "id": "option_3", "text": "To synchronize team progress and identify blockers", "isCorrect": true },
    { "id": "option_4", "text": "To finalize the sprint backlog", "isCorrect": false }
  ],
  "hint": "This is a short meeting held daily to keep the team aligned.",
  "answerDescription": "Daily Standups help Agile teams stay coordinated, identify roadblocks early, and ensure continuous progress."
},
{
  "id": "agile_130",
  "question": "What is the key benefit of using user stories in Agile?",
  "options": [
    { "id": "option_1", "text": "They provide detailed technical specifications", "isCorrect": false },
    { "id": "option_2", "text": "They define strict project deadlines", "isCorrect": false },
    { "id": "option_3", "text": "They capture user needs in a simple and clear format", "isCorrect": true },
    { "id": "option_4", "text": "They replace the need for documentation", "isCorrect": false }
  ],
  "hint": "User stories help teams focus on end-user needs.",
  "answerDescription": "User stories describe features from the user's perspective, ensuring Agile teams develop solutions that provide real value."
},

{
    "id": "agile_130",
    "question": "Which Agile principle emphasizes technical excellence and good design?",
    "options": [
      { "id": "option_1", "text": "Continuous attention to technical excellence", "isCorrect": true },
      { "id": "option_2", "text": "Minimizing documentation", "isCorrect": false },
      { "id": "option_3", "text": "Delivering software quickly", "isCorrect": false },
      { "id": "option_4", "text": "Strictly following the project roadmap", "isCorrect": false }
    ],
    "hint": "Agile values quality and good design for sustainable development.",
    "answerDescription": "Continuous attention to technical excellence improves agility and ensures long-term maintainability."
  },
  {
    "id": "agile_131",
    "question": "What is the primary goal of Agile development?",
    "options": [
      { "id": "option_1", "text": "Delivering value to customers quickly", "isCorrect": true },
      { "id": "option_2", "text": "Following a strict project plan", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing documentation efforts", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding change requests", "isCorrect": false }
    ],
    "hint": "Agile focuses on customer satisfaction through continuous delivery.",
    "answerDescription": "The primary goal of Agile is to deliver working software that provides value to customers as quickly as possible."
  },
  {
    "id": "agile_132",
    "question": "Which Agile framework divides work into time-boxed iterations?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": true },
      { "id": "option_2", "text": "Kanban", "isCorrect": false },
      { "id": "option_3", "text": "Lean", "isCorrect": false },
      { "id": "option_4", "text": "Waterfall", "isCorrect": false }
    ],
    "hint": "This framework organizes work into Sprints.",
    "answerDescription": "Scrum is an Agile framework that divides work into fixed-length iterations called Sprints."
  },
  {
    "id": "agile_133",
    "question": "What is a key characteristic of a self-organizing Agile team?",
    "options": [
      { "id": "option_1", "text": "Taking responsibility for decision-making and execution", "isCorrect": true },
      { "id": "option_2", "text": "Relying on a manager for all decisions", "isCorrect": false },
      { "id": "option_3", "text": "Working in silos without collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on individual tasks", "isCorrect": false }
    ],
    "hint": "Agile teams operate with autonomy and accountability.",
    "answerDescription": "Self-organizing teams take ownership of their work, collaborate, and make decisions independently."
  },
  {
    "id": "agile_134",
    "question": "Why are daily stand-up meetings important in Agile?",
    "options": [
      { "id": "option_1", "text": "To promote team collaboration and transparency", "isCorrect": true },
      { "id": "option_2", "text": "To create detailed project reports", "isCorrect": false },
      { "id": "option_3", "text": "To extend meeting durations", "isCorrect": false },
      { "id": "option_4", "text": "To finalize all sprint work", "isCorrect": false }
    ],
    "hint": "These meetings are short and keep teams aligned.",
    "answerDescription": "Daily stand-ups help teams stay synchronized, identify blockers, and maintain progress toward sprint goals."
  },
  {
    "id": "agile_135",
    "question": "What is the main benefit of incremental delivery in Agile?",
    "options": [
      { "id": "option_1", "text": "Early feedback and continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "Reducing team communication", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring no changes to the initial plan", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding customer involvement", "isCorrect": false }
    ],
    "hint": "Delivering in small increments allows for adjustments based on feedback.",
    "answerDescription": "Incremental delivery enables frequent releases, helping teams incorporate feedback and improve the product continuously."
  },
  {
    "id": "agile_136",
    "question": "What is the primary role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Prioritizing the product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Managing the development team", "isCorrect": false },
      { "id": "option_3", "text": "Writing all code for the project", "isCorrect": false },
      { "id": "option_4", "text": "Approving team vacations", "isCorrect": false }
    ],
    "hint": "This role ensures that the team works on the most valuable tasks.",
    "answerDescription": "A Product Owner is responsible for defining priorities and ensuring that the team delivers maximum value."
  }, {
    "id": "agile_137",
    "question": "Which Agile practice focuses on continuously improving processes?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Planning", "isCorrect": false }
    ],
    "hint": "This meeting is held at the end of each Sprint to review team performance.",
    "answerDescription": "The Sprint Retrospective helps teams analyze what went well and identify areas for improvement."
  },
  {
    "id": "agile_138",
    "question": "What is the purpose of the Definition of Done (DoD) in Agile?",
    "options": [
      { "id": "option_1", "text": "To set strict deadlines for tasks", "isCorrect": false },
      { "id": "option_2", "text": "To ensure work meets quality standards before completion", "isCorrect": true },
      { "id": "option_3", "text": "To define project scope", "isCorrect": false },
      { "id": "option_4", "text": "To determine team roles", "isCorrect": false }
    ],
    "hint": "DoD ensures that all work items meet agreed quality criteria before being considered complete.",
    "answerDescription": "The Definition of Done establishes the quality criteria that must be met before a work item is considered complete and ready for release."
  },
  {
    "id": "agile_139",
    "question": "Which role is responsible for maximizing the value of the product in Scrum?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholder", "isCorrect": false }
    ],
    "hint": "This role prioritizes the backlog and ensures the team works on high-value items.",
    "answerDescription": "The Product Owner is responsible for defining priorities and ensuring that the Scrum Team delivers maximum business value."
  },
  {
    "id": "agile_140",
    "question": "What is the primary purpose of Agile backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To finalize all backlog items", "isCorrect": false },
      { "id": "option_2", "text": "To ensure backlog items are well-defined and ready for development", "isCorrect": true },
      { "id": "option_3", "text": "To remove outdated tasks", "isCorrect": false },
      { "id": "option_4", "text": "To determine the project budget", "isCorrect": false }
    ],
    "hint": "This process helps prepare user stories before they enter a sprint.",
    "answerDescription": "Backlog refinement ensures that items in the product backlog are properly defined, estimated, and ready for development."
  },
  {
    "id": "agile_141",
    "question": "What is the recommended length of a Sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "One month", "isCorrect": false },
      { "id": "option_2", "text": "Two weeks", "isCorrect": true },
      { "id": "option_3", "text": "Three months", "isCorrect": false },
      { "id": "option_4", "text": "Six months", "isCorrect": false }
    ],
    "hint": "The most common duration is short and allows for quick feedback loops.",
    "answerDescription": "While Scrum allows flexibility, the recommended Sprint length is typically two weeks, balancing feedback speed and development time."
  },
  {
    "id": "agile_142",
    "question": "What is a key advantage of cross-functional teams in Agile?",
    "options": [
      { "id": "option_1", "text": "Each member specializes in one skill", "isCorrect": false },
      { "id": "option_2", "text": "Team members can handle multiple aspects of a project", "isCorrect": true },
      { "id": "option_3", "text": "Managers assign tasks to individuals", "isCorrect": false },
      { "id": "option_4", "text": "Work is done sequentially", "isCorrect": false }
    ],
    "hint": "These teams can adapt quickly to changing requirements.",
    "answerDescription": "Cross-functional teams are capable of handling different aspects of a project, which improves collaboration and adaptability."
  },
  {
    "id": "agile_143",
    "question": "What is the purpose of a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To plan the next Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To showcase completed work and gather feedback", "isCorrect": true },
      { "id": "option_3", "text": "To discuss team performance", "isCorrect": false },
      { "id": "option_4", "text": "To update project documentation", "isCorrect": false }
    ],
    "hint": "This meeting is held at the end of each Sprint to present progress.",
    "answerDescription": "A Sprint Review allows the team to demonstrate the completed work to stakeholders and collect valuable feedback."
  },
  {
    "id": "agile_144",
    "question": "Which Agile methodology focuses on visualizing work and limiting work in progress?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Kanban", "isCorrect": true },
      { "id": "option_3", "text": "Extreme Programming (XP)", "isCorrect": false },
      { "id": "option_4", "text": "Lean", "isCorrect": false }
    ],
    "hint": "This approach uses a board to track work items.",
    "answerDescription": "Kanban is an Agile framework that emphasizes visualizing workflows and limiting work in progress to improve efficiency."
  },
  {
    "id": "agile_145",
    "question": "How does Agile handle changing requirements during a project?",
    "options": [
      { "id": "option_1", "text": "By freezing the scope after project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "By embracing change and adapting iteratively", "isCorrect": true },
      { "id": "option_3", "text": "By delaying changes until after development", "isCorrect": false },
      { "id": "option_4", "text": "By rejecting all changes to maintain the schedule", "isCorrect": false }
    ],
    "hint": "Agile values responding to change over following a fixed plan.",
    "answerDescription": "Agile frameworks allow teams to incorporate changes iteratively, ensuring the product meets evolving business needs."
  },
  {
    "id": "agile_146",
    "question": "Which Agile artifact provides transparency into upcoming work?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Burnup Chart", "isCorrect": false },
      { "id": "option_4", "text": "Burndown Chart", "isCorrect": false }
    ],
    "hint": "This artifact is maintained by the Product Owner.",
    "answerDescription": "The Product Backlog contains prioritized work items that provide insight into upcoming development tasks."
  },
  {
    "id": "agile_147",
    "question": "What is the primary purpose of backlog grooming?",
    "options": [
      { "id": "option_1", "text": "To finalize sprint tasks", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks to individuals", "isCorrect": false },
      { "id": "option_3", "text": "To refine and prioritize backlog items", "isCorrect": true },
      { "id": "option_4", "text": "To remove old backlog items", "isCorrect": false }
    ],
    "hint": "This process ensures the backlog remains relevant and ready for upcoming sprints.",
    "answerDescription": "Backlog grooming helps teams clarify requirements, estimate effort, and prioritize tasks to maintain an efficient workflow."
  },
  {
    "id": "agile_148",
    "question": "What is the key benefit of test-driven development (TDD) in Agile?",
    "options": [
      { "id": "option_1", "text": "It speeds up coding without testing", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for documentation", "isCorrect": false },
      { "id": "option_3", "text": "It improves code quality and prevents defects", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for debugging", "isCorrect": false }
    ],
    "hint": "TDD involves writing tests before the actual code.",
    "answerDescription": "Test-driven development ensures that code meets the expected behavior, reducing bugs and improving maintainability."
  },
  {
    "id": "agile_149",
    "question": "What does the term 'incremental development' mean in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering the entire product at once", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding customer feedback until the end", "isCorrect": false },
      { "id": "option_3", "text": "Building and delivering small, functional parts of the product", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on documentation first", "isCorrect": false }
    ],
    "hint": "This approach ensures that valuable features are delivered continuously.",
    "answerDescription": "Incremental development allows teams to release working software in small sections, improving adaptability and customer satisfaction."
  },
  {
    "id": "agile_150",
    "question": "What is the role of a Scrum Master in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To act as the project manager", "isCorrect": false },
      { "id": "option_3", "text": "To facilitate the Scrum process and remove blockers", "isCorrect": true },
      { "id": "option_4", "text": "To approve final product releases", "isCorrect": false }
    ],
    "hint": "This role helps the team follow Agile principles effectively.",
    "answerDescription": "The Scrum Master ensures smooth collaboration, facilitates meetings, and addresses impediments faced by the Agile team."
  },
  {
    "id": "agile_151",
    "question": "What is a burndown chart used for in Agile?",
    "options": [
      { "id": "option_1", "text": "Tracking individual performance", "isCorrect": false },
      { "id": "option_2", "text": "Measuring sprint costs", "isCorrect": false },
      { "id": "option_3", "text": "Visualizing remaining work over time", "isCorrect": true },
      { "id": "option_4", "text": "Planning future sprints", "isCorrect": false }
    ],
    "hint": "This chart helps teams track their progress during a sprint.",
    "answerDescription": "A burndown chart provides a graphical representation of work completed versus work remaining in an Agile project."
  },
  {
    "id": "agile_152",
    "question": "Why is working software valued over comprehensive documentation in Agile?",
    "options": [
      { "id": "option_1", "text": "Because documentation is unnecessary", "isCorrect": false },
      { "id": "option_2", "text": "Because Agile teams dislike documentation", "isCorrect": false },
      { "id": "option_3", "text": "Because working software delivers value faster", "isCorrect": true },
      { "id": "option_4", "text": "Because customers never read documentation", "isCorrect": false }
    ],
    "hint": "Agile prioritizes deliverables that directly impact the user.",
    "answerDescription": "Agile emphasizes delivering working software over extensive documentation to ensure rapid feedback and continuous improvement."
  },
  {
    "id": "agile_153",
    "question": "What is the purpose of a Sprint Goal in Scrum?",
    "options": [
      { "id": "option_1", "text": "To define individual team membersâ€™ tasks", "isCorrect": false },
      { "id": "option_2", "text": "To finalize all project requirements", "isCorrect": false },
      { "id": "option_3", "text": "To provide a shared objective for the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To measure individual performance", "isCorrect": false }
    ],
    "hint": "The Sprint Goal aligns the team toward a common purpose.",
    "answerDescription": "A Sprint Goal helps the Scrum Team focus on a unified objective that guides the work for a given Sprint."
  },
  {
    "id": "agile_154",
    "question": "Which Agile concept promotes rapid feedback and continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Fixed project planning", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "Frequent iterations and review cycles", "isCorrect": true },
      { "id": "option_4", "text": "Delaying testing until the end", "isCorrect": false }
    ],
    "hint": "Agile encourages delivering in small increments for better learning.",
    "answerDescription": "By delivering work in short iterations and gathering feedback frequently, Agile teams can continuously improve their product and processes."
  },
  {
    "id": "agile_155",
    "question": "What is the benefit of pair programming in Agile?",
    "options": [
      { "id": "option_1", "text": "It speeds up individual coding efforts", "isCorrect": false },
      { "id": "option_2", "text": "It allows developers to work in isolation", "isCorrect": false },
      { "id": "option_3", "text": "It enhances code quality through collaboration", "isCorrect": true },
      { "id": "option_4", "text": "It replaces the need for testing", "isCorrect": false }
    ],
    "hint": "Pair programming involves two developers working together on the same task.",
    "answerDescription": "Pair programming helps improve code quality, reduce errors, and facilitate knowledge sharing among team members."
  },
  {
    "id": "agile_156",
    "question": "What is a major advantage of cross-functional teams in Agile?",
    "options": [
      { "id": "option_1", "text": "They reduce communication among team members", "isCorrect": false },
      { "id": "option_2", "text": "They focus only on a single function", "isCorrect": false },
      { "id": "option_3", "text": "They bring diverse skills together for faster delivery", "isCorrect": true },
      { "id": "option_4", "text": "They eliminate the need for planning", "isCorrect": false }
    ],
    "hint": "These teams include members with different skills to work together efficiently.",
    "answerDescription": "Cross-functional teams enable faster product development by combining different expertise, reducing dependencies on external teams."
  }, {
    "id": "agile_157",
    "question": "What is the purpose of the Definition of Ready (DoR) in Agile?",
    "options": [
      { "id": "option_1", "text": "To define the project scope", "isCorrect": false },
      { "id": "option_2", "text": "To track project risks", "isCorrect": false },
      { "id": "option_3", "text": "To establish sprint goals", "isCorrect": false },
      { "id": "option_4", "text": "To ensure backlog items meet criteria before sprint planning", "isCorrect": true }
    ],
    "hint": "It helps teams determine if a backlog item is actionable.",
    "answerDescription": "The Definition of Ready ensures that user stories are well-defined, clear, and feasible for implementation before they enter a sprint."
  },
  {
    "id": "agile_158",
    "question": "What is one of the main benefits of using a Kanban board in Agile?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "It allows only one task at a time", "isCorrect": false },
      { "id": "option_3", "text": "It focuses only on documentation", "isCorrect": false },
      { "id": "option_4", "text": "It visualizes workflow and limits work in progress", "isCorrect": true }
    ],
    "hint": "It helps teams manage flow and avoid bottlenecks.",
    "answerDescription": "Kanban boards help teams visualize tasks, track progress, and manage workload by limiting the number of tasks in progress."
  },
  {
    "id": "agile_159",
    "question": "What is an Agile Release Train (ART) in the SAFe framework?",
    "options": [
      { "id": "option_1", "text": "A method for testing releases", "isCorrect": false },
      { "id": "option_2", "text": "A backlog management tool", "isCorrect": false },
      { "id": "option_3", "text": "A way to track individual performance", "isCorrect": false },
      { "id": "option_4", "text": "A team of teams aligned to deliver value in a program", "isCorrect": true }
    ],
    "hint": "It coordinates multiple Agile teams in larger organizations.",
    "answerDescription": "An Agile Release Train consists of multiple Agile teams working together to deliver value in a scaled Agile environment."
  },
  {
    "id": "agile_160",
    "question": "What is one key difference between Scrum and Kanban?",
    "options": [
      { "id": "option_1", "text": "Scrum uses continuous delivery, while Kanban uses iterations", "isCorrect": false },
      { "id": "option_2", "text": "Scrum teams work in functional silos, while Kanban promotes teamwork", "isCorrect": false },
      { "id": "option_3", "text": "Scrum does not have defined roles, while Kanban does", "isCorrect": false },
      { "id": "option_4", "text": "Scrum uses fixed-length sprints, while Kanban has a continuous flow", "isCorrect": true }
    ],
    "hint": "One follows a time-boxed approach, and the other is more flexible.",
    "answerDescription": "Scrum organizes work in sprints, while Kanban allows tasks to move continuously through the workflow without set time frames."
  },
  {
    "id": "agile_161",
    "question": "Why is refactoring important in Agile development?",
    "options": [
      { "id": "option_1", "text": "To rewrite the entire codebase frequently", "isCorrect": false },
      { "id": "option_2", "text": "To delay software releases", "isCorrect": false },
      { "id": "option_3", "text": "To introduce new features quickly", "isCorrect": false },
      { "id": "option_4", "text": "To improve code maintainability without changing functionality", "isCorrect": true }
    ],
    "hint": "It enhances code quality while preserving behavior.",
    "answerDescription": "Refactoring helps teams keep code clean and efficient, reducing technical debt and improving long-term maintainability."
  },
  {
    "id": "agile_162",
    "question": "What is the main objective of backlog grooming in Agile?",
    "options": [
      { "id": "option_1", "text": "To remove completed stories from the backlog", "isCorrect": false },
      { "id": "option_2", "text": "To finalize project documentation", "isCorrect": false },
      { "id": "option_3", "text": "To freeze requirements before development", "isCorrect": false },
      { "id": "option_4", "text": "To refine, prioritize, and clarify backlog items", "isCorrect": true }
    ],
    "hint": "It helps keep the backlog structured and up to date.",
    "answerDescription": "Backlog grooming ensures that items are well-defined, estimated, and prioritized for upcoming sprints."
  },
  {
    "id": "agile_163",
    "question": "What does velocity measure in Agile?",
    "options": [
      { "id": "option_1", "text": "The speed at which new team members learn Agile", "isCorrect": false },
      { "id": "option_2", "text": "The number of meetings completed in a sprint", "isCorrect": false },
      { "id": "option_3", "text": "The total number of work hours in a sprint", "isCorrect": false },
      { "id": "option_4", "text": "The amount of work completed in a sprint", "isCorrect": true }
    ],
    "hint": "It helps teams predict how much work they can complete.",
    "answerDescription": "Velocity is a key Agile metric that measures the amount of work a team completes per sprint, aiding in capacity planning."
  },
  {
    "id": "agile_164",
    "question": "What is a key benefit of Test-Driven Development (TDD) in Agile?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for QA testing", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up the initial development process", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the importance of coding standards", "isCorrect": false },
      { "id": "option_4", "text": "It helps ensure code correctness before development", "isCorrect": true }
    ],
    "hint": "This technique involves writing tests before writing code.",
    "answerDescription": "TDD helps improve code quality by requiring tests to be written first, ensuring the functionality meets requirements before implementation."
  },
  {
    "id": "agile_165",
    "question": "What is a characteristic of Agile leadership?",
    "options": [
      { "id": "option_1", "text": "Command-and-control decision-making", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing team autonomy", "isCorrect": false },
      { "id": "option_3", "text": "Focusing only on project deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Empowering teams and encouraging collaboration", "isCorrect": true }
    ],
    "hint": "Agile leaders enable teams rather than control them.",
    "answerDescription": "Agile leadership focuses on fostering team collaboration, enabling self-organization, and removing obstacles to productivity."
  },
  {
    "id": "agile_166",
    "question": "What is the role of a Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To set deadlines for project completion", "isCorrect": false },
      { "id": "option_3", "text": "To create and approve product backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate Scrum events and remove impediments", "isCorrect": true }
    ],
    "hint": "This role focuses on supporting the team and ensuring Agile principles are followed.",
    "answerDescription": "A Scrum Master helps the team adhere to Scrum practices, removes obstacles, and ensures smooth Agile processes."
  },  {
    "id": "agile_167",
    "question": "What is the primary goal of Agile methodologies?",
    "options": [
      { "id": "option_1", "text": "Delivering value to customers quickly and iteratively", "isCorrect": true },
      { "id": "option_2", "text": "Following a strict project timeline", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing team communication", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating documentation in projects", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering working software frequently.",
    "answerDescription": "Agile methodologies prioritize delivering value through iterative development, customer collaboration, and continuous improvement."
  },
  {
    "id": "agile_168",
    "question": "What is the purpose of a Sprint Review in Scrum?",
    "options": [
      { "id": "option_1", "text": "To showcase completed work to stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "To assign new tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "To discuss team performance and conflicts", "isCorrect": false },
      { "id": "option_4", "text": "To finalize project budgeting", "isCorrect": false }
    ],
    "hint": "This meeting focuses on demonstrating progress.",
    "answerDescription": "Sprint Reviews allow teams to present completed work, gather feedback, and adapt plans based on stakeholder input."
  },
  {
    "id": "agile_169",
    "question": "Which Agile principle emphasizes customer collaboration?",
    "options": [
      { "id": "option_1", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_2", "text": "Processes and tools over individuals and interactions", "isCorrect": false },
      { "id": "option_3", "text": "Following a detailed project plan", "isCorrect": false },
      { "id": "option_4", "text": "Delivering software at the end of development", "isCorrect": false }
    ],
    "hint": "It is one of the four key Agile values.",
    "answerDescription": "Agile prioritizes working closely with customers to ensure software meets their evolving needs rather than sticking to rigid contracts."
  },
  {
    "id": "agile_170",
    "question": "What is the primary responsibility of the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Managing and prioritizing the product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Tracking team attendance", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "This role ensures that development aligns with business goals.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing backlog items to maximize the product's value."
  },
  {
    "id": "agile_171",
    "question": "Why are daily stand-up meetings important in Agile?",
    "options": [
      { "id": "option_1", "text": "To keep the team aligned and identify blockers", "isCorrect": true },
      { "id": "option_2", "text": "To assign new tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "To discuss long-term project planning", "isCorrect": false },
      { "id": "option_4", "text": "To review financial reports", "isCorrect": false }
    ],
    "hint": "These meetings are short and help with team synchronization.",
    "answerDescription": "Daily stand-ups help teams communicate progress, discuss challenges, and align their work for efficient collaboration."
  },
  {
    "id": "agile_172",
    "question": "What is an important aspect of an Agile retrospective?",
    "options": [
      { "id": "option_1", "text": "Identifying areas for team improvement", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "Presenting the final project report", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating backlog items", "isCorrect": false }
    ],
    "hint": "This meeting focuses on learning from past sprints.",
    "answerDescription": "Agile retrospectives allow teams to reflect on their work and identify ways to improve future performance."
  },
  {
    "id": "agile_173",
    "question": "Which of the following best describes continuous integration?",
    "options": [
      { "id": "option_1", "text": "Frequent integration of code changes into a shared repository", "isCorrect": true },
      { "id": "option_2", "text": "A process for assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Final testing before a project is released", "isCorrect": false },
      { "id": "option_4", "text": "Manual tracking of software defects", "isCorrect": false }
    ],
    "hint": "This practice helps detect issues early in development.",
    "answerDescription": "Continuous integration ensures that code changes are frequently merged and tested, reducing integration problems."
  },
  {
    "id": "agile_174",
    "question": "What is the purpose of story points in Agile?",
    "options": [
      { "id": "option_1", "text": "To estimate the effort required for a user story", "isCorrect": true },
      { "id": "option_2", "text": "To track the number of bugs in a sprint", "isCorrect": false },
      { "id": "option_3", "text": "To define a fixed deadline for a task", "isCorrect": false },
      { "id": "option_4", "text": "To replace team performance evaluations", "isCorrect": false }
    ],
    "hint": "Teams use these to estimate effort, not time.",
    "answerDescription": "Story points help teams measure the relative effort and complexity of tasks, aiding in sprint planning and workload distribution."
  },
  {
    "id": "agile_175",
    "question": "What is the primary benefit of using burndown charts in Agile?",
    "options": [
      { "id": "option_1", "text": "Tracking progress towards sprint completion", "isCorrect": true },
      { "id": "option_2", "text": "Measuring individual team performance", "isCorrect": false },
      { "id": "option_3", "text": "Documenting project requirements", "isCorrect": false },
      { "id": "option_4", "text": "Calculating budget expenses", "isCorrect": false }
    ],
    "hint": "These charts help visualize remaining work in a sprint.",
    "answerDescription": "Burndown charts provide a graphical representation of work completed versus work remaining, allowing teams to track sprint progress."
  },
  {
    "id": "agile_176",
    "question": "What is the role of a cross-functional team in Agile?",
    "options": [
      { "id": "option_1", "text": "To have all necessary skills to complete work independently", "isCorrect": true },
      { "id": "option_2", "text": "To ensure each team member has only one responsibility", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on testing and quality assurance", "isCorrect": false },
      { "id": "option_4", "text": "To manage external vendor relationships", "isCorrect": false }
    ],
    "hint": "These teams do not rely on external dependencies.",
    "answerDescription": "Cross-functional teams include members with diverse skill sets, enabling them to complete work independently and efficiently."
  },  {
    "id": "agile_177",
    "question": "What does Agile emphasize the most in software development?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to a fixed plan", "isCorrect": false },
      { "id": "option_2", "text": "Responding to change over following a plan", "isCorrect": true },
      { "id": "option_3", "text": "Maximizing documentation", "isCorrect": false },
      { "id": "option_4", "text": "Limiting customer involvement", "isCorrect": false }
    ],
    "hint": "One of Agile's core values highlights adaptability.",
    "answerDescription": "Agile values responding to change over strictly following a predetermined plan, allowing teams to adapt quickly."
  },
  {
    "id": "agile_178",
    "question": "What is a key characteristic of Agile teams?",
    "options": [
      { "id": "option_1", "text": "Fixed roles and responsibilities", "isCorrect": false },
      { "id": "option_2", "text": "Self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_3", "text": "Large and hierarchical structure", "isCorrect": false },
      { "id": "option_4", "text": "Minimal collaboration among members", "isCorrect": false }
    ],
    "hint": "Agile teams adapt and manage work independently.",
    "answerDescription": "Agile teams are self-organizing and cross-functional, allowing them to deliver high-quality work without relying on external dependencies."
  },
  {
    "id": "agile_179",
    "question": "What is the role of a Scrum Master in Agile?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Agile practices and removing impediments", "isCorrect": true },
      { "id": "option_3", "text": "Acting as the project sponsor", "isCorrect": false },
      { "id": "option_4", "text": "Managing the company's finances", "isCorrect": false }
    ],
    "hint": "This role focuses on coaching the team and ensuring Agile principles are followed.",
    "answerDescription": "A Scrum Master serves as a servant-leader, ensuring the team adheres to Agile principles and helping them overcome obstacles."
  },
  {
    "id": "agile_180",
    "question": "Which Agile framework includes Program Increments (PIs) as a key component?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "SAFe (Scaled Agile Framework)", "isCorrect": true },
      { "id": "option_3", "text": "Kanban", "isCorrect": false },
      { "id": "option_4", "text": "Extreme Programming (XP)", "isCorrect": false }
    ],
    "hint": "This framework is used for scaling Agile in large organizations.",
    "answerDescription": "SAFe (Scaled Agile Framework) incorporates Program Increments (PIs) to coordinate multiple Agile teams and align goals."
  },
  {
    "id": "agile_181",
    "question": "What is a key benefit of using a Kanban board in Agile?",
    "options": [
      { "id": "option_1", "text": "Creating detailed documentation", "isCorrect": false },
      { "id": "option_2", "text": "Visualizing work and limiting work in progress (WIP)", "isCorrect": true },
      { "id": "option_3", "text": "Setting fixed deadlines for each task", "isCorrect": false },
      { "id": "option_4", "text": "Replacing sprint planning", "isCorrect": false }
    ],
    "hint": "This tool helps manage workflow and reduce bottlenecks.",
    "answerDescription": "Kanban boards provide a clear visual representation of tasks, helping teams limit work in progress and optimize workflow efficiency."
  },
  {
    "id": "agile_182",
    "question": "What is the main focus of Agile estimation techniques?",
    "options": [
      { "id": "option_1", "text": "Predicting exact deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Providing relative effort estimates for tasks", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to specific individuals", "isCorrect": false },
      { "id": "option_4", "text": "Calculating project costs in advance", "isCorrect": false }
    ],
    "hint": "Estimates focus on effort rather than time.",
    "answerDescription": "Agile estimation techniques like story points focus on the relative effort required for tasks rather than fixed time predictions."
  },
  {
    "id": "agile_183",
    "question": "What is a key reason for using iterative development in Agile?",
    "options": [
      { "id": "option_1", "text": "To finalize all requirements before starting development", "isCorrect": false },
      { "id": "option_2", "text": "To allow continuous feedback and improvements", "isCorrect": true },
      { "id": "option_3", "text": "To complete projects as quickly as possible", "isCorrect": false },
      { "id": "option_4", "text": "To minimize testing efforts", "isCorrect": false }
    ],
    "hint": "This approach helps teams adapt and refine their work.",
    "answerDescription": "Iterative development enables continuous feedback, allowing teams to make adjustments and improve the product with each iteration."
  },
  {
    "id": "agile_184",
    "question": "Which Agile practice helps ensure quality through automated testing?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Test-Driven Development (TDD)", "isCorrect": true },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Daily Stand-ups", "isCorrect": false }
    ],
    "hint": "This approach involves writing tests before coding.",
    "answerDescription": "Test-Driven Development (TDD) emphasizes writing tests before development to improve code quality and prevent defects."
  },
  {
    "id": "agile_185",
    "question": "What does the 'Definition of Done' (DoD) ensure in Agile?",
    "options": [
      { "id": "option_1", "text": "That tasks are assigned to the right people", "isCorrect": false },
      { "id": "option_2", "text": "That work meets agreed-upon quality standards", "isCorrect": true },
      { "id": "option_3", "text": "That teams follow a fixed deadline", "isCorrect": false },
      { "id": "option_4", "text": "That all sprints have the same duration", "isCorrect": false }
    ],
    "hint": "It establishes clear completion criteria.",
    "answerDescription": "The 'Definition of Done' ensures that work is fully completed according to agreed-upon standards, including testing and documentation."
  },
  {
    "id": "agile_186",
    "question": "What is the primary purpose of backlog refinement in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign tasks for the next sprint", "isCorrect": false },
      { "id": "option_2", "text": "To clarify and prioritize backlog items", "isCorrect": true },
      { "id": "option_3", "text": "To finalize project requirements", "isCorrect": false },
      { "id": "option_4", "text": "To evaluate team performance", "isCorrect": false }
    ],
    "hint": "This process helps prepare backlog items for future sprints.",
    "answerDescription": "Backlog refinement ensures that user stories are well-defined, prioritized, and ready for development in upcoming sprints."
  },  {
    "id": "agile_187",
    "question": "What is a core principle of Agile methodology?",
    "options": [
      { "id": "option_1", "text": "Strict hierarchical management", "isCorrect": false },
      { "id": "option_2", "text": "Maximizing documentation", "isCorrect": false },
      { "id": "option_3", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_4", "text": "Following a fixed plan", "isCorrect": false }
    ],
    "hint": "Agile values adaptability and direct interaction with stakeholders.",
    "answerDescription": "Agile prioritizes customer collaboration to ensure the product meets evolving needs rather than relying solely on rigid contracts."
  },
  {
    "id": "agile_188",
    "question": "What is the primary goal of a sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "To complete as many tasks as possible", "isCorrect": false },
      { "id": "option_2", "text": "To write detailed documentation", "isCorrect": false },
      { "id": "option_3", "text": "To deliver a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "To review previous sprints", "isCorrect": false }
    ],
    "hint": "Each sprint aims to produce working software.",
    "answerDescription": "Scrum sprints are designed to create a usable and potentially shippable product increment at the end of each cycle."
  },
  {
    "id": "agile_189",
    "question": "Which Agile event focuses on reflecting on the previous sprint and identifying improvements?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event helps teams continuously improve their processes.",
    "answerDescription": "The Sprint Retrospective is held at the end of each sprint to evaluate what went well and identify areas for improvement."
  },
  {
    "id": "agile_190",
    "question": "What is the purpose of a user story in Agile?",
    "options": [
      { "id": "option_1", "text": "To outline technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "To define team responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "To describe a feature from the userâ€™s perspective", "isCorrect": true },
      { "id": "option_4", "text": "To create a detailed project plan", "isCorrect": false }
    ],
    "hint": "User stories focus on the needs and goals of the end user.",
    "answerDescription": "A user story describes functionality from the user's perspective to ensure that development aligns with customer needs."
  },
  {
    "id": "agile_191",
    "question": "Which Agile framework is best suited for continuous workflow management?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "SAFe", "isCorrect": false },
      { "id": "option_3", "text": "Kanban", "isCorrect": true },
      { "id": "option_4", "text": "Extreme Programming", "isCorrect": false }
    ],
    "hint": "This framework focuses on visualizing work and limiting WIP.",
    "answerDescription": "Kanban is designed for continuous workflow management, allowing teams to visualize progress and limit work in progress."
  },
  {
    "id": "agile_192",
    "question": "What is the primary role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To manage team performance", "isCorrect": false },
      { "id": "option_3", "text": "To define and prioritize backlog items", "isCorrect": true },
      { "id": "option_4", "text": "To conduct sprint retrospectives", "isCorrect": false }
    ],
    "hint": "This role is responsible for maximizing product value.",
    "answerDescription": "The Product Owner ensures that backlog items are well-defined and prioritized according to business and customer needs."
  },
  {
    "id": "agile_193",
    "question": "What is one of the benefits of pair programming in Agile?",
    "options": [
      { "id": "option_1", "text": "Reducing team collaboration", "isCorrect": false },
      { "id": "option_2", "text": "Eliminating code reviews", "isCorrect": false },
      { "id": "option_3", "text": "Improving code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_4", "text": "Speeding up development by avoiding testing", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together on the same task.",
    "answerDescription": "Pair programming enhances code quality and encourages knowledge sharing by having two developers collaborate on a single task."
  },
  {
    "id": "agile_194",
    "question": "Why are Agile teams encouraged to work in small, cross-functional groups?",
    "options": [
      { "id": "option_1", "text": "To reduce overhead costs", "isCorrect": false },
      { "id": "option_2", "text": "To allow specialization in one skill set", "isCorrect": false },
      { "id": "option_3", "text": "To enable collaboration and faster delivery", "isCorrect": true },
      { "id": "option_4", "text": "To ensure strict hierarchy", "isCorrect": false }
    ],
    "hint": "Small teams with diverse skills work efficiently together.",
    "answerDescription": "Agile teams are cross-functional, ensuring that members have varied skills to collaborate effectively and deliver work faster."
  },
  {
    "id": "agile_195",
    "question": "What is the purpose of velocity in Agile development?",
    "options": [
      { "id": "option_1", "text": "To measure code quality", "isCorrect": false },
      { "id": "option_2", "text": "To estimate project budgets", "isCorrect": false },
      { "id": "option_3", "text": "To track the amount of work completed in a sprint", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks to individuals", "isCorrect": false }
    ],
    "hint": "Velocity helps teams understand their delivery capacity.",
    "answerDescription": "Velocity measures the total amount of work a team completes in a sprint, helping with future sprint planning."
  },
  {
    "id": "agile_196",
    "question": "Which Agile practice helps teams adjust their backlog based on new insights?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This process ensures the backlog remains relevant and prioritized.",
    "answerDescription": "Backlog refinement allows Agile teams to continuously update and prioritize their backlog based on evolving project requirements."
  },  {
    "id": "agile_197",
    "question": "Which Agile framework uses time-boxed iterations called Sprints?",
    "options": [
      { "id": "option_1", "text": "Kanban", "isCorrect": false },
      { "id": "option_2", "text": "Extreme Programming (XP)", "isCorrect": false },
      { "id": "option_3", "text": "Lean", "isCorrect": false },
      { "id": "option_4", "text": "Scrum", "isCorrect": true }
    ],
    "hint": "This framework includes roles like Scrum Master and Product Owner.",
    "answerDescription": "Scrum uses time-boxed iterations called Sprints to deliver incremental product updates."
  },
  {
    "id": "agile_198",
    "question": "What is a key benefit of Agile methodologies?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to a fixed plan", "isCorrect": false },
      { "id": "option_2", "text": "Minimal customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "Long development cycles", "isCorrect": false },
      { "id": "option_4", "text": "Flexibility to adapt to changing requirements", "isCorrect": true }
    ],
    "hint": "Agile allows continuous improvement and adaptation.",
    "answerDescription": "Agile's iterative approach enables teams to adapt to changes efficiently, improving product outcomes."
  },
  {
    "id": "agile_199",
    "question": "Which role in Scrum is responsible for facilitating team collaboration and removing obstacles?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholder", "isCorrect": false },
      { "id": "option_4", "text": "Scrum Master", "isCorrect": true }
    ],
    "hint": "This role acts as a servant-leader for the team.",
    "answerDescription": "The Scrum Master ensures that the team follows Agile principles and removes impediments to progress."
  },
  {
    "id": "agile_200",
    "question": "What is the usage of a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To estimate future sprint work", "isCorrect": false },
      { "id": "option_2", "text": "To assign individual responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "To analyze team performance", "isCorrect": false },
      { "id": "option_4", "text": "To demonstrate completed work to stakeholders", "isCorrect": true }
    ],
    "hint": "This event ensures transparency by showcasing the work done.",
    "answerDescription": "A Sprint Review allows stakeholders to inspect the increment and provide feedback for future improvements."
  },
  {
    "id": "agile_201",
    "question": "What is one of the primary goals of Agile development?",
    "options": [
      { "id": "option_1", "text": "To produce extensive documentation", "isCorrect": false },
      { "id": "option_2", "text": "To focus on process adherence", "isCorrect": false },
      { "id": "option_3", "text": "To follow a strict hierarchy", "isCorrect": false },
      { "id": "option_4", "text": "To deliver working software frequently", "isCorrect": true }
    ],
    "hint": "Agile emphasizes iterative development with frequent deliveries.",
    "answerDescription": "Agile prioritizes working software over extensive planning and documentation to provide value early and continuously."
  },
  {
    "id": "agile_202",
    "question": "What Agile ceremony is held daily to discuss progress and impediments?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Daily Stand-up", "isCorrect": true }
    ],
    "hint": "This meeting is short and held every day for team alignment.",
    "answerDescription": "The Daily Stand-up is a quick meeting where team members share updates and discuss any blockers."
  },
  {
    "id": "agile_203",
    "question": "Which Agile principle promotes sustainable development?",
    "options": [
      { "id": "option_1", "text": "Continuous overtime improves productivity", "isCorrect": false },
      { "id": "option_2", "text": "Frequent reassignments lead to better performance", "isCorrect": false },
      { "id": "option_3", "text": "Strict deadlines increase efficiency", "isCorrect": false },
      { "id": "option_4", "text": "Maintain a constant pace indefinitely", "isCorrect": true }
    ],
    "hint": "Agile promotes a steady work rhythm without burnout.",
    "answerDescription": "Agile teams work at a sustainable pace to ensure long-term productivity and avoid burnout."
  },
  {
    "id": "agile_204",
    "question": "What is one key difference between Agile and traditional Waterfall development?",
    "options": [
      { "id": "option_1", "text": "Agile requires detailed upfront planning", "isCorrect": false },
      { "id": "option_2", "text": "Waterfall allows frequent iterations", "isCorrect": false },
      { "id": "option_3", "text": "Agile avoids customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Agile embraces iterative and incremental development", "isCorrect": true }
    ],
    "hint": "Agile focuses on small, adaptive cycles rather than a sequential approach.",
    "answerDescription": "Unlike Waterfall, Agile follows an iterative process where features are delivered incrementally and customer feedback is incorporated continuously."
  },
  {
    "id": "agile_205",
    "question": "Which Agile framework is designed for scaling Agile practices across large organizations?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Extreme Programming (XP)", "isCorrect": false },
      { "id": "option_3", "text": "Kanban", "isCorrect": false },
      { "id": "option_4", "text": "SAFe (Scaled Agile Framework)", "isCorrect": true }
    ],
    "hint": "This framework is specifically designed for enterprise-level agility.",
    "answerDescription": "SAFe provides structured guidance on implementing Agile across multiple teams in large organizations."
  },
  {
    "id": "agile_206",
    "question": "What is the main purpose of Test-Driven Development (TDD) in Agile?",
    "options": [
      { "id": "option_1", "text": "To increase the need for manual testing", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for refactoring", "isCorrect": false },
      { "id": "option_3", "text": "To reduce code reviews", "isCorrect": false },
      { "id": "option_4", "text": "To write tests before writing the actual code", "isCorrect": true }
    ],
    "hint": "This approach helps developers ensure correctness before implementation.",
    "answerDescription": "Test-Driven Development (TDD) follows a cycle of writing tests before implementing code to improve code quality and maintainability."
  },

  {
    "id": "agile_207",
    "question": "How does Agile development improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By reducing project costs", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating documentation", "isCorrect": false },
      { "id": "option_3", "text": "By following a strict timeline", "isCorrect": false },
      { "id": "option_4", "text": "By delivering value early and incorporating feedback", "isCorrect": true }
    ],
    "hint": "Agile focuses on delivering working software in small increments.",
    "answerDescription": "Agile enhances customer satisfaction by enabling early deliveries, continuous feedback, and adaptability to changing requirements."
  },
  {
    "id": "agile_208",
    "question": "Which key benefit of Agile helps teams respond quickly to market changes?",
    "options": [
      { "id": "option_1", "text": "Comprehensive upfront planning", "isCorrect": false },
      { "id": "option_2", "text": "Rigid project management", "isCorrect": false },
      { "id": "option_3", "text": "Long development cycles", "isCorrect": false },
      { "id": "option_4", "text": "Flexibility and adaptability", "isCorrect": true }
    ],
    "hint": "Agile allows teams to adapt quickly to changes.",
    "answerDescription": "Agile's iterative approach enables teams to adjust priorities and respond effectively to changing market demands."
  },
  {
    "id": "agile_209",
    "question": "How does Agile reduce project risks?",
    "options": [
      { "id": "option_1", "text": "By delaying decision-making", "isCorrect": false },
      { "id": "option_2", "text": "By fixing requirements at the beginning", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By using incremental development and frequent feedback", "isCorrect": true }
    ],
    "hint": "Frequent iterations help identify risks early.",
    "answerDescription": "Agile reduces risks by continuously delivering small increments, allowing teams to detect and address issues early."
  },
  {
    "id": "agile_210",
    "question": "What is one way Agile development enhances team collaboration?",
    "options": [
      { "id": "option_1", "text": "By promoting individual performance over teamwork", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict hierarchical structures", "isCorrect": false },
      { "id": "option_3", "text": "By reducing communication between teams", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging daily stand-ups and open communication", "isCorrect": true }
    ],
    "hint": "Agile promotes frequent team interactions.",
    "answerDescription": "Daily stand-ups and continuous communication in Agile improve collaboration, ensuring everyone is aligned toward project goals."
  },
  {
    "id": "agile_211",
    "question": "Why does Agile lead to higher product quality?",
    "options": [
      { "id": "option_1", "text": "By reducing testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on speed", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By integrating continuous testing and feedback", "isCorrect": true }
    ],
    "hint": "Agile incorporates testing throughout the development cycle.",
    "answerDescription": "Agile emphasizes continuous integration, testing, and feedback, leading to improved product quality."
  },
  {
    "id": "agile_212",
    "question": "How does Agile improve time-to-market for products?",
    "options": [
      { "id": "option_1", "text": "By requiring long planning phases", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding early releases", "isCorrect": false },
      { "id": "option_3", "text": "By delaying feedback cycles", "isCorrect": false },
      { "id": "option_4", "text": "By enabling early and frequent releases", "isCorrect": true }
    ],
    "hint": "Agile delivers working software in short iterations.",
    "answerDescription": "Agile reduces time-to-market by focusing on delivering small, functional increments that provide immediate value."
  },
  {
    "id": "agile_213",
    "question": "Which Agile benefit contributes to higher team morale?",
    "options": [
      { "id": "option_1", "text": "Strict role enforcement", "isCorrect": false },
      { "id": "option_2", "text": "Limited autonomy", "isCorrect": false },
      { "id": "option_3", "text": "Long work hours", "isCorrect": false },
      { "id": "option_4", "text": "Empowerment and self-organization", "isCorrect": true }
    ],
    "hint": "Agile teams have autonomy in decision-making.",
    "answerDescription": "By allowing teams to self-organize and take ownership of their work, Agile fosters motivation and job satisfaction."
  },
  {
    "id": "agile_214",
    "question": "Why is Agile effective in handling changing requirements?",
    "options": [
      { "id": "option_1", "text": "By locking scope at the beginning", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "By limiting the number of iterations", "isCorrect": false },
      { "id": "option_4", "text": "By embracing change through iterative development", "isCorrect": true }
    ],
    "hint": "Agile values responding to change over following a fixed plan.",
    "answerDescription": "Agile allows flexibility by incorporating customer feedback and adjusting priorities throughout the development process."
  },
  {
    "id": "agile_215",
    "question": "What benefit does Agile provide in terms of cost management?",
    "options": [
      { "id": "option_1", "text": "By increasing upfront costs", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding budget reviews", "isCorrect": false },
      { "id": "option_3", "text": "By finalizing budgets before development", "isCorrect": false },
      { "id": "option_4", "text": "By enabling cost control through incremental releases", "isCorrect": true }
    ],
    "hint": "Agile reduces financial risks by delivering in small steps.",
    "answerDescription": "Agile helps in managing costs effectively by focusing on delivering high-value features and making informed budget decisions iteratively."
  },
  {
    "id": "agile_216",
    "question": "How does Agile improve stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication", "isCorrect": false },
      { "id": "option_2", "text": "By providing updates only at project completion", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By involving stakeholders in regular feedback loops", "isCorrect": true }
    ],
    "hint": "Agile promotes continuous stakeholder collaboration.",
    "answerDescription": "Regular interactions with stakeholders ensure their needs are met, leading to better alignment and successful project outcomes."
 }, {
    "id": "agile_217",
    "question": "What is one of the biggest advantages of Agile development?",
    "options": [
      { "id": "option_1", "text": "Faster delivery of working software", "isCorrect": true },
      { "id": "option_2", "text": "Strictly following a fixed plan", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Longer release cycles", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering value quickly through iterations.",
    "answerDescription": "Agile development enables faster delivery of working software, allowing teams to respond to changes effectively."
  },
  {
    "id": "agile_218",
    "question": "How does Agile help in reducing project risks?",
    "options": [
      { "id": "option_1", "text": "By continuously inspecting and adapting", "isCorrect": true },
      { "id": "option_2", "text": "By eliminating flexibility in the process", "isCorrect": false },
      { "id": "option_3", "text": "By finalizing requirements at the beginning", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Agile encourages continuous learning and adaptation.",
    "answerDescription": "Agile reduces risks by allowing teams to inspect progress frequently and make necessary adjustments early."
  },
  {
    "id": "agile_219",
    "question": "Why is customer satisfaction higher in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Because customers see frequent updates and improvements", "isCorrect": true },
      { "id": "option_2", "text": "Because customers are not involved in the process", "isCorrect": false },
      { "id": "option_3", "text": "Because changes are discouraged", "isCorrect": false },
      { "id": "option_4", "text": "Because delivery happens only at the end", "isCorrect": false }
    ],
    "hint": "Agile provides continuous feedback loops with customers.",
    "answerDescription": "Frequent updates and collaboration in Agile ensure that customer needs are met, leading to higher satisfaction."
  },
  {
    "id": "agile_220",
    "question": "What benefit does Agile provide to project teams?",
    "options": [
      { "id": "option_1", "text": "Improved team collaboration and communication", "isCorrect": true },
      { "id": "option_2", "text": "Rigid roles and responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "Longer approval processes", "isCorrect": false },
      { "id": "option_4", "text": "Less interaction between team members", "isCorrect": false }
    ],
    "hint": "Agile promotes teamwork and shared responsibility.",
    "answerDescription": "Agile fosters a collaborative environment where teams work closely and communicate effectively to achieve goals."
  },
  {
    "id": "agile_221",
    "question": "How does Agile improve software quality?",
    "options": [
      { "id": "option_1", "text": "By incorporating continuous testing and feedback", "isCorrect": true },
      { "id": "option_2", "text": "By delaying testing until the end", "isCorrect": false },
      { "id": "option_3", "text": "By reducing developer collaboration", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding frequent code changes", "isCorrect": false }
    ],
    "hint": "Frequent testing helps in early detection of issues.",
    "answerDescription": "Continuous testing and feedback loops in Agile ensure that defects are identified and fixed early, improving overall quality."
  },
  {
    "id": "agile_222",
    "question": "How does Agile increase flexibility in software development?",
    "options": [
      { "id": "option_1", "text": "By allowing changes even late in the development cycle", "isCorrect": true },
      { "id": "option_2", "text": "By discouraging changes after planning", "isCorrect": false },
      { "id": "option_3", "text": "By sticking to a fixed set of requirements", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on documentation", "isCorrect": false }
    ],
    "hint": "Agile welcomes changes to enhance product value.",
    "answerDescription": "Agile embraces change at any stage, enabling teams to adapt and deliver valuable software."
  },
  {
    "id": "agile_223",
    "question": "Why is stakeholder engagement stronger in Agile development?",
    "options": [
      { "id": "option_1", "text": "Because stakeholders provide regular input", "isCorrect": true },
      { "id": "option_2", "text": "Because stakeholders are only involved at the end", "isCorrect": false },
      { "id": "option_3", "text": "Because requirements are locked at the start", "isCorrect": false },
      { "id": "option_4", "text": "Because teams work in isolation", "isCorrect": false }
    ],
    "hint": "Frequent communication keeps stakeholders engaged.",
    "answerDescription": "Agile ensures strong stakeholder engagement through regular updates, feedback sessions, and iterative improvements."
  },
  {
    "id": "agile_224",
    "question": "How does Agile improve time-to-market for products?",
    "options": [
      { "id": "option_1", "text": "By delivering small increments frequently", "isCorrect": true },
      { "id": "option_2", "text": "By waiting until the full product is ready", "isCorrect": false },
      { "id": "option_3", "text": "By limiting customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By reducing the number of releases", "isCorrect": false }
    ],
    "hint": "Smaller releases help deliver value faster.",
    "answerDescription": "Agile speeds up time-to-market by focusing on incremental delivery, ensuring that usable features reach customers quickly."
  },
  {
    "id": "agile_225",
    "question": "What is a key business benefit of Agile development?",
    "options": [
      { "id": "option_1", "text": "Increased return on investment (ROI)", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to initial requirements", "isCorrect": false },
      { "id": "option_3", "text": "Longer development cycles", "isCorrect": false },
      { "id": "option_4", "text": "Minimized customer involvement", "isCorrect": false }
    ],
    "hint": "Agile helps businesses gain value sooner.",
    "answerDescription": "By delivering usable features quickly, Agile increases business ROI and responsiveness to market demands."
  },
  {
    "id": "agile_226",
    "question": "How does Agile foster innovation in teams?",
    "options": [
      { "id": "option_1", "text": "By encouraging experimentation and feedback", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding risks and changes", "isCorrect": false },
      { "id": "option_3", "text": "By following rigid, pre-defined processes", "isCorrect": false },
      { "id": "option_4", "text": "By limiting team discussions", "isCorrect": false }
    ],
    "hint": "Agile values learning from iterations.",
    "answerDescription": "Agile promotes a culture of continuous learning, experimentation, and improvement, fostering innovation within teams."
  },
 {
    "id": "agile_227",
    "question": "How does Agile development improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By limiting customer interactions", "isCorrect": false },
      { "id": "option_2", "text": "By delivering value early and frequently", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing rigid project timelines", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Agile emphasizes continuous delivery and customer feedback.",
    "answerDescription": "Agile improves customer satisfaction by allowing for early and frequent delivery of working software, ensuring alignment with customer needs."
  },
  {
    "id": "agile_228",
    "question": "What is a key benefit of Agileâ€™s iterative approach?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for planning", "isCorrect": false },
      { "id": "option_2", "text": "It allows teams to adapt to change quickly", "isCorrect": true },
      { "id": "option_3", "text": "It ensures no revisions are necessary", "isCorrect": false },
      { "id": "option_4", "text": "It requires detailed specifications before starting", "isCorrect": false }
    ],
    "hint": "Agile enables flexibility throughout the development process.",
    "answerDescription": "Agileâ€™s iterative approach allows teams to respond to changes quickly, making adjustments based on feedback and evolving requirements."
  },
  {
    "id": "agile_229",
    "question": "How does Agile development help reduce project risks?",
    "options": [
      { "id": "option_1", "text": "By avoiding any changes once the project starts", "isCorrect": false },
      { "id": "option_2", "text": "By providing continuous feedback and adaptation", "isCorrect": true },
      { "id": "option_3", "text": "By extending project deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By requiring extensive initial documentation", "isCorrect": false }
    ],
    "hint": "Frequent evaluation helps mitigate risks.",
    "answerDescription": "Agile reduces project risks by incorporating continuous feedback and iterative improvements, preventing major issues from going unnoticed."
  },
  {
    "id": "agile_230",
    "question": "Why does Agile improve collaboration between teams and stakeholders?",
    "options": [
      { "id": "option_1", "text": "By limiting direct communication", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging regular meetings and feedback loops", "isCorrect": true },
      { "id": "option_3", "text": "By reducing stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on technical implementation", "isCorrect": false }
    ],
    "hint": "Frequent communication is a core Agile principle.",
    "answerDescription": "Agile improves collaboration through regular meetings such as stand-ups, sprint reviews, and retrospectives, ensuring alignment among all stakeholders."
  },
  {
    "id": "agile_231",
    "question": "How does Agile development enhance product quality?",
    "options": [
      { "id": "option_1", "text": "By eliminating the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "By continuously integrating and testing features", "isCorrect": true },
      { "id": "option_3", "text": "By freezing requirements early in the project", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Frequent testing helps ensure quality.",
    "answerDescription": "Agile promotes continuous integration and testing, allowing teams to identify and fix issues early, leading to higher product quality."
  },
  {
    "id": "agile_232",
    "question": "What is a major advantage of Agile in handling project requirements?",
    "options": [
      { "id": "option_1", "text": "It requires all requirements to be defined upfront", "isCorrect": false },
      { "id": "option_2", "text": "It accommodates changing requirements throughout development", "isCorrect": true },
      { "id": "option_3", "text": "It prevents any modifications after development begins", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for requirement discussions", "isCorrect": false }
    ],
    "hint": "Agile embraces change rather than resisting it.",
    "answerDescription": "Agile allows teams to adapt to changing requirements even late in the development process, ensuring the final product meets business needs."
  },
  {
    "id": "agile_233",
    "question": "How does Agile promote a more engaged and motivated team?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid work schedules", "isCorrect": false },
      { "id": "option_2", "text": "By empowering teams to make decisions and self-organize", "isCorrect": true },
      { "id": "option_3", "text": "By reducing team communication", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging collaboration", "isCorrect": false }
    ],
    "hint": "Agile teams thrive on autonomy and accountability.",
    "answerDescription": "Agile encourages self-organizing teams, giving them ownership over their work, which leads to higher motivation and engagement."
  },
  {
    "id": "agile_234",
    "question": "Why is Agile well-suited for fast-changing industries?",
    "options": [
      { "id": "option_1", "text": "Because it follows a strict project plan", "isCorrect": false },
      { "id": "option_2", "text": "Because it allows for rapid adaptation to market changes", "isCorrect": true },
      { "id": "option_3", "text": "Because it avoids customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Because it eliminates the need for feedback", "isCorrect": false }
    ],
    "hint": "Agile provides flexibility in unpredictable environments.",
    "answerDescription": "Agileâ€™s adaptability makes it ideal for industries where requirements change frequently, enabling teams to pivot as needed."
  },
  {
    "id": "agile_235",
    "question": "How does Agile improve time-to-market for products?",
    "options": [
      { "id": "option_1", "text": "By delaying releases until all features are complete", "isCorrect": false },
      { "id": "option_2", "text": "By delivering functional increments frequently", "isCorrect": true },
      { "id": "option_3", "text": "By extending development timelines", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on internal feedback", "isCorrect": false }
    ],
    "hint": "Frequent releases enable quicker delivery of value.",
    "answerDescription": "Agile enables faster time-to-market by releasing small increments of functional software, allowing businesses to gain early feedback and make improvements."
  },
  {
    "id": "agile_236",
    "question": "What benefit does Agile provide in terms of team productivity?",
    "options": [
      { "id": "option_1", "text": "It minimizes collaboration between team members", "isCorrect": false },
      { "id": "option_2", "text": "It fosters continuous learning and process improvement", "isCorrect": true },
      { "id": "option_3", "text": "It discourages feedback cycles", "isCorrect": false },
      { "id": "option_4", "text": "It enforces a single, fixed workflow for all projects", "isCorrect": false }
    ],
    "hint": "Agile teams regularly reflect and adapt to improve productivity.",
    "answerDescription": "Agile encourages teams to continuously refine their processes, leading to better efficiency and productivity over time."
  },

  {
    "id": "agile_237",
    "question": "How does Agile improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By delivering software only at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding changes to project requirements", "isCorrect": false },
      { "id": "option_3", "text": "By providing frequent updates and incorporating feedback", "isCorrect": true },
      { "id": "option_4", "text": "By reducing customer involvement", "isCorrect": false }
    ],
    "hint": "Agile encourages continuous delivery and customer feedback.",
    "answerDescription": "Agile ensures customer satisfaction by allowing frequent iterations, early deliveries, and incorporating feedback promptly."
  },
  {
    "id": "agile_238",
    "question": "What benefit does Agile offer in terms of risk management?",
    "options": [
      { "id": "option_1", "text": "It eliminates all project risks", "isCorrect": false },
      { "id": "option_2", "text": "It postpones identifying risks until the end", "isCorrect": false },
      { "id": "option_3", "text": "It identifies and mitigates risks early through iterations", "isCorrect": true },
      { "id": "option_4", "text": "It avoids risk discussions", "isCorrect": false }
    ],
    "hint": "Agile focuses on addressing risks in early development stages.",
    "answerDescription": "Agile minimizes risks by allowing teams to identify potential issues early and make necessary adjustments through continuous iterations."
  },
  {
    "id": "agile_239",
    "question": "How does Agile development improve time-to-market?",
    "options": [
      { "id": "option_1", "text": "By ensuring all features are developed before release", "isCorrect": false },
      { "id": "option_2", "text": "By focusing on extensive upfront planning", "isCorrect": false },
      { "id": "option_3", "text": "By delivering smaller, functional increments quickly", "isCorrect": true },
      { "id": "option_4", "text": "By reducing customer feedback loops", "isCorrect": false }
    ],
    "hint": "Agile delivers features in small increments to speed up release cycles.",
    "answerDescription": "Agile accelerates time-to-market by prioritizing essential features and delivering them in short iterations rather than waiting for complete project completion."
  },
  {
    "id": "agile_240",
    "question": "Why does Agile lead to higher product quality?",
    "options": [
      { "id": "option_1", "text": "Because it avoids testing until the end", "isCorrect": false },
      { "id": "option_2", "text": "Because it focuses only on documentation", "isCorrect": false },
      { "id": "option_3", "text": "Because continuous testing and feedback are integral to the process", "isCorrect": true },
      { "id": "option_4", "text": "Because it limits collaboration between developers and testers", "isCorrect": false }
    ],
    "hint": "Agile emphasizes frequent testing and iterations.",
    "answerDescription": "Agile improves product quality through continuous integration, testing, and stakeholder feedback at each iteration."
  },
  {
    "id": "agile_241",
    "question": "How does Agile enhance team collaboration?",
    "options": [
      { "id": "option_1", "text": "By assigning work without team input", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the need for communication", "isCorrect": false },
      { "id": "option_3", "text": "By promoting daily stand-ups and open communication", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging cross-functional teamwork", "isCorrect": false }
    ],
    "hint": "Agile encourages daily check-ins and transparent communication.",
    "answerDescription": "Daily stand-ups, sprint planning, and retrospectives in Agile improve team collaboration and transparency, fostering a more productive work environment."
  },
  {
    "id": "agile_242",
    "question": "Why is Agile development cost-effective?",
    "options": [
      { "id": "option_1", "text": "Because it eliminates all costs", "isCorrect": false },
      { "id": "option_2", "text": "Because it avoids planning expenses", "isCorrect": false },
      { "id": "option_3", "text": "Because it reduces waste and adapts to changes quickly", "isCorrect": true },
      { "id": "option_4", "text": "Because it minimizes developer salaries", "isCorrect": false }
    ],
    "hint": "Agile avoids unnecessary work by focusing on what matters most.",
    "answerDescription": "Agile reduces costs by prioritizing essential features, minimizing rework, and responding quickly to changing requirements."
  },
  {
    "id": "agile_243",
    "question": "What advantage does Agile provide in handling changing requirements?",
    "options": [
      { "id": "option_1", "text": "It prevents any changes once development starts", "isCorrect": false },
      { "id": "option_2", "text": "It requires all requirements to be defined upfront", "isCorrect": false },
      { "id": "option_3", "text": "It embraces change through adaptive planning", "isCorrect": true },
      { "id": "option_4", "text": "It avoids customer feedback to reduce changes", "isCorrect": false }
    ],
    "hint": "Agile is designed to accommodate evolving customer needs.",
    "answerDescription": "Agile allows flexibility by continuously refining requirements and adapting to changes through iterative development cycles."
  },
  {
    "id": "agile_244",
    "question": "How does Agile improve transparency in project management?",
    "options": [
      { "id": "option_1", "text": "By keeping project progress confidential", "isCorrect": false },
      { "id": "option_2", "text": "By limiting visibility to only senior management", "isCorrect": false },
      { "id": "option_3", "text": "By using visual tools like burndown charts and sprint boards", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding reporting progress until the end", "isCorrect": false }
    ],
    "hint": "Agile uses visual management tools to track progress.",
    "answerDescription": "Transparency in Agile is achieved through tools like sprint boards, burndown charts, and regular stand-up meetings, ensuring all stakeholders are informed."
  },
  {
    "id": "agile_245",
    "question": "Why do Agile teams have higher adaptability?",
    "options": [
      { "id": "option_1", "text": "Because they follow a fixed plan without changes", "isCorrect": false },
      { "id": "option_2", "text": "Because they rely on heavy documentation", "isCorrect": false },
      { "id": "option_3", "text": "Because they continuously inspect and adapt their processes", "isCorrect": true },
      { "id": "option_4", "text": "Because they only work on predefined tasks", "isCorrect": false }
    ],
    "hint": "Agile focuses on iterative learning and adjustments.",
    "answerDescription": "Agile teams adapt quickly by constantly evaluating their processes, gathering feedback, and making necessary adjustments to improve efficiency."
  },
  {
    "id": "agile_246",
    "question": "What is a key benefit of Agile retrospectives?",
    "options": [
      { "id": "option_1", "text": "They allow teams to assign blame", "isCorrect": false },
      { "id": "option_2", "text": "They help teams focus only on successes", "isCorrect": false },
      { "id": "option_3", "text": "They identify areas for continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "They replace all other team meetings", "isCorrect": false }
    ],
    "hint": "Retrospectives aim to refine team processes.",
    "answerDescription": "Agile retrospectives encourage teams to reflect on past performance, celebrate wins, and find ways to improve in the next sprint."
  },
  {
    "id": "agile_247",
    "question": "How does Agile development improve productivity?",
    "options": [
      { "id": "option_1", "text": "By eliminating project planning", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks without team input", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging collaboration", "isCorrect": false },
      { "id": "option_4", "text": "By fostering iterative work cycles and continuous feedback", "isCorrect": true }
    ],
    "hint": "Agile promotes teamwork and iterative progress to enhance productivity.",
    "answerDescription": "Agile increases productivity by enabling teams to work in iterative cycles, adjust plans quickly, and maintain open communication."
  },
  {
    "id": "agile_248",
    "question": "Why does Agile lead to faster problem resolution?",
    "options": [
      { "id": "option_1", "text": "Because it avoids discussing challenges", "isCorrect": false },
      { "id": "option_2", "text": "Because it limits communication to only managers", "isCorrect": false },
      { "id": "option_3", "text": "Because teams work in isolation", "isCorrect": false },
      { "id": "option_4", "text": "Because it encourages daily stand-ups and open discussions", "isCorrect": true }
    ],
    "hint": "Agile relies on frequent check-ins to quickly identify and address problems.",
    "answerDescription": "Agile teams resolve problems faster by holding daily stand-ups where they openly discuss and address roadblocks early."
  },
  {
    "id": "agile_249",
    "question": "How does Agile support continuous learning?",
    "options": [
      { "id": "option_1", "text": "By following a rigid, unchangeable process", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback and iteration", "isCorrect": false },
      { "id": "option_3", "text": "By completing projects without review", "isCorrect": false },
      { "id": "option_4", "text": "By using retrospectives to reflect on and improve processes", "isCorrect": true }
    ],
    "hint": "Agile teams review their work regularly to enhance learning.",
    "answerDescription": "Agile encourages continuous learning through retrospectives, which allow teams to assess their performance and refine their approach."
  },
  {
    "id": "agile_250",
    "question": "What makes Agile well-suited for innovative projects?",
    "options": [
      { "id": "option_1", "text": "Its strict adherence to fixed requirements", "isCorrect": false },
      { "id": "option_2", "text": "Its preference for long project timelines", "isCorrect": false },
      { "id": "option_3", "text": "Its resistance to change", "isCorrect": false },
      { "id": "option_4", "text": "Its ability to quickly adapt to new ideas and feedback", "isCorrect": true }
    ],
    "hint": "Agile embraces flexibility and rapid adjustments.",
    "answerDescription": "Agile is ideal for innovative projects as it allows teams to experiment, adapt, and iterate based on new insights and feedback."
  },
  {
    "id": "agile_251",
    "question": "Why do Agile teams deliver high-value features faster?",
    "options": [
      { "id": "option_1", "text": "By waiting until the end of the project to deliver any features", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring stakeholder input", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on technical perfection", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing and delivering essential features in iterations", "isCorrect": true }
    ],
    "hint": "Agile emphasizes delivering the most valuable features first.",
    "answerDescription": "Agile teams focus on developing and delivering the highest-value features early through iterative releases."
  },
  {
    "id": "agile_252",
    "question": "How does Agile help maintain work-life balance for teams?",
    "options": [
      { "id": "option_1", "text": "By encouraging long, uninterrupted work hours", "isCorrect": false },
      { "id": "option_2", "text": "By requiring team members to be always available", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding discussions about workload", "isCorrect": false },
      { "id": "option_4", "text": "By promoting sustainable work practices and iteration planning", "isCorrect": true }
    ],
    "hint": "Agile encourages sustainable pace and iteration planning.",
    "answerDescription": "Agile fosters a healthy work-life balance by allowing teams to plan work in iterations, preventing burnout and overwork."
  },
  {
    "id": "agile_253",
    "question": "Why is Agile particularly effective for distributed teams?",
    "options": [
      { "id": "option_1", "text": "Because it reduces communication among remote team members", "isCorrect": false },
      { "id": "option_2", "text": "Because it eliminates the need for collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Because it limits decision-making to only one team member", "isCorrect": false },
      { "id": "option_4", "text": "Because it encourages regular virtual meetings and transparency", "isCorrect": true }
    ],
    "hint": "Agile fosters collaboration even in remote teams.",
    "answerDescription": "Agile helps distributed teams stay connected through daily stand-ups, sprint planning, and transparent communication practices."
  },
  {
    "id": "agile_254",
    "question": "What is a key advantage of Agile's iterative approach?",
    "options": [
      { "id": "option_1", "text": "It requires all project details to be fixed from the beginning", "isCorrect": false },
      { "id": "option_2", "text": "It limits flexibility in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "It discourages ongoing feedback", "isCorrect": false },
      { "id": "option_4", "text": "It allows teams to continuously refine and improve the product", "isCorrect": true }
    ],
    "hint": "Agile is based on learning and adapting over time.",
    "answerDescription": "The iterative nature of Agile ensures that teams can refine and improve the product through continuous testing and feedback."
  },
  {
    "id": "agile_255",
    "question": "How does Agile contribute to better stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting interactions with stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "By postponing stakeholder involvement until the final release", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "By involving stakeholders in regular sprint reviews and feedback sessions", "isCorrect": true }
    ],
    "hint": "Agile values stakeholder collaboration throughout development.",
    "answerDescription": "Agile ensures better stakeholder engagement by including them in sprint reviews, discussions, and feedback loops."
  },
  {
    "id": "agile_256",
    "question": "Why is Agile useful for projects with uncertain requirements?",
    "options": [
      { "id": "option_1", "text": "Because it requires a detailed plan from the start", "isCorrect": false },
      { "id": "option_2", "text": "Because it avoids change once development begins", "isCorrect": false },
      { "id": "option_3", "text": "Because it limits scope flexibility", "isCorrect": false },
      { "id": "option_4", "text": "Because it embraces change and adapts to new information", "isCorrect": true }
    ],
    "hint": "Agile is designed to handle evolving project needs.",
    "answerDescription": "Agile is ideal for projects with changing requirements as it allows flexibility and adaptation through iterative development."
  },
  
  {
    "id": "agile_257",
    "question": "How does Agile support faster feedback loops?",
    "options": [
      { "id": "option_1", "text": "By implementing short iterations and regular reviews", "isCorrect": true },
      { "id": "option_2", "text": "By conducting feedback sessions only at the end", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By following a rigid, pre-defined process", "isCorrect": false }
    ],
    "hint": "Frequent iterations allow for timely adjustments.",
    "answerDescription": "Agile emphasizes short cycles and frequent feedback, ensuring that improvements happen throughout development."
  },
  {
    "id": "agile_258",
    "question": "How does Agile help in improving customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By delivering working software frequently", "isCorrect": true },
      { "id": "option_2", "text": "By limiting customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "By delaying feedback collection", "isCorrect": false },
      { "id": "option_4", "text": "By focusing solely on internal processes", "isCorrect": false }
    ],
    "hint": "Frequent deliveries help customers see progress and give feedback.",
    "answerDescription": "Agile ensures continuous delivery of valuable software, allowing for quick feedback and higher customer satisfaction."
  },
  {
    "id": "agile_259",
    "question": "What is a key benefit of Agile in managing changing requirements?",
    "options": [
      { "id": "option_1", "text": "It allows flexibility to adapt to changes quickly", "isCorrect": true },
      { "id": "option_2", "text": "It avoids incorporating any new requirements", "isCorrect": false },
      { "id": "option_3", "text": "It follows a rigid plan with no modifications", "isCorrect": false },
      { "id": "option_4", "text": "It freezes requirements early in the project", "isCorrect": false }
    ],
    "hint": "Agile welcomes change, even late in development.",
    "answerDescription": "One of Agileâ€™s strengths is its adaptability, allowing teams to adjust to evolving customer and market needs efficiently."
  },
  {
    "id": "agile_260",
    "question": "How does Agile improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "By encouraging regular communication and teamwork", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict hierarchical decision-making", "isCorrect": false },
      { "id": "option_3", "text": "By reducing team interactions to minimize conflicts", "isCorrect": false },
      { "id": "option_4", "text": "By allowing individuals to work in isolation", "isCorrect": false }
    ],
    "hint": "Agile teams collaborate through meetings and shared responsibility.",
    "answerDescription": "Agile fosters a collaborative environment where team members work closely, share insights, and improve efficiency."
  },
  {
    "id": "agile_261",
    "question": "Why does Agile lead to higher product quality?",
    "options": [
      { "id": "option_1", "text": "Because of continuous testing and integration", "isCorrect": true },
      { "id": "option_2", "text": "Because changes are avoided to maintain stability", "isCorrect": false },
      { "id": "option_3", "text": "Because teams focus only on documentation", "isCorrect": false },
      { "id": "option_4", "text": "Because testing is done only at the end of the project", "isCorrect": false }
    ],
    "hint": "Regular testing ensures issues are caught early.",
    "answerDescription": "Agile practices like continuous integration, frequent testing, and iterative development contribute to superior product quality."
  },
  {
    "id": "agile_262",
    "question": "What advantage does Agile provide in reducing project risks?",
    "options": [
      { "id": "option_1", "text": "By delivering work in small, manageable increments", "isCorrect": true },
      { "id": "option_2", "text": "By completing the entire project before review", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By sticking to a fixed plan regardless of challenges", "isCorrect": false }
    ],
    "hint": "Smaller iterations help identify risks early.",
    "answerDescription": "Agile reduces risks by breaking down projects into smaller parts, allowing teams to address potential problems early."
  },
  {
    "id": "agile_263",
    "question": "How does Agile enhance time-to-market efficiency?",
    "options": [
      { "id": "option_1", "text": "By delivering functional increments of the product quickly", "isCorrect": true },
      { "id": "option_2", "text": "By waiting until the full product is completed", "isCorrect": false },
      { "id": "option_3", "text": "By delaying customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing documentation over development", "isCorrect": false }
    ],
    "hint": "Releases occur frequently rather than all at once.",
    "answerDescription": "Agile ensures early and continuous delivery, helping businesses bring products to market faster."
  },
  {
    "id": "agile_264",
    "question": "What makes Agile development cost-effective?",
    "options": [
      { "id": "option_1", "text": "By reducing waste through continuous feedback and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding all changes after development starts", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on low-cost solutions", "isCorrect": false },
      { "id": "option_4", "text": "By extending project timelines", "isCorrect": false }
    ],
    "hint": "Iterative development prevents costly late-stage issues.",
    "answerDescription": "Agileâ€™s iterative nature minimizes waste, ensuring resources are efficiently used and reducing project costs."
  },
  {
    "id": "agile_265",
    "question": "How does Agile improve stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By involving stakeholders in regular feedback cycles", "isCorrect": true },
      { "id": "option_2", "text": "By limiting stakeholder involvement until project completion", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding communication with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on technical implementation", "isCorrect": false }
    ],
    "hint": "Frequent feedback ensures alignment with stakeholder needs.",
    "answerDescription": "Agile actively engages stakeholders through continuous collaboration, ensuring that the product aligns with their expectations."
  },
  {
    "id": "agile_266",
    "question": "What Agile practice helps improve team morale?",
    "options": [
      { "id": "option_1", "text": "Empowering teams to make decisions", "isCorrect": true },
      { "id": "option_2", "text": "Assigning strict roles with no flexibility", "isCorrect": false },
      { "id": "option_3", "text": "Discouraging team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating team retrospectives", "isCorrect": false }
    ],
    "hint": "Autonomous teams are more engaged and motivated.",
    "answerDescription": "Agile gives teams ownership over their work, boosting morale, engagement, and motivation."
  },
  {
    "id": "agile_267",
    "question": "Which Scrum role is responsible for removing impediments that hinder team progress?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role serves as a servant leader for the Scrum Team.",
    "answerDescription": "The Scrum Master facilitates Scrum processes and helps remove obstacles that impact team productivity."
  },
  {
    "id": "agile_268",
    "question": "What advantage does Agile provide in terms of project risk management?",
    "options": [
      { "id": "option_1", "text": "By postponing risk assessment until later stages", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating the need for risk management", "isCorrect": false },
      { "id": "option_3", "text": "By allowing early identification and mitigation of risks", "isCorrect": true },
      { "id": "option_4", "text": "By reducing flexibility to changes", "isCorrect": false }
    ],
    "hint": "Agile promotes early detection of potential project risks.",
    "answerDescription": "Agile helps manage risks by identifying them early in iterative cycles and adapting strategies accordingly."
  },
  {
    "id": "agile_269",
    "question": "Why does Agile improve team productivity?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict work schedules", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks without team input", "isCorrect": false },
      { "id": "option_3", "text": "By fostering collaboration and continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "By limiting team communication", "isCorrect": false }
    ],
    "hint": "Agile encourages teamwork and adaptation.",
    "answerDescription": "Agile improves productivity by empowering teams to collaborate, iterate, and optimize workflows efficiently."
  },
  {
    "id": "agile_270",
    "question": "What benefit does Agile offer regarding customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By delivering the product only at the end", "isCorrect": false },
      { "id": "option_2", "text": "By reducing customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring frequent delivery of valuable features", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding feedback from users", "isCorrect": false }
    ],
    "hint": "Agile prioritizes continuous delivery and feedback.",
    "answerDescription": "Agile keeps customers engaged by delivering value incrementally and incorporating their feedback into development."
  },
  {
    "id": "agile_271",
    "question": "How does Agile help with adapting to market changes?",
    "options": [
      { "id": "option_1", "text": "By following a rigid project plan", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding last-minute changes", "isCorrect": false },
      { "id": "option_3", "text": "By allowing flexibility and iterative development", "isCorrect": true },
      { "id": "option_4", "text": "By locking requirements upfront", "isCorrect": false }
    ],
    "hint": "Agile embraces change as a competitive advantage.",
    "answerDescription": "Agile enables businesses to respond to changing market conditions quickly through adaptability and iterative releases."
  },
  {
    "id": "agile_272",
    "question": "Why does Agile improve software quality?",
    "options": [
      { "id": "option_1", "text": "By reducing testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "By delaying testing until the final release", "isCorrect": false },
      { "id": "option_3", "text": "By incorporating continuous testing and feedback", "isCorrect": true },
      { "id": "option_4", "text": "By limiting quality assurance involvement", "isCorrect": false }
    ],
    "hint": "Agile emphasizes ongoing testing and improvement.",
    "answerDescription": "Agile enhances software quality by integrating continuous testing and feedback loops throughout development."
  },
  {
    "id": "agile_273",
    "question": "What is an economic advantage of Agile development?",
    "options": [
      { "id": "option_1", "text": "Increased costs due to frequent iterations", "isCorrect": false },
      { "id": "option_2", "text": "Longer project timelines due to constant changes", "isCorrect": false },
      { "id": "option_3", "text": "Reduced waste by focusing on delivering valuable features", "isCorrect": true },
      { "id": "option_4", "text": "Higher overhead costs due to continuous feedback", "isCorrect": false }
    ],
    "hint": "Agile minimizes unnecessary work and optimizes value delivery.",
    "answerDescription": "Agile reduces waste by emphasizing efficiency and prioritizing high-value tasks that benefit customers."
  },
  {
    "id": "agile_274",
    "question": "How does Agile contribute to faster time-to-market?",
    "options": [
      { "id": "option_1", "text": "By completing the entire product before release", "isCorrect": false },
      { "id": "option_2", "text": "By strictly adhering to pre-defined deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By delivering small, functional increments quickly", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding frequent product releases", "isCorrect": false }
    ],
    "hint": "Agile enables continuous releases instead of one big launch.",
    "answerDescription": "Agile accelerates time-to-market by focusing on incremental deliveries, ensuring faster and continuous product deployment."
  },
  {
    "id": "agile_275",
    "question": "What is a major communication benefit of Agile teams?",
    "options": [
      { "id": "option_1", "text": "Minimal interaction between team members", "isCorrect": false },
      { "id": "option_2", "text": "Relying solely on documentation for communication", "isCorrect": false },
      { "id": "option_3", "text": "Frequent and open team discussions", "isCorrect": true },
      { "id": "option_4", "text": "Top-down communication from managers only", "isCorrect": false }
    ],
    "hint": "Agile promotes collaborative discussions.",
    "answerDescription": "Agile teams improve communication through regular meetings, open discussions, and continuous collaboration."
  },
  {
    "id": "agile_276",
    "question": "Why does Agile development lead to higher team morale?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict supervision", "isCorrect": false },
      { "id": "option_2", "text": "By reducing autonomy in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "By empowering teams with ownership and collaboration", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging creativity and innovation", "isCorrect": false }
    ],
    "hint": "Agile encourages self-organizing teams.",
    "answerDescription": "Agile fosters higher morale by allowing teams to take ownership, collaborate effectively, and make decisions autonomously."
  },
  {
    "id": "agile_277",
    "question": "Which role in Scrum is primarily responsible for facilitating Scrum events?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role acts as a servant leader and coach for the team.",
    "answerDescription": "The Scrum Master ensures Scrum events occur and helps the team adhere to Agile principles."
  },
  {
    "id": "agile_278",
    "question": "What is the main objective of Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to each developer", "isCorrect": false },
      { "id": "option_2", "text": "To review the previous Sprint", "isCorrect": false },
      { "id": "option_3", "text": "To define what can be delivered in the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To finalize the Product Backlog", "isCorrect": false }
    ],
    "hint": "This event sets the Sprint Goal and selects backlog items.",
    "answerDescription": "Sprint Planning helps the Scrum Team agree on work that can be completed in the upcoming Sprint."
  },
  {
    "id": "agile_279",
    "question": "What does the Scrum Team deliver at the end of each Sprint?",
    "options": [
      { "id": "option_1", "text": "A completed Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "A project plan for the next Sprint", "isCorrect": false },
      { "id": "option_3", "text": "A potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "A final release of the product", "isCorrect": false }
    ],
    "hint": "The focus is on delivering working software frequently.",
    "answerDescription": "The increment is a working product update that meets the Definition of Done and can potentially be released."
  },
  {
    "id": "agile_280",
    "question": "Which artifact in Scrum represents the work required to create a product?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact contains all desired features and improvements.",
    "answerDescription": "The Product Backlog is an ordered list of everything needed in the product, managed by the Product Owner."
  },
  {
    "id": "agile_281",
    "question": "Which Scrum event is conducted daily to align team members?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This meeting is limited to 15 minutes.",
    "answerDescription": "The Daily Scrum helps the team synchronize work and address any blockers."
  },
  {
    "id": "agile_282",
    "question": "What is the role of the Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "To oversee the Scrum process", "isCorrect": false },
      { "id": "option_2", "text": "To define the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To deliver a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "To approve changes requested by stakeholders", "isCorrect": false }
    ],
    "hint": "They are self-organizing and accountable for delivering work.",
    "answerDescription": "The Development Team is responsible for executing work and delivering high-quality increments each Sprint."
  },
  {
    "id": "agile_283",
    "question": "Which Scrum event allows stakeholders to inspect the product and provide feedback?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Daily Scrum", "isCorrect": false }
    ],
    "hint": "This event occurs at the end of the Sprint.",
    "answerDescription": "During the Sprint Review, the team demonstrates completed work to stakeholders for feedback."
  },
  {
    "id": "agile_284",
    "question": "What is the purpose of the Definition of Done in Scrum?",
    "options": [
      { "id": "option_1", "text": "To describe the tasks assigned to each team member", "isCorrect": false },
      { "id": "option_2", "text": "To establish project deadlines", "isCorrect": false },
      { "id": "option_3", "text": "To ensure transparency on when work is considered complete", "isCorrect": true },
      { "id": "option_4", "text": "To track bugs and errors in the project", "isCorrect": false }
    ],
    "hint": "This defines the criteria for work to be considered finished.",
    "answerDescription": "The Definition of Done ensures that all completed work meets quality and acceptance criteria before being considered complete."
  },
  {
    "id": "agile_285",
    "question": "Which Scrum event is focused on improving the process for future Sprints?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_4", "text": "Daily Scrum", "isCorrect": false }
    ],
    "hint": "This event encourages team members to reflect on their work and find improvements.",
    "answerDescription": "The Sprint Retrospective helps the team discuss what went well and what can be improved for future Sprints."
  },
  {
    "id": "agile_286",
    "question": "Who is responsible for ensuring that the Scrum Team follows Agile principles?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role removes impediments and ensures adherence to Scrum.",
    "answerDescription": "The Scrum Master is responsible for coaching the team, ensuring Agile principles are followed, and removing obstacles."
},
{
    "id": "agile_287",
    "question": "What is the primary responsibility of the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Managing the Scrum Team", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating daily stand-ups", "isCorrect": false },
      { "id": "option_3", "text": "Overseeing project budgets", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing the value of the product", "isCorrect": true }
    ],
    "hint": "This role focuses on delivering business value through backlog management.",
    "answerDescription": "The Product Owner is responsible for prioritizing the Product Backlog to ensure maximum value delivery."
  },
  {
    "id": "agile_288",
    "question": "Which of the following is an essential characteristic of a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Strict hierarchical structure", "isCorrect": false },
      { "id": "option_2", "text": "Following a waterfall approach", "isCorrect": false },
      { "id": "option_3", "text": "Depending on external approvals for tasks", "isCorrect": false },
      { "id": "option_4", "text": "Self-organizing and cross-functional", "isCorrect": true }
    ],
    "hint": "Scrum Teams manage their work independently.",
    "answerDescription": "A Scrum Team is self-organizing and cross-functional, meaning they collaborate and decide how to best achieve their goals."
  },
  {
    "id": "agile_289",
    "question": "What is the purpose of the Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To approve project deliverables", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the Product Owner's expectations are met", "isCorrect": false },
      { "id": "option_4", "text": "To provide a clear objective for the Sprint", "isCorrect": true }
    ],
    "hint": "This aligns the team toward a common outcome for the Sprint.",
    "answerDescription": "The Sprint Goal provides direction to the Scrum Team and helps measure Sprint success."
  },
  {
    "id": "agile_290",
    "question": "Which Scrum event is timeboxed to a maximum of three hours for a one-month Sprint?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": true }
    ],
    "hint": "This event involves stakeholders and team members reviewing the increment.",
    "answerDescription": "The Sprint Review is timeboxed to three hours for a one-month Sprint and involves demonstrating the increment to stakeholders."
  },
  {
    "id": "agile_291",
    "question": "How does the Scrum Master support the Development Team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "By approving Sprint Backlog items", "isCorrect": false },
      { "id": "option_3", "text": "By dictating the development process", "isCorrect": false },
      { "id": "option_4", "text": "By removing impediments and fostering self-organization", "isCorrect": true }
    ],
    "hint": "This role is a servant leader focused on team efficiency.",
    "answerDescription": "The Scrum Master ensures the Development Team can work efficiently by removing obstacles and promoting Agile practices."
  },
  {
    "id": "agile_292",
    "question": "Which artifact in Scrum ensures that all necessary work for the Sprint is visible?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": false },
      { "id": "option_3", "text": "Definition of Done", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Backlog", "isCorrect": true }
    ],
    "hint": "This artifact is created during Sprint Planning.",
    "answerDescription": "The Sprint Backlog contains all selected work for the Sprint and makes progress visible to the team."
  },
  {
    "id": "agile_293",
    "question": "Why is the Daily Scrum important in Agile development?",
    "options": [
      { "id": "option_1", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_2", "text": "To allow managers to oversee the teamâ€™s work", "isCorrect": false },
      { "id": "option_3", "text": "To review completed work from previous Sprints", "isCorrect": false },
      { "id": "option_4", "text": "To synchronize team activities and address impediments", "isCorrect": true }
    ],
    "hint": "This meeting is short and helps in collaboration.",
    "answerDescription": "The Daily Scrum helps the team coordinate their work, address obstacles, and ensure smooth progress."
  },
  {
    "id": "agile_294",
    "question": "What is an Increment in Scrum?",
    "options": [
      { "id": "option_1", "text": "A collection of unfinished user stories", "isCorrect": false },
      { "id": "option_2", "text": "A detailed project plan", "isCorrect": false },
      { "id": "option_3", "text": "A set of backlog items for the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "A usable, potentially shippable product output", "isCorrect": true }
    ],
    "hint": "This is the sum of all completed work in a Sprint.",
    "answerDescription": "An Increment is a working product update that meets the Definition of Done and is ready for release."
  },
  {
    "id": "agile_295",
    "question": "What is the maximum length of a Scrum Sprint?",
    "options": [
      { "id": "option_1", "text": "One year", "isCorrect": false },
      { "id": "option_2", "text": "Six months", "isCorrect": false },
      { "id": "option_3", "text": "Two months", "isCorrect": false },
      { "id": "option_4", "text": "One month", "isCorrect": true }
    ],
    "hint": "Scrum follows a short and iterative cycle for development.",
    "answerDescription": "The maximum length of a Sprint in Scrum is one month, but teams typically use shorter durations like two weeks."
  },
  {
    "id": "agile_296",
    "question": "What is the purpose of a Sprint Retrospective?",
    "options": [
      { "id": "option_1", "text": "To demonstrate the product increment", "isCorrect": false },
      { "id": "option_2", "text": "To refine the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To decide the next Sprint Goal", "isCorrect": false },
      { "id": "option_4", "text": "To reflect on and improve the team's processes", "isCorrect": true }
    ],
    "hint": "This event focuses on process improvement.",
    "answerDescription": "The Sprint Retrospective helps the team discuss what went well, what needs improvement, and how to enhance their work process."
},  {
    "id": "agile_297",
    "question": "Who is responsible for ensuring Scrum is understood and enacted?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role is often considered a servant leader.",
    "answerDescription": "The Scrum Master ensures that the Scrum framework is properly implemented and understood by the team."
  },
  {
    "id": "agile_298",
    "question": "Which Scrum event is focused on inspecting and adapting the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "Backlog Refinement", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This is an ongoing process rather than a formal Scrum event.",
    "answerDescription": "Backlog Refinement helps ensure the Product Backlog items are well-defined and prioritized for upcoming Sprints."
  },
  {
    "id": "agile_299",
    "question": "What is the purpose of a Definition of Done in Scrum?",
    "options": [
      { "id": "option_1", "text": "Ensuring work meets quality standards", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Creating a long-term project roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Approving user stories for release", "isCorrect": false }
    ],
    "hint": "This defines the criteria for work to be considered complete.",
    "answerDescription": "The Definition of Done ensures that all work is completed to the required standard before being considered finished."
  },
  {
    "id": "agile_300",
    "question": "Which role in Scrum is accountable for delivering a potentially releasable product increment?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role consists of professionals who build the product.",
    "answerDescription": "The Development Team is responsible for delivering a potentially shippable product increment at the end of each Sprint."
  },
  {
    "id": "agile_301",
    "question": "What is a key benefit of using Scrum for project management?",
    "options": [
      { "id": "option_1", "text": "Faster adaptability to changes", "isCorrect": true },
      { "id": "option_2", "text": "Detailed upfront planning", "isCorrect": false },
      { "id": "option_3", "text": "Strictly following predefined processes", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating the need for customer feedback", "isCorrect": false }
    ],
    "hint": "Scrum embraces iterative development.",
    "answerDescription": "Scrum allows teams to quickly adapt to changes by delivering small increments and continuously refining the product."
  },
  {
    "id": "agile_302",
    "question": "Which artifact in Scrum provides transparency into the work being done in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact is created during Sprint Planning.",
    "answerDescription": "The Sprint Backlog contains selected Product Backlog items and details the work needed to meet the Sprint Goal."
  },
  {
    "id": "agile_303",
    "question": "How often does the Daily Scrum occur?",
    "options": [
      { "id": "option_1", "text": "Every working day", "isCorrect": true },
      { "id": "option_2", "text": "Once per Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Twice per week", "isCorrect": false },
      { "id": "option_4", "text": "Only when issues arise", "isCorrect": false }
    ],
    "hint": "This meeting is a short, daily timeboxed event.",
    "answerDescription": "The Daily Scrum is held every working day to help the team synchronize and address potential blockers."
  },
  {
    "id": "agile_304",
    "question": "What is the timebox for a Sprint Planning meeting in a one-month Sprint?",
    "options": [
      { "id": "option_1", "text": "Eight hours", "isCorrect": true },
      { "id": "option_2", "text": "Four hours", "isCorrect": false },
      { "id": "option_3", "text": "Two hours", "isCorrect": false },
      { "id": "option_4", "text": "Twelve hours", "isCorrect": false }
    ],
    "hint": "This event is longer in a one-month Sprint compared to shorter Sprints.",
    "answerDescription": "For a one-month Sprint, Sprint Planning is timeboxed to a maximum of eight hours to ensure detailed planning."
  },
  {
    "id": "agile_305",
    "question": "Which event in Scrum is aimed at continuously improving team processes?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event happens at the end of every Sprint.",
    "answerDescription": "The Sprint Retrospective allows the team to reflect on their processes and identify ways to improve in the next Sprint."
  },
  {
    "id": "agile_306",
    "question": "What is a key responsibility of the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Managing the Product Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring team adherence to technical standards", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating Scrum events", "isCorrect": false },
      { "id": "option_4", "text": "Assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "This role focuses on maximizing value delivery.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing the Product Backlog to maximize product value."
},  {
    "id": "agile_307",
    "question": "What is the primary goal of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To discuss team performance", "isCorrect": false },
      { "id": "option_2", "text": "To inspect the Increment and gather feedback", "isCorrect": true },
      { "id": "option_3", "text": "To plan the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "To identify process improvements", "isCorrect": false }
    ],
    "hint": "This event helps stakeholders provide input on the product.",
    "answerDescription": "The Sprint Review is held to inspect the work done during the Sprint and gather feedback to adapt future work."
  },
  {
    "id": "agile_308",
    "question": "Which Scrum role is responsible for maximizing the value of the product?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role manages the Product Backlog.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing the Product Backlog to ensure maximum value delivery."
  },
  {
    "id": "agile_309",
    "question": "What happens if the work planned for a Sprint is not completed?",
    "options": [
      { "id": "option_1", "text": "The unfinished work is discarded", "isCorrect": false },
      { "id": "option_2", "text": "The work is returned to the Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "The Sprint is extended", "isCorrect": false },
      { "id": "option_4", "text": "The work is carried forward without review", "isCorrect": false }
    ],
    "hint": "Incomplete work is re-evaluated rather than automatically continued.",
    "answerDescription": "Unfinished work is placed back in the Product Backlog for reprioritization in future Sprints."
  },
  {
    "id": "agile_310",
    "question": "Which artifact in Scrum provides a single source of requirements for any changes?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact is managed by the Product Owner.",
    "answerDescription": "The Product Backlog is an ordered list of everything needed for the product, serving as the single source of requirements."
  },
  {
    "id": "agile_311",
    "question": "What is the timebox for a Sprint Retrospective in a one-month Sprint?",
    "options": [
      { "id": "option_1", "text": "Four hours", "isCorrect": false },
      { "id": "option_2", "text": "Three hours", "isCorrect": true },
      { "id": "option_3", "text": "One hour", "isCorrect": false },
      { "id": "option_4", "text": "Six hours", "isCorrect": false }
    ],
    "hint": "The timebox is shorter for shorter Sprints.",
    "answerDescription": "A Sprint Retrospective is timeboxed to three hours for a one-month Sprint to allow effective process improvement discussions."
  },
  {
    "id": "agile_312",
    "question": "What does the Scrum Master primarily focus on?",
    "options": [
      { "id": "option_1", "text": "Managing the Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating the Scrum process", "isCorrect": true },
      { "id": "option_3", "text": "Prioritizing the Product Backlog", "isCorrect": false },
      { "id": "option_4", "text": "Approving work completed", "isCorrect": false }
    ],
    "hint": "This role acts as a servant leader.",
    "answerDescription": "The Scrum Master ensures that Scrum is understood and enacted by facilitating events and removing impediments."
  },
  {
    "id": "agile_313",
    "question": "Who determines how much work can be completed in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": true },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This group actually performs the work.",
    "answerDescription": "The Development Team determines how much work they can complete in a Sprint based on their capacity and past performance."
  },
  {
    "id": "agile_314",
    "question": "Which Scrum event provides an opportunity for the team to reflect and improve?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This happens at the end of each Sprint.",
    "answerDescription": "The Sprint Retrospective allows the team to inspect and adapt their processes to improve in future Sprints."
  },
  {
    "id": "agile_315",
    "question": "What is a Scrum artifact that represents the work completed in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": true },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This is the sum of all completed Product Backlog items.",
    "answerDescription": "The Increment is the Scrum artifact that represents the work completed during a Sprint and must meet the Definition of Done."
  },
  {
    "id": "agile_316",
    "question": "Which role in Scrum is responsible for coaching the team on Agile practices?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role ensures that Scrum principles are followed.",
    "answerDescription": "The Scrum Master is responsible for coaching the team on Agile and Scrum best practices to improve collaboration and efficiency."
  },
  {
    "id": "agile_317",
    "question": "What is the purpose of the Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To review the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To inspect progress and adapt work", "isCorrect": true },
      { "id": "option_4", "text": "To discuss project budgeting", "isCorrect": false }
    ],
    "hint": "This event occurs daily and helps in synchronization.",
    "answerDescription": "The Daily Scrum allows the team to inspect progress, adapt plans, and align toward Sprint Goals."
  },
  {
    "id": "agile_318",
    "question": "Who is responsible for maintaining the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This person prioritizes work based on business value.",
    "answerDescription": "The Product Owner owns and manages the Product Backlog, ensuring it is refined and aligned with business goals."
  },
  {
    "id": "agile_319",
    "question": "What defines the work needed to complete a Product Backlog item?",
    "options": [
      { "id": "option_1", "text": "Sprint Goal", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Definition of Done", "isCorrect": true },
      { "id": "option_4", "text": "Release Plan", "isCorrect": false }
    ],
    "hint": "This ensures the quality and completeness of work.",
    "answerDescription": "The Definition of Done is a shared understanding of what it means for work to be complete, ensuring quality and consistency."
  },
  {
    "id": "agile_320",
    "question": "How does a Scrum Team measure its progress toward a Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "By tracking budget spent", "isCorrect": false },
      { "id": "option_2", "text": "By monitoring the burn-up chart", "isCorrect": false },
      { "id": "option_3", "text": "By inspecting the Sprint Backlog", "isCorrect": true },
      { "id": "option_4", "text": "By conducting stakeholder meetings", "isCorrect": false }
    ],
    "hint": "This artifact changes daily based on team progress.",
    "answerDescription": "The Sprint Backlog is regularly inspected to track progress toward the Sprint Goal and make necessary adjustments."
  },
  {
    "id": "agile_321",
    "question": "What is the primary accountability of the Development Team?",
    "options": [
      { "id": "option_1", "text": "Ensuring the budget is followed", "isCorrect": false },
      { "id": "option_2", "text": "Defining the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a potentially releasable Increment", "isCorrect": true },
      { "id": "option_4", "text": "Managing external stakeholder expectations", "isCorrect": false }
    ],
    "hint": "This is an essential part of Scrumâ€™s iterative delivery approach.",
    "answerDescription": "The Development Team is responsible for delivering a Done Increment that meets the Definition of Done."
  },
  {
    "id": "agile_322",
    "question": "Which event provides an opportunity for stakeholder feedback on the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Daily Scrum", "isCorrect": false }
    ],
    "hint": "This event occurs at the end of each Sprint.",
    "answerDescription": "The Sprint Review allows stakeholders to inspect the Increment and provide feedback to guide future development."
  },
  {
    "id": "agile_323",
    "question": "What happens during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "The Development Team assigns tasks to individuals", "isCorrect": false },
      { "id": "option_2", "text": "The Scrum Master creates a detailed project plan", "isCorrect": false },
      { "id": "option_3", "text": "The Scrum Team defines what will be done in the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders review the Product Backlog", "isCorrect": false }
    ],
    "hint": "This event results in a Sprint Backlog.",
    "answerDescription": "During Sprint Planning, the Scrum Team collaborates to define the work that will be completed in the Sprint."
  },
  {
    "id": "agile_324",
    "question": "Which Scrum artifact shows the real-time work remaining in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Increment", "isCorrect": false }
    ],
    "hint": "This artifact contains tasks selected for the Sprint.",
    "answerDescription": "The Sprint Backlog provides visibility into the work planned for the Sprint and updates dynamically as work progresses."
  },
  {
    "id": "agile_325",
    "question": "What is the role of the Scrum Master in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To dictate which work should be done", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To facilitate the meeting and ensure Scrum principles are followed", "isCorrect": true },
      { "id": "option_4", "text": "To finalize the Sprint Backlog", "isCorrect": false }
    ],
    "hint": "This person ensures that the meeting runs smoothly.",
    "answerDescription": "The Scrum Master helps guide Sprint Planning by facilitating discussions and ensuring adherence to Scrum principles."
  },
  {
    "id": "agile_326",
    "question": "What is the benefit of using Scrum artifacts?",
    "options": [
      { "id": "option_1", "text": "They eliminate the need for documentation", "isCorrect": false },
      { "id": "option_2", "text": "They help the team avoid unnecessary meetings", "isCorrect": false },
      { "id": "option_3", "text": "They provide transparency and shared understanding", "isCorrect": true },
      { "id": "option_4", "text": "They ensure work is assigned equally", "isCorrect": false }
    ],
    "hint": "These elements provide visibility into the process.",
    "answerDescription": "Scrum artifacts like the Product Backlog, Sprint Backlog, and Increment provide transparency, ensuring alignment and continuous improvement."
  },
  {
    "id": "agile_327",
    "question": "What is the primary purpose of the Sprint Retrospective?",
    "options": [
      { "id": "option_1", "text": "To refine the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "To evaluate stakeholder feedback", "isCorrect": false },
      { "id": "option_3", "text": "To review the completed Increment", "isCorrect": false },
      { "id": "option_4", "text": "To improve team processes and collaboration", "isCorrect": true }
    ],
    "hint": "This event focuses on continuous improvement.",
    "answerDescription": "The Sprint Retrospective helps the team identify improvements for future Sprints by reviewing what went well and what could be improved."
  },
  {
    "id": "agile_328",
    "question": "Who is responsible for ensuring that Scrum is understood and followed?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Project Manager", "isCorrect": false },
      { "id": "option_4", "text": "Scrum Master", "isCorrect": true }
    ],
    "hint": "This role serves as a facilitator and coach for the Scrum Team.",
    "answerDescription": "The Scrum Master is responsible for coaching the team and ensuring Scrum practices are properly implemented."
  },
  {
    "id": "agile_329",
    "question": "Which Scrum event is timeboxed and used to inspect and adapt the Increment?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": true }
    ],
    "hint": "This event allows stakeholders to provide feedback.",
    "answerDescription": "The Sprint Review provides an opportunity for stakeholders to inspect the Increment and adapt the Product Backlog."
  },
  {
    "id": "agile_330",
    "question": "What is the primary output of a Sprint?",
    "options": [
      { "id": "option_1", "text": "A refined Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "A detailed project report", "isCorrect": false },
      { "id": "option_3", "text": "An updated Sprint Backlog", "isCorrect": false },
      { "id": "option_4", "text": "A potentially shippable Increment", "isCorrect": true }
    ],
    "hint": "This should be in a releasable state by the end of the Sprint.",
    "answerDescription": "The goal of a Sprint is to deliver a potentially shippable Increment that meets the Definition of Done."
  },
  {
    "id": "agile_331",
    "question": "What does a Development Team use to track Sprint progress?",
    "options": [
      { "id": "option_1", "text": "Burndown Chart", "isCorrect": false },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Project Roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Backlog", "isCorrect": true }
    ],
    "hint": "This artifact includes selected Product Backlog items for the Sprint.",
    "answerDescription": "The Sprint Backlog contains the work items the team has committed to completing during the Sprint."
  },
  {
    "id": "agile_332",
    "question": "Which artifact provides transparency about the work remaining in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Release Plan", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Burndown Chart", "isCorrect": true }
    ],
    "hint": "This chart visually tracks work completion over time.",
    "answerDescription": "The Sprint Burndown Chart helps visualize progress toward the Sprint Goal by tracking work completed and remaining."
  },
  {
    "id": "agile_333",
    "question": "What is a key characteristic of a successful Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Strict hierarchy and assigned roles", "isCorrect": false },
      { "id": "option_2", "text": "Dependence on the Scrum Master for decisions", "isCorrect": false },
      { "id": "option_3", "text": "Minimal collaboration to avoid conflicts", "isCorrect": false },
      { "id": "option_4", "text": "Self-organization and cross-functionality", "isCorrect": true }
    ],
    "hint": "This characteristic ensures adaptability and effectiveness.",
    "answerDescription": "Scrum Teams are self-organizing and cross-functional, allowing them to make decisions and adapt quickly."
  },
  {
    "id": "agile_334",
    "question": "What happens if the Development Team cannot complete all items in the Sprint Backlog?",
    "options": [
      { "id": "option_1", "text": "The Sprint is extended until all tasks are finished", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner removes the remaining work", "isCorrect": false },
      { "id": "option_3", "text": "The Scrum Master reassigns work to ensure completion", "isCorrect": false },
      { "id": "option_4", "text": "The remaining items are reviewed and returned to the Product Backlog", "isCorrect": true }
    ],
    "hint": "Unfinished work is not carried over automatically.",
    "answerDescription": "Any unfinished work is returned to the Product Backlog for reprioritization in future Sprints."
  },
  {
    "id": "agile_335",
    "question": "How does the Scrum Team ensure that they deliver value every Sprint?",
    "options": [
      { "id": "option_1", "text": "By focusing only on stakeholder requests", "isCorrect": false },
      { "id": "option_2", "text": "By following a fixed, detailed project plan", "isCorrect": false },
      { "id": "option_3", "text": "By maximizing work in progress", "isCorrect": false },
      { "id": "option_4", "text": "By continuously inspecting and adapting their work", "isCorrect": true }
    ],
    "hint": "This principle ensures continuous improvement and alignment with goals.",
    "answerDescription": "Scrum Teams inspect and adapt regularly, allowing them to respond to changes and deliver value in each Sprint."
  },
  {
    "id": "agile_336",
    "question": "What is the main purpose of defining a Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "To assign work to each developer", "isCorrect": false },
      { "id": "option_2", "text": "To specify the exact number of tasks for the Sprint", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all work is completed within the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "To provide a shared objective that guides the Development Team", "isCorrect": true }
    ],
    "hint": "This helps align team efforts towards a common objective.",
    "answerDescription": "The Sprint Goal provides focus and direction, ensuring that the team works toward a common outcome."
  },
  {
    "id": "agile_337",
    "question": "What is the primary responsibility of the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Maximizing the value of the product and managing the Product Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring the Development Team completes all assigned tasks", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating Scrum events and removing team impediments", "isCorrect": false },
      { "id": "option_4", "text": "Supervising the work of the Scrum Team", "isCorrect": false }
    ],
    "hint": "This role focuses on value delivery and backlog management.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing backlog items to maximize the product's value."
  },
  {
    "id": "agile_338",
    "question": "Which Scrum event is designed to optimize team collaboration and performance?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event helps the team continuously improve their process.",
    "answerDescription": "The Sprint Retrospective allows the Scrum Team to reflect on their work and identify areas for improvement."
  },
  {
    "id": "agile_339",
    "question": "What is the role of the Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Self-organizing and responsible for delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Managing the Product Backlog and stakeholder expectations", "isCorrect": false },
      { "id": "option_3", "text": "Supervising the work of individual team members", "isCorrect": false },
      { "id": "option_4", "text": "Approving all Sprint Backlog items before development starts", "isCorrect": false }
    ],
    "hint": "This team delivers increments and follows self-organization principles.",
    "answerDescription": "The Development Team is cross-functional and works together to deliver high-quality increments."
  },
  {
    "id": "agile_340",
    "question": "Which Scrum artifact defines the work planned for the Sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Product Roadmap", "isCorrect": false },
      { "id": "option_3", "text": "Definition of Done", "isCorrect": false },
      { "id": "option_4", "text": "Release Plan", "isCorrect": false }
    ],
    "hint": "This artifact is created during Sprint Planning.",
    "answerDescription": "The Sprint Backlog consists of selected Product Backlog items and a plan for delivering them."
  },
  {
    "id": "agile_341",
    "question": "What is the purpose of the Definition of Done in Scrum?",
    "options": [
      { "id": "option_1", "text": "Ensuring quality and consistency in product increments", "isCorrect": true },
      { "id": "option_2", "text": "Defining the scope of the entire project", "isCorrect": false },
      { "id": "option_3", "text": "Determining the order of backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Setting the release schedule for the product", "isCorrect": false }
    ],
    "hint": "This ensures that each increment meets quality standards.",
    "answerDescription": "The Definition of Done provides a shared understanding of what it means for work to be complete."
  },
  {
    "id": "agile_342",
    "question": "Why is the Sprint Goal important in Scrum?",
    "options": [
      { "id": "option_1", "text": "It provides focus and alignment for the Development Team", "isCorrect": true },
      { "id": "option_2", "text": "It dictates the exact features that must be delivered", "isCorrect": false },
      { "id": "option_3", "text": "It serves as a contract between the team and stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "It determines the teamâ€™s velocity", "isCorrect": false }
    ],
    "hint": "This goal helps the team stay aligned on objectives.",
    "answerDescription": "The Sprint Goal provides direction and a shared objective for the Scrum Team during a Sprint."
  },
  {
    "id": "agile_343",
    "question": "Which Scrum role acts as a servant leader for the team?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Project Manager", "isCorrect": false },
      { "id": "option_4", "text": "Development Team Lead", "isCorrect": false }
    ],
    "hint": "This role facilitates Scrum practices and removes impediments.",
    "answerDescription": "The Scrum Master serves the team by coaching, facilitating Scrum events, and helping remove obstacles."
  },
  {
    "id": "agile_344",
    "question": "How does Scrum promote transparency?",
    "options": [
      { "id": "option_1", "text": "By ensuring all Scrum artifacts and progress are visible", "isCorrect": true },
      { "id": "option_2", "text": "By requiring daily reports from the Development Team", "isCorrect": false },
      { "id": "option_3", "text": "By assigning a supervisor to monitor team performance", "isCorrect": false },
      { "id": "option_4", "text": "By creating detailed project documentation", "isCorrect": false }
    ],
    "hint": "Scrum artifacts and events contribute to visibility.",
    "answerDescription": "Transparency in Scrum is achieved through artifacts like the Product Backlog, Sprint Backlog, and open communication in events."
  },
  {
    "id": "agile_345",
    "question": "What is the expected outcome of a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Feedback on the Increment and adjustments to the Product Backlog", "isCorrect": true },
      { "id": "option_2", "text": "A final report on the entire project", "isCorrect": false },
      { "id": "option_3", "text": "Approval of the next Sprint's tasks", "isCorrect": false },
      { "id": "option_4", "text": "Presentation of team performance metrics", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to inspect and adapt.",
    "answerDescription": "The Sprint Review provides an opportunity for stakeholders to inspect the Increment and provide feedback."
  },
 {
    "id": "agile_346",
    "question": "What should happen if new work is discovered during a Sprint?",
    "options": [
      { "id": "option_1", "text": "It is discussed and potentially added to the Sprint Backlog", "isCorrect": true },
      { "id": "option_2", "text": "The Sprint is extended to accommodate the new work", "isCorrect": false },
      { "id": "option_3", "text": "The Scrum Master decides whether to include it", "isCorrect": false },
      { "id": "option_4", "text": "The new work is automatically pushed to the next Sprint", "isCorrect": false }
    ],
    "hint": "Changes should be evaluated and managed within the Sprint.",
    "answerDescription": "The Development Team and Product Owner assess new work to determine if it should be included in the Sprint."
},
{
    "id": "agile_347",
    "question": "Which Scrum artifact provides transparency about work planned for the Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact is created during Sprint Planning and guides the team's work.",
    "answerDescription": "The Sprint Backlog contains selected Product Backlog items and the team's plan to achieve the Sprint Goal."
  },
  {
    "id": "agile_348",
    "question": "Who is responsible for managing the Sprint Backlog in Scrum?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": true },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role is responsible for executing the work planned in the Sprint.",
    "answerDescription": "The Development Team owns the Sprint Backlog and updates it as work progresses."
  },
  {
    "id": "agile_349",
    "question": "What is the main focus of the Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "Updating stakeholders on project progress", "isCorrect": false },
      { "id": "option_2", "text": "Inspecting progress toward the Sprint Goal and planning the next day's work", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to Development Team members", "isCorrect": false },
      { "id": "option_4", "text": "Finalizing the Sprint Review agenda", "isCorrect": false }
    ],
    "hint": "This event is a short meeting that helps the team stay aligned.",
    "answerDescription": "The Daily Scrum allows the team to inspect progress, discuss obstacles, and adjust their plan."
  },
  {
    "id": "agile_350",
    "question": "What is a key characteristic of a successful Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Following strict hierarchical roles", "isCorrect": false },
      { "id": "option_2", "text": "Being self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_3", "text": "Having a designated team lead for decision-making", "isCorrect": false },
      { "id": "option_4", "text": "Receiving direct instructions from the Scrum Master", "isCorrect": false }
    ],
    "hint": "This characteristic allows the team to take ownership of their work.",
    "answerDescription": "A self-organizing, cross-functional team collaborates to deliver high-quality increments."
  },
  {
    "id": "agile_351",
    "question": "What is the purpose of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Assessing team performance and productivity", "isCorrect": false },
      { "id": "option_2", "text": "Gathering feedback on the Increment and adapting the Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Approving or rejecting Sprint Backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Discussing the team's velocity for future planning", "isCorrect": false }
    ],
    "hint": "This event helps inspect the Increment and guide future work.",
    "answerDescription": "The Sprint Review enables collaboration between the Scrum Team and stakeholders to refine the product direction."
  },
  {
    "id": "agile_352",
    "question": "Which Scrum role ensures that Scrum is understood and followed?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role acts as a coach and facilitator in Scrum.",
    "answerDescription": "The Scrum Master helps teams understand and implement Scrum principles effectively."
  },
  {
    "id": "agile_353",
    "question": "How does the Product Owner prioritize the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "By following a fixed sequence of features", "isCorrect": false },
      { "id": "option_2", "text": "Based on value, risk, and business needs", "isCorrect": true },
      { "id": "option_3", "text": "By considering only the team's capacity", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring all tasks have equal priority", "isCorrect": false }
    ],
    "hint": "Prioritization in Scrum is based on maximizing value.",
    "answerDescription": "The Product Owner continuously refines the backlog to ensure the most valuable work is completed first."
  },
  {
    "id": "agile_354",
    "question": "Which artifact provides a real-time measure of the work completed?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": true },
      { "id": "option_3", "text": "Definition of Ready", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Goal", "isCorrect": false }
    ],
    "hint": "This artifact is the sum of all completed Product Backlog items.",
    "answerDescription": "The Increment is the potentially shippable product that results from completing Sprint Backlog items."
  },
  {
    "id": "agile_355",
    "question": "What does the Scrum Guide emphasize as critical to success?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to fixed project plans", "isCorrect": false },
      { "id": "option_2", "text": "Empirical process control, transparency, and adaptation", "isCorrect": true },
      { "id": "option_3", "text": "Detailed upfront documentation", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding change requests during Sprints", "isCorrect": false }
    ],
    "hint": "Scrum is based on learning and adapting to changing conditions.",
    "answerDescription": "Scrum relies on empirical process control, which includes transparency, inspection, and adaptation to continuously improve."
  },
  {
    "id": "agile_356",
    "question": "Why is a cross-functional team important in Scrum?",
    "options": [
      { "id": "option_1", "text": "To ensure work is divided strictly by specialty", "isCorrect": false },
      { "id": "option_2", "text": "To allow the team to complete all aspects of work needed for an Increment", "isCorrect": true },
      { "id": "option_3", "text": "To allow different departments to contribute their expertise separately", "isCorrect": false },
      { "id": "option_4", "text": "To have specialists who focus only on their specific tasks", "isCorrect": false }
    ],
    "hint": "A well-rounded team should be capable of delivering an Increment independently.",
    "answerDescription": "A cross-functional Scrum Team has all the skills necessary to develop a working product Increment without external dependencies."
},  {
    "id": "agile_357",
    "question": "What is the primary responsibility of the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events", "isCorrect": false },
      { "id": "option_2", "text": "Managing team workflow", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing the value of the product", "isCorrect": true },
      { "id": "option_4", "text": "Assigning tasks to the Development Team", "isCorrect": false }
    ],
    "hint": "This role ensures that the team is working on the most valuable features.",
    "answerDescription": "The Product Owner is responsible for maximizing the value of the work done by the Development Team through backlog management."
  },
  {
    "id": "agile_358",
    "question": "Which event in Scrum is designed for inspecting and adapting the work done in the Sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event involves stakeholders and focuses on product improvement.",
    "answerDescription": "The Sprint Review provides an opportunity to inspect the Increment and adapt the Product Backlog based on feedback."
  },
  {
    "id": "agile_359",
    "question": "What is the purpose of the Definition of Done in Scrum?",
    "options": [
      { "id": "option_1", "text": "To define the scope of the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To determine the team's velocity", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all work meets the required quality standards", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks to team members", "isCorrect": false }
    ],
    "hint": "This concept ensures that each Increment is complete and releasable.",
    "answerDescription": "The Definition of Done is a shared understanding of what it means for work to be complete, ensuring transparency and quality."
  },
  {
    "id": "agile_360",
    "question": "What is the role of the Scrum Master during the Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To document individual team progress", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the team conducts the meeting effectively", "isCorrect": true },
      { "id": "option_4", "text": "To make decisions on work prioritization", "isCorrect": false }
    ],
    "hint": "This role ensures that the team remains aligned and self-organizing.",
    "answerDescription": "The Scrum Master ensures that the Daily Scrum happens, but the Development Team is responsible for conducting it."
  },
  {
    "id": "agile_361",
    "question": "Which artifact is updated continuously by the Development Team throughout the Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Increment", "isCorrect": false }
    ],
    "hint": "This artifact contains the selected Product Backlog items for the Sprint.",
    "answerDescription": "The Sprint Backlog is a living document that evolves as the team progresses through the Sprint."
  },
  {
    "id": "agile_362",
    "question": "Why is the Sprint Retrospective an important Scrum event?",
    "options": [
      { "id": "option_1", "text": "To review product functionality", "isCorrect": false },
      { "id": "option_2", "text": "To confirm backlog prioritization", "isCorrect": false },
      { "id": "option_3", "text": "To inspect and improve the team's processes", "isCorrect": true },
      { "id": "option_4", "text": "To finalize the Sprint Backlog for the next Sprint", "isCorrect": false }
    ],
    "hint": "This event helps the team become more effective over time.",
    "answerDescription": "The Sprint Retrospective allows the team to reflect on their work and improve their processes."
  },
  {
    "id": "agile_363",
    "question": "Which Scrum artifact represents the work that will likely be done in future Sprints?",
    "options": [
      { "id": "option_1", "text": "Increment", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Goal", "isCorrect": false }
    ],
    "hint": "This backlog is managed by the Product Owner and is refined continuously.",
    "answerDescription": "The Product Backlog contains a prioritized list of features and tasks that may be developed in future Sprints."
  },
  {
    "id": "agile_364",
    "question": "What is the purpose of a Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "To measure team velocity", "isCorrect": false },
      { "id": "option_2", "text": "To define individual responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "To provide a clear focus and objective for the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To list all tasks that need to be completed", "isCorrect": false }
    ],
    "hint": "This goal helps the team stay aligned with a common objective.",
    "answerDescription": "The Sprint Goal provides direction and helps guide the Development Team in their work during the Sprint."
  },
  {
    "id": "agile_365",
    "question": "How does the Scrum Team determine the work for a Sprint?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master assigns the work", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner decides on tasks", "isCorrect": false },
      { "id": "option_3", "text": "The Development Team selects work based on capacity and Sprint Goal", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders prioritize the work", "isCorrect": false }
    ],
    "hint": "The team is self-organizing and chooses their work collaboratively.",
    "answerDescription": "During Sprint Planning, the Development Team selects items from the Product Backlog to include in the Sprint based on capacity."
  },
  {
    "id": "agile_366",
    "question": "Which of the following is a characteristic of an effective Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Commanding and controlling the team", "isCorrect": false },
      { "id": "option_2", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating and removing impediments", "isCorrect": true },
      { "id": "option_4", "text": "Making product-related decisions", "isCorrect": false }
    ],
    "hint": "This role helps the team by supporting and coaching rather than directing.",
    "answerDescription": "A good Scrum Master focuses on enabling the team by facilitating discussions and removing roadblocks."
  }, {
    "id": "agile_367",
    "question": "Who is responsible for maintaining and prioritizing the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Product Owner", "isCorrect": true }
    ],
    "hint": "This person ensures the backlog is ordered to maximize product value.",
    "answerDescription": "The Product Owner is responsible for managing and prioritizing the Product Backlog to ensure alignment with business goals."
  },
  {
    "id": "agile_368",
    "question": "What is the maximum timebox for a Sprint Review in a one-month Sprint?",
    "options": [
      { "id": "option_1", "text": "1 hour", "isCorrect": false },
      { "id": "option_2", "text": "2 hours", "isCorrect": false },
      { "id": "option_3", "text": "3 hours", "isCorrect": false },
      { "id": "option_4", "text": "4 hours", "isCorrect": true }
    ],
    "hint": "The duration is proportional to the length of the Sprint.",
    "answerDescription": "For a one-month Sprint, the Sprint Review is timeboxed to a maximum of 4 hours to inspect the increment and gather feedback."
  },
  {
    "id": "agile_369",
    "question": "Which of the following is an artifact in Scrum?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master Role", "isCorrect": false },
      { "id": "option_4", "text": "Increment", "isCorrect": true }
    ],
    "hint": "This artifact represents all completed work at the end of a Sprint.",
    "answerDescription": "The Increment is a Scrum artifact that includes all the work completed in a Sprint that meets the Definition of Done."
  },
  {
    "id": "agile_370",
    "question": "What is the main objective of Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To review past Sprint results", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "To prepare the product release plan", "isCorrect": false },
      { "id": "option_4", "text": "To define what will be delivered in the Sprint", "isCorrect": true }
    ],
    "hint": "This event helps the team determine what they can achieve in a Sprint.",
    "answerDescription": "Sprint Planning sets the direction for the upcoming Sprint by defining the work that will be completed."
  },
  {
    "id": "agile_371",
    "question": "Which role ensures Scrum is understood and followed within the team?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Scrum Master", "isCorrect": true }
    ],
    "hint": "This role serves as a coach for the Scrum Team.",
    "answerDescription": "The Scrum Master is responsible for ensuring that Scrum is properly understood and implemented within the organization."
  },
  {
    "id": "agile_372",
    "question": "What is the purpose of the Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "To measure team performance", "isCorrect": false },
      { "id": "option_2", "text": "To replace the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To define the project deadline", "isCorrect": false },
      { "id": "option_4", "text": "To provide a clear objective for the Sprint", "isCorrect": true }
    ],
    "hint": "This helps the team stay focused on a shared objective.",
    "answerDescription": "The Sprint Goal provides the Development Team with a common purpose and direction for the Sprint."
  },
  {
    "id": "agile_373",
    "question": "Which Scrum event helps the team inspect their process and improve it?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": true }
    ],
    "hint": "This event focuses on continuous improvement.",
    "answerDescription": "The Sprint Retrospective allows the Scrum Team to inspect how they work together and make adjustments for future Sprints."
  },
  {
    "id": "agile_374",
    "question": "How does the Scrum Team determine the success of a Sprint?",
    "options": [
      { "id": "option_1", "text": "By the number of tasks completed", "isCorrect": false },
      { "id": "option_2", "text": "By meeting the original Sprint estimates", "isCorrect": false },
      { "id": "option_3", "text": "By delivering more than planned", "isCorrect": false },
      { "id": "option_4", "text": "By achieving the Sprint Goal", "isCorrect": true }
    ],
    "hint": "The focus is on delivering value, not just completing tasks.",
    "answerDescription": "Success in a Sprint is measured by whether the team achieves the Sprint Goal, not just by the number of tasks completed."
  },
  {
    "id": "agile_375",
    "question": "Which Scrum artifact ensures that the team works on the most valuable items first?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Goal", "isCorrect": false },
      { "id": "option_4", "text": "Product Backlog", "isCorrect": true }
    ],
    "hint": "This artifact is managed by the Product Owner and evolves continuously.",
    "answerDescription": "The Product Backlog is prioritized to ensure the team works on the highest-value features first."
  },
  {
    "id": "agile_376",
    "question": "What happens if the Sprint Goal is not met by the end of the Sprint?",
    "options": [
      { "id": "option_1", "text": "The Sprint is extended until the goal is achieved", "isCorrect": false },
      { "id": "option_2", "text": "The team is penalized for incomplete work", "isCorrect": false },
      { "id": "option_3", "text": "The remaining work is automatically carried over", "isCorrect": false },
      { "id": "option_4", "text": "The team inspects and adapts in the next Sprint", "isCorrect": true }
    ],
    "hint": "Scrum encourages continuous learning and improvement.",
    "answerDescription": "If the Sprint Goal is not met, the team reflects on what happened and makes improvements in the next Sprint."
  },
  {
    "id": "agile_377",
    "question": "Who is responsible for ensuring Scrum is understood and enacted correctly?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role facilitates Scrum adoption and removes impediments.",
    "answerDescription": "The Scrum Master is responsible for coaching the team and ensuring Scrum practices are properly followed."
  },
  {
    "id": "agile_378",
    "question": "Which event in Scrum is timeboxed and held daily to inspect progress?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event is also known as the daily stand-up.",
    "answerDescription": "The Daily Scrum is a 15-minute event where the Development Team synchronizes their work and plans for the day."
  },
  {
    "id": "agile_379",
    "question": "What is the key responsibility of the Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Deliver a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Define the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Approve user stories", "isCorrect": false },
      { "id": "option_4", "text": "Extend Sprint duration when needed", "isCorrect": false }
    ],
    "hint": "This team creates the working product during the Sprint.",
    "answerDescription": "The Development Team is responsible for building and delivering a potentially shippable product increment at the end of each Sprint."
  },
  {
    "id": "agile_380",
    "question": "Which artifact in Scrum provides visibility into the work to be completed in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Burn-down Chart", "isCorrect": false }
    ],
    "hint": "This artifact is created during Sprint Planning.",
    "answerDescription": "The Sprint Backlog contains all tasks and user stories the Development Team commits to completing during a Sprint."
  },
  {
    "id": "agile_381",
    "question": "Which role in Scrum is accountable for maximizing the value of the product?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role manages the Product Backlog and ensures alignment with business needs.",
    "answerDescription": "The Product Owner is responsible for defining the product vision and prioritizing the backlog to deliver maximum value."
  },
  {
    "id": "agile_382",
    "question": "What is the purpose of the Definition of Done (DoD) in Scrum?",
    "options": [
      { "id": "option_1", "text": "Ensure work meets a shared quality standard", "isCorrect": true },
      { "id": "option_2", "text": "Determine Sprint length", "isCorrect": false },
      { "id": "option_3", "text": "Measure team velocity", "isCorrect": false },
      { "id": "option_4", "text": "Replace acceptance criteria", "isCorrect": false }
    ],
    "hint": "This helps define when a product increment is considered complete.",
    "answerDescription": "The Definition of Done ensures consistency and quality by setting clear completion criteria for backlog items."
  },
  {
    "id": "agile_383",
    "question": "Which event allows the Scrum Team to inspect and adapt its working methods?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This event happens at the end of every Sprint and focuses on process improvements.",
    "answerDescription": "The Sprint Retrospective helps the Scrum Team reflect on their work and improve future processes."
  },
  {
    "id": "agile_384",
    "question": "What is the primary measure of progress in Scrum?",
    "options": [
      { "id": "option_1", "text": "Working product increment", "isCorrect": true },
      { "id": "option_2", "text": "Number of completed tasks", "isCorrect": false },
      { "id": "option_3", "text": "Adherence to project plans", "isCorrect": false },
      { "id": "option_4", "text": "Team's velocity", "isCorrect": false }
    ],
    "hint": "Scrum focuses on delivering value, not just completing tasks.",
    "answerDescription": "The primary measure of progress in Scrum is delivering a working product increment at the end of each Sprint."
  },
  {
    "id": "agile_385",
    "question": "Which Scrum artifact helps track progress toward the Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "Burn-down Chart", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_4", "text": "Increment", "isCorrect": false }
    ],
    "hint": "This chart shows the remaining work in a Sprint over time.",
    "answerDescription": "The Burn-down Chart visually represents the amount of work left to achieve the Sprint Goal, helping teams track progress."
  },
  {
    "id": "agile_386",
    "question": "Which Scrum role collaborates with stakeholders to refine the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Business Analyst", "isCorrect": false }
    ],
    "hint": "This role is responsible for defining and prioritizing backlog items.",
    "answerDescription": "The Product Owner works with stakeholders to refine the Product Backlog, ensuring the most valuable features are prioritized."
  },  {
    "id": "agile_387",
    "question": "Which Scrum event is held at the beginning of each Sprint to define the work to be done?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": true },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event helps the team decide what can be delivered in the next Sprint.",
    "answerDescription": "Sprint Planning is conducted at the start of a Sprint to determine the work that will be accomplished."
  },
  {
    "id": "agile_388",
    "question": "Which Scrum artifact contains all user stories and work items that need to be completed?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Burn-down Chart", "isCorrect": false }
    ],
    "hint": "This artifact is managed by the Product Owner.",
    "answerDescription": "The Product Backlog is an ordered list of all necessary work for the product, maintained by the Product Owner."
  },
  {
    "id": "agile_389",
    "question": "What does the Sprint Goal represent in Scrum?",
    "options": [
      { "id": "option_1", "text": "A summary of completed work", "isCorrect": false },
      { "id": "option_2", "text": "A guiding objective for the Sprint", "isCorrect": true },
      { "id": "option_3", "text": "A commitment to deliver specific tasks", "isCorrect": false },
      { "id": "option_4", "text": "A detailed plan for the Sprint", "isCorrect": false }
    ],
    "hint": "It provides a unifying direction for the team during a Sprint.",
    "answerDescription": "The Sprint Goal helps the team stay focused on a clear objective, aligning work towards a common purpose."
  },
  {
    "id": "agile_390",
    "question": "Which role in Scrum is primarily responsible for removing impediments?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_3", "text": "Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role acts as a servant leader to support the Development Team.",
    "answerDescription": "The Scrum Master ensures that obstacles are removed so the team can work efficiently."
  },
  {
    "id": "agile_391",
    "question": "What is the key focus of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Evaluating team performance", "isCorrect": false },
      { "id": "option_2", "text": "Demonstrating the Increment", "isCorrect": true },
      { "id": "option_3", "text": "Identifying process improvements", "isCorrect": false },
      { "id": "option_4", "text": "Defining Sprint backlog items", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to see what has been built.",
    "answerDescription": "The Sprint Review is an event where the Scrum Team showcases the completed work to stakeholders for feedback."
  },
  {
    "id": "agile_392",
    "question": "Which metric in Scrum is used to measure the amount of work completed in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Burn-up Chart", "isCorrect": false },
      { "id": "option_2", "text": "Velocity", "isCorrect": true },
      { "id": "option_3", "text": "Cycle Time", "isCorrect": false },
      { "id": "option_4", "text": "Cumulative Flow Diagram", "isCorrect": false }
    ],
    "hint": "This metric is often used to predict future Sprints.",
    "answerDescription": "Velocity is the amount of work completed in a Sprint, helping teams estimate future capacity."
  },
  {
    "id": "agile_393",
    "question": "Which event allows the Development Team to inspect their work and adapt their plan?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event happens every day and is timeboxed to 15 minutes.",
    "answerDescription": "The Daily Scrum helps the Development Team inspect their progress and adjust their work plan as needed."
  },
  {
    "id": "agile_394",
    "question": "What is the purpose of Backlog Refinement in Scrum?",
    "options": [
      { "id": "option_1", "text": "Finalizing the Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Clarifying and breaking down backlog items", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_4", "text": "Measuring Sprint velocity", "isCorrect": false }
    ],
    "hint": "This helps prepare the backlog for upcoming Sprints.",
    "answerDescription": "Backlog Refinement is an ongoing process where the team discusses and clarifies backlog items to ensure they are ready for future Sprints."
  },
  {
    "id": "agile_395",
    "question": "What is a characteristic of a well-formed Scrum Team?",
    "options": [
      { "id": "option_1", "text": "A fixed hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "Self-organization", "isCorrect": true },
      { "id": "option_3", "text": "Strict adherence to deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Separation of roles in execution", "isCorrect": false }
    ],
    "hint": "A key principle of Scrum is that teams manage their own work.",
    "answerDescription": "Scrum Teams are self-organizing, meaning they decide how best to accomplish their work without external direction."
  },
  {
    "id": "agile_396",
    "question": "Which Scrum artifact represents the sum of all completed backlog items?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This represents the output of a Sprint.",
    "answerDescription": "The Increment includes all completed work items that meet the Definition of Done and are ready for release."
  },  {
    "id": "agile_397",
    "question": "Which Scrum role is responsible for maximizing the value of the product?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role manages the Product Backlog and ensures the right work is prioritized.",
    "answerDescription": "The Product Owner is responsible for ensuring that the team is working on the most valuable tasks for the product."
  },
  {
    "id": "agile_398",
    "question": "What does the term 'Definition of Done' refer to in Scrum?",
    "options": [
      { "id": "option_1", "text": "A list of requirements for backlog items", "isCorrect": false },
      { "id": "option_2", "text": "The completion of Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "A shared agreement on when work is considered complete", "isCorrect": true },
      { "id": "option_4", "text": "A guideline for prioritizing backlog items", "isCorrect": false }
    ],
    "hint": "It helps ensure consistency in work completion criteria.",
    "answerDescription": "The Definition of Done ensures that all completed work meets quality standards before it is considered finished."
  },
  {
    "id": "agile_399",
    "question": "Which Scrum event is focused on identifying process improvements for future Sprints?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": true },
      { "id": "option_4", "text": "Daily Scrum", "isCorrect": false }
    ],
    "hint": "This event happens at the end of each Sprint and focuses on team improvements.",
    "answerDescription": "The Sprint Retrospective is a meeting where the team reflects on their process and makes adjustments for the next Sprint."
  },
  {
    "id": "agile_400",
    "question": "What is the main purpose of the Sprint Backlog?",
    "options": [
      { "id": "option_1", "text": "To store all user requirements", "isCorrect": false },
      { "id": "option_2", "text": "To list items for the next release", "isCorrect": false },
      { "id": "option_3", "text": "To outline work planned for the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To record daily progress updates", "isCorrect": false }
    ],
    "hint": "It is a subset of the Product Backlog selected for the Sprint.",
    "answerDescription": "The Sprint Backlog consists of the tasks the Development Team commits to completing within a Sprint."
  },
  {
    "id": "agile_401",
    "question": "What does the term 'Increment' refer to in Scrum?",
    "options": [
      { "id": "option_1", "text": "A set of completed user stories", "isCorrect": false },
      { "id": "option_2", "text": "A list of remaining tasks in the backlog", "isCorrect": false },
      { "id": "option_3", "text": "A potentially shippable product update", "isCorrect": true },
      { "id": "option_4", "text": "A collection of Sprint goals", "isCorrect": false }
    ],
    "hint": "It represents the sum of all completed work that meets the Definition of Done.",
    "answerDescription": "The Increment is the outcome of a Sprint that adds value and is potentially releasable."
  },
  {
    "id": "agile_402",
    "question": "Which Scrum role ensures that the Development Team follows Agile practices?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_4", "text": "Team Lead", "isCorrect": false }
    ],
    "hint": "This role acts as a servant leader and coach.",
    "answerDescription": "The Scrum Master is responsible for ensuring that the team adheres to Scrum principles and removes impediments."
  },
  {
    "id": "agile_403",
    "question": "How often is the Daily Scrum held?",
    "options": [
      { "id": "option_1", "text": "Once per Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Twice a week", "isCorrect": false },
      { "id": "option_3", "text": "Every day", "isCorrect": true },
      { "id": "option_4", "text": "Every other day", "isCorrect": false }
    ],
    "hint": "This event is a quick check-in that happens regularly.",
    "answerDescription": "The Daily Scrum is a 15-minute meeting held every day to synchronize team efforts and identify obstacles."
  },
  {
    "id": "agile_404",
    "question": "What is a key characteristic of an effective Product Backlog?",
    "options": [
      { "id": "option_1", "text": "It contains only high-priority items", "isCorrect": false },
      { "id": "option_2", "text": "It is fixed for the entire project", "isCorrect": false },
      { "id": "option_3", "text": "It evolves based on business needs", "isCorrect": true },
      { "id": "option_4", "text": "It is managed solely by the Development Team", "isCorrect": false }
    ],
    "hint": "This artifact adapts to changes and is constantly refined.",
    "answerDescription": "The Product Backlog is a living document that changes as new requirements emerge."
  },
  {
    "id": "agile_405",
    "question": "What is the main benefit of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "It ensures the team stays on schedule", "isCorrect": false },
      { "id": "option_2", "text": "It identifies areas for team improvement", "isCorrect": false },
      { "id": "option_3", "text": "It provides feedback on the product increment", "isCorrect": true },
      { "id": "option_4", "text": "It allows team members to assign tasks", "isCorrect": false }
    ],
    "hint": "This event helps stakeholders understand the latest product updates.",
    "answerDescription": "The Sprint Review allows the team to showcase the Increment and gather feedback from stakeholders."
  },
  {
    "id": "agile_406",
    "question": "Which activity in Scrum helps ensure the Product Backlog is up to date and refined?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Planning", "isCorrect": false }
    ],
    "hint": "This activity ensures backlog items are ready for future Sprints.",
    "answerDescription": "Backlog Refinement is a continuous process that ensures backlog items are clear, detailed, and prioritized."
  }, {
    "id": "agile_407",
    "question": "Who is responsible for maintaining the Product Backlog in Scrum?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Product Owner", "isCorrect": true }
    ],
    "hint": "This role prioritizes and manages backlog items to maximize value.",
    "answerDescription": "The Product Owner is responsible for defining and refining the Product Backlog to align with business goals."
  },
  {
    "id": "agile_408",
    "question": "Which Scrum event ensures that team members synchronize their work daily?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Daily Scrum", "isCorrect": true }
    ],
    "hint": "This event is held every day for a short duration.",
    "answerDescription": "The Daily Scrum is a 15-minute meeting where the Development Team aligns on progress and discusses impediments."
  },
  {
    "id": "agile_409",
    "question": "What is the primary goal of Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To refine backlog items", "isCorrect": false },
      { "id": "option_2", "text": "To track team performance", "isCorrect": false },
      { "id": "option_3", "text": "To present the Increment", "isCorrect": false },
      { "id": "option_4", "text": "To define the work for the upcoming Sprint", "isCorrect": true }
    ],
    "hint": "This event sets the direction for the next iteration.",
    "answerDescription": "Sprint Planning involves selecting backlog items and breaking them down into tasks to be completed in the Sprint."
  },
  {
    "id": "agile_410",
    "question": "Which artifact in Scrum represents the evolving list of all work needed for the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": false },
      { "id": "option_3", "text": "Definition of Done", "isCorrect": false },
      { "id": "option_4", "text": "Product Backlog", "isCorrect": true }
    ],
    "hint": "This artifact is continuously updated and refined.",
    "answerDescription": "The Product Backlog is a dynamic list of features, enhancements, and fixes needed for the product."
  },
  {
    "id": "agile_411",
    "question": "Which Scrum role facilitates team collaboration and removes impediments?",
    "options": [
      { "id": "option_1", "text": "Development Team", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Project Manager", "isCorrect": false },
      { "id": "option_4", "text": "Scrum Master", "isCorrect": true }
    ],
    "hint": "This role acts as a servant leader for the team.",
    "answerDescription": "The Scrum Master ensures that the team follows Scrum principles and helps remove obstacles that hinder progress."
  },
  {
    "id": "agile_412",
    "question": "What is the outcome of a Sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "A detailed project report", "isCorrect": false },
      { "id": "option_2", "text": "An updated Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "A new Sprint goal", "isCorrect": false },
      { "id": "option_4", "text": "A potentially shippable Increment", "isCorrect": true }
    ],
    "hint": "This outcome should meet the Definition of Done.",
    "answerDescription": "The Increment is the sum of completed work in a Sprint that is potentially releasable."
  },
  {
    "id": "agile_413",
    "question": "What is the primary purpose of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To evaluate team performance", "isCorrect": false },
      { "id": "option_2", "text": "To refine backlog items", "isCorrect": false },
      { "id": "option_3", "text": "To discuss process improvements", "isCorrect": false },
      { "id": "option_4", "text": "To inspect the Increment and gather feedback", "isCorrect": true }
    ],
    "hint": "This event involves stakeholders and demonstrates the progress made.",
    "answerDescription": "The Sprint Review allows the team to showcase completed work and gather feedback from stakeholders."
  },
  {
    "id": "agile_414",
    "question": "Which event in Scrum focuses on improving team collaboration and workflow?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": true }
    ],
    "hint": "This event occurs at the end of each Sprint and focuses on team improvements.",
    "answerDescription": "The Sprint Retrospective allows the team to reflect on their process and make improvements for the next Sprint."
  },
  {
    "id": "agile_415",
    "question": "What is one key characteristic of Scrum Teams?",
    "options": [
      { "id": "option_1", "text": "They follow a strict hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "They work in silos", "isCorrect": false },
      { "id": "option_3", "text": "They rely on external task assignment", "isCorrect": false },
      { "id": "option_4", "text": "They are self-organizing", "isCorrect": true }
    ],
    "hint": "These teams have autonomy in deciding how to complete their work.",
    "answerDescription": "Scrum Teams are self-organizing, meaning they have the freedom to decide how best to accomplish their goals."
  },
  {
    "id": "agile_416",
    "question": "What is the time-boxed duration of a Sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "One year", "isCorrect": false },
      { "id": "option_2", "text": "One month", "isCorrect": false },
      { "id": "option_3", "text": "Six months", "isCorrect": false },
      { "id": "option_4", "text": "One to four weeks", "isCorrect": true }
    ],
    "hint": "This period is short and helps maintain focus on delivering value.",
    "answerDescription": "A Sprint in Scrum is a time-boxed event lasting between one and four weeks, ensuring frequent delivery of working software."
  }, {
    "id": "agile_417",
    "question": "What is the role of the Scrum Master in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Facilitates Scrum processes and removes impediments", "isCorrect": true },
      { "id": "option_2", "text": "Manages the team and assigns tasks", "isCorrect": false },
      { "id": "option_3", "text": "Controls the project timeline and budget", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizes the Product Backlog", "isCorrect": false }
    ],
    "hint": "This role is responsible for ensuring Scrum is followed correctly.",
    "answerDescription": "The Scrum Master helps the team understand Scrum principles, facilitates events, and removes impediments to progress."
  },
  {
    "id": "agile_418",
    "question": "What is the primary accountability of the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Maximizing the value of the product", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Overseeing the Scrum Master's work", "isCorrect": false },
      { "id": "option_4", "text": "Managing the Sprint Backlog", "isCorrect": false }
    ],
    "hint": "This role focuses on delivering business value.",
    "answerDescription": "The Product Owner ensures the Product Backlog is aligned with business goals to maximize product value."
  },
  {
    "id": "agile_419",
    "question": "Which Scrum event is time-boxed to 15 minutes?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event happens daily and is kept short.",
    "answerDescription": "The Daily Scrum is a short meeting where the Development Team discusses progress and identifies obstacles."
  },
  {
    "id": "agile_420",
    "question": "What does the Sprint Backlog contain?",
    "options": [
      { "id": "option_1", "text": "A list of tasks for the Sprint", "isCorrect": true },
      { "id": "option_2", "text": "All features for the entire project", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholder feedback from previous Sprints", "isCorrect": false },
      { "id": "option_4", "text": "A detailed release plan", "isCorrect": false }
    ],
    "hint": "It includes items the Development Team commits to completing in a Sprint.",
    "answerDescription": "The Sprint Backlog consists of selected Product Backlog items and the plan to deliver them during the Sprint."
  },
  {
    "id": "agile_421",
    "question": "What is the maximum duration of a Sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "One month", "isCorrect": true },
      { "id": "option_2", "text": "Three months", "isCorrect": false },
      { "id": "option_3", "text": "Six weeks", "isCorrect": false },
      { "id": "option_4", "text": "Two months", "isCorrect": false }
    ],
    "hint": "Scrum Sprints are short to allow frequent feedback.",
    "answerDescription": "A Sprint can last up to one month, ensuring rapid iteration and frequent delivery of increments."
  },
  {
    "id": "agile_422",
    "question": "Who has the authority to cancel a Sprint in Scrum?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This person is responsible for maximizing product value.",
    "answerDescription": "The Product Owner can cancel a Sprint if its goal becomes obsolete or no longer aligns with business needs."
  },
  {
    "id": "agile_423",
    "question": "What is the outcome of the Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Stakeholder feedback on the Increment", "isCorrect": true },
      { "id": "option_2", "text": "A finalized Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "A new Sprint Goal", "isCorrect": false },
      { "id": "option_4", "text": "A team performance report", "isCorrect": false }
    ],
    "hint": "This event allows the team to demonstrate completed work.",
    "answerDescription": "The Sprint Review results in feedback that may influence future backlog items and product direction."
  },
  {
    "id": "agile_424",
    "question": "What is the purpose of the Definition of Done (DoD) in Scrum?",
    "options": [
      { "id": "option_1", "text": "Ensures work meets quality standards", "isCorrect": true },
      { "id": "option_2", "text": "Tracks team performance metrics", "isCorrect": false },
      { "id": "option_3", "text": "Determines Sprint Goals", "isCorrect": false },
      { "id": "option_4", "text": "Assigns responsibilities within the team", "isCorrect": false }
    ],
    "hint": "This ensures that an Increment is truly ready for release.",
    "answerDescription": "The Definition of Done ensures that each completed Increment meets agreed-upon quality and completeness criteria."
  },
  {
    "id": "agile_425",
    "question": "What is a key benefit of using Scrum?",
    "options": [
      { "id": "option_1", "text": "Faster feedback loops and adaptability", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to a fixed plan", "isCorrect": false },
      { "id": "option_3", "text": "Detailed upfront requirements", "isCorrect": false },
      { "id": "option_4", "text": "Minimized stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Scrum enables teams to pivot quickly based on new insights.",
    "answerDescription": "Scrum promotes frequent feedback and adaptation, ensuring continuous improvement and responsiveness to change."
  },
  {
    "id": "agile_426",
    "question": "Who owns the Product Backlog in Scrum?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role prioritizes backlog items to maximize value.",
    "answerDescription": "The Product Owner is responsible for maintaining, prioritizing, and updating the Product Backlog."
  },  {
    "id": "agile_427",
    "question": "What is the primary purpose of the Sprint Planning meeting?",
    "options": [
      { "id": "option_1", "text": "To review the previous Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To define the work to be completed in the upcoming Sprint", "isCorrect": true },
      { "id": "option_3", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "To discuss long-term project goals", "isCorrect": false }
    ],
    "hint": "This event sets the direction for the upcoming Sprint.",
    "answerDescription": "Sprint Planning ensures the team selects and plans work items for the next Sprint based on priority and capacity."
  },
  {
    "id": "agile_428",
    "question": "Who is responsible for ensuring that the Scrum framework is understood and followed?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders", "isCorrect": false }
    ],
    "hint": "This role acts as a coach for the Scrum Team.",
    "answerDescription": "The Scrum Master ensures the team adheres to Scrum principles and removes obstacles affecting the workflow."
  },
  {
    "id": "agile_429",
    "question": "Which artifact provides transparency into the work the Development Team plans to accomplish in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": true },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact contains the selected work items for the Sprint.",
    "answerDescription": "The Sprint Backlog consists of selected Product Backlog items and the plan to deliver them within the Sprint."
  },
  {
    "id": "agile_430",
    "question": "What happens during the Sprint Retrospective?",
    "options": [
      { "id": "option_1", "text": "The team presents the completed work to stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "The team reflects on the Sprint and identifies improvements", "isCorrect": true },
      { "id": "option_3", "text": "The next Sprint Goal is defined", "isCorrect": false },
      { "id": "option_4", "text": "New items are added to the Product Backlog", "isCorrect": false }
    ],
    "hint": "This event focuses on continuous improvement.",
    "answerDescription": "The Sprint Retrospective helps the team analyze what went well, what didnâ€™t, and how to improve future Sprints."
  },
  {
    "id": "agile_431",
    "question": "Which role is responsible for managing the Product Backlog?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Manager", "isCorrect": false }
    ],
    "hint": "This role prioritizes backlog items to maximize product value.",
    "answerDescription": "The Product Owner is responsible for maintaining, prioritizing, and updating the Product Backlog."
  },
  {
    "id": "agile_432",
    "question": "What is the main output of a Sprint?",
    "options": [
      { "id": "option_1", "text": "Updated Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Potentially shippable Increment", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Plan", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholder report", "isCorrect": false }
    ],
    "hint": "This is a working product that meets the Definition of Done.",
    "answerDescription": "At the end of a Sprint, the team delivers a potentially shippable product Increment that meets quality standards."
  },
  {
    "id": "agile_433",
    "question": "Which Scrum event allows the Development Team to inspect and adapt daily?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event happens every working day in a Sprint.",
    "answerDescription": "The Daily Scrum allows the team to synchronize work, discuss progress, and address roadblocks."
  },
  {
    "id": "agile_434",
    "question": "How does Scrum handle changes during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Changes are discussed in the next Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "The Sprint Backlog remains stable, but refinements can be made", "isCorrect": true },
      { "id": "option_3", "text": "Changes are not allowed during a Sprint", "isCorrect": false },
      { "id": "option_4", "text": "The Product Owner can add new items mid-Sprint", "isCorrect": false }
    ],
    "hint": "Scrum encourages stability while allowing minor refinements.",
    "answerDescription": "The Sprint Backlog should not be drastically changed during a Sprint, but refinements are allowed if necessary."
  },
  {
    "id": "agile_435",
    "question": "What is the main benefit of time-boxing Scrum events?",
    "options": [
      { "id": "option_1", "text": "Ensures efficient use of time and focus", "isCorrect": true },
      { "id": "option_2", "text": "Allows unlimited discussion until consensus is reached", "isCorrect": false },
      { "id": "option_3", "text": "Gives flexibility in meeting duration", "isCorrect": false },
      { "id": "option_4", "text": "Eliminates the need for retrospectives", "isCorrect": false }
    ],
    "hint": "This practice prevents meetings from becoming inefficient.",
    "answerDescription": "Time-boxing ensures that Scrum events are focused and effective, avoiding unnecessary delays."
  },
  {
    "id": "agile_436",
    "question": "Why is cross-functionality important in Scrum Teams?",
    "options": [
      { "id": "option_1", "text": "It allows teams to complete work independently", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for collaboration", "isCorrect": false },
      { "id": "option_3", "text": "It enables managers to assign tasks more easily", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for Scrum Masters", "isCorrect": false }
    ],
    "hint": "This helps teams deliver increments without dependencies.",
    "answerDescription": "Cross-functional teams have all the skills needed to develop and deliver a working Increment without relying on external groups."
  },{
    "id": "agile_437",
    "question": "What is the main responsibility of the Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Prioritizing the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Scrum events", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "Managing the Sprint backlog alone", "isCorrect": false }
    ],
    "hint": "The Development Team is responsible for producing working software.",
    "answerDescription": "The Development Team is self-organizing and delivers a potentially shippable increment at the end of each Sprint."
  },
  {
    "id": "agile_438",
    "question": "What is the primary role of the Product Owner in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the Development Team follows Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Managing the Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "This role focuses on prioritizing and maximizing product value.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing the Product Backlog to ensure value delivery."
  },
  {
    "id": "agile_439",
    "question": "Which Scrum event provides an opportunity to inspect and adapt the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Planning", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to provide feedback on the increment.",
    "answerDescription": "During the Sprint Review, the team presents their completed work, and stakeholders provide feedback."
  },
  {
    "id": "agile_440",
    "question": "What is the main goal of a Sprint?",
    "options": [
      { "id": "option_1", "text": "To complete as many tasks as possible", "isCorrect": false },
      { "id": "option_2", "text": "To refine the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To deliver a potentially shippable increment", "isCorrect": true },
      { "id": "option_4", "text": "To gather stakeholder requirements", "isCorrect": false }
    ],
    "hint": "A Sprint results in a usable product increment.",
    "answerDescription": "Each Sprint aims to create a potentially shippable product increment that meets the Definition of Done."
  },
  {
    "id": "agile_441",
    "question": "What is the main benefit of self-organizing Scrum Teams?",
    "options": [
      { "id": "option_1", "text": "Reduces the need for leadership", "isCorrect": false },
      { "id": "option_2", "text": "Ensures that all team members work independently", "isCorrect": false },
      { "id": "option_3", "text": "Encourages ownership and accountability", "isCorrect": true },
      { "id": "option_4", "text": "Removes the need for collaboration", "isCorrect": false }
    ],
    "hint": "Scrum promotes team autonomy for efficiency and motivation.",
    "answerDescription": "Self-organizing teams are empowered to take responsibility for decisions, leading to better accountability and efficiency."
  },
  {
    "id": "agile_442",
    "question": "Why is the Sprint Retrospective important?",
    "options": [
      { "id": "option_1", "text": "To discuss project budgeting", "isCorrect": false },
      { "id": "option_2", "text": "To define the next Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "To improve team processes and efficiency", "isCorrect": true },
      { "id": "option_4", "text": "To showcase the Sprint Increment to stakeholders", "isCorrect": false }
    ],
    "hint": "This meeting helps the team continuously improve.",
    "answerDescription": "The Sprint Retrospective allows the team to reflect on what worked and what can be improved in the next Sprint."
  },
  {
    "id": "agile_443",
    "question": "What is the role of the Definition of Done in Scrum?",
    "options": [
      { "id": "option_1", "text": "To prioritize the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "To determine which work is assigned to developers", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all work meets quality standards before release", "isCorrect": true },
      { "id": "option_4", "text": "To define project deadlines", "isCorrect": false }
    ],
    "hint": "This ensures consistency in deliverables.",
    "answerDescription": "The Definition of Done ensures that all work is complete, tested, and meets the necessary quality requirements."
  },
  {
    "id": "agile_444",
    "question": "What is the purpose of Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To discuss long-term goals", "isCorrect": false },
      { "id": "option_3", "text": "To define what work will be completed in the Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To approve work with stakeholders", "isCorrect": false }
    ],
    "hint": "This event determines the focus of the next Sprint.",
    "answerDescription": "Sprint Planning sets the goal and backlog items for the next Sprint based on priority and team capacity."
  },{
    "id": "agile_465",
    "question": "What is the purpose of backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To add as many items as possible to the backlog", "isCorrect": false },
      { "id": "option_2", "text": "To finalize the backlog before Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "To assign tasks to developers in advance", "isCorrect": false },
      { "id": "option_4", "text": "To ensure Product Backlog items are clear and ready for selection", "isCorrect": true }
    ],
    "hint": "This activity improves clarity and prioritization.",
    "answerDescription": "Backlog refinement ensures that Product Backlog items are well-defined, estimated, and ready for upcoming Sprints."
  },{
    "id": "agile_446",
    "question": "Why is the Daily Scrum time-boxed to 15 minutes?",
    "options": [
      { "id": "option_1", "text": "To ensure only critical topics are discussed", "isCorrect": false },
      { "id": "option_2", "text": "To minimize distractions for the team", "isCorrect": false },
      { "id": "option_3", "text": "To avoid unnecessary technical discussions", "isCorrect": false },
      { "id": "option_4", "text": "To keep the focus on progress and impediments", "isCorrect": true }
    ],
    "hint": "This meeting is for quick updates, not problem-solving.",
    "answerDescription": "The Daily Scrum is a short, focused meeting where team members discuss progress, upcoming tasks, and any impediments."
  },
  {
    "id": "agile_447",
    "question": "What is the primary purpose of the Scrum Master?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To create the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "To manage the team's workload", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate Scrum and remove impediments", "isCorrect": true }
    ],
    "hint": "This role focuses on coaching and enabling the Scrum Team.",
    "answerDescription": "The Scrum Master ensures Scrum practices are followed and helps remove obstacles that hinder team progress."
  },
  {
    "id": "agile_448",
    "question": "What does the Sprint Backlog contain?",
    "options": [
      { "id": "option_1", "text": "All tasks from the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "A list of all pending project issues", "isCorrect": false },
      { "id": "option_3", "text": "A list of defects to be fixed", "isCorrect": false },
      { "id": "option_4", "text": "The items selected for the Sprint and the plan for delivering them", "isCorrect": true }
    ],
    "hint": "This backlog focuses on a single Sprint's scope.",
    "answerDescription": "The Sprint Backlog includes the selected Product Backlog items for a Sprint and the plan to complete them."
  },
  {
    "id": "agile_449",
    "question": "Who is responsible for defining the Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner alone", "isCorrect": false },
      { "id": "option_3", "text": "The Stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "The Scrum Team collaboratively", "isCorrect": true }
    ],
    "hint": "This goal aligns the team on the purpose of the Sprint.",
    "answerDescription": "The Scrum Team collectively defines the Sprint Goal during Sprint Planning to ensure a shared understanding of the objective."
  },
  {
    "id": "agile_450",
    "question": "Which Scrum artifact provides transparency into progress towards a goal?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Increment", "isCorrect": false },
      { "id": "option_4", "text": "Burndown Chart", "isCorrect": true }
    ],
    "hint": "This chart tracks remaining work in a Sprint.",
    "answerDescription": "The Burndown Chart helps teams visualize progress and identify potential risks to completing work on time."
  },
  {
    "id": "agile_451",
    "question": "What is a key responsibility of the Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Managing the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the team follows traditional project management", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_4", "text": "Self-organizing to complete the Sprint Goal", "isCorrect": true }
    ],
    "hint": "The team takes full ownership of how work is done.",
    "answerDescription": "The Development Team is self-organizing and collaboratively works towards the Sprint Goal without external interference."
  },
  {
    "id": "agile_452",
    "question": "Which event allows the Scrum Team to inspect and adapt their work process?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": true }
    ],
    "hint": "This event occurs at the end of each Sprint.",
    "answerDescription": "The Sprint Retrospective helps the team reflect on past Sprints and make improvements for future Sprints."
  },
  {
    "id": "agile_453",
    "question": "What does the term 'Increment' refer to in Scrum?",
    "options": [
      { "id": "option_1", "text": "A collection of completed Product Backlog items", "isCorrect": false },
      { "id": "option_2", "text": "A list of upcoming Sprint Goals", "isCorrect": false },
      { "id": "option_3", "text": "A breakdown of work in progress", "isCorrect": false },
      { "id": "option_4", "text": "A potentially shippable piece of the product", "isCorrect": true }
    ],
    "hint": "Each Sprint produces one of these.",
    "answerDescription": "An Increment is the sum of all completed work during a Sprint that meets the Definition of Done and can be released."
  },
  {
    "id": "agile_454",
    "question": "What is the primary output of Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "A roadmap for the next six months", "isCorrect": false },
      { "id": "option_2", "text": "A report on team performance", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholder approval for the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "A defined Sprint Goal and Sprint Backlog", "isCorrect": true }
    ],
    "hint": "This helps guide the team throughout the Sprint.",
    "answerDescription": "Sprint Planning results in a Sprint Goal and a list of work items selected from the Product Backlog to be completed during the Sprint."
  },
  {
    "id": "agile_455",
    "question": "Why is limiting Work In Progress (WIP) essential in Kanban?",
    "options": [
      { "id": "option_1", "text": "To force teams to complete tasks faster", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the number of tasks assigned per person", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate task dependencies", "isCorrect": false },
      { "id": "option_4", "text": "To improve flow efficiency and reduce multitasking", "isCorrect": true }
    ],
    "hint": "Too much work at once slows down progress rather than speeding it up.",
    "answerDescription": "Limiting WIP helps teams focus on completing tasks, reducing context switching and ensuring a steady workflow."
  },
  {
    "id": "agile_456",
    "question": "What is the primary benefit of using a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for meetings", "isCorrect": false },
      { "id": "option_3", "text": "To enforce a rigid process", "isCorrect": false },
      { "id": "option_4", "text": "To visualize workflow and improve task management", "isCorrect": true }
    ],
    "hint": "A Kanban board makes work visible to all team members.",
    "answerDescription": "Kanban boards help teams manage their workflow by making tasks and progress visually clear, improving collaboration and efficiency."
  },
  {
    "id": "agile_458",
    "question": "What is the key principle of Kanban that ensures smooth workflow?",
    "options": [
      { "id": "option_1", "text": "Limiting Work In Progress (WIP)", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks randomly", "isCorrect": false },
      { "id": "option_3", "text": "Focusing only on individual performance", "isCorrect": false },
      { "id": "option_4", "text": "Completing all tasks simultaneously", "isCorrect": false }
    ],
    "hint": "It helps in preventing bottlenecks and improving efficiency.",
    "answerDescription": "Limiting WIP ensures that teams focus on completing tasks before taking on new ones, maintaining a steady flow."
  },
  {
    "id": "agile_459",
    "question": "How does Kanban handle changing priorities in a project?",
    "options": [
      { "id": "option_1", "text": "By allowing dynamic task reordering", "isCorrect": true },
      { "id": "option_2", "text": "By locking tasks until completion", "isCorrect": false },
      { "id": "option_3", "text": "By forcing all tasks to be completed in sequence", "isCorrect": false },
      { "id": "option_4", "text": "By assigning strict deadlines to all tasks", "isCorrect": false }
    ],
    "hint": "Kanban allows flexibility in workflow management.",
    "answerDescription": "Kanban supports changes by enabling teams to reorder tasks based on priority while maintaining workflow balance."
  },
  {
    "id": "agile_460",
    "question": "What does 'Lead Time' measure in Kanban?",
    "options": [
      { "id": "option_1", "text": "The time taken from task initiation to completion", "isCorrect": true },
      { "id": "option_2", "text": "The total number of tasks completed", "isCorrect": false },
      { "id": "option_3", "text": "The number of tasks in the backlog", "isCorrect": false },
      { "id": "option_4", "text": "The time spent in the 'To Do' column", "isCorrect": false }
    ],
    "hint": "It tracks how long a task takes from start to finish.",
    "answerDescription": "Lead time helps teams measure efficiency by tracking the duration from task creation to completion."
  },
  {
    "id": "agile_461",
    "question": "Which Kanban practice helps teams analyze their workflow over time?",
    "options": [
      { "id": "option_1", "text": "Using Cumulative Flow Diagrams (CFD)", "isCorrect": true },
      { "id": "option_2", "text": "Assigning work randomly", "isCorrect": false },
      { "id": "option_3", "text": "Increasing WIP limits constantly", "isCorrect": false },
      { "id": "option_4", "text": "Skipping retrospectives", "isCorrect": false }
    ],
    "hint": "This visualization tool tracks workflow consistency.",
    "answerDescription": "Cumulative Flow Diagrams help teams monitor work progress and identify bottlenecks in their Kanban process."
  },
  {
    "id": "agile_462",
    "question": "What role does 'Cycle Time' play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the time taken to complete a task from 'In Progress' to 'Done'", "isCorrect": true },
      { "id": "option_2", "text": "It counts the total backlog items", "isCorrect": false },
      { "id": "option_3", "text": "It tracks meeting durations", "isCorrect": false },
      { "id": "option_4", "text": "It determines the number of team members required", "isCorrect": false }
    ],
    "hint": "Cycle Time focuses on how long tasks take while being actively worked on.",
    "answerDescription": "Cycle Time measures the duration a task spends in progress before being completed, helping teams optimize workflow speed."
  },
  {
    "id": "agile_463",
    "question": "What is the primary function of Kanban swimlanes?",
    "options": [
      { "id": "option_1", "text": "To categorize work based on priority or type", "isCorrect": true },
      { "id": "option_2", "text": "To limit the number of team members on a task", "isCorrect": false },
      { "id": "option_3", "text": "To prevent task reassignment", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict deadlines", "isCorrect": false }
    ],
    "hint": "These are horizontal sections that group similar tasks together.",
    "answerDescription": "Kanban swimlanes help categorize tasks based on urgency, project type, or other classifications, improving workflow organization."
  },
  {
    "id": "agile_464",
    "question": "How does Kanban promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By encouraging regular evaluation and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing a fixed workflow", "isCorrect": false },
      { "id": "option_3", "text": "By preventing task prioritization", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on speed", "isCorrect": false }
    ],
    "hint": "Kanban is an evolving system rather than a rigid structure.",
    "answerDescription": "Kanban encourages teams to analyze their workflow regularly, make adjustments, and optimize efficiency for better results."
  },
  {
    "id": "agile_465",
    "question": "Why is it important to set explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To ensure team members understand how work moves through the system", "isCorrect": true },
      { "id": "option_2", "text": "To restrict work flexibility", "isCorrect": false },
      { "id": "option_3", "text": "To micromanage the team", "isCorrect": false },
      { "id": "option_4", "text": "To increase WIP limits", "isCorrect": false }
    ],
    "hint": "Clear rules improve transparency in the workflow.",
    "answerDescription": "Defining explicit policies in Kanban helps teams understand their process, ensuring smooth work transitions and accountability."
  },
  {
    "id": "agile_466",
    "question": "How does Kanban enhance team collaboration?",
    "options": [
      { "id": "option_1", "text": "By making work visible to everyone", "isCorrect": true },
      { "id": "option_2", "text": "By limiting communication among team members", "isCorrect": false },
      { "id": "option_3", "text": "By assigning tasks without discussion", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing strict individual goals", "isCorrect": false }
    ],
    "hint": "Transparency leads to better teamwork and decision-making.",
    "answerDescription": "Kanbanâ€™s visual nature allows team members to see the status of tasks, communicate effectively, and collaborate more efficiently."
  },
  {
    "id": "agile_467",
    "question": "Which key practice helps ensure Kanban boards remain effective?",
    "options": [
      { "id": "option_1", "text": "Regularly updating and reviewing board status", "isCorrect": true },
      { "id": "option_2", "text": "Keeping the same WIP limits indefinitely", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding changes to workflow processes", "isCorrect": false },
      { "id": "option_4", "text": "Only updating tasks once a month", "isCorrect": false }
    ],
    "hint": "A static Kanban board loses its effectiveness over time.",
    "answerDescription": "Regular updates and reviews keep Kanban boards relevant, ensuring they accurately reflect the current workflow and priorities."
  }, {
    "id": "agile_468",
    "question": "What is the primary goal of using Kanban in a teamâ€™s workflow?",
    "options": [
      { "id": "option_1", "text": "To increase multitasking", "isCorrect": false },
      { "id": "option_2", "text": "To improve workflow efficiency and reduce delays", "isCorrect": true },
      { "id": "option_3", "text": "To assign more tasks per team member", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict deadlines on all tasks", "isCorrect": false }
    ],
    "hint": "Kanban aims to make the process smoother and faster.",
    "answerDescription": "Kanban enhances workflow efficiency by minimizing bottlenecks and ensuring a steady flow of work."
  },
  {
    "id": "agile_469",
    "question": "Why is continuous delivery a key benefit of Kanban?",
    "options": [
      { "id": "option_1", "text": "Because it allows teams to take on unlimited work", "isCorrect": false },
      { "id": "option_2", "text": "Because work moves through the system without fixed iterations", "isCorrect": true },
      { "id": "option_3", "text": "Because it requires completing all work at once", "isCorrect": false },
      { "id": "option_4", "text": "Because it eliminates the need for backlog management", "isCorrect": false }
    ],
    "hint": "Kanban is not restricted by time-boxed cycles.",
    "answerDescription": "Continuous delivery in Kanban allows teams to release work as soon as it is completed, improving efficiency."
  },
  {
    "id": "agile_470",
    "question": "What is the purpose of setting WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "To prevent teams from working on too many tasks simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "To improve focus and workflow balance", "isCorrect": true },
      { "id": "option_3", "text": "To increase the number of tasks in progress", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all tasks are completed at the same time", "isCorrect": false }
    ],
    "hint": "Limiting tasks in progress ensures better task completion rates.",
    "answerDescription": "WIP limits help teams focus on completing work rather than overloading themselves with too many tasks at once."
  },
  {
    "id": "agile_471",
    "question": "How does Kanban help teams manage unpredictable workloads?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By allowing tasks to be pulled based on capacity", "isCorrect": true },
      { "id": "option_3", "text": "By assigning tasks randomly", "isCorrect": false },
      { "id": "option_4", "text": "By requiring all tasks to be completed in a fixed order", "isCorrect": false }
    ],
    "hint": "Kanban uses a pull-based system for task allocation.",
    "answerDescription": "A pull system in Kanban ensures that team members take on new tasks only when they have the capacity to do so."
  },
  {
    "id": "agile_472",
    "question": "Which Kanban metric helps track process stability over time?",
    "options": [
      { "id": "option_1", "text": "Task assignment reports", "isCorrect": false },
      { "id": "option_2", "text": "Cumulative Flow Diagram (CFD)", "isCorrect": true },
      { "id": "option_3", "text": "Total work items in backlog", "isCorrect": false },
      { "id": "option_4", "text": "Number of completed tasks per day", "isCorrect": false }
    ],
    "hint": "This chart visualizes workflow consistency.",
    "answerDescription": "A Cumulative Flow Diagram (CFD) shows work distribution across different stages, helping teams assess workflow stability."
  },
  {
    "id": "agile_473",
    "question": "What is a key characteristic of tasks in a Kanban workflow?",
    "options": [
      { "id": "option_1", "text": "They must be assigned to a single individual", "isCorrect": false },
      { "id": "option_2", "text": "They should be clearly defined and self-contained", "isCorrect": true },
      { "id": "option_3", "text": "They cannot be reprioritized", "isCorrect": false },
      { "id": "option_4", "text": "They should always have fixed deadlines", "isCorrect": false }
    ],
    "hint": "Kanban tasks should be easily manageable without needing major clarification.",
    "answerDescription": "Clearly defined tasks ensure smooth workflow transitions and reduce the need for frequent intervention."
  },
  {
    "id": "agile_474",
    "question": "What should teams do when they consistently exceed their WIP limits?",
    "options": [
      { "id": "option_1", "text": "Increase the WIP limit immediately", "isCorrect": false },
      { "id": "option_2", "text": "Analyze workflow inefficiencies and remove bottlenecks", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the limits and keep working", "isCorrect": false },
      { "id": "option_4", "text": "Stop working until tasks are reassigned", "isCorrect": false }
    ],
    "hint": "WIP limits help highlight inefficiencies in the system.",
    "answerDescription": "Exceeding WIP limits suggests workflow problems, so teams should identify and fix bottlenecks before adjusting limits."
  },
  {
    "id": "agile_475",
    "question": "Why is cycle time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "Because it determines how many tasks can be assigned", "isCorrect": false },
      { "id": "option_2", "text": "Because it helps measure the efficiency of task completion", "isCorrect": true },
      { "id": "option_3", "text": "Because it ensures all tasks take the same time", "isCorrect": false },
      { "id": "option_4", "text": "Because it prevents teams from taking on new work", "isCorrect": false }
    ],
    "hint": "It tracks how long work spends in progress before completion.",
    "answerDescription": "Cycle time helps teams analyze productivity by measuring how quickly tasks move through the workflow."
  },
  {
    "id": "agile_476",
    "question": "How can Kanban help teams respond to urgent work requests?",
    "options": [
      { "id": "option_1", "text": "By pausing all ongoing work", "isCorrect": false },
      { "id": "option_2", "text": "By using a priority swimlane for urgent tasks", "isCorrect": true },
      { "id": "option_3", "text": "By ignoring planned work", "isCorrect": false },
      { "id": "option_4", "text": "By increasing WIP limits drastically", "isCorrect": false }
    ],
    "hint": "Urgent work needs a designated workflow space.",
    "answerDescription": "Priority swimlanes allow urgent work to be managed without disrupting the normal flow of work."
  },
  {
    "id": "agile_477",
    "question": "Why should teams regularly review their Kanban board?",
    "options": [
      { "id": "option_1", "text": "To track and optimize workflow performance", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the board reflects current priorities and work status", "isCorrect": true },
      { "id": "option_3", "text": "To assign new tasks randomly", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for collaboration", "isCorrect": false }
    ],
    "hint": "An outdated board reduces its effectiveness.",
    "answerDescription": "Regular board reviews help teams maintain an accurate reflection of their current workflow and optimize efficiency."
  },
  {
    "id": "agile_478",
    "question": "What is the main purpose of visualizing work on a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To assign work randomly", "isCorrect": false },
      { "id": "option_2", "text": "To increase the number of tasks", "isCorrect": false },
      { "id": "option_3", "text": "To improve workflow transparency and identify bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "To limit collaboration between team members", "isCorrect": false }
    ],
    "hint": "A Kanban board provides visibility into work progress.",
    "answerDescription": "Visualizing work helps teams track progress, identify inefficiencies, and ensure smooth workflow transitions."
  },
  {
    "id": "agile_479",
    "question": "Why should teams aim to minimize lead time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase the number of work items in progress", "isCorrect": false },
      { "id": "option_2", "text": "To avoid task prioritization", "isCorrect": false },
      { "id": "option_3", "text": "To deliver value to customers faster", "isCorrect": true },
      { "id": "option_4", "text": "To reduce the need for workflow visualization", "isCorrect": false }
    ],
    "hint": "Shorter lead times result in faster delivery.",
    "answerDescription": "Minimizing lead time allows teams to quickly deliver completed work, enhancing responsiveness to customer needs."
  },
  {
    "id": "agile_480",
    "question": "What is a benefit of limiting work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps teams start more tasks simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "It reduces context switching and improves focus", "isCorrect": true },
      { "id": "option_4", "text": "It increases the backlog size", "isCorrect": false }
    ],
    "hint": "Managing WIP ensures tasks move smoothly through the workflow.",
    "answerDescription": "By limiting WIP, teams can maintain a steady workflow and reduce delays caused by multitasking."
  },
  {
    "id": "agile_481",
    "question": "How does Kanban promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By requiring all tasks to follow the same process", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging regular analysis of workflow efficiency", "isCorrect": true },
      { "id": "option_4", "text": "By restricting flexibility in task management", "isCorrect": false }
    ],
    "hint": "Kanban emphasizes iterative improvements in workflow processes.",
    "answerDescription": "Kanban teams regularly analyze performance and adjust their workflow to increase efficiency."
  },
  {
    "id": "agile_482",
    "question": "Why do Kanban teams focus on flow efficiency?",
    "options": [
      { "id": "option_1", "text": "To increase the number of tasks assigned per member", "isCorrect": false },
      { "id": "option_2", "text": "To avoid collaboration between different teams", "isCorrect": false },
      { "id": "option_3", "text": "To ensure work moves smoothly through the system", "isCorrect": true },
      { "id": "option_4", "text": "To prioritize new tasks over ongoing ones", "isCorrect": false }
    ],
    "hint": "Flow efficiency helps prevent bottlenecks.",
    "answerDescription": "By improving flow efficiency, Kanban ensures a continuous and predictable work process."
  },
  {
    "id": "agile_483",
    "question": "What role does feedback play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It is only necessary at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "It is optional and does not impact workflow", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams adjust and optimize their processes", "isCorrect": true },
      { "id": "option_4", "text": "It is only used to assign work items", "isCorrect": false }
    ],
    "hint": "Kanban promotes continuous adaptation based on feedback.",
    "answerDescription": "Regular feedback in Kanban allows teams to fine-tune their workflow and address inefficiencies."
  },
  {
    "id": "agile_484",
    "question": "How does Kanban differ from Scrum in handling work?",
    "options": [
      { "id": "option_1", "text": "Kanban uses time-boxed sprints", "isCorrect": false },
      { "id": "option_2", "text": "Kanban requires fixed team roles", "isCorrect": false },
      { "id": "option_3", "text": "Kanban follows a continuous flow model instead of iterations", "isCorrect": true },
      { "id": "option_4", "text": "Kanban does not allow work prioritization", "isCorrect": false }
    ],
    "hint": "Kanban does not rely on fixed-length iterations.",
    "answerDescription": "Unlike Scrum, which operates in sprints, Kanban enables teams to work in a continuous flow."
  },
  {
    "id": "agile_485",
    "question": "Why should teams track blocked work items on a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To move them to the backlog", "isCorrect": false },
      { "id": "option_2", "text": "To increase WIP limits", "isCorrect": false },
      { "id": "option_3", "text": "To identify and resolve workflow impediments quickly", "isCorrect": true },
      { "id": "option_4", "text": "To remove them from the process entirely", "isCorrect": false }
    ],
    "hint": "Blocked items indicate process inefficiencies.",
    "answerDescription": "Tracking blocked items helps teams find and eliminate obstacles affecting workflow efficiency."
  },
  {
    "id": "agile_486",
    "question": "What should a team do if a Kanban column frequently becomes overloaded?",
    "options": [
      { "id": "option_1", "text": "Increase the WIP limit indefinitely", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the issue and continue working", "isCorrect": false },
      { "id": "option_3", "text": "Analyze the root cause and redistribute work if necessary", "isCorrect": true },
      { "id": "option_4", "text": "Move tasks back to the backlog", "isCorrect": false }
    ],
    "hint": "Overloaded columns indicate a process imbalance.",
    "answerDescription": "By investigating overloaded columns, teams can adjust their process to improve workflow efficiency."
  },
  {
    "id": "agile_487",
    "question": "Why is cycle time variation an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps teams delay work intentionally", "isCorrect": false },
      { "id": "option_2", "text": "It ensures that all tasks take the same amount of time", "isCorrect": false },
      { "id": "option_3", "text": "It highlights inconsistencies in workflow efficiency", "isCorrect": true },
      { "id": "option_4", "text": "It prioritizes the longest-running tasks", "isCorrect": false }
    ],
    "hint": "Tracking variation helps identify process inefficiencies.",
    "answerDescription": "Analyzing cycle time variation allows teams to pinpoint inefficiencies and improve consistency in task completion."
  },  {
    "id": "agile_488",
    "question": "What is the primary goal of limiting work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase task multitasking", "isCorrect": false },
      { "id": "option_2", "text": "To delay task completion", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize new work over ongoing tasks", "isCorrect": false },
      { "id": "option_4", "text": "To reduce bottlenecks and improve workflow efficiency", "isCorrect": true }
    ],
    "hint": "Limiting WIP ensures a smoother workflow.",
    "answerDescription": "By capping WIP, Kanban teams avoid overload and optimize task completion."
  },
  {
    "id": "agile_489",
    "question": "How does Kanban help identify process inefficiencies?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of work items", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating the need for task prioritization", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By visualizing workflow and identifying blockers", "isCorrect": true }
    ],
    "hint": "A Kanban board helps make inefficiencies visible.",
    "answerDescription": "Kanban visualizes work to expose bottlenecks and improve efficiency."
  },
  {
    "id": "agile_490",
    "question": "Why is continuous delivery important in Kanban?",
    "options": [
      { "id": "option_1", "text": "It ensures work is batched for later release", "isCorrect": false },
      { "id": "option_2", "text": "It increases cycle time intentionally", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for frequent process adjustments", "isCorrect": false },
      { "id": "option_4", "text": "It allows teams to deliver value incrementally and quickly", "isCorrect": true }
    ],
    "hint": "Kanban promotes a steady flow of work.",
    "answerDescription": "Continuous delivery helps teams respond to change faster and improve customer satisfaction."
  },
  {
    "id": "agile_491",
    "question": "What is the effect of high work in progress (WIP) limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "It accelerates task completion", "isCorrect": false },
      { "id": "option_2", "text": "It reduces cycle time", "isCorrect": false },
      { "id": "option_3", "text": "It minimizes context switching", "isCorrect": false },
      { "id": "option_4", "text": "It increases task switching and delays completion", "isCorrect": true }
    ],
    "hint": "High WIP can lead to inefficiencies.",
    "answerDescription": "When WIP limits are too high, teams struggle to focus, leading to delays and inefficiencies."
  },
  {
    "id": "agile_492",
    "question": "Why should teams track lead time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase backlog size", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate WIP limits", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize long-running tasks", "isCorrect": false },
      { "id": "option_4", "text": "To measure and optimize the speed of delivery", "isCorrect": true }
    ],
    "hint": "Lead time helps measure workflow efficiency.",
    "answerDescription": "Tracking lead time allows teams to identify delays and improve delivery speed."
  },
  {
    "id": "agile_493",
    "question": "How does Kanban support adaptability in workflow?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict workflow stages", "isCorrect": false },
      { "id": "option_2", "text": "By limiting feedback cycles", "isCorrect": false },
      { "id": "option_3", "text": "By preventing changes to work items", "isCorrect": false },
      { "id": "option_4", "text": "By allowing continuous adjustments based on feedback", "isCorrect": true }
    ],
    "hint": "Kanban is designed to be flexible.",
    "answerDescription": "Kanban enables teams to adapt and refine their process based on real-time feedback."
  },
  {
    "id": "agile_494",
    "question": "What happens when a Kanban workflow is unbalanced?",
    "options": [
      { "id": "option_1", "text": "Tasks are completed faster", "isCorrect": false },
      { "id": "option_2", "text": "All columns have an even number of tasks", "isCorrect": false },
      { "id": "option_3", "text": "Work items move at a steady pace", "isCorrect": false },
      { "id": "option_4", "text": "Bottlenecks and delays occur", "isCorrect": true }
    ],
    "hint": "Workflow imbalance leads to inefficiencies.",
    "answerDescription": "An unbalanced Kanban workflow can slow down processes and create bottlenecks."
  },
  {
    "id": "agile_495",
    "question": "How can teams improve flow efficiency in Kanban?",
    "options": [
      { "id": "option_1", "text": "By increasing work in progress", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring blocked tasks", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding work item visualization", "isCorrect": false },
      { "id": "option_4", "text": "By analyzing and optimizing work transitions", "isCorrect": true }
    ],
    "hint": "Workflow transitions impact efficiency.",
    "answerDescription": "Optimizing work transitions and reducing waste improves overall flow efficiency."
  },
  {
    "id": "agile_496",
    "question": "Why is cycle time an important Kanban metric?",
    "options": [
      { "id": "option_1", "text": "It tracks the number of completed tasks", "isCorrect": false },
      { "id": "option_2", "text": "It measures backlog growth", "isCorrect": false },
      { "id": "option_3", "text": "It determines the priority of new tasks", "isCorrect": false },
      { "id": "option_4", "text": "It shows how long tasks take from start to completion", "isCorrect": true }
    ],
    "hint": "Cycle time helps assess workflow speed.",
    "answerDescription": "Measuring cycle time allows teams to improve predictability and efficiency."
  },
  {
    "id": "agile_497",
    "question": "How does Kanban help manage unpredictability in work processes?",
    "options": [
      { "id": "option_1", "text": "By setting fixed sprint durations", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing static WIP limits", "isCorrect": false },
      { "id": "option_3", "text": "By requiring detailed upfront planning", "isCorrect": false },
      { "id": "option_4", "text": "By allowing continuous prioritization and adjustments", "isCorrect": true }
    ],
    "hint": "Kanban is designed for flexibility.",
    "answerDescription": "Kanban enables teams to adapt to changing priorities and work demands."
  },  {
    "id": "agile_498",
    "question": "What is the main purpose of a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To visualize work and improve flow", "isCorrect": true },
      { "id": "option_2", "text": "To track employee performance", "isCorrect": false },
      { "id": "option_3", "text": "To assign deadlines to tasks", "isCorrect": false },
      { "id": "option_4", "text": "To replace all planning meetings", "isCorrect": false }
    ],
    "hint": "A Kanban board helps teams see their workflow.",
    "answerDescription": "Kanban boards help teams visualize tasks, manage WIP, and optimize flow."
  },
  {
    "id": "agile_499",
    "question": "Why should teams limit work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To prevent overloading the team and improve focus", "isCorrect": true },
      { "id": "option_2", "text": "To ensure every team member has multiple tasks", "isCorrect": false },
      { "id": "option_3", "text": "To allow multitasking on different projects", "isCorrect": false },
      { "id": "option_4", "text": "To delay work completion", "isCorrect": false }
    ],
    "hint": "WIP limits reduce inefficiencies.",
    "answerDescription": "By limiting WIP, teams improve focus, reduce multitasking, and enhance efficiency."
  },
  {
    "id": "agile_500",
    "question": "How does Kanban promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By enabling teams to regularly analyze and optimize workflows", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing a fixed work process", "isCorrect": false },
      { "id": "option_3", "text": "By removing the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By limiting feedback from stakeholders", "isCorrect": false }
    ],
    "hint": "Continuous improvement is a core principle of Kanban.",
    "answerDescription": "Kanban encourages teams to analyze and adjust workflows to improve efficiency."
  },
  {
    "id": "agile_501",
    "question": "What does 'flow' refer to in Kanban?",
    "options": [
      { "id": "option_1", "text": "The smooth movement of tasks through the process", "isCorrect": true },
      { "id": "option_2", "text": "The number of tasks started at the same time", "isCorrect": false },
      { "id": "option_3", "text": "The assignment of tasks to specific people", "isCorrect": false },
      { "id": "option_4", "text": "The total number of backlog items", "isCorrect": false }
    ],
    "hint": "Flow represents the movement of work items.",
    "answerDescription": "In Kanban, maintaining a steady flow ensures work is completed efficiently."
  },
  {
    "id": "agile_502",
    "question": "How does Kanban handle changing priorities?",
    "options": [
      { "id": "option_1", "text": "By allowing teams to reprioritize tasks dynamically", "isCorrect": true },
      { "id": "option_2", "text": "By requiring a new sprint planning meeting", "isCorrect": false },
      { "id": "option_3", "text": "By limiting changes to the backlog", "isCorrect": false },
      { "id": "option_4", "text": "By freezing the workflow until the next iteration", "isCorrect": false }
    ],
    "hint": "Kanban is designed to be flexible and responsive.",
    "answerDescription": "Kanban allows teams to adjust priorities without disrupting the workflow."
  },
  {
    "id": "agile_503",
    "question": "What is the role of cycle time in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the time taken to complete a task", "isCorrect": true },
      { "id": "option_2", "text": "It tracks the number of tasks in progress", "isCorrect": false },
      { "id": "option_3", "text": "It defines the total backlog size", "isCorrect": false },
      { "id": "option_4", "text": "It determines the priority of work items", "isCorrect": false }
    ],
    "hint": "Cycle time helps measure efficiency.",
    "answerDescription": "Tracking cycle time allows teams to improve predictability and optimize workflow."
  },
  {
    "id": "agile_504",
    "question": "Why is it important to visualize workflow in Kanban?",
    "options": [
      { "id": "option_1", "text": "To identify bottlenecks and improve efficiency", "isCorrect": true },
      { "id": "option_2", "text": "To increase the number of tasks assigned", "isCorrect": false },
      { "id": "option_3", "text": "To ensure strict task deadlines", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate team discussions", "isCorrect": false }
    ],
    "hint": "A Kanban board makes problems visible.",
    "answerDescription": "Visualizing workflow allows teams to identify delays and improve efficiency."
  },
  {
    "id": "agile_505",
    "question": "How does Kanban help reduce bottlenecks?",
    "options": [
      { "id": "option_1", "text": "By setting WIP limits and tracking work in progress", "isCorrect": true },
      { "id": "option_2", "text": "By increasing the number of tasks assigned", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing fixed work durations", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing only urgent tasks", "isCorrect": false }
    ],
    "hint": "WIP limits help balance workflow.",
    "answerDescription": "Kanban reduces bottlenecks by ensuring tasks move smoothly through the process."
  },
  {
    "id": "agile_506",
    "question": "Why is lead time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the time from request to completion", "isCorrect": true },
      { "id": "option_2", "text": "It tracks the number of tasks in progress", "isCorrect": false },
      { "id": "option_3", "text": "It defines the number of people working on a task", "isCorrect": false },
      { "id": "option_4", "text": "It determines which tasks should be removed", "isCorrect": false }
    ],
    "hint": "Lead time tracks end-to-end task completion.",
    "answerDescription": "Monitoring lead time helps teams improve planning and efficiency."
  },
  {
    "id": "agile_507",
    "question": "How does Kanban support just-in-time (JIT) delivery?",
    "options": [
      { "id": "option_1", "text": "By ensuring work is started only when necessary", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing fixed work durations", "isCorrect": false },
      { "id": "option_3", "text": "By assigning tasks to all available team members", "isCorrect": false },
      { "id": "option_4", "text": "By requiring work to be completed in batches", "isCorrect": false }
    ],
    "hint": "JIT reduces waste and improves efficiency.",
    "answerDescription": "Kanban promotes just-in-time work by ensuring tasks are started only when needed."
  },
  {
    "id": "agile_508",
    "question": "What is the key benefit of limiting WIP in Kanban?",
    "options": [
      { "id": "option_1", "text": "It allows teams to multitask more efficiently", "isCorrect": false },
      { "id": "option_2", "text": "It helps reduce context switching and improves focus", "isCorrect": true },
      { "id": "option_3", "text": "It ensures all tasks are completed simultaneously", "isCorrect": false },
      { "id": "option_4", "text": "It increases the number of tasks in progress", "isCorrect": false }
    ],
    "hint": "Limiting WIP prevents teams from spreading themselves too thin.",
    "answerDescription": "Reducing WIP minimizes context switching and improves task completion rates."
  },
  {
    "id": "agile_509",
    "question": "What does a cumulative flow diagram (CFD) help visualize in Kanban?",
    "options": [
      { "id": "option_1", "text": "The number of team members assigned to tasks", "isCorrect": false },
      { "id": "option_2", "text": "Work-in-progress and bottlenecks over time", "isCorrect": true },
      { "id": "option_3", "text": "The order of backlog prioritization", "isCorrect": false },
      { "id": "option_4", "text": "The estimated completion time for a project", "isCorrect": false }
    ],
    "hint": "A CFD provides insight into workflow stability.",
    "answerDescription": "A CFD helps teams track work-in-progress, identify bottlenecks, and improve flow."
  },
  {
    "id": "agile_510",
    "question": "Why is continuous delivery easier to implement in Kanban?",
    "options": [
      { "id": "option_1", "text": "Because tasks are assigned fixed deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Because Kanban focuses on a steady workflow without sprints", "isCorrect": true },
      { "id": "option_3", "text": "Because work items are grouped into batches", "isCorrect": false },
      { "id": "option_4", "text": "Because Kanban enforces strict prioritization rules", "isCorrect": false }
    ],
    "hint": "Kanban supports a continuous flow of work instead of time-boxed sprints.",
    "answerDescription": "Kanban enables continuous delivery by allowing teams to release work as it progresses."
  },
  {
    "id": "agile_511",
    "question": "What is the primary role of service-level expectations (SLE) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To define the team's backlog size", "isCorrect": false },
      { "id": "option_2", "text": "To provide guidance on expected cycle times", "isCorrect": true },
      { "id": "option_3", "text": "To enforce a fixed work process", "isCorrect": false },
      { "id": "option_4", "text": "To measure team performance based on velocity", "isCorrect": false }
    ],
    "hint": "SLEs help teams predict when work will be completed.",
    "answerDescription": "Service-level expectations (SLEs) give teams a realistic estimate of how long work items will take."
  },
  {
    "id": "agile_512",
    "question": "How does Kanban enhance flexibility in project management?",
    "options": [
      { "id": "option_1", "text": "By requiring work to be planned in iterations", "isCorrect": false },
      { "id": "option_2", "text": "By allowing work to be reprioritized dynamically", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict deadlines for each task", "isCorrect": false },
      { "id": "option_4", "text": "By limiting changes once work starts", "isCorrect": false }
    ],
    "hint": "Kanban is designed to accommodate changing priorities.",
    "answerDescription": "Kanban provides flexibility by enabling teams to adjust priorities as work progresses."
  },
  {
    "id": "agile_513",
    "question": "What is the purpose of work item aging in Kanban?",
    "options": [
      { "id": "option_1", "text": "To determine which tasks should be removed", "isCorrect": false },
      { "id": "option_2", "text": "To identify tasks that are taking longer than expected", "isCorrect": true },
      { "id": "option_3", "text": "To track the number of completed tasks per day", "isCorrect": false },
      { "id": "option_4", "text": "To set a fixed timeline for each task", "isCorrect": false }
    ],
    "hint": "Work item aging helps identify tasks stuck in progress.",
    "answerDescription": "Monitoring work item aging helps teams detect bottlenecks and improve efficiency."
  },
  {
    "id": "agile_514",
    "question": "Why is it important to minimize task switching in Kanban?",
    "options": [
      { "id": "option_1", "text": "To ensure all tasks are completed simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "To improve focus and reduce inefficiencies", "isCorrect": true },
      { "id": "option_3", "text": "To increase the number of tasks in progress", "isCorrect": false },
      { "id": "option_4", "text": "To shorten backlog size", "isCorrect": false }
    ],
    "hint": "Frequent task switching leads to inefficiencies.",
    "answerDescription": "Minimizing task switching helps teams focus and complete work faster."
  },
  {
    "id": "agile_515",
    "question": "How does Kanban promote transparency in the workflow?",
    "options": [
      { "id": "option_1", "text": "By restricting access to the Kanban board", "isCorrect": false },
      { "id": "option_2", "text": "By making work visible to everyone involved", "isCorrect": true },
      { "id": "option_3", "text": "By limiting discussions on process improvements", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing a fixed workflow without changes", "isCorrect": false }
    ],
    "hint": "Kanban makes all work progress visible.",
    "answerDescription": "Transparency in Kanban ensures that the entire team can see and understand workflow status."
  },
  {
    "id": "agile_516",
    "question": "What is one way to improve efficiency in a Kanban system?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of WIP items", "isCorrect": false },
      { "id": "option_2", "text": "By identifying and removing bottlenecks", "isCorrect": true },
      { "id": "option_3", "text": "By assigning more tasks to each team member", "isCorrect": false },
      { "id": "option_4", "text": "By extending cycle times", "isCorrect": false }
    ],
    "hint": "Bottlenecks slow down progress and should be addressed.",
    "answerDescription": "Reducing bottlenecks improves the efficiency of a Kanban system and enhances workflow."
  },
  {
    "id": "agile_517",
    "question": "How does limiting batch sizes benefit Kanban teams?",
    "options": [
      { "id": "option_1", "text": "By allowing multiple tasks to be started at once", "isCorrect": false },
      { "id": "option_2", "text": "By reducing cycle times and improving flow", "isCorrect": true },
      { "id": "option_3", "text": "By ensuring large-scale deployments are prioritized", "isCorrect": false },
      { "id": "option_4", "text": "By making backlog management easier", "isCorrect": false }
    ],
    "hint": "Smaller batches move faster through the system.",
    "answerDescription": "Smaller batch sizes improve efficiency by reducing cycle times and enhancing flow."
  },
  {
    "id": "agile_518",
    "question": "What is the main purpose of a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To track employee productivity", "isCorrect": false },
      { "id": "option_3", "text": "To visualize workflow and work-in-progress", "isCorrect": true },
      { "id": "option_4", "text": "To enforce deadlines on tasks", "isCorrect": false }
    ],
    "hint": "A Kanban board helps teams see work at a glance.",
    "answerDescription": "Kanban boards provide transparency and enable teams to manage workflow efficiently."
  },
  {
    "id": "agile_519",
    "question": "Why should Kanban teams focus on reducing lead time?",
    "options": [
      { "id": "option_1", "text": "To increase the number of tasks in progress", "isCorrect": false },
      { "id": "option_2", "text": "To complete work in large batches", "isCorrect": false },
      { "id": "option_3", "text": "To deliver value to customers faster", "isCorrect": true },
      { "id": "option_4", "text": "To limit the number of tasks assigned to each member", "isCorrect": false }
    ],
    "hint": "Shorter lead time improves responsiveness to customer needs.",
    "answerDescription": "Reducing lead time helps deliver value more quickly and efficiently."
  },
  {
    "id": "agile_520",
    "question": "What happens when a Kanban team exceeds its WIP limit?",
    "options": [
      { "id": "option_1", "text": "The team works faster to compensate", "isCorrect": false },
      { "id": "option_2", "text": "New tasks are added to the backlog", "isCorrect": false },
      { "id": "option_3", "text": "Flow is disrupted and bottlenecks may occur", "isCorrect": true },
      { "id": "option_4", "text": "The team moves tasks to another board", "isCorrect": false }
    ],
    "hint": "Exceeding WIP limits often leads to inefficiencies.",
    "answerDescription": "Keeping WIP within limits ensures smooth workflow and prevents overloading the team."
  },
  {
    "id": "agile_521",
    "question": "How does limiting WIP help improve team performance?",
    "options": [
      { "id": "option_1", "text": "By allowing multitasking on multiple items", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring more work is completed at once", "isCorrect": false },
      { "id": "option_3", "text": "By reducing context switching and improving focus", "isCorrect": true },
      { "id": "option_4", "text": "By setting strict deadlines for tasks", "isCorrect": false }
    ],
    "hint": "Focusing on fewer tasks at a time increases efficiency.",
    "answerDescription": "Limiting WIP reduces distractions and helps teams complete work faster with better quality."
  },
  {
    "id": "agile_522",
    "question": "What is the benefit of defining explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "It allows teams to skip process steps", "isCorrect": false },
      { "id": "option_2", "text": "It enforces strict deadlines for every task", "isCorrect": false },
      { "id": "option_3", "text": "It provides clarity on how work should flow", "isCorrect": true },
      { "id": "option_4", "text": "It limits flexibility in task prioritization", "isCorrect": false }
    ],
    "hint": "Clear policies help teams maintain a smooth workflow.",
    "answerDescription": "Explicit policies ensure consistency and help teams manage work efficiently."
  },
  {
    "id": "agile_523",
    "question": "What is a common indicator of a bottleneck in Kanban?",
    "options": [
      { "id": "option_1", "text": "Tasks moving too quickly between stages", "isCorrect": false },
      { "id": "option_2", "text": "An excessive number of completed tasks", "isCorrect": false },
      { "id": "option_3", "text": "A large buildup of tasks in a single stage", "isCorrect": true },
      { "id": "option_4", "text": "A sudden drop in backlog size", "isCorrect": false }
    ],
    "hint": "Bottlenecks slow down work and cause delays in a specific stage.",
    "answerDescription": "A bottleneck occurs when too many tasks accumulate in one stage, slowing overall workflow."
  },
  {
    "id": "agile_524",
    "question": "How does Kanban support continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By requiring teams to stick to a fixed process", "isCorrect": false },
      { "id": "option_2", "text": "By allowing unlimited work in progress", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging regular analysis of workflow", "isCorrect": true },
      { "id": "option_4", "text": "By ensuring tasks are completed in strict order", "isCorrect": false }
    ],
    "hint": "Kanban teams regularly review their workflow for improvements.",
    "answerDescription": "Kanban fosters continuous improvement through regular evaluation of efficiency and process adjustments."
  },
  {
    "id": "agile_525",
    "question": "Why do Kanban teams use cycle time as a key metric?",
    "options": [
      { "id": "option_1", "text": "To measure employee productivity", "isCorrect": false },
      { "id": "option_2", "text": "To track the number of backlog items", "isCorrect": false },
      { "id": "option_3", "text": "To determine how long it takes to complete work", "isCorrect": true },
      { "id": "option_4", "text": "To estimate future project timelines", "isCorrect": false }
    ],
    "hint": "Cycle time measures the duration of a task from start to finish.",
    "answerDescription": "Monitoring cycle time helps teams optimize their workflow and improve efficiency."
  },
  {
    "id": "agile_526",
    "question": "What is the role of a Kanban service class?",
    "options": [
      { "id": "option_1", "text": "To categorize tasks based on team members", "isCorrect": false },
      { "id": "option_2", "text": "To define the order in which tasks must be completed", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize work items based on urgency and impact", "isCorrect": true },
      { "id": "option_4", "text": "To enforce equal priority for all tasks", "isCorrect": false }
    ],
    "hint": "Some work items require higher priority than others.",
    "answerDescription": "Kanban service classes help teams categorize and manage work based on priority and urgency."
  },
  {
    "id": "agile_527",
    "question": "Why is visualization an important principle in Kanban?",
    "options": [
      { "id": "option_1", "text": "To track time spent on each task", "isCorrect": false },
      { "id": "option_2", "text": "To enforce deadlines more strictly", "isCorrect": false },
      { "id": "option_3", "text": "To make work progress transparent to the team", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for team discussions", "isCorrect": false }
    ],
    "hint": "Visualization helps teams understand their workflow.",
    "answerDescription": "Making work visible ensures better communication, collaboration, and efficiency in Kanban."
  },
  {
    "id": "agile_528",
    "question": "What is the primary benefit of implementing WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "It increases the number of tasks in progress", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up the completion of individual tasks", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to work on multiple projects at once", "isCorrect": false },
      { "id": "option_4", "text": "It prevents bottlenecks and improves flow efficiency", "isCorrect": true }
    ],
    "hint": "Limiting WIP ensures tasks move smoothly through the workflow.",
    "answerDescription": "By capping work in progress, Kanban teams avoid bottlenecks and maintain a steady flow."
  },
  {
    "id": "agile_529",
    "question": "What is the primary goal of flow management in Kanban?",
    "options": [
      { "id": "option_1", "text": "To allocate tasks to specific team members", "isCorrect": false },
      { "id": "option_2", "text": "To enforce strict deadlines on each task", "isCorrect": false },
      { "id": "option_3", "text": "To minimize the number of tasks in the backlog", "isCorrect": false },
      { "id": "option_4", "text": "To ensure a smooth and predictable work process", "isCorrect": true }
    ],
    "hint": "Kanban aims to improve efficiency and predictability in work processes.",
    "answerDescription": "Flow management helps teams deliver value consistently and without unnecessary delays."
  },
  {
    "id": "agile_530",
    "question": "How does Kanban help teams identify workflow inefficiencies?",
    "options": [
      { "id": "option_1", "text": "By assigning work based on skill level", "isCorrect": false },
      { "id": "option_2", "text": "By setting deadlines for each workflow stage", "isCorrect": false },
      { "id": "option_3", "text": "By allowing unlimited work-in-progress", "isCorrect": false },
      { "id": "option_4", "text": "By visualizing bottlenecks and cycle time delays", "isCorrect": true }
    ],
    "hint": "Kanban boards highlight areas where work slows down.",
    "answerDescription": "Visualization tools in Kanban help teams quickly spot inefficiencies and optimize their workflow."
  },
  {
    "id": "agile_531",
    "question": "Why is it important to measure lead time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign more tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To track the number of completed tasks", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize urgent tasks over regular ones", "isCorrect": false },
      { "id": "option_4", "text": "To understand how long it takes to complete a work item", "isCorrect": true }
    ],
    "hint": "Lead time measures the time from request to completion.",
    "answerDescription": "Tracking lead time helps teams improve efficiency and make better delivery commitments."
  },
  {
    "id": "agile_532",
    "question": "What happens when a Kanban board has too many tasks in the 'In Progress' column?",
    "options": [
      { "id": "option_1", "text": "Work moves faster due to multitasking", "isCorrect": false },
      { "id": "option_2", "text": "The team can shift focus between tasks more efficiently", "isCorrect": false },
      { "id": "option_3", "text": "Tasks are completed in a strictly sequential order", "isCorrect": false },
      { "id": "option_4", "text": "Work slows down due to excessive context switching", "isCorrect": true }
    ],
    "hint": "Too many tasks in progress can lead to inefficiencies.",
    "answerDescription": "Kanban emphasizes limiting WIP to maintain a smooth and efficient workflow."
  },
  {
    "id": "agile_533",
    "question": "What role does feedback play in a Kanban system?",
    "options": [
      { "id": "option_1", "text": "It is only collected at the end of a project", "isCorrect": false },
      { "id": "option_2", "text": "It is optional and does not impact process improvements", "isCorrect": false },
      { "id": "option_3", "text": "It is used to assign performance ratings to team members", "isCorrect": false },
      { "id": "option_4", "text": "It helps teams refine their processes for continuous improvement", "isCorrect": true }
    ],
    "hint": "Kanban encourages continuous learning and improvement.",
    "answerDescription": "Regular feedback helps teams make adjustments and optimize their workflow over time."
  },
  {
    "id": "agile_534",
    "question": "What is the purpose of a replenishment meeting in Kanban?",
    "options": [
      { "id": "option_1", "text": "To review team performance metrics", "isCorrect": false },
      { "id": "option_2", "text": "To assign individual tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "To analyze completed work items", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize and pull new work into the workflow", "isCorrect": true }
    ],
    "hint": "Kanban teams periodically review and update work items.",
    "answerDescription": "Replenishment meetings help teams maintain a steady flow of prioritized work."
  },
  {
    "id": "agile_535",
    "question": "Why is cycle time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the number of tasks assigned per person", "isCorrect": false },
      { "id": "option_2", "text": "It helps determine the exact completion date of a project", "isCorrect": false },
      { "id": "option_3", "text": "It tracks the total number of tasks in the backlog", "isCorrect": false },
      { "id": "option_4", "text": "It shows how long a task takes from start to finish", "isCorrect": true }
    ],
    "hint": "Cycle time helps teams assess and improve delivery speed.",
    "answerDescription": "Measuring cycle time allows teams to identify delays and optimize workflow efficiency."
  },
  {
    "id": "agile_536",
    "question": "How can teams improve predictability in Kanban?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of work items in progress", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on completing high-priority tasks", "isCorrect": false },
      { "id": "option_3", "text": "By removing WIP limits to allow more flexibility", "isCorrect": false },
      { "id": "option_4", "text": "By tracking key metrics like lead time and cycle time", "isCorrect": true }
    ],
    "hint": "Metrics provide insights into workflow efficiency and stability.",
    "answerDescription": "Kanban teams use data-driven decisions to improve predictability and delivery performance."
  },
  {
    "id": "agile_537",
    "question": "What is the main function of a Kanban pull system?",
    "options": [
      { "id": "option_1", "text": "To push work to team members based on availability", "isCorrect": false },
      { "id": "option_2", "text": "To assign fixed deadlines for each task", "isCorrect": false },
      { "id": "option_3", "text": "To automatically escalate blocked tasks", "isCorrect": false },
      { "id": "option_4", "text": "To allow work to be pulled into progress based on capacity", "isCorrect": true }
    ],
    "hint": "Kanban promotes a demand-driven approach to work.",
    "answerDescription": "A pull system ensures teams take on new work only when they have capacity, preventing overload."
  },
  {
    "id": "agile_538",
    "question": "What is the primary principle of Kanban?",
    "options": [
      { "id": "option_1", "text": "Visualizing work to improve efficiency", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to individuals before starting work", "isCorrect": false },
      { "id": "option_3", "text": "Setting fixed deadlines for all tasks", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding feedback loops in the process", "isCorrect": false }
    ],
    "hint": "Kanban helps teams see their workflow clearly.",
    "answerDescription": "By visualizing work, teams can better manage progress and identify bottlenecks."
  },
  {
    "id": "agile_539",
    "question": "What is the purpose of limiting Work in Progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To prevent work overload and improve flow", "isCorrect": true },
      { "id": "option_2", "text": "To increase the number of tasks assigned", "isCorrect": false },
      { "id": "option_3", "text": "To allow multitasking across projects", "isCorrect": false },
      { "id": "option_4", "text": "To push as many tasks as possible into the workflow", "isCorrect": false }
    ],
    "hint": "Limiting WIP keeps work balanced and efficient.",
    "answerDescription": "By capping WIP, teams reduce bottlenecks and focus on completing work efficiently."
  },
  {
    "id": "agile_540",
    "question": "How does Kanban support continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By encouraging regular feedback and process refinement", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict processes without changes", "isCorrect": false },
      { "id": "option_3", "text": "By assigning more tasks to increase efficiency", "isCorrect": false },
      { "id": "option_4", "text": "By requiring teams to complete work in a fixed order", "isCorrect": false }
    ],
    "hint": "Kanban promotes ongoing process adjustments.",
    "answerDescription": "Regular feedback and data analysis help teams continuously refine their workflows."
  },
  {
    "id": "agile_541",
    "question": "Why is work visualization crucial in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps teams identify bottlenecks and inefficiencies", "isCorrect": true },
      { "id": "option_2", "text": "It ensures tasks are completed in a fixed sequence", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for tracking metrics", "isCorrect": false }
    ],
    "hint": "Seeing work status helps optimize processes.",
    "answerDescription": "Visualization allows teams to identify delays and improve workflow efficiency."
  },
  {
    "id": "agile_542",
    "question": "What is the primary purpose of using a pull system in Kanban?",
    "options": [
      { "id": "option_1", "text": "To allow teams to start work only when capacity is available", "isCorrect": true },
      { "id": "option_2", "text": "To push tasks onto team members as soon as possible", "isCorrect": false },
      { "id": "option_3", "text": "To assign deadlines to all work items", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize tasks based on urgency alone", "isCorrect": false }
    ],
    "hint": "Kanban prevents overloading teams with work.",
    "answerDescription": "A pull system ensures new tasks are taken only when the team has capacity, preventing overload."
  },
  {
    "id": "agile_543",
    "question": "What does the cumulative flow diagram (CFD) help teams analyze in Kanban?",
    "options": [
      { "id": "option_1", "text": "The distribution of work across different stages", "isCorrect": true },
      { "id": "option_2", "text": "The individual performance of team members", "isCorrect": false },
      { "id": "option_3", "text": "The number of backlog items remaining", "isCorrect": false },
      { "id": "option_4", "text": "The estimated deadlines for all tasks", "isCorrect": false }
    ],
    "hint": "CFD provides insights into workflow stability.",
    "answerDescription": "A cumulative flow diagram helps teams track work distribution and identify process bottlenecks."
  },
  {
    "id": "agile_544",
    "question": "What is the primary reason for tracking cycle time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To measure how long it takes to complete a task", "isCorrect": true },
      { "id": "option_2", "text": "To calculate team membersâ€™ daily workload", "isCorrect": false },
      { "id": "option_3", "text": "To determine the number of backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict deadlines on each task", "isCorrect": false }
    ],
    "hint": "Cycle time helps teams analyze efficiency.",
    "answerDescription": "By tracking cycle time, teams can improve efficiency and predictability in their workflow."
  },
  {
    "id": "agile_545",
    "question": "Why is feedback an essential part of Kanban?",
    "options": [
      { "id": "option_1", "text": "It allows teams to make continuous process improvements", "isCorrect": true },
      { "id": "option_2", "text": "It is only required when major issues arise", "isCorrect": false },
      { "id": "option_3", "text": "It helps track individual performance ratings", "isCorrect": false },
      { "id": "option_4", "text": "It ensures work is always assigned to specific people", "isCorrect": false }
    ],
    "hint": "Kanban promotes ongoing improvements.",
    "answerDescription": "Continuous feedback helps teams refine their process for better workflow management."
  },
  {
    "id": "agile_546",
    "question": "How does Kanban help teams balance demand and capability?",
    "options": [
      { "id": "option_1", "text": "By ensuring WIP limits match the team's capacity", "isCorrect": true },
      { "id": "option_2", "text": "By requiring all tasks to be completed sequentially", "isCorrect": false },
      { "id": "option_3", "text": "By pushing urgent tasks regardless of workload", "isCorrect": false },
      { "id": "option_4", "text": "By assigning specific deadlines for each task", "isCorrect": false }
    ],
    "hint": "WIP limits help maintain a steady workflow.",
    "answerDescription": "Teams use WIP limits to prevent overload and ensure work flows smoothly at a sustainable pace."
  },
  {
    "id": "agile_547",
    "question": "What does the concept of 'flow efficiency' measure in Kanban?",
    "options": [
      { "id": "option_1", "text": "The ratio of active work time to total cycle time", "isCorrect": true },
      { "id": "option_2", "text": "The number of tasks assigned per team member", "isCorrect": false },
      { "id": "option_3", "text": "The estimated completion time for each task", "isCorrect": false },
      { "id": "option_4", "text": "The backlog size compared to work in progress", "isCorrect": false }
    ],
    "hint": "It helps assess how efficiently tasks move through the workflow.",
    "answerDescription": "Flow efficiency highlights the proportion of time work is actively progressing versus waiting."
  },
  {
    "id": "agile_548",
    "question": "What is the main benefit of using Kanban boards?",
    "options": [
      { "id": "option_1", "text": "They provide a static workflow structure", "isCorrect": false },
      { "id": "option_2", "text": "They help visualize work progress and bottlenecks", "isCorrect": true },
      { "id": "option_3", "text": "They eliminate the need for daily meetings", "isCorrect": false },
      { "id": "option_4", "text": "They enforce fixed deadlines for tasks", "isCorrect": false }
    ],
    "hint": "Kanban boards enhance workflow transparency.",
    "answerDescription": "By visualizing tasks on a Kanban board, teams can track progress and identify process inefficiencies."
  },
  {
    "id": "agile_549",
    "question": "Why are explicit policies important in Kanban?",
    "options": [
      { "id": "option_1", "text": "They ensure work moves forward predictably", "isCorrect": false },
      { "id": "option_2", "text": "They help teams understand workflow expectations", "isCorrect": true },
      { "id": "option_3", "text": "They limit collaboration between teams", "isCorrect": false },
      { "id": "option_4", "text": "They enforce fixed priorities for tasks", "isCorrect": false }
    ],
    "hint": "Clearly defined policies guide how work flows through Kanban.",
    "answerDescription": "Explicit policies help teams set clear rules and maintain consistency in their workflow."
  },
  {
    "id": "agile_550",
    "question": "How does Kanban handle prioritization of work?",
    "options": [
      { "id": "option_1", "text": "By setting fixed due dates for all tasks", "isCorrect": false },
      { "id": "option_2", "text": "By allowing teams to reorder tasks based on value and urgency", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing first-come, first-served processing", "isCorrect": false },
      { "id": "option_4", "text": "By limiting task assignments to managers only", "isCorrect": false }
    ],
    "hint": "Kanban provides flexibility in task sequencing.",
    "answerDescription": "Kanban allows teams to prioritize work dynamically based on business needs and urgency."
  },
  {
    "id": "agile_551",
    "question": "What is the effect of setting low WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "It forces teams to multitask", "isCorrect": false },
      { "id": "option_2", "text": "It helps teams focus on completing tasks faster", "isCorrect": true },
      { "id": "option_3", "text": "It leads to more work being assigned at once", "isCorrect": false },
      { "id": "option_4", "text": "It reduces overall team efficiency", "isCorrect": false }
    ],
    "hint": "Lower WIP limits encourage task completion before new work starts.",
    "answerDescription": "By reducing WIP limits, teams can minimize context switching and focus on completing work efficiently."
  },
  {
    "id": "agile_552",
    "question": "Why is cycle time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It tracks the number of tasks in progress", "isCorrect": false },
      { "id": "option_2", "text": "It measures how long it takes to complete a task", "isCorrect": true },
      { "id": "option_3", "text": "It calculates the cost of work items", "isCorrect": false },
      { "id": "option_4", "text": "It determines team size requirements", "isCorrect": false }
    ],
    "hint": "Cycle time provides insight into workflow speed.",
    "answerDescription": "Tracking cycle time helps teams analyze efficiency and improve delivery predictability."
  },
  {
    "id": "agile_553",
    "question": "What role does feedback play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It is only needed when a task is delayed", "isCorrect": false },
      { "id": "option_2", "text": "It enables continuous improvement and process refinement", "isCorrect": true },
      { "id": "option_3", "text": "It determines which team member is responsible for errors", "isCorrect": false },
      { "id": "option_4", "text": "It is mainly used for performance evaluations", "isCorrect": false }
    ],
    "hint": "Kanban supports ongoing process optimization.",
    "answerDescription": "Regular feedback loops help teams refine workflows and make incremental improvements."
  },
  {
    "id": "agile_554",
    "question": "How does Kanban ensure work moves smoothly through different stages?",
    "options": [
      { "id": "option_1", "text": "By setting deadlines for each phase", "isCorrect": false },
      { "id": "option_2", "text": "By using visual signals to track progress", "isCorrect": true },
      { "id": "option_3", "text": "By requiring manager approval at each stage", "isCorrect": false },
      { "id": "option_4", "text": "By assigning multiple team members to a single task", "isCorrect": false }
    ],
    "hint": "Visualization is key to Kanban workflow management.",
    "answerDescription": "Kanban uses visual signals like task cards and columns to track work progress effectively."
  },
  {
    "id": "agile_555",
    "question": "What is the main purpose of lead time measurement in Kanban?",
    "options": [
      { "id": "option_1", "text": "To measure the number of tasks completed per day", "isCorrect": false },
      { "id": "option_2", "text": "To calculate the time taken from request to completion", "isCorrect": true },
      { "id": "option_3", "text": "To determine the complexity of a work item", "isCorrect": false },
      { "id": "option_4", "text": "To track the number of pending tasks", "isCorrect": false }
    ],
    "hint": "Lead time considers the full duration from start to finish.",
    "answerDescription": "Lead time helps teams understand delivery speed and identify areas for improvement."
  },
  {
    "id": "agile_556",
    "question": "Why is limiting work in progress (WIP) a key practice in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign more work to each team member", "isCorrect": false },
      { "id": "option_2", "text": "To prevent task overload and ensure smooth workflow", "isCorrect": true },
      { "id": "option_3", "text": "To speed up work completion by multitasking", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all tasks are completed simultaneously", "isCorrect": false }
    ],
    "hint": "WIP limits prevent excessive multitasking.",
    "answerDescription": "Setting WIP limits ensures work flows smoothly and prevents bottlenecks in the process."
  },
  {
    "id": "agile_557",
    "question": "How does Kanban handle bottlenecks in the workflow?",
    "options": [
      { "id": "option_1", "text": "By reassigning all work to a single team member", "isCorrect": false },
      { "id": "option_2", "text": "By identifying and addressing constraints in real time", "isCorrect": true },
      { "id": "option_3", "text": "By increasing WIP limits temporarily", "isCorrect": false },
      { "id": "option_4", "text": "By pausing all work until the bottleneck is resolved", "isCorrect": false }
    ],
    "hint": "Kanban focuses on improving flow and reducing blockers.",
    "answerDescription": "Kanban encourages teams to identify and resolve workflow bottlenecks as they arise."
  },
  {
    "id": "agile_558",
    "question": "What is one key reason Kanban encourages limiting work in progress?",
    "options": [
      { "id": "option_1", "text": "To increase the number of tasks in the queue", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all team members are always busy", "isCorrect": false },
      { "id": "option_3", "text": "To improve focus and reduce task switching", "isCorrect": true },
      { "id": "option_4", "text": "To make task assignments more rigid", "isCorrect": false }
    ],
    "hint": "Kanban emphasizes completing tasks over starting too many.",
    "answerDescription": "Limiting WIP helps teams complete work efficiently and avoid multitasking."
  },
  {
    "id": "agile_559",
    "question": "Why is continuous flow important in Kanban?",
    "options": [
      { "id": "option_1", "text": "It ensures that work moves in large batches", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for prioritization", "isCorrect": false },
      { "id": "option_3", "text": "It helps maintain steady and predictable delivery", "isCorrect": true },
      { "id": "option_4", "text": "It increases the time spent on individual tasks", "isCorrect": false }
    ],
    "hint": "Continuous flow prevents unnecessary delays in work completion.",
    "answerDescription": "Maintaining a steady flow of tasks reduces bottlenecks and improves efficiency."
  },
  {
    "id": "agile_560",
    "question": "How does Kanban improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "By restricting communication to managers", "isCorrect": false },
      { "id": "option_2", "text": "By making team members work on separate tasks", "isCorrect": false },
      { "id": "option_3", "text": "By providing visibility into work progress and dependencies", "isCorrect": true },
      { "id": "option_4", "text": "By assigning work based on seniority", "isCorrect": false }
    ],
    "hint": "Kanban boards provide transparency into team workflows.",
    "answerDescription": "Kanban enhances collaboration by making work progress visible to everyone."
  },
  {
    "id": "agile_561",
    "question": "What is the purpose of defining service-level expectations in Kanban?",
    "options": [
      { "id": "option_1", "text": "To reduce the number of tasks taken up by a team", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all tasks are completed at the same speed", "isCorrect": false },
      { "id": "option_3", "text": "To establish transparency on delivery time and priorities", "isCorrect": true },
      { "id": "option_4", "text": "To set strict deadlines for each task", "isCorrect": false }
    ],
    "hint": "Kanban focuses on making work expectations clear.",
    "answerDescription": "Defining service-level expectations helps teams and stakeholders understand delivery timelines."
  },
  {
    "id": "agile_562",
    "question": "How does limiting WIP help improve efficiency?",
    "options": [
      { "id": "option_1", "text": "By allowing multiple tasks to be worked on simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "By forcing teams to work longer hours", "isCorrect": false },
      { "id": "option_3", "text": "By preventing overload and reducing bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "By increasing the number of tasks in the system", "isCorrect": false }
    ],
    "hint": "Lowering WIP limits keeps work moving smoothly.",
    "answerDescription": "WIP limits prevent too much work from being in progress at once, improving efficiency."
  },
  {
    "id": "agile_563",
    "question": "What is one major advantage of using Kanban over traditional project management?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for planning", "isCorrect": false },
      { "id": "option_2", "text": "It requires work to be completed in strict sprints", "isCorrect": false },
      { "id": "option_3", "text": "It provides flexibility in work prioritization", "isCorrect": true },
      { "id": "option_4", "text": "It removes the need for process improvements", "isCorrect": false }
    ],
    "hint": "Kanban allows for dynamic prioritization.",
    "answerDescription": "Unlike rigid project management, Kanban lets teams adjust priorities as needed."
  },
  {
    "id": "agile_564",
    "question": "Why is tracking cumulative flow in Kanban useful?",
    "options": [
      { "id": "option_1", "text": "It measures employee productivity", "isCorrect": false },
      { "id": "option_2", "text": "It determines the total number of work items in progress", "isCorrect": false },
      { "id": "option_3", "text": "It helps identify workflow imbalances and delays", "isCorrect": true },
      { "id": "option_4", "text": "It sets fixed deadlines for each task", "isCorrect": false }
    ],
    "hint": "Cumulative flow diagrams show process stability.",
    "answerDescription": "By tracking cumulative flow, teams can detect workflow bottlenecks and optimize processes."
  },
  {
    "id": "agile_565",
    "question": "What is a key difference between Scrum and Kanban?",
    "options": [
      { "id": "option_1", "text": "Scrum does not allow for process changes", "isCorrect": false },
      { "id": "option_2", "text": "Kanban requires predefined sprints", "isCorrect": false },
      { "id": "option_3", "text": "Kanban focuses on continuous flow rather than time-boxed iterations", "isCorrect": true },
      { "id": "option_4", "text": "Scrum discourages team collaboration", "isCorrect": false }
    ],
    "hint": "Kanban is more flexible in workflow management.",
    "answerDescription": "Unlike Scrumâ€™s sprint-based approach, Kanban promotes a continuous flow of work."
  },
  {
    "id": "agile_566",
    "question": "How does Kanban help in identifying process inefficiencies?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of tasks assigned per person", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict deadlines on all tasks", "isCorrect": false },
      { "id": "option_3", "text": "By visualizing bottlenecks in the workflow", "isCorrect": true },
      { "id": "option_4", "text": "By limiting team communication", "isCorrect": false }
    ],
    "hint": "Kanban boards make workflow challenges visible.",
    "answerDescription": "Visualization tools like Kanban boards highlight inefficiencies, enabling teams to improve processes."
  },
  {
    "id": "agile_567",
    "question": "Why is cycle time an essential metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It determines the number of employees needed", "isCorrect": false },
      { "id": "option_2", "text": "It measures the cost of completed tasks", "isCorrect": false },
      { "id": "option_3", "text": "It tracks the time taken to complete a task from start to finish", "isCorrect": true },
      { "id": "option_4", "text": "It calculates the priority level of work items", "isCorrect": false }
    ],
    "hint": "Cycle time measures the speed of work completion.",
    "answerDescription": "Monitoring cycle time helps teams identify delays and optimize workflow efficiency."
  },
  {
    "id": "agile_568",
    "question": "What is the primary purpose of visualization in Kanban?",
    "options": [
      { "id": "option_1", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_2", "text": "To hide inefficiencies in the workflow", "isCorrect": false },
      { "id": "option_3", "text": "To ensure equal workload distribution", "isCorrect": false },
      { "id": "option_4", "text": "To improve transparency and identify bottlenecks", "isCorrect": true }
    ],
    "hint": "Kanban boards help teams see the status of tasks easily.",
    "answerDescription": "Visualization in Kanban helps teams understand workflow status, identify delays, and improve efficiency."
  },
  {
    "id": "agile_569",
    "question": "Why does Kanban emphasize incremental changes over large overhauls?",
    "options": [
      { "id": "option_1", "text": "To avoid disrupting the entire workflow", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on long-term improvements", "isCorrect": false },
      { "id": "option_3", "text": "To completely replace existing processes", "isCorrect": false },
      { "id": "option_4", "text": "To allow continuous and manageable improvements", "isCorrect": true }
    ],
    "hint": "Small changes help teams adapt without major disruptions.",
    "answerDescription": "Kanban promotes gradual improvements, making it easier for teams to refine their processes over time."
  },
  {
    "id": "agile_570",
    "question": "How does limiting WIP enhance team productivity?",
    "options": [
      { "id": "option_1", "text": "By ensuring every team member is always occupied", "isCorrect": false },
      { "id": "option_2", "text": "By increasing the total workload assigned", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing speed over quality", "isCorrect": false },
      { "id": "option_4", "text": "By reducing context switching and improving focus", "isCorrect": true }
    ],
    "hint": "Too many tasks at once slow down overall progress.",
    "answerDescription": "Limiting WIP helps teams focus on finishing tasks before taking on new ones, improving efficiency."
  },
  {
    "id": "agile_571",
    "question": "What role does feedback play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It slows down decision-making", "isCorrect": false },
      { "id": "option_2", "text": "It is only used for major project changes", "isCorrect": false },
      { "id": "option_3", "text": "It is collected but rarely acted upon", "isCorrect": false },
      { "id": "option_4", "text": "It drives continuous improvement and adaptation", "isCorrect": true }
    ],
    "hint": "Regular feedback loops help teams refine their process.",
    "answerDescription": "Kanban relies on continuous feedback to identify issues, refine workflows, and enhance efficiency."
  },
  {
    "id": "agile_572",
    "question": "Why is flow efficiency important in Kanban?",
    "options": [
      { "id": "option_1", "text": "It ensures equal task distribution among team members", "isCorrect": false },
      { "id": "option_2", "text": "It guarantees work is completed in a fixed time", "isCorrect": false },
      { "id": "option_3", "text": "It focuses only on reducing cycle time", "isCorrect": false },
      { "id": "option_4", "text": "It helps identify delays and optimize throughput", "isCorrect": true }
    ],
    "hint": "Flow efficiency highlights wasted time in a process.",
    "answerDescription": "Optimizing flow efficiency ensures tasks move smoothly through the system, minimizing delays."
  },
  {
    "id": "agile_573",
    "question": "How does Kanban support continuous delivery?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict batch processing", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing documentation over execution", "isCorrect": false },
      { "id": "option_3", "text": "By requiring a set release cycle", "isCorrect": false },
      { "id": "option_4", "text": "By enabling work to be delivered as soon as it's ready", "isCorrect": true }
    ],
    "hint": "Kanban does not enforce fixed iterations for releases.",
    "answerDescription": "With Kanban, teams can continuously deliver completed work without waiting for batch releases."
  },
  {
    "id": "agile_574",
    "question": "What does a cumulative flow diagram in Kanban help teams understand?",
    "options": [
      { "id": "option_1", "text": "Individual performance levels", "isCorrect": false },
      { "id": "option_2", "text": "The total number of completed projects", "isCorrect": false },
      { "id": "option_3", "text": "The estimated effort required for each task", "isCorrect": false },
      { "id": "option_4", "text": "The distribution of work across different process stages", "isCorrect": true }
    ],
    "hint": "This diagram helps identify work imbalances.",
    "answerDescription": "Cumulative flow diagrams provide insight into work distribution and process bottlenecks."
  },
  {
    "id": "agile_575",
    "question": "How does Kanban help teams adapt to changing priorities?",
    "options": [
      { "id": "option_1", "text": "By enforcing a strict backlog structure", "isCorrect": false },
      { "id": "option_2", "text": "By restricting changes once work begins", "isCorrect": false },
      { "id": "option_3", "text": "By assigning tasks only to specific individuals", "isCorrect": false },
      { "id": "option_4", "text": "By allowing work items to be reprioritized dynamically", "isCorrect": true }
    ],
    "hint": "Kanban supports real-time adjustments to work items.",
    "answerDescription": "Kanban allows teams to adjust work priorities quickly based on evolving requirements."
  },
  {
    "id": "agile_576",
    "question": "What is the purpose of lead time measurement in Kanban?",
    "options": [
      { "id": "option_1", "text": "To determine the number of team members needed", "isCorrect": false },
      { "id": "option_2", "text": "To set fixed deadlines for every task", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all work is completed at the same pace", "isCorrect": false },
      { "id": "option_4", "text": "To measure the total time from request to delivery", "isCorrect": true }
    ],
    "hint": "Lead time tracks how long it takes for work to be completed.",
    "answerDescription": "By monitoring lead time, teams can identify delays and optimize their processes."
  },
  {
    "id": "agile_577",
    "question": "Why does Kanban encourage limiting unplanned work?",
    "options": [
      { "id": "option_1", "text": "To prevent urgent requests from being addressed", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all work follows a fixed schedule", "isCorrect": false },
      { "id": "option_3", "text": "To restrict team flexibility", "isCorrect": false },
      { "id": "option_4", "text": "To maintain predictability and workflow stability", "isCorrect": true }
    ],
    "hint": "Unplanned work can disrupt existing workflows.",
    "answerDescription": "Kanban helps manage unplanned work by ensuring that teams maintain a predictable workflow."
  },{
    "id": "agile_578",
    "question": "What is a key benefit of using a Kanban board?",
    "options": [
      { "id": "option_1", "text": "It provides visual clarity on work progress", "isCorrect": true },
      { "id": "option_2", "text": "It ensures all tasks are completed in the same time frame", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for team communication", "isCorrect": false },
      { "id": "option_4", "text": "It replaces the need for backlog grooming", "isCorrect": false }
    ],
    "hint": "Kanban boards make workflow transparency easier.",
    "answerDescription": "A Kanban board helps teams track progress, identify bottlenecks, and manage workflows efficiently."
  },
  {
    "id": "agile_579",
    "question": "Why is limiting work in progress (WIP) important in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps prevent bottlenecks and improves efficiency", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the number of team members required", "isCorrect": false },
      { "id": "option_3", "text": "It enforces a fixed timeframe for all tasks", "isCorrect": false },
      { "id": "option_4", "text": "It increases the number of tasks assigned per sprint", "isCorrect": false }
    ],
    "hint": "Too many tasks in progress slow down overall efficiency.",
    "answerDescription": "Limiting WIP ensures teams focus on completing work rather than starting too many tasks at once."
  },
  {
    "id": "agile_580",
    "question": "What is the primary goal of continuous improvement in Kanban?",
    "options": [
      { "id": "option_1", "text": "To optimize processes for better efficiency over time", "isCorrect": true },
      { "id": "option_2", "text": "To prevent any changes to the current workflow", "isCorrect": false },
      { "id": "option_3", "text": "To increase workload without affecting quality", "isCorrect": false },
      { "id": "option_4", "text": "To ensure work is completed at the fastest pace possible", "isCorrect": false }
    ],
    "hint": "Continuous improvement focuses on making small, ongoing enhancements.",
    "answerDescription": "Kanban encourages gradual improvements to workflows, ensuring teams work more efficiently over time."
  },
  {
    "id": "agile_581",
    "question": "How does Kanban support better workflow predictability?",
    "options": [
      { "id": "option_1", "text": "By making cycle times more consistent", "isCorrect": true },
      { "id": "option_2", "text": "By ensuring tasks are always completed in the order they arrive", "isCorrect": false },
      { "id": "option_3", "text": "By assigning work randomly among team members", "isCorrect": false },
      { "id": "option_4", "text": "By setting fixed deadlines for every task", "isCorrect": false }
    ],
    "hint": "Kanban helps stabilize work completion times.",
    "answerDescription": "Kanban focuses on tracking cycle times, making it easier to estimate how long tasks will take."
  },
  {
    "id": "agile_582",
    "question": "What is the purpose of setting explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To define clear workflow expectations and rules", "isCorrect": true },
      { "id": "option_2", "text": "To restrict team flexibility", "isCorrect": false },
      { "id": "option_3", "text": "To mandate a fixed number of tasks per person", "isCorrect": false },
      { "id": "option_4", "text": "To prevent task reassignment between team members", "isCorrect": false }
    ],
    "hint": "Kanban benefits from well-defined work policies.",
    "answerDescription": "Explicit policies help teams understand how work moves through the system and what is expected at each stage."
  },
  {
    "id": "agile_583",
    "question": "Why does Kanban encourage teams to focus on flow efficiency?",
    "options": [
      { "id": "option_1", "text": "To reduce delays and optimize task movement", "isCorrect": true },
      { "id": "option_2", "text": "To increase the amount of work in progress at all times", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all work is completed within the same timeframe", "isCorrect": false },
      { "id": "option_4", "text": "To remove the need for prioritization", "isCorrect": false }
    ],
    "hint": "Optimizing workflow ensures work moves smoothly through the system.",
    "answerDescription": "Focusing on flow efficiency helps reduce idle time and ensures a steady movement of tasks."
  },
  {
    "id": "agile_584",
    "question": "What role does feedback play in Kanban process optimization?",
    "options": [
      { "id": "option_1", "text": "It helps teams identify and resolve workflow inefficiencies", "isCorrect": true },
      { "id": "option_2", "text": "It is only useful for high-level management decisions", "isCorrect": false },
      { "id": "option_3", "text": "It is collected but rarely acted upon", "isCorrect": false },
      { "id": "option_4", "text": "It replaces the need for team retrospectives", "isCorrect": false }
    ],
    "hint": "Regular feedback loops help teams improve their workflows.",
    "answerDescription": "Kanban relies on feedback to refine work processes, address issues, and continuously improve efficiency."
  },
  {
    "id": "agile_585",
    "question": "How does limiting batch sizes impact workflow in Kanban?",
    "options": [
      { "id": "option_1", "text": "It reduces wait times and speeds up delivery", "isCorrect": true },
      { "id": "option_2", "text": "It increases the total number of tasks assigned", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for prioritization", "isCorrect": false },
      { "id": "option_4", "text": "It ensures all work is completed in large chunks", "isCorrect": false }
    ],
    "hint": "Smaller batches move faster through the system.",
    "answerDescription": "By reducing batch sizes, teams can process work more efficiently and reduce delays in delivery."
  },
  {
    "id": "agile_586",
    "question": "What is the purpose of the 'pull system' in Kanban?",
    "options": [
      { "id": "option_1", "text": "To allow work to be started only when capacity is available", "isCorrect": true },
      { "id": "option_2", "text": "To ensure all tasks are assigned simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "To push work onto teams regardless of their workload", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for prioritization", "isCorrect": false }
    ],
    "hint": "Kanban pulls tasks based on availability rather than pushing work.",
    "answerDescription": "The pull system ensures work is taken in only when there is available capacity, preventing overload."
  },
  {
    "id": "agile_587",
    "question": "How does measuring lead time help teams improve performance in Kanban?",
    "options": [
      { "id": "option_1", "text": "It highlights delays and helps optimize workflow", "isCorrect": true },
      { "id": "option_2", "text": "It ensures all tasks take the same time to complete", "isCorrect": false },
      { "id": "option_3", "text": "It increases the number of tasks worked on at once", "isCorrect": false },
      { "id": "option_4", "text": "It replaces the need for continuous improvement", "isCorrect": false }
    ],
    "hint": "Lead time measures how long it takes to complete a task from request to delivery.",
    "answerDescription": "Tracking lead time allows teams to identify bottlenecks and improve their work process."
  },

  {
    "id": "agile_588",
    "question": "How does Kanban help teams identify bottlenecks?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks equally among team members", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating WIP limits", "isCorrect": false },
      { "id": "option_4", "text": "By visually representing work in progress on the board", "isCorrect": true }
    ],
    "hint": "Kanban boards help track workflow stages.",
    "answerDescription": "Kanban boards make it easy to spot bottlenecks by showing where tasks are accumulating."
  },
  {
    "id": "agile_589",
    "question": "Why does Kanban emphasize evolutionary change?",
    "options": [
      { "id": "option_1", "text": "To replace traditional project management entirely", "isCorrect": false },
      { "id": "option_2", "text": "To mandate frequent team restructuring", "isCorrect": false },
      { "id": "option_3", "text": "To ensure tasks are always reassigned", "isCorrect": false },
      { "id": "option_4", "text": "To encourage continuous, incremental improvements", "isCorrect": true }
    ],
    "hint": "Kanban prefers gradual optimization over radical change.",
    "answerDescription": "Kanban supports small, manageable improvements to workflows rather than large, disruptive changes."
  },
  {
    "id": "agile_590",
    "question": "What is the key purpose of measuring cycle time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase the amount of work in progress", "isCorrect": false },
      { "id": "option_2", "text": "To limit team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To reduce team flexibility", "isCorrect": false },
      { "id": "option_4", "text": "To track how long tasks take from start to completion", "isCorrect": true }
    ],
    "hint": "Cycle time measures task duration from initiation to completion.",
    "answerDescription": "By tracking cycle time, teams can optimize efficiency and reduce delays."
  },
  {
    "id": "agile_591",
    "question": "How does Kanban improve task prioritization?",
    "options": [
      { "id": "option_1", "text": "By limiting work in progress to force decisions", "isCorrect": false },
      { "id": "option_2", "text": "By assigning strict task deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By requiring daily stand-up meetings", "isCorrect": false },
      { "id": "option_4", "text": "By allowing work to be pulled based on priority and capacity", "isCorrect": true }
    ],
    "hint": "Kanban lets teams pull high-priority work as needed.",
    "answerDescription": "The pull-based system of Kanban ensures that tasks are selected based on urgency and available resources."
  },
  {
    "id": "agile_592",
    "question": "Why is work item aging an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps track how long a task has been completed", "isCorrect": false },
      { "id": "option_2", "text": "It determines when to discard unfinished tasks", "isCorrect": false },
      { "id": "option_3", "text": "It ensures all tasks take the same amount of time", "isCorrect": false },
      { "id": "option_4", "text": "It identifies tasks that have been in progress too long", "isCorrect": true }
    ],
    "hint": "Tasks taking too long may indicate workflow issues.",
    "answerDescription": "Tracking work item aging helps teams address delays and optimize task completion times."
  },
  {
    "id": "agile_593",
    "question": "What is the main purpose of a commitment point in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign work to every team member equally", "isCorrect": false },
      { "id": "option_2", "text": "To enforce fixed due dates on all tasks", "isCorrect": false },
      { "id": "option_3", "text": "To prevent task reassignment", "isCorrect": false },
      { "id": "option_4", "text": "To indicate when a task is ready to be actively worked on", "isCorrect": true }
    ],
    "hint": "A task enters the workflow only when it is ready for execution.",
    "answerDescription": "The commitment point marks when a work item transitions from backlog to active work, ensuring smooth flow."
  },
  {
    "id": "agile_594",
    "question": "How does Kanban promote transparency within a team?",
    "options": [
      { "id": "option_1", "text": "By keeping task progress private", "isCorrect": false },
      { "id": "option_2", "text": "By requiring formal reporting structures", "isCorrect": false },
      { "id": "option_3", "text": "By limiting discussions on work items", "isCorrect": false },
      { "id": "option_4", "text": "By making work visible through boards and metrics", "isCorrect": true }
    ],
    "hint": "Kanban boards are key to workflow visibility.",
    "answerDescription": "Kanban's visual approach ensures team members can see work progress, helping to identify and resolve issues."
  },
  {
    "id": "agile_595",
    "question": "Why should teams avoid exceeding their WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "To prevent too many people working on a single task", "isCorrect": false },
      { "id": "option_2", "text": "To increase the complexity of task management", "isCorrect": false },
      { "id": "option_3", "text": "To slow down the pace of work", "isCorrect": false },
      { "id": "option_4", "text": "To maintain workflow efficiency and prevent overload", "isCorrect": true }
    ],
    "hint": "Exceeding WIP limits can cause inefficiencies.",
    "answerDescription": "WIP limits ensure work is completed efficiently without overwhelming the team."
  },
  {
    "id": "agile_596",
    "question": "What is the benefit of defining service level expectations (SLEs) in Kanban?",
    "options": [
      { "id": "option_1", "text": "It forces teams to complete work at a fixed speed", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for work prioritization", "isCorrect": false },
      { "id": "option_3", "text": "It removes the need for WIP limits", "isCorrect": false },
      { "id": "option_4", "text": "It sets expectations for work completion timeframes", "isCorrect": true }
    ],
    "hint": "SLEs provide a timeframe for work completion without strict deadlines.",
    "answerDescription": "Defining SLEs helps teams manage expectations for how long tasks should take to complete."
  },
  {
    "id": "agile_597",
    "question": "How does Kanban handle changing priorities?",
    "options": [
      { "id": "option_1", "text": "By locking tasks into fixed schedules", "isCorrect": false },
      { "id": "option_2", "text": "By requiring approval before any task changes", "isCorrect": false },
      { "id": "option_3", "text": "By preventing task reassignment", "isCorrect": false },
      { "id": "option_4", "text": "By allowing teams to pull the most important work first", "isCorrect": true }
    ],
    "hint": "Kanban is adaptable to shifting priorities.",
    "answerDescription": "Kanbanâ€™s pull-based system enables teams to adapt to changes by selecting the highest-priority work available."
  },
  {
    "id": "agile_598",
    "question": "What is the primary goal of Kanban in Agile project management?",
    "options": [
      { "id": "option_1", "text": "To visualize and optimize workflow", "isCorrect": true },
      { "id": "option_2", "text": "To replace all other Agile frameworks", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for meetings", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict work schedules", "isCorrect": false }
    ],
    "hint": "Kanban helps in managing work efficiently by visualizing it.",
    "answerDescription": "Kanban is used to optimize workflow by making work visible, identifying bottlenecks, and improving efficiency."
  },
  {
    "id": "agile_599",
    "question": "Why do teams use cumulative flow diagrams (CFDs) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To track work progress and identify bottlenecks", "isCorrect": true },
      { "id": "option_2", "text": "To assign work to individuals automatically", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for WIP limits", "isCorrect": false },
      { "id": "option_4", "text": "To enforce equal work distribution", "isCorrect": false }
    ],
    "hint": "A CFD provides a visual representation of work in progress over time.",
    "answerDescription": "Cumulative flow diagrams help teams monitor workflow, measure cycle times, and detect inefficiencies."
  },
  {
    "id": "agile_600",
    "question": "How does limiting WIP improve efficiency in Kanban?",
    "options": [
      { "id": "option_1", "text": "By preventing task overload and ensuring smooth workflow", "isCorrect": true },
      { "id": "option_2", "text": "By forcing teams to complete work faster", "isCorrect": false },
      { "id": "option_3", "text": "By removing flexibility in task assignments", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating the need for daily stand-ups", "isCorrect": false }
    ],
    "hint": "Too much work in progress can slow down overall productivity.",
    "answerDescription": "Limiting WIP helps teams focus on completing tasks before taking on new ones, preventing bottlenecks."
  },
  {
    "id": "agile_601",
    "question": "What is the role of feedback loops in Kanban?",
    "options": [
      { "id": "option_1", "text": "To provide continuous improvement and process optimization", "isCorrect": true },
      { "id": "option_2", "text": "To assign tasks randomly", "isCorrect": false },
      { "id": "option_3", "text": "To increase the number of tasks in progress", "isCorrect": false },
      { "id": "option_4", "text": "To remove the need for retrospectives", "isCorrect": false }
    ],
    "hint": "Feedback loops allow teams to refine their processes over time.",
    "answerDescription": "Kanban incorporates feedback loops to ensure continuous learning, adaptation, and process improvement."
  },
  {
    "id": "agile_602",
    "question": "Why is lead time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the total time taken from request to completion", "isCorrect": true },
      { "id": "option_2", "text": "It determines how many tasks a team can handle", "isCorrect": false },
      { "id": "option_3", "text": "It enforces deadlines on tasks", "isCorrect": false },
      { "id": "option_4", "text": "It removes the need for WIP limits", "isCorrect": false }
    ],
    "hint": "Lead time tracks the entire duration of a work item from start to finish.",
    "answerDescription": "By monitoring lead time, teams can analyze their efficiency and make improvements to their workflow."
  },
  {
    "id": "agile_603",
    "question": "How does Kanban handle changing priorities?",
    "options": [
      { "id": "option_1", "text": "By allowing teams to pull the most important work first", "isCorrect": true },
      { "id": "option_2", "text": "By fixing all tasks in advance", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict work order", "isCorrect": false },
      { "id": "option_4", "text": "By requiring approval for every task change", "isCorrect": false }
    ],
    "hint": "Kanban is designed to be flexible with shifting priorities.",
    "answerDescription": "Kanban allows teams to select and start the highest-priority tasks first, ensuring adaptability to changing needs."
  },
  {
    "id": "agile_604",
    "question": "What is the benefit of using swimlanes in a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To categorize different types of work for better organization", "isCorrect": true },
      { "id": "option_2", "text": "To enforce task completion deadlines", "isCorrect": false },
      { "id": "option_3", "text": "To remove the need for cycle time tracking", "isCorrect": false },
      { "id": "option_4", "text": "To automatically assign tasks", "isCorrect": false }
    ],
    "hint": "Swimlanes help teams distinguish between different work categories.",
    "answerDescription": "Swimlanes allow teams to separate different types of work, such as urgent tasks, by visually segmenting the board."
  },
  {
    "id": "agile_605",
    "question": "How does Kanban encourage team collaboration?",
    "options": [
      { "id": "option_1", "text": "By making work progress visible to all team members", "isCorrect": true },
      { "id": "option_2", "text": "By assigning tasks randomly", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing individual work silos", "isCorrect": false },
      { "id": "option_4", "text": "By restricting communication between team members", "isCorrect": false }
    ],
    "hint": "Kanban's transparency allows teams to work together effectively.",
    "answerDescription": "By displaying work visually, Kanban fosters collaboration and ensures everyone is aware of project progress."
  },
  {
    "id": "agile_606",
    "question": "What is the impact of exceeding WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "It leads to inefficiencies and delays in task completion", "isCorrect": true },
      { "id": "option_2", "text": "It speeds up task completion", "isCorrect": false },
      { "id": "option_3", "text": "It has no effect on workflow", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates bottlenecks", "isCorrect": false }
    ],
    "hint": "Too much work in progress can cause bottlenecks.",
    "answerDescription": "Exceeding WIP limits disrupts workflow, leading to delays and reduced efficiency."
  },
  {
    "id": "agile_607",
    "question": "Why is it important to review and update Kanban policies?",
    "options": [
      { "id": "option_1", "text": "To ensure continuous improvement and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "To eliminate the need for workflow visualization", "isCorrect": false },
      { "id": "option_3", "text": "To increase team workload", "isCorrect": false },
      { "id": "option_4", "text": "To restrict task flexibility", "isCorrect": false }
    ],
    "hint": "Kanban policies should evolve to meet changing needs.",
    "answerDescription": "Regularly reviewing policies ensures they remain effective and support continuous improvement in workflow management."
  },

  {
    "id": "agile_608",
    "question": "What is a key principle of Kanban that helps teams improve their processes?",
    "options": [
      { "id": "option_1", "text": "Fixing workflow rules permanently", "isCorrect": false },
      { "id": "option_2", "text": "Continuous improvement through feedback", "isCorrect": true },
      { "id": "option_3", "text": "Maximizing work in progress", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating daily stand-ups", "isCorrect": false }
    ],
    "hint": "Kanban encourages gradual, iterative improvements.",
    "answerDescription": "Continuous improvement is a core principle of Kanban, allowing teams to adapt and optimize their workflows over time."
  },
  {
    "id": "agile_609",
    "question": "Why is it important to define explicit process policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To limit team communication", "isCorrect": false },
      { "id": "option_2", "text": "To ensure consistency and clarity in workflow", "isCorrect": true },
      { "id": "option_3", "text": "To increase work in progress", "isCorrect": false },
      { "id": "option_4", "text": "To restrict team autonomy", "isCorrect": false }
    ],
    "hint": "Clear policies help teams follow structured workflows.",
    "answerDescription": "Explicit process policies provide clear guidelines for workflow, ensuring consistency and reducing confusion."
  },
  {
    "id": "agile_610",
    "question": "What role does cycle time play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It determines the number of daily meetings", "isCorrect": false },
      { "id": "option_2", "text": "It helps measure efficiency and predict delivery times", "isCorrect": true },
      { "id": "option_3", "text": "It enforces equal work distribution", "isCorrect": false },
      { "id": "option_4", "text": "It removes the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Cycle time helps teams understand how long work takes to complete.",
    "answerDescription": "By tracking cycle time, teams can identify inefficiencies and improve their ability to predict delivery timelines."
  },
  {
    "id": "agile_611",
    "question": "How does Kanban help manage dependencies between tasks?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By visualizing blocked tasks and constraints", "isCorrect": true },
      { "id": "option_3", "text": "By removing priority-based work", "isCorrect": false },
      { "id": "option_4", "text": "By limiting team collaboration", "isCorrect": false }
    ],
    "hint": "Kanban boards make task dependencies clear.",
    "answerDescription": "Kanban boards allow teams to see blocked tasks and dependencies, helping them manage workflow more effectively."
  },
  {
    "id": "agile_612",
    "question": "What is a key benefit of using a pull system in Kanban?",
    "options": [
      { "id": "option_1", "text": "It forces teams to complete tasks faster", "isCorrect": false },
      { "id": "option_2", "text": "It prevents overloading teams with excessive tasks", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for task prioritization", "isCorrect": false },
      { "id": "option_4", "text": "It mandates equal task distribution", "isCorrect": false }
    ],
    "hint": "Pull systems allow teams to control work intake.",
    "answerDescription": "Kanbanâ€™s pull system ensures teams only take on work when capacity allows, preventing bottlenecks and overload."
  },
  {
    "id": "agile_613",
    "question": "Why is limiting batch sizes important in Kanban?",
    "options": [
      { "id": "option_1", "text": "To enforce strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To reduce delays and improve flow", "isCorrect": true },
      { "id": "option_3", "text": "To increase work complexity", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate retrospective meetings", "isCorrect": false }
    ],
    "hint": "Smaller batch sizes lead to faster and smoother workflows.",
    "answerDescription": "Reducing batch sizes in Kanban leads to quicker delivery and helps avoid delays caused by large work chunks."
  },
  {
    "id": "agile_614",
    "question": "How does Kanban handle urgent or high-priority tasks?",
    "options": [
      { "id": "option_1", "text": "By requiring approval for every new task", "isCorrect": false },
      { "id": "option_2", "text": "By allowing teams to expedite critical work items", "isCorrect": true },
      { "id": "option_3", "text": "By increasing WIP limits", "isCorrect": false },
      { "id": "option_4", "text": "By creating new workflow rules instantly", "isCorrect": false }
    ],
    "hint": "Kanban can adapt to accommodate urgent tasks.",
    "answerDescription": "Kanban allows teams to mark and expedite high-priority tasks, ensuring they move through the system quickly."
  },
  {
    "id": "agile_615",
    "question": "What is the purpose of setting service level expectations (SLEs) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign work equally to all team members", "isCorrect": false },
      { "id": "option_2", "text": "To provide a predictable timeframe for task completion", "isCorrect": true },
      { "id": "option_3", "text": "To enforce hard deadlines on all tasks", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate workflow flexibility", "isCorrect": false }
    ],
    "hint": "SLEs help set expectations for when work should be completed.",
    "answerDescription": "Service level expectations define a reasonable timeframe for completing work items, helping teams manage expectations."
  },
  {
    "id": "agile_616",
    "question": "How does Kanban handle work distribution within teams?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks automatically", "isCorrect": false },
      { "id": "option_2", "text": "By allowing team members to pull tasks based on capacity", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing equal workload for all", "isCorrect": false },
      { "id": "option_4", "text": "By requiring manager approval for each task", "isCorrect": false }
    ],
    "hint": "Kanban promotes autonomy in task selection.",
    "answerDescription": "Kanban enables team members to choose tasks based on their current workload, ensuring smooth work distribution."
  },
  {
    "id": "agile_617",
    "question": "Why is visualizing blocked tasks important in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase task prioritization", "isCorrect": false },
      { "id": "option_2", "text": "To help teams identify and resolve bottlenecks quickly", "isCorrect": true },
      { "id": "option_3", "text": "To create a backlog of incomplete work", "isCorrect": false },
      { "id": "option_4", "text": "To enforce WIP limits more strictly", "isCorrect": false }
    ],
    "hint": "Blockers slow down workflow efficiency.",
    "answerDescription": "By making blocked tasks visible, Kanban helps teams address and resolve issues efficiently, keeping work flowing smoothly."
  },
  {
    "id": "agile_618",
    "question": "What is the purpose of cumulative flow diagrams in Kanban?",
    "options": [
      { "id": "option_1", "text": "To enforce strict work deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To track individual team performance", "isCorrect": false },
      { "id": "option_3", "text": "To visualize work distribution and identify bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "To create a fixed work schedule", "isCorrect": false }
    ],
    "hint": "This tool helps monitor workflow efficiency.",
    "answerDescription": "Cumulative flow diagrams provide a visual representation of work states, helping teams analyze flow and detect bottlenecks."
  },
  {
    "id": "agile_619",
    "question": "How does Kanban improve work efficiency?",
    "options": [
      { "id": "option_1", "text": "By increasing work in progress", "isCorrect": false },
      { "id": "option_2", "text": "By removing team autonomy", "isCorrect": false },
      { "id": "option_3", "text": "By optimizing flow and reducing cycle time", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing fixed task completion times", "isCorrect": false }
    ],
    "hint": "Kanban focuses on continuous improvement of workflow.",
    "answerDescription": "By reducing bottlenecks and limiting WIP, Kanban helps teams optimize efficiency and minimize delays."
  },
  {
    "id": "agile_620",
    "question": "What is a key characteristic of an effective Kanban board?",
    "options": [
      { "id": "option_1", "text": "It hides workflow policies", "isCorrect": false },
      { "id": "option_2", "text": "It has no limitations on work in progress", "isCorrect": false },
      { "id": "option_3", "text": "It provides transparency in task progress", "isCorrect": true },
      { "id": "option_4", "text": "It enforces strict deadlines", "isCorrect": false }
    ],
    "hint": "Kanban is designed to make workflows visible.",
    "answerDescription": "A well-structured Kanban board offers visibility into work status, helping teams manage tasks effectively."
  },
  {
    "id": "agile_621",
    "question": "Why does Kanban emphasize evolutionary change?",
    "options": [
      { "id": "option_1", "text": "To enforce sudden process overhauls", "isCorrect": false },
      { "id": "option_2", "text": "To reduce team involvement in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To promote gradual improvements without disrupting current workflows", "isCorrect": true },
      { "id": "option_4", "text": "To standardize all workflows across teams", "isCorrect": false }
    ],
    "hint": "Kanban supports incremental process improvements.",
    "answerDescription": "Kanban encourages teams to refine their processes gradually, reducing resistance to change and increasing adoption success."
  },
  {
    "id": "agile_622",
    "question": "How do WIP limits contribute to Kanbanâ€™s effectiveness?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of tasks in progress", "isCorrect": false },
      { "id": "option_2", "text": "By making work allocation more complex", "isCorrect": false },
      { "id": "option_3", "text": "By preventing overloading and improving workflow focus", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing strict deadlines", "isCorrect": false }
    ],
    "hint": "WIP limits help manage team workload efficiently.",
    "answerDescription": "Setting WIP limits ensures that teams focus on completing tasks rather than multitasking excessively, leading to better efficiency."
  },
  {
    "id": "agile_623",
    "question": "What is the purpose of swimlanes in a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To enforce priority ranking", "isCorrect": false },
      { "id": "option_2", "text": "To increase the number of tasks in progress", "isCorrect": false },
      { "id": "option_3", "text": "To categorize work based on teams, types, or urgency", "isCorrect": true },
      { "id": "option_4", "text": "To remove the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Swimlanes help organize different types of work.",
    "answerDescription": "Swimlanes provide a way to separate and track different work categories, making it easier to manage tasks and priorities."
  },
  {
    "id": "agile_624",
    "question": "How does Kanban support predictability in work delivery?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid task deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By increasing WIP limits", "isCorrect": false },
      { "id": "option_3", "text": "By tracking cycle time and throughput", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating low-priority tasks", "isCorrect": false }
    ],
    "hint": "Kanban relies on flow metrics for forecasting.",
    "answerDescription": "Monitoring cycle time and throughput enables teams to estimate work completion times more accurately."
  },
  {
    "id": "agile_625",
    "question": "What is one way Kanban minimizes waste in workflows?",
    "options": [
      { "id": "option_1", "text": "By increasing team workload", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict work schedules", "isCorrect": false },
      { "id": "option_3", "text": "By identifying and eliminating inefficiencies", "isCorrect": true },
      { "id": "option_4", "text": "By removing all process documentation", "isCorrect": false }
    ],
    "hint": "Kanban promotes efficiency and waste reduction.",
    "answerDescription": "Kanban helps teams refine their processes by identifying bottlenecks and inefficiencies, leading to waste reduction."
  },
  {
    "id": "agile_626",
    "question": "Why is lead time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It determines team structure", "isCorrect": false },
      { "id": "option_2", "text": "It enforces task prioritization", "isCorrect": false },
      { "id": "option_3", "text": "It helps measure the total time from request to delivery", "isCorrect": true },
      { "id": "option_4", "text": "It removes the need for cycle time tracking", "isCorrect": false }
    ],
    "hint": "Lead time tracks how long a request takes from start to finish.",
    "answerDescription": "Lead time is a key metric in Kanban that helps teams understand how efficiently work moves from request to completion."
  },
  {
    "id": "agile_627",
    "question": "What is the primary focus of Kanban when managing work?",
    "options": [
      { "id": "option_1", "text": "Maximizing multitasking", "isCorrect": false },
      { "id": "option_2", "text": "Enforcing strict deadlines", "isCorrect": false },
      { "id": "option_3", "text": "Optimizing workflow and reducing bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "Eliminating planning meetings", "isCorrect": false }
    ],
    "hint": "Kanban emphasizes smooth and efficient flow of work.",
    "answerDescription": "Kanbanâ€™s core goal is to improve work efficiency by optimizing flow, reducing delays, and minimizing unnecessary work."
  },

  {
    "id": "agile_628",
    "question": "What is the primary goal of limiting work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign more tasks to each team member", "isCorrect": false },
      { "id": "option_2", "text": "To increase multitasking efficiency", "isCorrect": false },
      { "id": "option_3", "text": "To delay task completion for better prioritization", "isCorrect": false },
      { "id": "option_4", "text": "To improve workflow efficiency and reduce bottlenecks", "isCorrect": true }
    ],
    "hint": "Kanban aims to optimize work delivery by controlling workload.",
    "answerDescription": "By limiting WIP, Kanban prevents overloading and ensures a steady and efficient workflow."
  },
  {
    "id": "agile_629",
    "question": "How does Kanban encourage continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By enforcing fixed work processes", "isCorrect": false },
      { "id": "option_2", "text": "By focusing solely on urgent tasks", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By using feedback loops and visualizing workflow", "isCorrect": true }
    ],
    "hint": "Kanban promotes incremental improvements through visibility and feedback.",
    "answerDescription": "Kanban enables teams to identify inefficiencies and make gradual adjustments through continuous monitoring and feedback."
  },
  {
    "id": "agile_630",
    "question": "What does 'flow' mean in the context of Kanban?",
    "options": [
      { "id": "option_1", "text": "The rate at which new tasks are added to the backlog", "isCorrect": false },
      { "id": "option_2", "text": "A structured schedule for all team activities", "isCorrect": false },
      { "id": "option_3", "text": "The frequency of daily stand-up meetings", "isCorrect": false },
      { "id": "option_4", "text": "The smooth movement of work through the process", "isCorrect": true }
    ],
    "hint": "Kanban is designed to optimize this aspect of work management.",
    "answerDescription": "Flow in Kanban refers to the seamless and continuous progress of work items from start to completion."
  },
  {
    "id": "agile_631",
    "question": "Why is visualizing work an essential part of Kanban?",
    "options": [
      { "id": "option_1", "text": "To make work appear more structured to management", "isCorrect": false },
      { "id": "option_2", "text": "To track employee working hours more effectively", "isCorrect": false },
      { "id": "option_3", "text": "To enforce strict deadlines for each task", "isCorrect": false },
      { "id": "option_4", "text": "To identify bottlenecks and improve efficiency", "isCorrect": true }
    ],
    "hint": "Visualization helps teams quickly see and resolve workflow issues.",
    "answerDescription": "Kanban boards provide clear visibility of work progress, helping teams manage and optimize their workflows effectively."
  },
  {
    "id": "agile_632",
    "question": "What is the main function of a Kanban service-level expectation (SLE)?",
    "options": [
      { "id": "option_1", "text": "To assign deadlines to each work item", "isCorrect": false },
      { "id": "option_2", "text": "To mandate team roles and responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize urgent tasks over all others", "isCorrect": false },
      { "id": "option_4", "text": "To set expectations for how long tasks should take", "isCorrect": true }
    ],
    "hint": "SLEs help teams set realistic work delivery timelines.",
    "answerDescription": "A service-level expectation (SLE) in Kanban provides guidance on how long work items should typically take, helping teams manage customer expectations."
  },
  {
    "id": "agile_633",
    "question": "How does Kanban help teams adapt to changing priorities?",
    "options": [
      { "id": "option_1", "text": "By enforcing a fixed work schedule", "isCorrect": false },
      { "id": "option_2", "text": "By limiting the number of tasks that can be changed", "isCorrect": false },
      { "id": "option_3", "text": "By requiring approval before adjusting workflows", "isCorrect": false },
      { "id": "option_4", "text": "By allowing flexibility and continuous flow of work", "isCorrect": true }
    ],
    "hint": "Kanban is known for its ability to handle dynamic work environments.",
    "answerDescription": "Kanban supports adaptability by enabling teams to adjust priorities and manage work without disrupting the entire process."
  },
  {
    "id": "agile_634",
    "question": "What does cycle time measure in a Kanban system?",
    "options": [
      { "id": "option_1", "text": "The total time a task spends in the backlog", "isCorrect": false },
      { "id": "option_2", "text": "The duration of planning meetings", "isCorrect": false },
      { "id": "option_3", "text": "The number of tasks completed in a sprint", "isCorrect": false },
      { "id": "option_4", "text": "The time it takes to complete a task once started", "isCorrect": true }
    ],
    "hint": "Cycle time is a key performance metric in Kanban.",
    "answerDescription": "Cycle time in Kanban represents the duration from when a task is started to when it is completed, helping teams optimize work efficiency."
  },
  {
    "id": "agile_635",
    "question": "How can teams use lead time metrics to improve their Kanban workflow?",
    "options": [
      { "id": "option_1", "text": "By ignoring it in favor of cycle time", "isCorrect": false },
      { "id": "option_2", "text": "By setting deadlines based on past performance", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring work items remain in progress longer", "isCorrect": false },
      { "id": "option_4", "text": "By analyzing delays and optimizing task completion", "isCorrect": true }
    ],
    "hint": "Lead time helps teams identify and reduce delays.",
    "answerDescription": "Lead time analysis in Kanban enables teams to pinpoint bottlenecks and improve their overall efficiency by reducing delays."
  },
  {
    "id": "agile_636",
    "question": "Which of the following best describes the pull system in Kanban?",
    "options": [
      { "id": "option_1", "text": "Work is pushed to team members based on availability", "isCorrect": false },
      { "id": "option_2", "text": "Tasks are assigned at random to team members", "isCorrect": false },
      { "id": "option_3", "text": "Work is assigned to individuals without limits", "isCorrect": false },
      { "id": "option_4", "text": "Work is pulled only when capacity allows", "isCorrect": true }
    ],
    "hint": "The pull system ensures that work is taken when there's capacity.",
    "answerDescription": "In Kanban, the pull system prevents work overload by allowing tasks to be started only when the team has available capacity."
  },
  {
    "id": "agile_637",
    "question": "What is the role of policies in a Kanban system?",
    "options": [
      { "id": "option_1", "text": "To enforce strict penalties for incomplete work", "isCorrect": false },
      { "id": "option_2", "text": "To remove flexibility from workflows", "isCorrect": false },
      { "id": "option_3", "text": "To ensure every task follows the same process", "isCorrect": false },
      { "id": "option_4", "text": "To guide workflow consistency and efficiency", "isCorrect": true }
    ],
    "hint": "Policies provide structure without restricting adaptability.",
    "answerDescription": "Kanban policies define work guidelines to ensure efficiency while allowing teams to make necessary adjustments."
  },
  {
    "id": "agile_638",
    "question": "What is one key benefit of limiting work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps teams focus on completing tasks efficiently", "isCorrect": true },
      { "id": "option_2", "text": "It increases the total number of tasks in the system", "isCorrect": false },
      { "id": "option_3", "text": "It removes the need for prioritization", "isCorrect": false },
      { "id": "option_4", "text": "It enforces equal task distribution", "isCorrect": false }
    ],
    "hint": "Kanban aims to optimize task completion rather than maximize task count.",
    "answerDescription": "Limiting WIP helps teams avoid overload, focus on task completion, and maintain a steady workflow."
  },
  {
    "id": "agile_639",
    "question": "How does Kanban promote transparency in the workflow?",
    "options": [
      { "id": "option_1", "text": "By using a visual board to track work items", "isCorrect": true },
      { "id": "option_2", "text": "By assigning strict deadlines for each task", "isCorrect": false },
      { "id": "option_3", "text": "By requiring daily status reports", "isCorrect": false },
      { "id": "option_4", "text": "By mandating fixed work schedules", "isCorrect": false }
    ],
    "hint": "Kanban relies on visibility to improve workflow efficiency.",
    "answerDescription": "The Kanban board allows teams to visualize their workflow, identify bottlenecks, and track progress in real-time."
  },
  {
    "id": "agile_640",
    "question": "Why is cycle time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the time taken to complete a work item", "isCorrect": true },
      { "id": "option_2", "text": "It determines the total backlog size", "isCorrect": false },
      { "id": "option_3", "text": "It tracks the number of work items started each day", "isCorrect": false },
      { "id": "option_4", "text": "It enforces fixed deadlines for tasks", "isCorrect": false }
    ],
    "hint": "Cycle time reflects efficiency in completing tasks.",
    "answerDescription": "By measuring cycle time, teams can assess workflow efficiency and identify areas for improvement."
  },
  {
    "id": "agile_641",
    "question": "What is the purpose of swimlanes on a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To categorize tasks based on priority or type", "isCorrect": true },
      { "id": "option_2", "text": "To track the number of completed tasks per week", "isCorrect": false },
      { "id": "option_3", "text": "To limit the number of tasks in progress", "isCorrect": false },
      { "id": "option_4", "text": "To enforce work completion deadlines", "isCorrect": false }
    ],
    "hint": "Swimlanes help organize work items into meaningful categories.",
    "answerDescription": "Using swimlanes, teams can categorize work based on priority, type, or team member responsibility."
  },
  {
    "id": "agile_642",
    "question": "How does Kanban help reduce bottlenecks in workflow?",
    "options": [
      { "id": "option_1", "text": "By visualizing work and limiting WIP", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing equal task allocation", "isCorrect": false },
      { "id": "option_3", "text": "By requiring all work to be completed at the same pace", "isCorrect": false },
      { "id": "option_4", "text": "By mandating fixed time slots for each task", "isCorrect": false }
    ],
    "hint": "Kanban boards provide insight into workflow congestion.",
    "answerDescription": "Kanban makes bottlenecks visible, allowing teams to adjust work distribution and optimize efficiency."
  },
  {
    "id": "agile_643",
    "question": "What does the cumulative flow diagram (CFD) indicate in Kanban?",
    "options": [
      { "id": "option_1", "text": "It visualizes work in progress, cycle time, and throughput", "isCorrect": true },
      { "id": "option_2", "text": "It tracks individual performance within the team", "isCorrect": false },
      { "id": "option_3", "text": "It measures the backlog growth rate", "isCorrect": false },
      { "id": "option_4", "text": "It enforces work prioritization rules", "isCorrect": false }
    ],
    "hint": "CFD is used to analyze workflow stability.",
    "answerDescription": "The cumulative flow diagram helps teams monitor work distribution, identify bottlenecks, and improve efficiency."
  },
  {
    "id": "agile_644",
    "question": "How does a pull system in Kanban improve efficiency?",
    "options": [
      { "id": "option_1", "text": "By allowing work to be started only when capacity is available", "isCorrect": true },
      { "id": "option_2", "text": "By pushing tasks to team members based on deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By mandating daily work allocations", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing equal workload distribution", "isCorrect": false }
    ],
    "hint": "Pull systems prevent overloading team members.",
    "answerDescription": "A pull system ensures that work is started only when capacity allows, improving flow and preventing inefficiencies."
  },
  {
    "id": "agile_645",
    "question": "What role does feedback play in Kanban's continuous improvement?",
    "options": [
      { "id": "option_1", "text": "It helps teams refine their processes over time", "isCorrect": true },
      { "id": "option_2", "text": "It replaces the need for retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "It enforces strict performance benchmarks", "isCorrect": false },
      { "id": "option_4", "text": "It focuses only on immediate task completion", "isCorrect": false }
    ],
    "hint": "Kanban encourages teams to improve iteratively.",
    "answerDescription": "By incorporating feedback loops, Kanban teams can continuously refine their processes and enhance efficiency."
  },
  {
    "id": "agile_646",
    "question": "What is the primary function of explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To provide clear guidelines for work management", "isCorrect": true },
      { "id": "option_2", "text": "To ensure equal workload distribution", "isCorrect": false },
      { "id": "option_3", "text": "To enforce strict deadlines for all tasks", "isCorrect": false },
      { "id": "option_4", "text": "To limit team flexibility", "isCorrect": false }
    ],
    "hint": "Policies define how work should be managed in Kanban.",
    "answerDescription": "Explicit policies in Kanban provide teams with clear rules for workflow management, ensuring consistency and efficiency."
  },
  {
    "id": "agile_647",
    "question": "Why is measuring lead time important in Kanban?",
    "options": [
      { "id": "option_1", "text": "It helps teams predict work delivery times", "isCorrect": true },
      { "id": "option_2", "text": "It determines how many tasks should be in progress", "isCorrect": false },
      { "id": "option_3", "text": "It assigns responsibility for delayed tasks", "isCorrect": false },
      { "id": "option_4", "text": "It removes the need for prioritization", "isCorrect": false }
    ],
    "hint": "Lead time is useful for forecasting work completion.",
    "answerDescription": "Tracking lead time allows teams to improve predictability and optimize workflow efficiency."
  },
  {
    "id": "agile_648",
    "question": "What is the main goal of implementing WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "To maximize the number of tasks in progress", "isCorrect": false },
      { "id": "option_2", "text": "To improve flow efficiency and reduce bottlenecks", "isCorrect": true },
      { "id": "option_3", "text": "To assign equal work to all team members", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict deadlines for all tasks", "isCorrect": false }
    ],
    "hint": "WIP limits help optimize workflow by controlling task overload.",
    "answerDescription": "By limiting work in progress, teams can focus on completing tasks efficiently, reducing delays and bottlenecks."
  },
  {
    "id": "agile_649",
    "question": "How does Kanban promote continuous delivery?",
    "options": [
      { "id": "option_1", "text": "By assigning all tasks at once", "isCorrect": false },
      { "id": "option_2", "text": "By allowing work to flow through the system at a steady pace", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing a fixed release schedule", "isCorrect": false },
      { "id": "option_4", "text": "By requiring batch processing of tasks", "isCorrect": false }
    ],
    "hint": "Kanban focuses on maintaining a continuous, steady workflow.",
    "answerDescription": "A steady flow of work enables teams to deliver value continuously without bottlenecks or delays."
  },
  {
    "id": "agile_650",
    "question": "Why is it important to visualize blocked work in Kanban?",
    "options": [
      { "id": "option_1", "text": "To keep track of pending approvals", "isCorrect": false },
      { "id": "option_2", "text": "To identify and resolve workflow impediments", "isCorrect": true },
      { "id": "option_3", "text": "To enforce equal task distribution", "isCorrect": false },
      { "id": "option_4", "text": "To increase the number of tasks in progress", "isCorrect": false }
    ],
    "hint": "Blockers impact workflow efficiency.",
    "answerDescription": "By visualizing blocked work, teams can quickly identify issues and take corrective actions to maintain flow."
  },
  {
    "id": "agile_651",
    "question": "How does Kanban help teams optimize resource allocation?",
    "options": [
      { "id": "option_1", "text": "By assigning fixed work hours for each task", "isCorrect": false },
      { "id": "option_2", "text": "By allowing tasks to be pulled based on capacity", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict deadlines for every task", "isCorrect": false },
      { "id": "option_4", "text": "By requiring team members to multitask", "isCorrect": false }
    ],
    "hint": "Kanban ensures work is taken up only when capacity is available.",
    "answerDescription": "A pull-based system in Kanban prevents overload and ensures tasks are taken up based on available capacity."
  },
  {
    "id": "agile_652",
    "question": "What does the 'Definition of Done' help with in a Kanban system?",
    "options": [
      { "id": "option_1", "text": "It determines when a task should be started", "isCorrect": false },
      { "id": "option_2", "text": "It ensures clarity on when a work item is truly complete", "isCorrect": true },
      { "id": "option_3", "text": "It limits the number of tasks in progress", "isCorrect": false },
      { "id": "option_4", "text": "It enforces a fixed review process", "isCorrect": false }
    ],
    "hint": "Kanban ensures work is considered complete only when all necessary criteria are met.",
    "answerDescription": "The 'Definition of Done' ensures consistency and quality by clearly defining completion criteria for tasks."
  },
  {
    "id": "agile_653",
    "question": "How does Kanban improve lead time predictability?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks randomly", "isCorrect": false },
      { "id": "option_2", "text": "By tracking and optimizing cycle time", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing rigid work schedules", "isCorrect": false },
      { "id": "option_4", "text": "By limiting feedback loops", "isCorrect": false }
    ],
    "hint": "Cycle time is key to improving predictability.",
    "answerDescription": "By analyzing and improving cycle time, teams can make better predictions about when work will be completed."
  },
  {
    "id": "agile_654",
    "question": "What is a key benefit of setting explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "It prevents teams from making process changes", "isCorrect": false },
      { "id": "option_2", "text": "It provides clear guidance on how work should flow", "isCorrect": true },
      { "id": "option_3", "text": "It removes the need for team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "It forces team members to follow rigid rules", "isCorrect": false }
    ],
    "hint": "Policies help standardize workflow management.",
    "answerDescription": "Explicit policies provide transparency and alignment on how work should progress through the Kanban system."
  },
  {
    "id": "agile_655",
    "question": "How does Kanban support continuous process improvement?",
    "options": [
      { "id": "option_1", "text": "By eliminating the need for retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging teams to analyze and adjust their workflow regularly", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing a fixed set of work processes", "isCorrect": false },
      { "id": "option_4", "text": "By limiting feedback opportunities", "isCorrect": false }
    ],
    "hint": "Kanban is built on the principle of continuous improvement.",
    "answerDescription": "By reviewing and optimizing workflows regularly, teams can improve efficiency and effectiveness."
  },
  {
    "id": "agile_656",
    "question": "What is the primary function of service level agreements (SLAs) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To dictate how tasks should be assigned", "isCorrect": false },
      { "id": "option_2", "text": "To set expectations on lead time and response time", "isCorrect": true },
      { "id": "option_3", "text": "To enforce task prioritization rules", "isCorrect": false },
      { "id": "option_4", "text": "To mandate equal workload for all team members", "isCorrect": false }
    ],
    "hint": "SLAs define delivery expectations in Kanban.",
    "answerDescription": "Service level agreements help set clear expectations on how long tasks should take to complete, ensuring better predictability."
  },
  {
    "id": "agile_657",
    "question": "Why is a Kanban board divided into different columns?",
    "options": [
      { "id": "option_1", "text": "To track work progress from start to finish", "isCorrect": true },
      { "id": "option_2", "text": "To limit the number of tasks assigned to a team member", "isCorrect": false },
      { "id": "option_3", "text": "To enforce daily work limits", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize urgent tasks only", "isCorrect": false }
    ],
    "hint": "Columns represent different workflow stages.",
    "answerDescription": "Dividing a Kanban board into columns allows teams to visualize the progress of work items from start to completion."
  },
  {
    "id": "agile_658",
    "question": "How does limiting work in progress (WIP) improve efficiency in Kanban?",
    "options": [
      { "id": "option_1", "text": "By allowing more tasks to be completed simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "By increasing the number of active work items", "isCorrect": false },
      { "id": "option_3", "text": "By reducing task switching and improving focus", "isCorrect": true },
      { "id": "option_4", "text": "By ensuring every team member is always occupied", "isCorrect": false }
    ],
    "hint": "Context switching slows down productivity.",
    "answerDescription": "Limiting WIP reduces multitasking, minimizes bottlenecks, and helps teams complete tasks more efficiently."
  },
  {
    "id": "agile_659",
    "question": "What role does feedback play in Kanban?",
    "options": [
      { "id": "option_1", "text": "It is used only at the end of a project", "isCorrect": false },
      { "id": "option_2", "text": "It is optional and rarely necessary", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams continuously improve their workflow", "isCorrect": true },
      { "id": "option_4", "text": "It is used to assign blame for delays", "isCorrect": false }
    ],
    "hint": "Kanban encourages iterative improvement.",
    "answerDescription": "Continuous feedback allows teams to identify inefficiencies and optimize their processes over time."
  },
  {
    "id": "agile_660",
    "question": "How does a pull system benefit Kanban teams?",
    "options": [
      { "id": "option_1", "text": "By allowing managers to assign tasks directly", "isCorrect": false },
      { "id": "option_2", "text": "By requiring all tasks to be started simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "By enabling team members to take up work based on capacity", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing fixed deadlines on every task", "isCorrect": false }
    ],
    "hint": "Kanban relies on a demand-driven approach.",
    "answerDescription": "A pull system prevents overload by allowing work to be started only when there is available capacity."
  },
  {
    "id": "agile_661",
    "question": "Why is it important to measure cycle time in Kanban?",
    "options": [
      { "id": "option_1", "text": "To estimate the number of tasks a team can handle per day", "isCorrect": false },
      { "id": "option_2", "text": "To compare performance between different teams", "isCorrect": false },
      { "id": "option_3", "text": "To track how long work items take from start to finish", "isCorrect": true },
      { "id": "option_4", "text": "To determine which tasks should be prioritized", "isCorrect": false }
    ],
    "hint": "Cycle time helps measure efficiency.",
    "answerDescription": "By monitoring cycle time, teams can identify bottlenecks and improve their workflow for faster delivery."
  },
  {
    "id": "agile_662",
    "question": "What is the primary function of a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To assign work to team members", "isCorrect": false },
      { "id": "option_2", "text": "To enforce a strict order of task completion", "isCorrect": false },
      { "id": "option_3", "text": "To visualize work and workflow stages", "isCorrect": true },
      { "id": "option_4", "text": "To replace team meetings", "isCorrect": false }
    ],
    "hint": "Kanban is centered around work visualization.",
    "answerDescription": "A Kanban board helps teams visualize their workflow, track progress, and identify bottlenecks more easily."
  },
  {
    "id": "agile_663",
    "question": "How does Kanban promote just-in-time (JIT) delivery?",
    "options": [
      { "id": "option_1", "text": "By scheduling work in advance", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing a fixed release cycle", "isCorrect": false },
      { "id": "option_3", "text": "By allowing work to be completed only when it is needed", "isCorrect": true },
      { "id": "option_4", "text": "By requiring all tasks to be completed simultaneously", "isCorrect": false }
    ],
    "hint": "JIT focuses on reducing waste and waiting time.",
    "answerDescription": "Kanban helps teams work on items only when they are needed, preventing overproduction and reducing waste."
  },
  {
    "id": "agile_664",
    "question": "What is the primary purpose of setting explicit work policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To enforce strict rules for all tasks", "isCorrect": false },
      { "id": "option_2", "text": "To ensure that work is completed on time", "isCorrect": false },
      { "id": "option_3", "text": "To create transparency and consistency in the workflow", "isCorrect": true },
      { "id": "option_4", "text": "To assign work based on skill level", "isCorrect": false }
    ],
    "hint": "Policies provide clarity on how work should be done.",
    "answerDescription": "Explicit policies help standardize the workflow, ensuring that all team members follow a consistent process."
  },
  {
    "id": "agile_665",
    "question": "Why should teams regularly review their Kanban workflow?",
    "options": [
      { "id": "option_1", "text": "To eliminate unnecessary team meetings", "isCorrect": false },
      { "id": "option_2", "text": "To make sure all tasks are completed at the same pace", "isCorrect": false },
      { "id": "option_3", "text": "To identify inefficiencies and optimize the process", "isCorrect": true },
      { "id": "option_4", "text": "To ensure that WIP limits never change", "isCorrect": false }
    ],
    "hint": "Continuous improvement is a key Kanban principle.",
    "answerDescription": "Reviewing the workflow helps teams find and resolve bottlenecks, improving overall efficiency and effectiveness."
  },
  {
    "id": "agile_666",
    "question": "What does the cumulative flow diagram (CFD) indicate in Kanban?",
    "options": [
      { "id": "option_1", "text": "The number of tasks assigned to each team member", "isCorrect": false },
      { "id": "option_2", "text": "The distribution of work across different priority levels", "isCorrect": false },
      { "id": "option_3", "text": "The flow of work through different workflow stages over time", "isCorrect": true },
      { "id": "option_4", "text": "The efficiency of meetings within the team", "isCorrect": false }
    ],
    "hint": "The CFD provides insights into workflow patterns.",
    "answerDescription": "The cumulative flow diagram helps teams monitor the stability of their workflow and identify areas for improvement."
  },
  {
    "id": "agile_667",
    "question": "How can teams ensure they maintain a smooth workflow in Kanban?",
    "options": [
      { "id": "option_1", "text": "By increasing work in progress (WIP) limits", "isCorrect": false },
      { "id": "option_2", "text": "By assigning work to all team members equally", "isCorrect": false },
      { "id": "option_3", "text": "By identifying and removing workflow bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "By setting strict deadlines for each task", "isCorrect": false }
    ],
    "hint": "Bottlenecks slow down the flow of work.",
    "answerDescription": "By continuously identifying and resolving bottlenecks, teams can maintain a steady and efficient workflow."
  },
  {
    "id": "agile_668",
    "question": "What is the purpose of using swimlanes on a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To group tasks by individual team members", "isCorrect": false },
      { "id": "option_2", "text": "To limit the number of tasks in progress", "isCorrect": false },
      { "id": "option_3", "text": "To indicate priority levels of tasks", "isCorrect": false },
      { "id": "option_4", "text": "To categorize work by different types or teams", "isCorrect": true }
    ],
    "hint": "Swimlanes provide structure by grouping work categories.",
    "answerDescription": "Swimlanes help differentiate various workflows, teams, or priority levels within the Kanban system."
  },
  {
    "id": "agile_669",
    "question": "Why is it important to focus on flow efficiency in Kanban?",
    "options": [
      { "id": "option_1", "text": "To ensure each task takes the same amount of time", "isCorrect": false },
      { "id": "option_2", "text": "To maximize the number of tasks completed daily", "isCorrect": false },
      { "id": "option_3", "text": "To increase workload for the team", "isCorrect": false },
      { "id": "option_4", "text": "To reduce waiting time and improve process speed", "isCorrect": true }
    ],
    "hint": "Flow efficiency focuses on reducing waste in work processes.",
    "answerDescription": "Improving flow efficiency minimizes delays, ensuring a smoother and faster delivery of work items."
  },
  {
    "id": "agile_670",
    "question": "What is the main advantage of visualizing work in Kanban?",
    "options": [
      { "id": "option_1", "text": "To monitor individual team member productivity", "isCorrect": false },
      { "id": "option_2", "text": "To ensure tasks are completed in order", "isCorrect": false },
      { "id": "option_3", "text": "To increase the number of tasks being worked on at once", "isCorrect": false },
      { "id": "option_4", "text": "To identify bottlenecks and manage workflow effectively", "isCorrect": true }
    ],
    "hint": "Visualization helps teams detect inefficiencies quickly.",
    "answerDescription": "By making work visible, teams can manage tasks better, improve collaboration, and optimize workflow."
  },
  {
    "id": "agile_671",
    "question": "Why is lead time an important metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the number of tasks completed per day", "isCorrect": false },
      { "id": "option_2", "text": "It tracks the time team members spend on a task", "isCorrect": false },
      { "id": "option_3", "text": "It determines the number of items that should be in progress", "isCorrect": false },
      { "id": "option_4", "text": "It indicates the total time from task initiation to completion", "isCorrect": true }
    ],
    "hint": "Lead time helps measure the overall speed of work delivery.",
    "answerDescription": "Tracking lead time helps teams identify delays and improve their workflow for better efficiency."
  },
  {
    "id": "agile_672",
    "question": "What is the impact of excessive WIP in Kanban?",
    "options": [
      { "id": "option_1", "text": "It ensures all tasks are worked on simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up the delivery of tasks", "isCorrect": false },
      { "id": "option_3", "text": "It reduces cycle time and increases efficiency", "isCorrect": false },
      { "id": "option_4", "text": "It leads to bottlenecks and slower progress", "isCorrect": true }
    ],
    "hint": "Too many tasks in progress can reduce overall efficiency.",
    "answerDescription": "Excessive WIP causes inefficiencies, increasing cycle time and reducing focus on high-priority tasks."
  },
  {
    "id": "agile_673",
    "question": "Why do Kanban teams use WIP limits?",
    "options": [
      { "id": "option_1", "text": "To assign tasks evenly among team members", "isCorrect": false },
      { "id": "option_2", "text": "To enforce a strict order of task completion", "isCorrect": false },
      { "id": "option_3", "text": "To maximize multitasking within the team", "isCorrect": false },
      { "id": "option_4", "text": "To maintain a balanced and efficient workflow", "isCorrect": true }
    ],
    "hint": "WIP limits help prevent overloading and inefficiencies.",
    "answerDescription": "By capping the number of tasks in progress, teams can complete work faster and reduce context switching."
  },
  {
    "id": "agile_674",
    "question": "How does Kanban promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By requiring a fixed process that should not change", "isCorrect": false },
      { "id": "option_2", "text": "By limiting the number of tasks a team can handle", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict deadlines for all tasks", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging teams to analyze and optimize their workflow", "isCorrect": true }
    ],
    "hint": "Kanban focuses on evolving processes over time.",
    "answerDescription": "Regular reviews and feedback loops allow teams to refine their workflows and improve efficiency."
  },
  {
    "id": "agile_675",
    "question": "What is the primary reason for using cumulative flow diagrams (CFDs) in Kanban?",
    "options": [
      { "id": "option_1", "text": "To track individual task completion times", "isCorrect": false },
      { "id": "option_2", "text": "To monitor team attendance", "isCorrect": false },
      { "id": "option_3", "text": "To count the total number of tasks completed", "isCorrect": false },
      { "id": "option_4", "text": "To visualize work progress and identify bottlenecks", "isCorrect": true }
    ],
    "hint": "CFDs provide a high-level view of work distribution.",
    "answerDescription": "A cumulative flow diagram helps teams analyze work distribution, identify constraints, and optimize efficiency."
  },
  {
    "id": "agile_676",
    "question": "How does the concept of 'flow' apply to Kanban?",
    "options": [
      { "id": "option_1", "text": "By ensuring work items remain in progress as long as possible", "isCorrect": false },
      { "id": "option_2", "text": "By moving work items through stages as quickly as possible", "isCorrect": false },
      { "id": "option_3", "text": "By assigning work in a fixed sequence", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining a steady and predictable movement of tasks", "isCorrect": true }
    ],
    "hint": "Flow ensures smooth and continuous work movement.",
    "answerDescription": "A smooth workflow in Kanban allows teams to manage work effectively, reducing delays and improving efficiency."
  },
  {
    "id": "agile_677",
    "question": "What is the primary goal of Kanban retrospectives?",
    "options": [
      { "id": "option_1", "text": "To assign blame for delays in work", "isCorrect": false },
      { "id": "option_2", "text": "To finalize the work process without changes", "isCorrect": false },
      { "id": "option_3", "text": "To set strict rules for future work items", "isCorrect": false },
      { "id": "option_4", "text": "To reflect on past performance and improve workflow", "isCorrect": true }
    ],
    "hint": "Retrospectives help teams continuously improve.",
    "answerDescription": "Kanban retrospectives allow teams to assess past performance and make necessary adjustments for better outcomes."
  },{
    "id": "agile_678",
    "question": "What is the primary benefit of limiting WIP in Kanban?",
    "options": [
      { "id": "option_1", "text": "It reduces context switching and improves focus", "isCorrect": true },
      { "id": "option_2", "text": "It increases the number of tasks worked on simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "It ensures tasks are always completed in order", "isCorrect": false },
      { "id": "option_4", "text": "It removes the need for prioritization", "isCorrect": false }
    ],
    "hint": "Limiting WIP helps teams work more efficiently.",
    "answerDescription": "By reducing context switching and focusing on fewer tasks at a time, teams can improve efficiency and deliver work faster."
  },
  {
    "id": "agile_679",
    "question": "Why is cycle time a crucial metric in Kanban?",
    "options": [
      { "id": "option_1", "text": "It measures the speed of work completion", "isCorrect": true },
      { "id": "option_2", "text": "It tracks the number of tasks assigned to each member", "isCorrect": false },
      { "id": "option_3", "text": "It determines how many work items can be added to the backlog", "isCorrect": false },
      { "id": "option_4", "text": "It limits the number of team members required", "isCorrect": false }
    ],
    "hint": "Cycle time helps evaluate process efficiency.",
    "answerDescription": "Cycle time measures how long it takes for a work item to move from start to completion, helping teams optimize their workflow."
  },
  {
    "id": "agile_680",
    "question": "What is the purpose of a Kanban replenishment meeting?",
    "options": [
      { "id": "option_1", "text": "To decide which work items should enter the workflow", "isCorrect": true },
      { "id": "option_2", "text": "To review completed work items for quality", "isCorrect": false },
      { "id": "option_3", "text": "To assign new tasks to specific team members", "isCorrect": false },
      { "id": "option_4", "text": "To measure team performance using WIP limits", "isCorrect": false }
    ],
    "hint": "This meeting helps determine the next tasks to be worked on.",
    "answerDescription": "Kanban replenishment meetings ensure that the team pulls in the highest-priority work items at the right time."
  },
  {
    "id": "agile_681",
    "question": "Why does Kanban emphasize managing flow instead of maximizing capacity?",
    "options": [
      { "id": "option_1", "text": "Because smooth work progression leads to faster delivery", "isCorrect": true },
      { "id": "option_2", "text": "Because team members should always be fully occupied", "isCorrect": false },
      { "id": "option_3", "text": "Because maximizing work items reduces efficiency", "isCorrect": false },
      { "id": "option_4", "text": "Because it eliminates the need for backlog management", "isCorrect": false }
    ],
    "hint": "Kanban aims to create a continuous and predictable workflow.",
    "answerDescription": "Focusing on flow efficiency ensures that work moves steadily through the system without excessive delays or bottlenecks."
  },
  {
    "id": "agile_682",
    "question": "What is the primary purpose of a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To visualize workflow and track progress", "isCorrect": true },
      { "id": "option_2", "text": "To assign individual tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "To enforce a strict work order", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for team meetings", "isCorrect": false }
    ],
    "hint": "Kanban boards help teams see their work in progress.",
    "answerDescription": "A Kanban board visually represents work items, helping teams identify bottlenecks and maintain a smooth workflow."
  },
  {
    "id": "agile_683",
    "question": "How does Kanban support continuous delivery?",
    "options": [
      { "id": "option_1", "text": "By ensuring work items move through the system smoothly", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing fixed sprint cycles", "isCorrect": false },
      { "id": "option_3", "text": "By requiring all tasks to be completed at the same time", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing only high-value work", "isCorrect": false }
    ],
    "hint": "Kanban enables a steady flow of completed work items.",
    "answerDescription": "By focusing on flow efficiency, Kanban allows teams to deliver work continuously without waiting for predefined iterations."
  },
  {
    "id": "agile_684",
    "question": "What is the role of explicit policies in Kanban?",
    "options": [
      { "id": "option_1", "text": "To provide clear guidelines for process execution", "isCorrect": true },
      { "id": "option_2", "text": "To assign tasks based on priority", "isCorrect": false },
      { "id": "option_3", "text": "To limit the number of tasks that can be started", "isCorrect": false },
      { "id": "option_4", "text": "To determine individual team performance", "isCorrect": false }
    ],
    "hint": "Explicit policies define how work is managed within Kanban.",
    "answerDescription": "Clearly defined policies help teams make consistent decisions and improve workflow transparency."
  },
  {
    "id": "agile_685",
    "question": "Why should a Kanban team focus on reducing lead time?",
    "options": [
      { "id": "option_1", "text": "To improve overall efficiency and faster delivery", "isCorrect": true },
      { "id": "option_2", "text": "To increase the number of work items in progress", "isCorrect": false },
      { "id": "option_3", "text": "To ensure each task is completed within a set timeframe", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for prioritization", "isCorrect": false }
    ],
    "hint": "Shorter lead times contribute to better customer satisfaction.",
    "answerDescription": "By reducing lead time, teams can deliver value more quickly and respond effectively to changing requirements."
  },
  {
    "id": "agile_686",
    "question": "What is the function of a 'Done' column in a Kanban board?",
    "options": [
      { "id": "option_1", "text": "To indicate work that has been fully completed", "isCorrect": true },
      { "id": "option_2", "text": "To track work that is waiting for review", "isCorrect": false },
      { "id": "option_3", "text": "To manage work items that need approval", "isCorrect": false },
      { "id": "option_4", "text": "To hold unfinished tasks", "isCorrect": false }
    ],
    "hint": "This column signals the completion of tasks.",
    "answerDescription": "The 'Done' column provides visibility into completed work and helps measure overall progress."
  },
  {
    "id": "agile_687",
    "question": "How does Kanban handle task prioritization?",
    "options": [
      { "id": "option_1", "text": "By allowing teams to pull work based on urgency and capacity", "isCorrect": true },
      { "id": "option_2", "text": "By assigning each task to a specific team member", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing a strict sequence of work items", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on high-priority tasks", "isCorrect": false }
    ],
    "hint": "Kanban prioritizes work dynamically based on need.",
    "answerDescription": "Kanban allows teams to manage priorities flexibly by pulling tasks based on available capacity and business needs."
  },
  {
    "id": "agile_688",
    "question": "What is the main reason for setting WIP limits in Kanban?",
    "options": [
      { "id": "option_1", "text": "To reduce the number of tasks assigned to individuals", "isCorrect": false },
      { "id": "option_2", "text": "To prevent bottlenecks and optimize workflow", "isCorrect": true },
      { "id": "option_3", "text": "To increase the number of tasks started at once", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for daily standups", "isCorrect": false }
    ],
    "hint": "WIP limits help maintain a smooth workflow.",
    "answerDescription": "By limiting work in progress, Kanban ensures that tasks move efficiently through the system without overloading team members."
  },
  {
    "id": "agile_689",
    "question": "How does a cumulative flow diagram (CFD) help Kanban teams?",
    "options": [
      { "id": "option_1", "text": "By displaying individual team member performance", "isCorrect": false },
      { "id": "option_2", "text": "By showing work distribution across different stages", "isCorrect": true },
      { "id": "option_3", "text": "By assigning tasks based on historical data", "isCorrect": false },
      { "id": "option_4", "text": "By setting rigid deadlines for task completion", "isCorrect": false }
    ],
    "hint": "CFD is used to visualize workflow stability.",
    "answerDescription": "A cumulative flow diagram helps teams track work progression across different stages, identifying potential bottlenecks."
  },
  {
    "id": "agile_690",
    "question": "Why is pull-based work allocation used in Kanban?",
    "options": [
      { "id": "option_1", "text": "To assign work dynamically to reduce overload", "isCorrect": false },
      { "id": "option_2", "text": "To let team members take tasks as they have capacity", "isCorrect": true },
      { "id": "option_3", "text": "To prioritize tasks in a fixed order", "isCorrect": false },
      { "id": "option_4", "text": "To force work distribution equally among members", "isCorrect": false }
    ],
    "hint": "Pull-based systems let teams self-manage workload.",
    "answerDescription": "Kanban encourages a pull system where work is taken up based on available capacity, leading to smoother execution."
  },
  {
    "id": "agile_691",
    "question": "How does Kanban handle changes in business priorities?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict task sequencing", "isCorrect": false },
      { "id": "option_2", "text": "By allowing continuous reprioritization", "isCorrect": true },
      { "id": "option_3", "text": "By freezing work items once started", "isCorrect": false },
      { "id": "option_4", "text": "By assigning fixed deadlines to all tasks", "isCorrect": false }
    ],
    "hint": "Kanban is adaptable to changing priorities.",
    "answerDescription": "Kanbanâ€™s flexibility enables teams to adjust priorities dynamically without disrupting ongoing work."
  },
  {
    "id": "agile_692",
    "question": "Why does Kanban emphasize visualizing the workflow?",
    "options": [
      { "id": "option_1", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_2", "text": "To identify inefficiencies and bottlenecks", "isCorrect": true },
      { "id": "option_3", "text": "To limit the number of tasks being worked on", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for team discussions", "isCorrect": false }
    ],
    "hint": "Visual representation helps in managing work effectively.",
    "answerDescription": "A Kanban board makes work visible, enabling teams to optimize processes and remove blockers."
  },
  {
    "id": "agile_693",
    "question": "What is the impact of reducing lead time in Kanban?",
    "options": [
      { "id": "option_1", "text": "It increases the number of work items in progress", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up delivery and enhances efficiency", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for workflow visualization", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for WIP limits", "isCorrect": false }
    ],
    "hint": "Lead time affects how quickly tasks are completed.",
    "answerDescription": "Lowering lead time improves overall efficiency by ensuring tasks move smoothly through the workflow."
  },
  {
    "id": "agile_694",
    "question": "How does Kanban help in identifying process inefficiencies?",
    "options": [
      { "id": "option_1", "text": "By limiting the number of tasks in each stage", "isCorrect": false },
      { "id": "option_2", "text": "By visualizing bottlenecks in the workflow", "isCorrect": true },
      { "id": "option_3", "text": "By increasing the speed of task execution", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing strict deadlines", "isCorrect": false }
    ],
    "hint": "Kanban boards provide transparency in workflow.",
    "answerDescription": "Kanban's visualization techniques make it easy to spot inefficiencies and optimize processes for better efficiency."
  },
  {
    "id": "agile_695",
    "question": "Why should Kanban teams monitor work item aging?",
    "options": [
      { "id": "option_1", "text": "To assign tasks more evenly across the team", "isCorrect": false },
      { "id": "option_2", "text": "To prevent tasks from being delayed unnecessarily", "isCorrect": true },
      { "id": "option_3", "text": "To ensure all tasks have fixed deadlines", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize work based on complexity", "isCorrect": false }
    ],
    "hint": "Delays in tasks affect workflow efficiency.",
    "answerDescription": "Tracking work item aging helps teams prevent bottlenecks and ensure smooth progress in the workflow."
  },
  {
    "id": "agile_696",
    "question": "What is the significance of limiting batch sizes in Kanban?",
    "options": [
      { "id": "option_1", "text": "To increase the number of tasks started at once", "isCorrect": false },
      { "id": "option_2", "text": "To enhance speed and reduce task completion time", "isCorrect": true },
      { "id": "option_3", "text": "To restrict the number of tasks per team member", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for prioritization", "isCorrect": false }
    ],
    "hint": "Smaller batches improve workflow efficiency.",
    "answerDescription": "Kanban encourages small batch sizes to reduce cycle time and deliver value more frequently."
  },
  {
    "id": "agile_697",
    "question": "How the Kanban improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "By assigning fixed roles for each member", "isCorrect": false },
      { "id": "option_2", "text": "By making workflow and tasks visible to everyone", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict rules on task ownership", "isCorrect": false },
      { "id": "option_4", "text": "By reducing the need for team discussions", "isCorrect": false }
    ],
    "hint": "Transparency in work management leads to better collaboration.",
    "answerDescription": "By visualizing work on the Kanban board, teams can collaborate more effectively and resolve issues faster."
  },
  {
    "id": "agile_698",
    "question": "What is the primary goal of using Kanban in Agile development?",
    "options": [
      { "id": "option_1", "text": "To create detailed project documentation", "isCorrect": false },
      { "id": "option_2", "text": "To assign fixed deadlines for all tasks", "isCorrect": false },
      { "id": "option_3", "text": "To improve workflow efficiency and limit WIP", "isCorrect": true },
      { "id": "option_4", "text": "To increase multitasking among team members", "isCorrect": false }
    ],
    "hint": "Kanban focuses on optimizing work processes.",
    "answerDescription": "Kanban enhances workflow by visualizing tasks, limiting WIP, and ensuring smooth work progression."
  },
  {
    "id": "agile_699",
    "question": "How does Kanban help teams manage dependencies effectively?",
    "options": [
      { "id": "option_1", "text": "By assigning dependencies to individual team members", "isCorrect": false },
      { "id": "option_2", "text": "By completely removing dependencies between tasks", "isCorrect": false },
      { "id": "option_3", "text": "By making dependencies visible on the Kanban board", "isCorrect": true },
      { "id": "option_4", "text": "By limiting the number of tasks each person can work on", "isCorrect": false }
    ],
    "hint": "Kanban boards provide transparency in work processes.",
    "answerDescription": "Making dependencies visible allows teams to address bottlenecks early and improve workflow efficiency."
  },
  {
    "id": "agile_700",
    "question": "What does Littleâ€™s Law help Kanban teams understand?",
    "options": [
      { "id": "option_1", "text": "The impact of team size on productivity", "isCorrect": false },
      { "id": "option_2", "text": "The role of standup meetings in task completion", "isCorrect": false },
      { "id": "option_3", "text": "The relationship between work in progress and lead time", "isCorrect": true },
      { "id": "option_4", "text": "The importance of documenting every task", "isCorrect": false }
    ],
    "hint": "It relates WIP, throughput, and lead time.",
    "answerDescription": "Littleâ€™s Law states that lead time equals work in progress divided by throughput, helping teams optimize efficiency."
  },
  {
    "id": "agile_701",
    "question": "Why does Kanban emphasize continuous delivery?",
    "options": [
      { "id": "option_1", "text": "To complete large batches of work at once", "isCorrect": false },
      { "id": "option_2", "text": "To set rigid deadlines for each task", "isCorrect": false },
      { "id": "option_3", "text": "To deliver value incrementally and frequently", "isCorrect": true },
      { "id": "option_4", "text": "To minimize the number of tasks worked on simultaneously", "isCorrect": false }
    ],
    "hint": "Frequent releases provide value sooner.",
    "answerDescription": "Kanban enables continuous delivery by reducing cycle time and ensuring a steady flow of work."
  },
  {
    "id": "agile_702",
    "question": "What is a key benefit of limiting work in progress (WIP) in Kanban?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for prioritization", "isCorrect": false },
      { "id": "option_2", "text": "It increases multitasking efficiency", "isCorrect": false },
      { "id": "option_3", "text": "It prevents bottlenecks and improves flow", "isCorrect": true },
      { "id": "option_4", "text": "It allows tasks to be completed in any order", "isCorrect": false }
    ],
    "hint": "Too many tasks at once slow down delivery.",
    "answerDescription": "Limiting WIP helps teams focus on fewer tasks at a time, ensuring steady progress and reducing bottlenecks."
  },
  {
    "id": "agile_703",
    "question": "How does Kanban support process improvement?",
    "options": [
      { "id": "option_1", "text": "By enforcing a fixed workflow for all teams", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the need for retrospective meetings", "isCorrect": false },
      { "id": "option_3", "text": "By providing continuous feedback through visualization", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating variations in task execution", "isCorrect": false }
    ],
    "hint": "Kanban boards help teams identify inefficiencies.",
    "answerDescription": "Kanban allows teams to identify workflow issues and improve processes through continuous feedback."
  },
  {
    "id": "agile_704",
    "question": "What is the purpose of cycle time tracking in Kanban?",
    "options": [
      { "id": "option_1", "text": "To measure team velocity", "isCorrect": false },
      { "id": "option_2", "text": "To determine the ideal team size", "isCorrect": false },
      { "id": "option_3", "text": "To analyze the time taken to complete individual tasks", "isCorrect": true },
      { "id": "option_4", "text": "To enforce strict deadlines for each task", "isCorrect": false }
    ],
    "hint": "Cycle time measures task completion speed.",
    "answerDescription": "Tracking cycle time helps teams optimize their workflow and improve task completion rates."
  },
  {
    "id": "agile_705",
    "question": "Why is real-time collaboration important in Kanban?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for workflow visualization", "isCorrect": false },
      { "id": "option_2", "text": "To ensure team members work on separate tasks", "isCorrect": false },
      { "id": "option_3", "text": "To quickly identify and resolve blockers", "isCorrect": true },
      { "id": "option_4", "text": "To avoid unnecessary team discussions", "isCorrect": false }
    ],
    "hint": "Collaboration helps remove roadblocks.",
    "answerDescription": "Real-time collaboration ensures that issues are addressed quickly, maintaining a smooth workflow."
  },
  {
    "id": "agile_706",
    "question": "How does Kanban improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of completed tasks", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the involvement of customers in prioritization", "isCorrect": false },
      { "id": "option_3", "text": "By delivering valuable work consistently and efficiently", "isCorrect": true },
      { "id": "option_4", "text": "By setting strict deadlines for all features", "isCorrect": false }
    ],
    "hint": "Frequent delivery leads to better customer experience.",
    "answerDescription": "Kanban enhances customer satisfaction by ensuring continuous delivery of high-quality work."
  },
  {
    "id": "agile_707",
    "question": "What role do service level agreements (SLAs) play in Kanban?",
    "options": [
      { "id": "option_1", "text": "They define the order of task execution", "isCorrect": false },
      { "id": "option_2", "text": "They restrict the number of tasks in progress", "isCorrect": false },
      { "id": "option_3", "text": "They set expectations for delivery timelines", "isCorrect": true },
      { "id": "option_4", "text": "They eliminate the need for prioritization", "isCorrect": false }
    ],
    "hint": "SLAs provide guidelines for task completion time.",
    "answerDescription": "SLAs help manage expectations by defining acceptable timeframes for completing tasks."
  },
  {
    "id": "agile_708",
    "question": "Which principle of Lean Software Development focuses on eliminating activities that do not add value?",
    "options": [
      { "id": "option_1", "text": "Amplify learning", "isCorrect": false },
      { "id": "option_2", "text": "Build integrity in", "isCorrect": false },
      { "id": "option_3", "text": "Eliminate waste", "isCorrect": true },
      { "id": "option_4", "text": "Deliver as fast as possible", "isCorrect": false }
    ],
    "hint": "Lean principles emphasize removing non-value-adding processes.",
    "answerDescription": "Eliminating waste ensures that teams focus only on tasks that contribute to delivering customer value."
  },
  {
    "id": "agile_709",
    "question": "How does Lean Software Development help reduce delays in software delivery?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict timelines for every task", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "By reducing batch sizes and work-in-progress", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating testing phases", "isCorrect": false }
    ],
    "hint": "Lean encourages small, manageable work units to improve flow.",
    "answerDescription": "Reducing batch sizes and limiting work-in-progress speeds up software delivery by decreasing wait times and dependencies."
  },
  {
    "id": "agile_710",
    "question": "What is the main objective of limiting work-in-progress (WIP) in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To ensure developers are always busy", "isCorrect": false },
      { "id": "option_2", "text": "To increase multitasking for efficiency", "isCorrect": false },
      { "id": "option_3", "text": "To improve flow and reduce bottlenecks", "isCorrect": true },
      { "id": "option_4", "text": "To delay feature releases until fully completed", "isCorrect": false }
    ],
    "hint": "WIP limits prevent overloading and improve focus.",
    "answerDescription": "By limiting work-in-progress, teams can concentrate on completing tasks efficiently and avoiding delays caused by multitasking."
  },
  {
    "id": "agile_711",
    "question": "Why is fast feedback important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To create detailed upfront documentation", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To identify and fix issues early", "isCorrect": true },
      { "id": "option_4", "text": "To delay decision-making for better planning", "isCorrect": false }
    ],
    "hint": "Early issue detection reduces rework.",
    "answerDescription": "Fast feedback allows teams to address problems quickly, reducing costly late-stage changes and improving software quality."
  },
  {
    "id": "agile_712",
    "question": "Which of the following is a key benefit of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increased process documentation", "isCorrect": false },
      { "id": "option_2", "text": "Greater project predictability", "isCorrect": false },
      { "id": "option_3", "text": "Faster delivery with fewer defects", "isCorrect": true },
      { "id": "option_4", "text": "Strict adherence to original plans", "isCorrect": false }
    ],
    "hint": "Lean focuses on speed and quality.",
    "answerDescription": "By eliminating waste and improving flow, Lean Software Development enables teams to deliver faster while maintaining high quality."
  },
  {
    "id": "agile_713",
    "question": "What does Lean Software Development mean by 'Deliver as fast as possible'?",
    "options": [
      { "id": "option_1", "text": "Skipping unnecessary testing phases", "isCorrect": false },
      { "id": "option_2", "text": "Pushing all features to production at once", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing delays in the development pipeline", "isCorrect": true },
      { "id": "option_4", "text": "Forcing developers to work longer hours", "isCorrect": false }
    ],
    "hint": "Itâ€™s about reducing delays, not cutting corners.",
    "answerDescription": "Lean promotes fast delivery by optimizing workflow efficiency rather than sacrificing quality."
  },
  {
    "id": "agile_714",
    "question": "How does Lean Software Development support continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By maintaining rigid development processes", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging change once development starts", "isCorrect": false },
      { "id": "option_3", "text": "By regularly evaluating and refining processes", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding experimentation", "isCorrect": false }
    ],
    "hint": "Kaizen is a key aspect of Lean thinking.",
    "answerDescription": "Lean encourages continuous improvement by fostering a culture of learning and iterative enhancements."
  },
  {
    "id": "agile_715",
    "question": "What is the role of customer feedback in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To validate assumptions and improve features", "isCorrect": true },
      { "id": "option_2", "text": "To replace developer expertise", "isCorrect": false },
      { "id": "option_3", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_4", "text": "To ensure strict adherence to initial requirements", "isCorrect": false }
    ],
    "hint": "Customer input shapes the final product.",
    "answerDescription": "Customer feedback helps teams refine their software to meet real user needs more effectively."
  },
  {
    "id": "agile_716",
    "question": "Why does Lean Software Development emphasize empowering teams?",
    "options": [
      { "id": "option_1", "text": "To allow team members to work independently without collaboration", "isCorrect": false },
      { "id": "option_2", "text": "To ensure decisions are only made by senior management", "isCorrect": false },
      { "id": "option_3", "text": "To encourage innovation and accountability", "isCorrect": true },
      { "id": "option_4", "text": "To minimize communication within teams", "isCorrect": false }
    ],
    "hint": "Lean values team autonomy and responsibility.",
    "answerDescription": "Empowered teams take ownership of their work, leading to better problem-solving and innovation."
  },
  {
    "id": "agile_717",
    "question": "How does Lean Software Development reduce risk in projects?",
    "options": [
      { "id": "option_1", "text": "By requiring extensive upfront planning", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding customer involvement until delivery", "isCorrect": false },
      { "id": "option_3", "text": "By delivering incrementally and gathering feedback", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating the need for adaptability", "isCorrect": false }
    ],
    "hint": "Lean minimizes risk by validating small, incremental changes.",
    "answerDescription": "Delivering in small increments and gathering feedback helps teams identify issues early and adapt to changing requirements."
  },
  {
    "id": "agile_718",
    "question": "What is a key reason Lean Software Development promotes minimizing handoffs?",
    "options": [
      { "id": "option_1", "text": "To reduce dependency on cross-functional teams", "isCorrect": false },
      { "id": "option_2", "text": "To prevent delays and loss of knowledge", "isCorrect": true },
      { "id": "option_3", "text": "To ensure each task is handled by multiple teams", "isCorrect": false },
      { "id": "option_4", "text": "To make processes more rigid", "isCorrect": false }
    ],
    "hint": "Handoffs can introduce communication gaps and delays.",
    "answerDescription": "Minimizing handoffs helps maintain knowledge flow, reducing miscommunication and bottlenecks."
  },
  {
    "id": "agile_719",
    "question": "How does Lean Software Development help teams respond to changing requirements?",
    "options": [
      { "id": "option_1", "text": "By enforcing fixed project plans", "isCorrect": false },
      { "id": "option_2", "text": "By promoting adaptability and iterative development", "isCorrect": true },
      { "id": "option_3", "text": "By eliminating customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By extending development timelines", "isCorrect": false }
    ],
    "hint": "Lean encourages flexibility in development approaches.",
    "answerDescription": "Lean principles emphasize iterative cycles that allow for quick adjustments to evolving customer needs."
  },
  {
    "id": "agile_720",
    "question": "What is the primary advantage of focusing on flow efficiency in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases multitasking across the team", "isCorrect": false },
      { "id": "option_2", "text": "It reduces delays and improves delivery speed", "isCorrect": true },
      { "id": "option_3", "text": "It ensures all tasks are completed simultaneously", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for prioritization", "isCorrect": false }
    ],
    "hint": "Optimizing workflow helps deliver value faster.",
    "answerDescription": "By focusing on efficient workflow, Lean helps teams reduce bottlenecks and increase speed without sacrificing quality."
  },
  {
    "id": "agile_721",
    "question": "Why does Lean Software Development advocate for delaying decisions until the last responsible moment?",
    "options": [
      { "id": "option_1", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_2", "text": "To make more informed choices based on the latest data", "isCorrect": true },
      { "id": "option_3", "text": "To avoid planning and preparation", "isCorrect": false },
      { "id": "option_4", "text": "To increase uncertainty", "isCorrect": false }
    ],
    "hint": "Decisions should be based on the most current and relevant information.",
    "answerDescription": "Deferring decisions allows teams to incorporate the latest insights, reducing the risk of making premature commitments."
  },
  {
    "id": "agile_722",
    "question": "What is the role of automated testing in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To replace the need for manual testing completely", "isCorrect": false },
      { "id": "option_2", "text": "To enhance quality by enabling fast feedback and error detection", "isCorrect": true },
      { "id": "option_3", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_4", "text": "To ensure developers do not need to review code", "isCorrect": false }
    ],
    "hint": "Automated tests help identify issues early and improve efficiency.",
    "answerDescription": "Automated testing supports continuous integration by detecting defects early and ensuring high-quality software releases."
  },
  {
    "id": "agile_723",
    "question": "How does Lean Software Development reduce the risk of building unnecessary features?",
    "options": [
      { "id": "option_1", "text": "By following a rigid feature roadmap", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing customer feedback and value-driven development", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By including all possible features in the first release", "isCorrect": false }
    ],
    "hint": "Lean emphasizes building what provides real user value.",
    "answerDescription": "Lean encourages teams to focus on features that directly benefit users, preventing wasted effort on unnecessary functionalities."
  },
  {
    "id": "agile_724",
    "question": "Why is cycle time an important metric in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It measures the number of features implemented", "isCorrect": false },
      { "id": "option_2", "text": "It helps track how quickly work moves through the process", "isCorrect": true },
      { "id": "option_3", "text": "It replaces the need for customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "It is used to estimate project costs", "isCorrect": false }
    ],
    "hint": "Cycle time reflects how fast work items are completed.",
    "answerDescription": "By measuring cycle time, teams can identify inefficiencies and optimize their workflow to deliver value faster."
  },
  {
    "id": "agile_725",
    "question": "What Lean principle does the practice of continuous delivery support?",
    "options": [
      { "id": "option_1", "text": "Minimizing customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "Delivering value as soon as possible", "isCorrect": true },
      { "id": "option_3", "text": "Delaying releases until all features are complete", "isCorrect": false },
      { "id": "option_4", "text": "Increasing project documentation", "isCorrect": false }
    ],
    "hint": "Lean promotes frequent releases to maximize value delivery.",
    "answerDescription": "Continuous delivery enables teams to provide incremental value to customers rather than waiting for a large release."
  },
  {
    "id": "agile_726",
    "question": "Why does Lean Software Development emphasize reducing batch sizes?",
    "options": [
      { "id": "option_1", "text": "To reduce communication within teams", "isCorrect": false },
      { "id": "option_2", "text": "To increase speed and flexibility in development", "isCorrect": true },
      { "id": "option_3", "text": "To complete large amounts of work before delivery", "isCorrect": false },
      { "id": "option_4", "text": "To minimize testing efforts", "isCorrect": false }
    ],
    "hint": "Smaller batches lead to faster feedback and iteration.",
    "answerDescription": "Reducing batch sizes allows teams to deliver work more frequently, adapt to changes, and improve overall efficiency."
  },
  {
    "id": "agile_727",
    "question": "What is a key advantage of Leanâ€™s â€˜Build Integrity Inâ€™ principle?",
    "options": [
      { "id": "option_1", "text": "It ensures strict adherence to initial project plans", "isCorrect": false },
      { "id": "option_2", "text": "It promotes quality at every stage of development", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "It minimizes collaboration among teams", "isCorrect": false }
    ],
    "hint": "Quality should be an integral part of the process, not an afterthought.",
    "answerDescription": "Building integrity into the process ensures that high-quality standards are maintained throughout the development cycle."
  },
  {
    "id": "agile_728",
    "question": "Which Lean principle focuses on delivering customer value as quickly as possible?",
    "options": [
      { "id": "option_1", "text": "Deliver Fast", "isCorrect": true },
      { "id": "option_2", "text": "Reduce Documentation", "isCorrect": false },
      { "id": "option_3", "text": "Enforce Process Compliance", "isCorrect": false },
      { "id": "option_4", "text": "Increase Handoffs", "isCorrect": false }
    ],
    "hint": "Lean encourages rapid value delivery to customers.",
    "answerDescription": "Delivering fast allows teams to get feedback sooner and improve product quality through iterative learning."
  },
  {
    "id": "agile_729",
    "question": "What is a key benefit of applying the Lean principle of â€˜Eliminate Wasteâ€™?",
    "options": [
      { "id": "option_1", "text": "It improves efficiency by removing non-value-added activities", "isCorrect": true },
      { "id": "option_2", "text": "It increases documentation requirements", "isCorrect": false },
      { "id": "option_3", "text": "It encourages working on multiple tasks simultaneously", "isCorrect": false },
      { "id": "option_4", "text": "It delays decision-making until the end of the project", "isCorrect": false }
    ],
    "hint": "Lean aims to remove inefficiencies and unnecessary work.",
    "answerDescription": "By eliminating waste, teams can focus on value-adding activities that improve productivity and customer satisfaction."
  },
  {
    "id": "agile_730",
    "question": "Why does Lean Software Development encourage teams to â€˜Amplify Learningâ€™?",
    "options": [
      { "id": "option_1", "text": "To improve decision-making through continuous feedback", "isCorrect": true },
      { "id": "option_2", "text": "To avoid making any process changes", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize speed over quality", "isCorrect": false }
    ],
    "hint": "Learning is key to adapting and improving processes in Lean.",
    "answerDescription": "By continuously learning from feedback, teams can make data-driven improvements and optimize development processes."
  },
  {
    "id": "agile_731",
    "question": "What does Lean Software Development mean by â€˜Decide as Late as Possibleâ€™?",
    "options": [
      { "id": "option_1", "text": "Delaying decisions until enough information is available", "isCorrect": true },
      { "id": "option_2", "text": "Avoiding decision-making altogether", "isCorrect": false },
      { "id": "option_3", "text": "Making decisions without consulting stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Creating rigid plans that cannot be changed", "isCorrect": false }
    ],
    "hint": "Delaying decisions can help incorporate the latest data.",
    "answerDescription": "Deferring decisions to the last responsible moment allows teams to make more informed and flexible choices."
  },
  {
    "id": "agile_732",
    "question": "How does limiting work in progress (WIP) improve software development efficiency?",
    "options": [
      { "id": "option_1", "text": "It helps teams focus on completing tasks before starting new ones", "isCorrect": true },
      { "id": "option_2", "text": "It encourages multitasking across all team members", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for prioritization", "isCorrect": false },
      { "id": "option_4", "text": "It increases context switching", "isCorrect": false }
    ],
    "hint": "Reducing work in progress minimizes distractions and bottlenecks.",
    "answerDescription": "By limiting WIP, teams can complete tasks faster, reducing delays and improving overall workflow efficiency."
  },
  {
    "id": "agile_733",
    "question": "Which Lean principle helps teams quickly adapt to customer needs?",
    "options": [
      { "id": "option_1", "text": "Embrace Change", "isCorrect": true },
      { "id": "option_2", "text": "Increase Process Rigidness", "isCorrect": false },
      { "id": "option_3", "text": "Reduce Customer Involvement", "isCorrect": false },
      { "id": "option_4", "text": "Minimize Iterations", "isCorrect": false }
    ],
    "hint": "Lean supports agility and responsiveness to change.",
    "answerDescription": "By embracing change, Lean teams remain flexible and continuously refine their work based on customer feedback."
  },
  {
    "id": "agile_734",
    "question": "What does Lean Software Development suggest to ensure continuous process improvement?",
    "options": [
      { "id": "option_1", "text": "Regularly reflect and refine development practices", "isCorrect": true },
      { "id": "option_2", "text": "Follow a fixed process without making changes", "isCorrect": false },
      { "id": "option_3", "text": "Reduce collaboration among teams", "isCorrect": false },
      { "id": "option_4", "text": "Minimize automation in development", "isCorrect": false }
    ],
    "hint": "Continuous improvement is a core Lean value.",
    "answerDescription": "Regular reflection helps teams identify inefficiencies and implement improvements for better outcomes."
  },
  {
    "id": "agile_735",
    "question": "Why is empowering teams a key principle of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It enables faster decision-making and innovation", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for collaboration", "isCorrect": false },
      { "id": "option_3", "text": "It enforces strict managerial control over processes", "isCorrect": false },
      { "id": "option_4", "text": "It discourages cross-functional teamwork", "isCorrect": false }
    ],
    "hint": "Autonomous teams can respond faster to challenges and opportunities.",
    "answerDescription": "Empowered teams take ownership of their work, fostering creativity and efficiency in software development."
  },
  {
    "id": "agile_736",
    "question": "What is a key characteristic of Lean Software Development that helps reduce bottlenecks?",
    "options": [
      { "id": "option_1", "text": "Optimizing the flow of work", "isCorrect": true },
      { "id": "option_2", "text": "Increasing task dependencies", "isCorrect": false },
      { "id": "option_3", "text": "Reducing collaboration between teams", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on long-term goals", "isCorrect": false }
    ],
    "hint": "Efficient workflows help prevent process delays.",
    "answerDescription": "Optimizing the flow of work ensures that tasks move through development smoothly, reducing inefficiencies and bottlenecks."
  },
  {
    "id": "agile_737",
    "question": "How does Lean Software Development approach defect management?",
    "options": [
      { "id": "option_1", "text": "By preventing defects rather than fixing them later", "isCorrect": true },
      { "id": "option_2", "text": "By addressing defects only at the final testing phase", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring minor defects until after deployment", "isCorrect": false },
      { "id": "option_4", "text": "By allowing defects to accumulate before resolving them", "isCorrect": false }
    ],
    "hint": "Lean focuses on quality at every stage of development.",
    "answerDescription": "Preventing defects early in the process reduces costs and ensures higher software quality throughout development."
  },
  {
    "id": "agile_738",
    "question": "What is a major goal of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increasing project documentation", "isCorrect": false },
      { "id": "option_2", "text": "Maximizing work in progress", "isCorrect": false },
      { "id": "option_3", "text": "Strictly following predefined plans", "isCorrect": false },
      { "id": "option_4", "text": "Delivering value efficiently with minimal waste", "isCorrect": true }
    ],
    "hint": "Lean focuses on maximizing value while reducing unnecessary effort.",
    "answerDescription": "The goal of Lean is to eliminate waste, improve efficiency, and ensure value is delivered to customers."
  },
  {
    "id": "agile_739",
    "question": "Which Lean principle ensures teams minimize unnecessary work?",
    "options": [
      { "id": "option_1", "text": "Increase process complexity", "isCorrect": false },
      { "id": "option_2", "text": "Encourage multitasking", "isCorrect": false },
      { "id": "option_3", "text": "Maximize upfront planning", "isCorrect": false },
      { "id": "option_4", "text": "Eliminate Waste", "isCorrect": true }
    ],
    "hint": "Lean aims to reduce inefficiencies and streamline development.",
    "answerDescription": "By eliminating waste, teams can focus on high-value activities and improve overall productivity."
  },
  {
    "id": "agile_740",
    "question": "Why does Lean Software Development emphasize â€˜Build Quality Inâ€™?",
    "options": [
      { "id": "option_1", "text": "To reduce testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "To avoid customer feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "To speed up feature delivery at any cost", "isCorrect": false },
      { "id": "option_4", "text": "To prevent defects rather than fixing them later", "isCorrect": true }
    ],
    "hint": "Lean encourages quality control at every stage of development.",
    "answerDescription": "By building quality into the process, teams reduce errors, lower costs, and improve product reliability."
  },
  {
    "id": "agile_741",
    "question": "What is a key benefit of using Lean in software development?",
    "options": [
      { "id": "option_1", "text": "Increased bureaucracy and approvals", "isCorrect": false },
      { "id": "option_2", "text": "Slower feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "Higher context switching", "isCorrect": false },
      { "id": "option_4", "text": "Faster delivery of customer value", "isCorrect": true }
    ],
    "hint": "Lean promotes efficiency and customer satisfaction.",
    "answerDescription": "By reducing waste and focusing on customer value, Lean helps teams deliver solutions faster and more effectively."
  },
  {
    "id": "agile_742",
    "question": "How does Lean Software Development help manage risks?",
    "options": [
      { "id": "option_1", "text": "By deferring testing to the final phase", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing rigid project timelines", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_4", "text": "By enabling incremental development and fast feedback", "isCorrect": true }
    ],
    "hint": "Lean promotes early learning and continuous adjustments.",
    "answerDescription": "By delivering in smaller increments and obtaining quick feedback, teams can identify and address risks sooner."
  },
  {
    "id": "agile_743",
    "question": "What does Lean suggest to improve decision-making?",
    "options": [
      { "id": "option_1", "text": "Make decisions upfront without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "Rely on fixed processes without team input", "isCorrect": false },
      { "id": "option_3", "text": "Avoid customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Decide as late as possible with maximum information", "isCorrect": true }
    ],
    "hint": "Lean prefers data-driven decisions over premature choices.",
    "answerDescription": "By delaying decisions until sufficient information is available, teams can make more informed and flexible choices."
  },
  {
    "id": "agile_744",
    "question": "Why does Lean encourage small batch sizes in development?",
    "options": [
      { "id": "option_1", "text": "To increase work in progress", "isCorrect": false },
      { "id": "option_2", "text": "To minimize team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To avoid early feedback", "isCorrect": false },
      { "id": "option_4", "text": "To accelerate feedback loops and reduce cycle time", "isCorrect": true }
    ],
    "hint": "Smaller batches help teams learn faster and adjust quickly.",
    "answerDescription": "Working in small batches allows teams to iterate rapidly, detect issues early, and deliver value sooner."
  },
  {
    "id": "agile_745",
    "question": "How does Lean Software Development promote efficiency?",
    "options": [
      { "id": "option_1", "text": "By increasing work in progress limits", "isCorrect": false },
      { "id": "option_2", "text": "By reducing customer collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing a rigid command structure", "isCorrect": false },
      { "id": "option_4", "text": "By optimizing workflows and eliminating waste", "isCorrect": true }
    ],
    "hint": "Lean focuses on continuous process improvements.",
    "answerDescription": "By eliminating inefficiencies and optimizing workflows, Lean enables teams to work more effectively and deliver faster."
  },
  {
    "id": "agile_746",
    "question": "What role does automation play in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases manual intervention in processes", "isCorrect": false },
      { "id": "option_2", "text": "It slows down development by introducing complexity", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for human decision-making", "isCorrect": false },
      { "id": "option_4", "text": "It reduces errors and accelerates delivery", "isCorrect": true }
    ],
    "hint": "Automation helps teams reduce inefficiencies in software development.",
    "answerDescription": "By automating repetitive tasks, Lean teams can focus on innovation, reduce errors, and speed up delivery."
  },
  {
    "id": "agile_747",
    "question": "How does Lean Software Development enhance collaboration?",
    "options": [
      { "id": "option_1", "text": "By enforcing siloed work structures", "isCorrect": false },
      { "id": "option_2", "text": "By minimizing direct communication", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging cross-functional teamwork", "isCorrect": false },
      { "id": "option_4", "text": "By fostering open communication and shared ownership", "isCorrect": true }
    ],
    "hint": "Lean values teamwork and transparency in development.",
    "answerDescription": "Open communication and shared responsibility enable teams to work efficiently and improve product quality."
  },
  {
    "id": "agile_748",
    "question": "What is a key characteristic of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "Heavy upfront planning", "isCorrect": false },
      { "id": "option_3", "text": "Strict hierarchical decision-making", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing work in progress", "isCorrect": false }
    ],
    "hint": "Lean encourages iterative enhancements.",
    "answerDescription": "Continuous improvement helps teams refine their processes, reduce waste, and deliver better software."
  },
  {
    "id": "agile_749",
    "question": "Why is customer feedback important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It ensures software meets real needs", "isCorrect": true },
      { "id": "option_2", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_3", "text": "It increases unnecessary changes", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for testing", "isCorrect": false }
    ],
    "hint": "Lean focuses on delivering value to users.",
    "answerDescription": "By incorporating customer feedback, teams can develop solutions that align with user needs and expectations."
  },
  {
    "id": "agile_750",
    "question": "How does Lean Software Development handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "It embraces flexibility and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "It locks in requirements early", "isCorrect": false },
      { "id": "option_3", "text": "It discourages changes to avoid rework", "isCorrect": false },
      { "id": "option_4", "text": "It requires extensive documentation before changes", "isCorrect": false }
    ],
    "hint": "Lean promotes agility in response to new information.",
    "answerDescription": "Flexibility allows Lean teams to adjust plans based on evolving customer needs and market conditions."
  },
  {
    "id": "agile_751",
    "question": "Which approach does Lean recommend for improving efficiency?",
    "options": [
      { "id": "option_1", "text": "Reducing waste in processes", "isCorrect": true },
      { "id": "option_2", "text": "Increasing task switching", "isCorrect": false },
      { "id": "option_3", "text": "Adding more approval steps", "isCorrect": false },
      { "id": "option_4", "text": "Delaying deployment until all features are complete", "isCorrect": false }
    ],
    "hint": "Lean focuses on streamlining workflows.",
    "answerDescription": "Reducing waste eliminates inefficiencies and allows teams to focus on delivering value."
  },
  {
    "id": "agile_752",
    "question": "What does Lean Software Development emphasize for team collaboration?",
    "options": [
      { "id": "option_1", "text": "Cross-functional teamwork", "isCorrect": true },
      { "id": "option_2", "text": "Strict role boundaries", "isCorrect": false },
      { "id": "option_3", "text": "Limited communication between teams", "isCorrect": false },
      { "id": "option_4", "text": "Centralized decision-making", "isCorrect": false }
    ],
    "hint": "Lean values collaboration across skill sets.",
    "answerDescription": "Cross-functional teams enable diverse expertise and faster decision-making, leading to better outcomes."
  },
  {
    "id": "agile_753",
    "question": "Why does Lean Software Development discourage excessive multitasking?",
    "options": [
      { "id": "option_1", "text": "It reduces efficiency and focus", "isCorrect": true },
      { "id": "option_2", "text": "It encourages task completion faster", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for prioritization", "isCorrect": false },
      { "id": "option_4", "text": "It speeds up delivery of multiple projects", "isCorrect": false }
    ],
    "hint": "Too many tasks at once can slow down progress.",
    "answerDescription": "Focusing on fewer tasks at a time helps teams maintain quality and complete work faster."
  },
  {
    "id": "agile_754",
    "question": "What is an essential aspect of Lean's 'Amplify Learning' principle?",
    "options": [
      { "id": "option_1", "text": "Encouraging fast feedback loops", "isCorrect": true },
      { "id": "option_2", "text": "Avoiding experimentation", "isCorrect": false },
      { "id": "option_3", "text": "Documenting all knowledge before implementation", "isCorrect": false },
      { "id": "option_4", "text": "Relying only on historical data for decisions", "isCorrect": false }
    ],
    "hint": "Lean values continuous learning and adaptation.",
    "answerDescription": "Fast feedback helps teams iterate quickly and improve their solutions based on real-world data."
  },
  {
    "id": "agile_755",
    "question": "What is a primary goal of delivering software in small increments?",
    "options": [
      { "id": "option_1", "text": "Reducing risk and improving adaptability", "isCorrect": true },
      { "id": "option_2", "text": "Delaying customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing automation usage", "isCorrect": false },
      { "id": "option_4", "text": "Delivering all features at once", "isCorrect": false }
    ],
    "hint": "Smaller releases help teams adjust based on feedback.",
    "answerDescription": "By delivering in smaller increments, teams can learn and pivot based on customer needs while reducing risks."
  },
  {
    "id": "agile_756",
    "question": "Why does Lean Software Development encourage decentralization of decision-making?",
    "options": [
      { "id": "option_1", "text": "It speeds up problem-solving and innovation", "isCorrect": true },
      { "id": "option_2", "text": "It reduces team autonomy", "isCorrect": false },
      { "id": "option_3", "text": "It creates bottlenecks in workflow", "isCorrect": false },
      { "id": "option_4", "text": "It increases approval steps", "isCorrect": false }
    ],
    "hint": "Empowering teams leads to faster decisions.",
    "answerDescription": "Decentralizing decisions allows teams to react quickly and fosters a culture of responsibility and innovation."
  },
  {
    "id": "agile_757",
    "question": "How does Lean Software Development improve customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By delivering high-value features quickly", "isCorrect": true },
      { "id": "option_2", "text": "By delaying releases until perfection is achieved", "isCorrect": false },
      { "id": "option_3", "text": "By increasing project scope", "isCorrect": false },
      { "id": "option_4", "text": "By reducing customer involvement", "isCorrect": false }
    ],
    "hint": "Lean focuses on delivering what customers need efficiently.",
    "answerDescription": "Frequent deliveries of valuable features ensure customers receive solutions that meet their expectations faster."
  },
  {
    "id": "agile_758",
    "question": "What is the purpose of value stream mapping in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To document every decision made", "isCorrect": false },
      { "id": "option_2", "text": "To visualize and optimize the flow of work", "isCorrect": true },
      { "id": "option_3", "text": "To create a fixed long-term plan", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for iteration", "isCorrect": false }
    ],
    "hint": "It helps in identifying bottlenecks in the workflow.",
    "answerDescription": "Value stream mapping provides a clear picture of how work progresses, helping teams improve efficiency by reducing waste."
  },
  {
    "id": "agile_759",
    "question": "How does Lean Software Development handle bottlenecks in workflow?",
    "options": [
      { "id": "option_1", "text": "By ignoring them to maintain speed", "isCorrect": false },
      { "id": "option_2", "text": "By identifying and optimizing constraints", "isCorrect": true },
      { "id": "option_3", "text": "By increasing the workload on the team", "isCorrect": false },
      { "id": "option_4", "text": "By adding more approvals before work progresses", "isCorrect": false }
    ],
    "hint": "Lean focuses on removing obstacles to improve efficiency.",
    "answerDescription": "Identifying and optimizing bottlenecks allows teams to maintain smooth workflow and faster deliveries."
  },
  {
    "id": "agile_760",
    "question": "What is the role of automation in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To replace all human involvement", "isCorrect": false },
      { "id": "option_2", "text": "To enhance efficiency and reduce manual errors", "isCorrect": true },
      { "id": "option_3", "text": "To create more complex processes", "isCorrect": false },
      { "id": "option_4", "text": "To delay testing until the final phase", "isCorrect": false }
    ],
    "hint": "Automation helps streamline repetitive tasks.",
    "answerDescription": "By automating repetitive processes, teams can reduce errors, speed up development, and focus on innovation."
  },
  {
    "id": "agile_761",
    "question": "How does Lean Software Development promote innovation?",
    "options": [
      { "id": "option_1", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_2", "text": "By allowing fast iterations and learning from failures", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing rigid guidelines", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding customer feedback", "isCorrect": false }
    ],
    "hint": "Innovation comes from learning quickly and adapting.",
    "answerDescription": "Fast iterations and feedback loops enable teams to experiment and refine ideas efficiently."
  },
  {
    "id": "agile_762",
    "question": "What principle of Lean Software Development helps prevent overproduction?",
    "options": [
      { "id": "option_1", "text": "Maximizing output at all times", "isCorrect": false },
      { "id": "option_2", "text": "Delivering only what is needed, when it is needed", "isCorrect": true },
      { "id": "option_3", "text": "Planning everything upfront", "isCorrect": false },
      { "id": "option_4", "text": "Delaying customer feedback", "isCorrect": false }
    ],
    "hint": "Lean focuses on delivering value, not excess work.",
    "answerDescription": "By producing only what is necessary, teams can avoid waste and focus on delivering real value."
  },
  {
    "id": "agile_763",
    "question": "What is the purpose of limiting work in progress (WIP) in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase task switching", "isCorrect": false },
      { "id": "option_2", "text": "To improve focus and reduce multitasking", "isCorrect": true },
      { "id": "option_3", "text": "To delay releases until all tasks are completed", "isCorrect": false },
      { "id": "option_4", "text": "To increase the number of ongoing projects", "isCorrect": false }
    ],
    "hint": "WIP limits help teams maintain efficiency.",
    "answerDescription": "By focusing on fewer tasks at a time, teams can complete work faster and with better quality."
  },
  {
    "id": "agile_764",
    "question": "Why is empowering teams important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To centralize all decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To enable faster decision-making and problem-solving", "isCorrect": true },
      { "id": "option_3", "text": "To reduce individual responsibility", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict supervision", "isCorrect": false }
    ],
    "hint": "Lean encourages autonomy for better efficiency.",
    "answerDescription": "Empowered teams can make quick decisions, adapt to challenges, and drive innovation."
  },
  {
    "id": "agile_765",
    "question": "What does Lean Software Development emphasize regarding defects?",
    "options": [
      { "id": "option_1", "text": "Fixing defects at the end of development", "isCorrect": false },
      { "id": "option_2", "text": "Preventing defects early through continuous feedback", "isCorrect": true },
      { "id": "option_3", "text": "Ignoring minor defects to save time", "isCorrect": false },
      { "id": "option_4", "text": "Delaying testing until after deployment", "isCorrect": false }
    ],
    "hint": "Lean aims to catch and prevent issues early.",
    "answerDescription": "By addressing defects early, teams can avoid costly fixes and ensure higher software quality."
  },
  {
    "id": "agile_766",
    "question": "How does Lean Software Development encourage sustainable work practices?",
    "options": [
      { "id": "option_1", "text": "By increasing overtime work", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining a steady and predictable workflow", "isCorrect": true },
      { "id": "option_3", "text": "By pushing teams to deliver faster at any cost", "isCorrect": false },
      { "id": "option_4", "text": "By reducing team autonomy", "isCorrect": false }
    ],
    "hint": "Sustainable pace ensures long-term productivity.",
    "answerDescription": "A steady workflow prevents burnout and improves long-term efficiency and team morale."
  },
  {
    "id": "agile_767",
    "question": "Why does Lean Software Development focus on short feedback loops?",
    "options": [
      { "id": "option_1", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To quickly validate assumptions and make improvements", "isCorrect": true },
      { "id": "option_3", "text": "To increase documentation efforts", "isCorrect": false },
      { "id": "option_4", "text": "To minimize customer interactions", "isCorrect": false }
    ],
    "hint": "Lean values learning and quick adaptation.",
    "answerDescription": "Short feedback loops help teams identify issues and refine solutions early, improving overall quality."
  },
  {
    "id": "agile_768",
    "question": "What is the main goal of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To maximize documentation", "isCorrect": false },
      { "id": "option_2", "text": "To increase work-in-progress", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate waste and deliver value quickly", "isCorrect": true },
      { "id": "option_4", "text": "To create rigid workflows", "isCorrect": false }
    ],
    "hint": "Lean aims to remove unnecessary steps and focus on value.",
    "answerDescription": "Lean Software Development focuses on delivering value efficiently by removing waste and optimizing workflows."
  },
  {
    "id": "agile_769",
    "question": "Why does Lean Software Development emphasize customer collaboration?",
    "options": [
      { "id": "option_1", "text": "To increase the number of requirements", "isCorrect": false },
      { "id": "option_2", "text": "To reduce developer autonomy", "isCorrect": false },
      { "id": "option_3", "text": "To ensure continuous feedback and alignment with needs", "isCorrect": true },
      { "id": "option_4", "text": "To delay delivery until all features are complete", "isCorrect": false }
    ],
    "hint": "Customer involvement helps refine the product iteratively.",
    "answerDescription": "By maintaining close collaboration with customers, teams can adapt quickly and deliver what truly matters."
  },
  {
    "id": "agile_770",
    "question": "What is the impact of reducing batch sizes in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increased project risk", "isCorrect": false },
      { "id": "option_2", "text": "Slower delivery of features", "isCorrect": false },
      { "id": "option_3", "text": "Faster feedback and improved adaptability", "isCorrect": true },
      { "id": "option_4", "text": "More complex deployments", "isCorrect": false }
    ],
    "hint": "Smaller work increments allow quicker testing and validation.",
    "answerDescription": "Reducing batch sizes enables teams to get feedback faster, iterate quickly, and improve overall quality."
  },
  {
    "id": "agile_771",
    "question": "How does Lean Software Development support continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By setting fixed long-term goals", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding process changes", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging iterative learning and adaptation", "isCorrect": true },
      { "id": "option_4", "text": "By minimizing team feedback", "isCorrect": false }
    ],
    "hint": "Lean thrives on regular evaluation and refinement.",
    "answerDescription": "Continuous improvement in Lean comes from frequent evaluations, learning, and adapting workflows for better efficiency."
  },
  {
    "id": "agile_772",
    "question": "Why is reducing cycle time important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase work backlog", "isCorrect": false },
      { "id": "option_2", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To deliver value to customers faster", "isCorrect": true },
      { "id": "option_4", "text": "To increase documentation requirements", "isCorrect": false }
    ],
    "hint": "Lean focuses on efficiency and rapid delivery.",
    "answerDescription": "Reducing cycle time helps teams respond faster to customer needs and changes, improving overall agility."
  },
  {
    "id": "agile_773",
    "question": "How does Lean Software Development approach team collaboration?",
    "options": [
      { "id": "option_1", "text": "By assigning strict roles", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging cross-functional work", "isCorrect": false },
      { "id": "option_3", "text": "By fostering a culture of shared responsibility", "isCorrect": true },
      { "id": "option_4", "text": "By limiting communication between teams", "isCorrect": false }
    ],
    "hint": "Lean promotes teamwork and flexibility.",
    "answerDescription": "Lean teams work collaboratively, sharing knowledge and responsibilities to enhance productivity and innovation."
  },
  {
    "id": "agile_774",
    "question": "What is the primary reason for eliminating handoffs in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To reduce accountability", "isCorrect": false },
      { "id": "option_2", "text": "To add more process steps", "isCorrect": false },
      { "id": "option_3", "text": "To reduce delays and information loss", "isCorrect": true },
      { "id": "option_4", "text": "To increase individual workload", "isCorrect": false }
    ],
    "hint": "Handoffs often introduce bottlenecks and miscommunication.",
    "answerDescription": "Minimizing handoffs ensures a smoother workflow, reducing miscommunication and speeding up development."
  },
  {
    "id": "agile_775",
    "question": "What role does leadership play in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To dictate every decision", "isCorrect": false },
      { "id": "option_2", "text": "To ensure strict adherence to processes", "isCorrect": false },
      { "id": "option_3", "text": "To support and empower teams to improve", "isCorrect": true },
      { "id": "option_4", "text": "To limit team flexibility", "isCorrect": false }
    ],
    "hint": "Lean leadership focuses on enabling teams.",
    "answerDescription": "Effective Lean leadership encourages team growth, autonomy, and process improvement for better efficiency."
  },
  {
    "id": "agile_776",
    "question": "Why is early defect detection crucial in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To delay product releases", "isCorrect": false },
      { "id": "option_2", "text": "To increase testing costs", "isCorrect": false },
      { "id": "option_3", "text": "To reduce rework and improve quality", "isCorrect": true },
      { "id": "option_4", "text": "To encourage more manual debugging", "isCorrect": false }
    ],
    "hint": "Fixing defects early saves time and effort.",
    "answerDescription": "Detecting defects early allows teams to resolve issues before they become costly, ensuring higher product quality."
  },
  {
    "id": "agile_777",
    "question": "How does Lean Software Development handle variability in workflows?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid structures", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring unexpected changes", "isCorrect": false },
      { "id": "option_3", "text": "By adapting and continuously improving processes", "isCorrect": true },
      { "id": "option_4", "text": "By limiting customer involvement", "isCorrect": false }
    ],
    "hint": "Lean embraces change and improvement.",
    "answerDescription": "Lean teams continuously refine their processes to accommodate variability, improving flexibility and responsiveness."
  },
  {
    "id": "agile_778",
    "question": "What is the purpose of limiting Work in Progress (WIP) in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase multitasking", "isCorrect": false },
      { "id": "option_2", "text": "To delay feature releases", "isCorrect": false },
      { "id": "option_3", "text": "To add more backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To improve focus and efficiency", "isCorrect": true }
    ],
    "hint": "Reducing WIP helps teams work more efficiently.",
    "answerDescription": "By limiting WIP, teams reduce bottlenecks and increase focus, leading to faster and more efficient software development."
  },
  {
    "id": "agile_779",
    "question": "How does Lean Software Development enhance customer value?",
    "options": [
      { "id": "option_1", "text": "By increasing project duration", "isCorrect": false },
      { "id": "option_2", "text": "By focusing on secondary tasks", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing internal processes", "isCorrect": false },
      { "id": "option_4", "text": "By continuously delivering useful features", "isCorrect": true }
    ],
    "hint": "Lean focuses on delivering the most important features quickly.",
    "answerDescription": "Lean principles emphasize delivering valuable features to customers through continuous improvement and iteration."
  },
  {
    "id": "agile_780",
    "question": "What is the primary focus of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Maximizing process overhead", "isCorrect": false },
      { "id": "option_2", "text": "Increasing the number of approvals", "isCorrect": false },
      { "id": "option_3", "text": "Creating complex workflows", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating waste and improving efficiency", "isCorrect": true }
    ],
    "hint": "Lean principles aim to streamline processes and remove unnecessary work.",
    "answerDescription": "By focusing on eliminating waste, Lean Software Development increases efficiency and ensures valuable work gets done."
  },
  {
    "id": "agile_781",
    "question": "Why is empowering teams important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To reduce accountability", "isCorrect": false },
      { "id": "option_2", "text": "To create more management layers", "isCorrect": false },
      { "id": "option_3", "text": "To limit decision-making authority", "isCorrect": false },
      { "id": "option_4", "text": "To encourage innovation and ownership", "isCorrect": true }
    ],
    "hint": "Lean encourages teams to take responsibility for their work.",
    "answerDescription": "Empowered teams make better decisions, improve collaboration, and drive continuous improvement in Lean environments."
  },
  {
    "id": "agile_782",
    "question": "How does Lean Software Development handle defects?",
    "options": [
      { "id": "option_1", "text": "By ignoring minor defects", "isCorrect": false },
      { "id": "option_2", "text": "By fixing defects at the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "By documenting but not resolving them", "isCorrect": false },
      { "id": "option_4", "text": "By identifying and fixing defects early", "isCorrect": true }
    ],
    "hint": "Lean emphasizes quality and early problem detection.",
    "answerDescription": "Fixing defects early reduces costs and ensures high-quality software delivery in Lean development."
  },
  {
    "id": "agile_783",
    "question": "What is the role of feedback loops in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To add more documentation", "isCorrect": false },
      { "id": "option_4", "text": "To enable continuous improvement", "isCorrect": true }
    ],
    "hint": "Feedback loops help teams learn and adapt quickly.",
    "answerDescription": "By using feedback loops, teams in Lean environments continuously refine their work based on user and stakeholder input."
  },
  {
    "id": "agile_784",
    "question": "Why does Lean Software Development focus on knowledge sharing?",
    "options": [
      { "id": "option_1", "text": "To increase individual work dependency", "isCorrect": false },
      { "id": "option_2", "text": "To prevent cross-functional collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To avoid process standardization", "isCorrect": false },
      { "id": "option_4", "text": "To enhance team learning and efficiency", "isCorrect": true }
    ],
    "hint": "Shared knowledge leads to better decision-making and team growth.",
    "answerDescription": "Lean promotes knowledge sharing to build stronger, more efficient teams that can quickly adapt to changes."
  },
  {
    "id": "agile_785",
    "question": "What is the impact of reducing lead time in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increased production delays", "isCorrect": false },
      { "id": "option_2", "text": "Higher development costs", "isCorrect": false },
      { "id": "option_3", "text": "More complex project management", "isCorrect": false },
      { "id": "option_4", "text": "Faster delivery of value", "isCorrect": true }
    ],
    "hint": "Shorter lead times mean quicker feedback and delivery.",
    "answerDescription": "Reducing lead time allows teams to deliver features more quickly, improving customer satisfaction and business agility."
  },
  {
    "id": "agile_786",
    "question": "How does Lean Software Development address bottlenecks in workflows?",
    "options": [
      { "id": "option_1", "text": "By increasing task assignments", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring inefficiencies", "isCorrect": false },
      { "id": "option_3", "text": "By limiting process analysis", "isCorrect": false },
      { "id": "option_4", "text": "By identifying and eliminating constraints", "isCorrect": true }
    ],
    "hint": "Lean aims to improve flow by removing obstacles.",
    "answerDescription": "By analyzing and resolving workflow bottlenecks, Lean helps teams improve efficiency and throughput."
  },
  {
    "id": "agile_787",
    "question": "Why is simplicity valued in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To make processes more complex", "isCorrect": false },
      { "id": "option_2", "text": "To increase the number of required approvals", "isCorrect": false },
      { "id": "option_3", "text": "To encourage excessive documentation", "isCorrect": false },
      { "id": "option_4", "text": "To reduce unnecessary work and waste", "isCorrect": true }
    ],
    "hint": "Simplicity in Lean helps eliminate waste and inefficiency.",
    "answerDescription": "By valuing simplicity, Lean Software Development removes unnecessary steps and focuses on delivering essential features."
  },
  {
    "id": "agile_788",
    "question": "What is a key principle of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Eliminate waste", "isCorrect": true },
      { "id": "option_2", "text": "Increase process complexity", "isCorrect": false },
      { "id": "option_3", "text": "Focus on rigid planning", "isCorrect": false },
      { "id": "option_4", "text": "Reduce customer feedback", "isCorrect": false }
    ],
    "hint": "Lean aims to optimize efficiency and remove unnecessary steps.",
    "answerDescription": "Eliminating waste is one of the core principles of Lean, helping teams streamline their processes."
  },
  {
    "id": "agile_789",
    "question": "Why does Lean Software Development emphasize rapid feedback?",
    "options": [
      { "id": "option_1", "text": "To improve decision-making", "isCorrect": true },
      { "id": "option_2", "text": "To delay product releases", "isCorrect": false },
      { "id": "option_3", "text": "To minimize collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To increase documentation", "isCorrect": false }
    ],
    "hint": "Quick feedback helps teams adapt and refine solutions.",
    "answerDescription": "Rapid feedback enables teams to make informed decisions, reducing the risk of defects and unnecessary work."
  },
  {
    "id": "agile_790",
    "question": "How does Lean Software Development help improve efficiency?",
    "options": [
      { "id": "option_1", "text": "By reducing unnecessary work", "isCorrect": true },
      { "id": "option_2", "text": "By increasing approval layers", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing rigid rules", "isCorrect": false },
      { "id": "option_4", "text": "By adding more work in progress", "isCorrect": false }
    ],
    "hint": "Lean focuses on eliminating non-value-adding activities.",
    "answerDescription": "Reducing unnecessary work streamlines processes and allows teams to focus on value-driven tasks."
  },
  {
    "id": "agile_791",
    "question": "What is the impact of minimizing batch sizes in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Faster delivery of features", "isCorrect": true },
      { "id": "option_2", "text": "Increased development time", "isCorrect": false },
      { "id": "option_3", "text": "More complex workflows", "isCorrect": false },
      { "id": "option_4", "text": "Higher defect rates", "isCorrect": false }
    ],
    "hint": "Smaller batches help teams deliver work incrementally.",
    "answerDescription": "Reducing batch sizes allows teams to release features faster, improving agility and responsiveness."
  },
  {
    "id": "agile_792",
    "question": "How does Lean Software Development support continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By fostering a learning culture", "isCorrect": true },
      { "id": "option_2", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding process changes", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating retrospectives", "isCorrect": false }
    ],
    "hint": "Lean encourages learning and process refinement.",
    "answerDescription": "A learning culture promotes innovation, allowing teams to refine their processes and improve outcomes continuously."
  },
  {
    "id": "agile_793",
    "question": "Why does Lean Software Development advocate for delivering fast?",
    "options": [
      { "id": "option_1", "text": "To reduce time to market", "isCorrect": true },
      { "id": "option_2", "text": "To increase work-in-progress", "isCorrect": false },
      { "id": "option_3", "text": "To limit team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "To delay user feedback", "isCorrect": false }
    ],
    "hint": "Faster delivery allows teams to respond to market needs quickly.",
    "answerDescription": "Lean focuses on reducing lead time to bring value to customers faster and stay competitive."
  },
  {
    "id": "agile_794",
    "question": "How does Lean Software Development handle variability in work processes?",
    "options": [
      { "id": "option_1", "text": "By embracing adaptability", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing rigid structures", "isCorrect": false },
      { "id": "option_3", "text": "By reducing collaboration", "isCorrect": false },
      { "id": "option_4", "text": "By increasing task dependencies", "isCorrect": false }
    ],
    "hint": "Flexibility helps teams adjust to changes effectively.",
    "answerDescription": "Adaptability allows Lean teams to handle unpredictability and optimize their workflows as needed."
  },
  {
    "id": "agile_795",
    "question": "What does Lean Software Development emphasize regarding customer needs?",
    "options": [
      { "id": "option_1", "text": "Delivering value continuously", "isCorrect": true },
      { "id": "option_2", "text": "Delaying feature releases", "isCorrect": false },
      { "id": "option_3", "text": "Reducing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on internal priorities", "isCorrect": false }
    ],
    "hint": "Customer value is a primary goal in Lean development.",
    "answerDescription": "Lean encourages teams to prioritize and continuously deliver value to customers to maximize satisfaction."
  },
  {
    "id": "agile_796",
    "question": "How does Lean Software Development reduce project risk?",
    "options": [
      { "id": "option_1", "text": "By delivering work incrementally", "isCorrect": true },
      { "id": "option_2", "text": "By increasing upfront planning", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring changing requirements", "isCorrect": false },
      { "id": "option_4", "text": "By delaying product validation", "isCorrect": false }
    ],
    "hint": "Incremental delivery allows for continuous validation.",
    "answerDescription": "By breaking work into smaller, incremental releases, teams can validate progress and reduce uncertainty."
  },
  {
    "id": "agile_797",
    "question": "What is a benefit of cross-functional teams in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Faster problem resolution", "isCorrect": true },
      { "id": "option_2", "text": "Increased departmental silos", "isCorrect": false },
      { "id": "option_3", "text": "Reduced knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "More hierarchical decision-making", "isCorrect": false }
    ],
    "hint": "Cross-functional collaboration enhances efficiency and speed.",
    "answerDescription": "Cross-functional teams bring diverse expertise together, allowing for quicker issue resolution and innovation."
  },
  {
    "id": "agile_798",
    "question": "What is a key advantage of limiting work in progress (WIP) in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increases multitasking", "isCorrect": false },
      { "id": "option_2", "text": "Improves focus and flow efficiency", "isCorrect": true },
      { "id": "option_3", "text": "Delays task completion", "isCorrect": false },
      { "id": "option_4", "text": "Reduces team communication", "isCorrect": false }
    ],
    "hint": "WIP limits help prevent overload and enhance workflow.",
    "answerDescription": "By limiting WIP, teams can focus on completing tasks efficiently, reducing bottlenecks and improving productivity."
  },
  {
    "id": "agile_799",
    "question": "Why is customer feedback essential in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To align development with user needs", "isCorrect": true },
      { "id": "option_3", "text": "To increase documentation", "isCorrect": false },
      { "id": "option_4", "text": "To reduce product iterations", "isCorrect": false }
    ],
    "hint": "Customer involvement ensures products meet expectations.",
    "answerDescription": "Regular feedback from customers helps teams validate their work and adjust quickly to meet user demands."
  },
  {
    "id": "agile_800",
    "question": "How does Lean Software Development help reduce waste?",
    "options": [
      { "id": "option_1", "text": "By adding extra processes", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating non-value-adding activities", "isCorrect": true },
      { "id": "option_3", "text": "By increasing the number of approval steps", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on documentation", "isCorrect": false }
    ],
    "hint": "Lean aims to remove inefficiencies in the workflow.",
    "answerDescription": "Eliminating activities that do not contribute to customer value helps teams streamline development and enhance efficiency."
  },
  {
    "id": "agile_801",
    "question": "Why does Lean Software Development encourage continuous deployment?",
    "options": [
      { "id": "option_1", "text": "To delay customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To deliver value faster", "isCorrect": true },
      { "id": "option_3", "text": "To increase complexity", "isCorrect": false },
      { "id": "option_4", "text": "To avoid automation", "isCorrect": false }
    ],
    "hint": "Fast delivery helps respond to market changes effectively.",
    "answerDescription": "Continuous deployment allows teams to release updates frequently, ensuring rapid delivery of value to users."
  },
  {
    "id": "agile_802",
    "question": "What is the role of empowerment in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase top-down control", "isCorrect": false },
      { "id": "option_2", "text": "To enable teams to make decisions", "isCorrect": true },
      { "id": "option_3", "text": "To reduce collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To slow down work processes", "isCorrect": false }
    ],
    "hint": "Lean promotes autonomy for better problem-solving.",
    "answerDescription": "Empowered teams can make decisions quickly, leading to faster development cycles and more innovative solutions."
  },
  {
    "id": "agile_803",
    "question": "How does Lean Software Development support adaptability?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid workflows", "isCorrect": false },
      { "id": "option_2", "text": "By enabling teams to respond to change", "isCorrect": true },
      { "id": "option_3", "text": "By discouraging innovation", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding process improvements", "isCorrect": false }
    ],
    "hint": "Flexibility is a core principle of Lean.",
    "answerDescription": "Lean encourages teams to adjust quickly to new information and changing customer needs to improve outcomes."
  },
  {
    "id": "agile_804",
    "question": "What does Lean Software Development prioritize to ensure quality?",
    "options": [
      { "id": "option_1", "text": "Increasing process complexity", "isCorrect": false },
      { "id": "option_2", "text": "Building quality into the process", "isCorrect": true },
      { "id": "option_3", "text": "Delaying testing", "isCorrect": false },
      { "id": "option_4", "text": "Adding extra documentation", "isCorrect": false }
    ],
    "hint": "Lean aims for early defect detection and resolution.",
    "answerDescription": "Quality is integrated into Lean processes to minimize defects and ensure efficient, high-quality product delivery."
  },
  {
    "id": "agile_805",
    "question": "Why does Lean Software Development promote small batch sizes?",
    "options": [
      { "id": "option_1", "text": "To increase batch processing time", "isCorrect": false },
      { "id": "option_2", "text": "To enhance speed and flexibility", "isCorrect": true },
      { "id": "option_3", "text": "To delay customer delivery", "isCorrect": false },
      { "id": "option_4", "text": "To increase approval steps", "isCorrect": false }
    ],
    "hint": "Smaller batches help improve delivery flow.",
    "answerDescription": "By working in small batches, teams can release features faster, reduce risk, and adapt more effectively to change."
  },
  {
    "id": "agile_806",
    "question": "How does Lean Software Development reduce project costs?",
    "options": [
      { "id": "option_1", "text": "By increasing work-in-progress", "isCorrect": false },
      { "id": "option_2", "text": "By minimizing rework and waste", "isCorrect": true },
      { "id": "option_3", "text": "By adding extra review cycles", "isCorrect": false },
      { "id": "option_4", "text": "By reducing customer involvement", "isCorrect": false }
    ],
    "hint": "Lean focuses on optimizing resources.",
    "answerDescription": "By reducing waste and rework, Lean helps lower costs while maintaining high efficiency and product quality."
  },
  {
    "id": "agile_807",
    "question": "What is a benefit of visual management in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Hides workflow bottlenecks", "isCorrect": false },
      { "id": "option_2", "text": "Improves transparency and coordination", "isCorrect": true },
      { "id": "option_3", "text": "Reduces collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Slows down decision-making", "isCorrect": false }
    ],
    "hint": "Making work visible enhances clarity and team coordination.",
    "answerDescription": "Visual management tools like Kanban boards help teams identify bottlenecks, prioritize tasks, and enhance workflow transparency."
  },
  {
    "id": "agile_808",
    "question": "What is a key principle of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Maximizing work-in-progress", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing documentation over working software", "isCorrect": false },
      { "id": "option_3", "text": "Eliminating waste", "isCorrect": true },
      { "id": "option_4", "text": "Delaying customer feedback", "isCorrect": false }
    ],
    "hint": "Lean focuses on removing inefficiencies.",
    "answerDescription": "Eliminating waste ensures that only value-adding activities are prioritized, improving efficiency."
  },
  {
    "id": "agile_809",
    "question": "How does Lean Software Development help improve time-to-market?",
    "options": [
      { "id": "option_1", "text": "By increasing process steps", "isCorrect": false },
      { "id": "option_2", "text": "By reducing team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By accelerating value delivery", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing strict approval gates", "isCorrect": false }
    ],
    "hint": "Lean aims for faster delivery cycles.",
    "answerDescription": "By focusing on continuous delivery and reducing delays, Lean enables organizations to bring products to market quickly."
  },
  {
    "id": "agile_810",
    "question": "Why is minimizing handoffs important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase dependencies between teams", "isCorrect": false },
      { "id": "option_2", "text": "To slow down the process", "isCorrect": false },
      { "id": "option_3", "text": "To reduce errors and improve efficiency", "isCorrect": true },
      { "id": "option_4", "text": "To maximize process complexity", "isCorrect": false }
    ],
    "hint": "Fewer transitions between teams lead to fewer miscommunications.",
    "answerDescription": "Reducing handoffs minimizes delays, misinterpretations, and inefficiencies in the development process."
  },
  {
    "id": "agile_811",
    "question": "What is a key benefit of implementing pull systems in Lean?",
    "options": [
      { "id": "option_1", "text": "It increases task overload", "isCorrect": false },
      { "id": "option_2", "text": "It forces tasks to be completed sequentially", "isCorrect": false },
      { "id": "option_3", "text": "It allows work to start only when capacity is available", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates workflow tracking", "isCorrect": false }
    ],
    "hint": "Pull systems prevent overloading the team with work.",
    "answerDescription": "By implementing pull-based workflows, teams ensure that new tasks are taken only when resources are available, reducing waste."
  },
  {
    "id": "agile_812",
    "question": "How does Lean Software Development contribute to sustainable development?",
    "options": [
      { "id": "option_1", "text": "By promoting excessive overtime", "isCorrect": false },
      { "id": "option_2", "text": "By delaying feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging a steady, sustainable work pace", "isCorrect": true },
      { "id": "option_4", "text": "By focusing on short-term gains", "isCorrect": false }
    ],
    "hint": "Lean aims to prevent burnout and inefficiency.",
    "answerDescription": "A sustainable work pace helps maintain long-term productivity and prevents developer fatigue."
  },
  {
    "id": "agile_813",
    "question": "Why is 'delivering as fast as possible' a key focus in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To maximize rework", "isCorrect": false },
      { "id": "option_2", "text": "To reduce communication between teams", "isCorrect": false },
      { "id": "option_3", "text": "To quickly deliver value to customers", "isCorrect": true },
      { "id": "option_4", "text": "To avoid process improvements", "isCorrect": false }
    ],
    "hint": "Fast delivery helps teams adapt to customer needs.",
    "answerDescription": "Lean emphasizes rapid delivery to enable customer feedback and iterative improvements."
  },
  {
    "id": "agile_814",
    "question": "How does Lean Software Development handle defects in the software process?",
    "options": [
      { "id": "option_1", "text": "By fixing defects at the end of development", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring minor defects", "isCorrect": false },
      { "id": "option_3", "text": "By integrating quality checks throughout the process", "isCorrect": true },
      { "id": "option_4", "text": "By minimizing testing efforts", "isCorrect": false }
    ],
    "hint": "Lean ensures that quality is built into every stage.",
    "answerDescription": "Continuous quality monitoring helps detect and fix issues early, reducing overall defects and rework."
  },
  {
    "id": "agile_815",
    "question": "Why does Lean Software Development emphasize reducing batch sizes?",
    "options": [
      { "id": "option_1", "text": "To increase project timelines", "isCorrect": false },
      { "id": "option_2", "text": "To delay customer deliveries", "isCorrect": false },
      { "id": "option_3", "text": "To improve flow and reduce lead time", "isCorrect": true },
      { "id": "option_4", "text": "To add more approval layers", "isCorrect": false }
    ],
    "hint": "Smaller batches allow faster feedback and iteration.",
    "answerDescription": "Reducing batch sizes improves efficiency and helps teams quickly adjust based on feedback."
  },
  {
    "id": "agile_816",
    "question": "What is the importance of cross-functional teams in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase departmental silos", "isCorrect": false },
      { "id": "option_2", "text": "To reduce team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To enhance problem-solving and innovation", "isCorrect": true },
      { "id": "option_4", "text": "To increase process handoffs", "isCorrect": false }
    ],
    "hint": "Lean encourages multi-skilled teams for efficiency.",
    "answerDescription": "Cross-functional teams improve decision-making and reduce delays by eliminating unnecessary dependencies."
  },
  {
    "id": "agile_817",
    "question": "What role does value stream mapping play in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases workflow complexity", "isCorrect": false },
      { "id": "option_2", "text": "It removes the need for customer input", "isCorrect": false },
      { "id": "option_3", "text": "It identifies waste and inefficiencies", "isCorrect": true },
      { "id": "option_4", "text": "It delays decision-making", "isCorrect": false }
    ],
    "hint": "Value stream mapping helps teams optimize processes.",
    "answerDescription": "By analyzing the value stream, teams can identify waste and streamline workflows for better efficiency."
  },
  {
    "id": "agile_818",
    "question": "What is Kaizen in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "A detailed documentation process", "isCorrect": false },
      { "id": "option_2", "text": "A rigid project management technique", "isCorrect": false },
      { "id": "option_3", "text": "A method for instant waste elimination", "isCorrect": false },
      { "id": "option_4", "text": "Continuous improvement through small, incremental changes", "isCorrect": true }
    ],
    "hint": "Kaizen means ongoing, incremental improvement.",
    "answerDescription": "Kaizen focuses on making small, continuous improvements to processes, thereby enhancing quality and efficiency over time."
  },
  {
    "id": "agile_819",
    "question": "What does Just-In-Time (JIT) production mean in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Producing in large batches to stockpile work", "isCorrect": false },
      { "id": "option_2", "text": "Delaying production until the end of a project", "isCorrect": false },
      { "id": "option_3", "text": "Accumulating resources before production", "isCorrect": false },
      { "id": "option_4", "text": "Producing only what is needed when it is needed", "isCorrect": true }
    ],
    "hint": "JIT minimizes waste by aligning production with demand.",
    "answerDescription": "Just-In-Time production focuses on reducing inventory and waste by producing only what is required at the right time."
  },
  {
    "id": "agile_820",
    "question": "How does Lean Software Development address process bottlenecks?",
    "options": [
      { "id": "option_1", "text": "By expanding the project scope", "isCorrect": false },
      { "id": "option_2", "text": "By increasing team size arbitrarily", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing stricter deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By identifying constraints and optimizing workflows", "isCorrect": true }
    ],
    "hint": "Addressing bottlenecks is key to smooth workflow.",
    "answerDescription": "Lean methodologies focus on identifying and removing process constraints to improve overall flow and efficiency."
  },
  {
    "id": "agile_821",
    "question": "What is the role of continuous integration in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To replace manual testing entirely", "isCorrect": false },
      { "id": "option_2", "text": "To extend development cycles", "isCorrect": false },
      { "id": "option_3", "text": "To increase documentation overhead", "isCorrect": false },
      { "id": "option_4", "text": "To support rapid feedback and defect detection", "isCorrect": true }
    ],
    "hint": "Continuous integration enables early error detection.",
    "answerDescription": "By frequently integrating code, teams receive immediate feedback, helping to catch defects early and streamline the development process."
  },
  {
    "id": "agile_822",
    "question": "How does Lean Software Development improve resource allocation?",
    "options": [
      { "id": "option_1", "text": "By randomly assigning tasks", "isCorrect": false },
      { "id": "option_2", "text": "By increasing bureaucratic procedures", "isCorrect": false },
      { "id": "option_3", "text": "By centralizing decision-making", "isCorrect": false },
      { "id": "option_4", "text": "By focusing on value-driven activities and eliminating waste", "isCorrect": true }
    ],
    "hint": "Lean ensures resources are used for value-adding tasks.",
    "answerDescription": "Lean optimizes resource allocation by concentrating on high-value tasks and removing non-essential work, thereby reducing waste."
  },
  {
    "id": "agile_823",
    "question": "What is the impact of implementing standardized work in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases variability in processes", "isCorrect": false },
      { "id": "option_2", "text": "It complicates team communication", "isCorrect": false },
      { "id": "option_3", "text": "It slows down development speed", "isCorrect": false },
      { "id": "option_4", "text": "It reduces variability and improves process predictability", "isCorrect": true }
    ],
    "hint": "Standardization helps maintain consistency.",
    "answerDescription": "Implementing standardized work leads to more predictable and repeatable processes, thereby enhancing efficiency and quality."
  },
  {
    "id": "agile_824",
    "question": "How does Lean Software Development enhance team autonomy?",
    "options": [
      { "id": "option_1", "text": "By centralizing decision-making authority", "isCorrect": false },
      { "id": "option_2", "text": "By imposing strict managerial controls", "isCorrect": false },
      { "id": "option_3", "text": "By limiting team decision-making", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging self-organizing teams that make decisions independently", "isCorrect": true }
    ],
    "hint": "Autonomy empowers teams to innovate.",
    "answerDescription": "Lean encourages self-organizing teams, which fosters innovation and speeds up decision-making by reducing reliance on top-down directives."
  },
  {
    "id": "agile_825",
    "question": "What is the significance of visual controls in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "They obscure the workflow status", "isCorrect": false },
      { "id": "option_2", "text": "They complicate communication", "isCorrect": false },
      { "id": "option_3", "text": "They delay issue resolution", "isCorrect": false },
      { "id": "option_4", "text": "They provide transparency and immediate understanding of workflow status", "isCorrect": true }
    ],
    "hint": "Visual tools, like Kanban boards, offer clear process insights.",
    "answerDescription": "Visual controls make work processes visible to everyone, enabling quick identification of issues and better coordination."
  },
  {
    "id": "agile_826",
    "question": "How does Lean Software Development facilitate risk management?",
    "options": [
      { "id": "option_1", "text": "By postponing risk assessments", "isCorrect": false },
      { "id": "option_2", "text": "By increasing project uncertainties", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring potential issues", "isCorrect": false },
      { "id": "option_4", "text": "By enabling early detection of issues through continuous feedback", "isCorrect": true }
    ],
    "hint": "Early feedback helps identify risks before they escalate.",
    "answerDescription": "Continuous feedback loops allow teams to detect and address risks early, reducing potential disruptions to the project."
  },
  {
    "id": "agile_827",
    "question": "What role does leadership play in fostering a Lean culture in Agile teams?",
    "options": [
      { "id": "option_1", "text": "By dictating every process detail", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing rigid command structures", "isCorrect": false },
      { "id": "option_3", "text": "By micromanaging team activities", "isCorrect": false },
      { "id": "option_4", "text": "By empowering teams and promoting a culture of continuous improvement", "isCorrect": true }
    ],
    "hint": "Effective leadership fosters team empowerment and growth.",
    "answerDescription": "In a Lean environment, leaders empower their teams, encourage innovation, and support continuous improvement to achieve better outcomes."
  },
  {
    "id": "agile_828",
    "question": "What is the primary goal of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To eliminate waste and maximize value delivery", "isCorrect": true },
      { "id": "option_2", "text": "To extend project timelines for better accuracy", "isCorrect": false },
      { "id": "option_3", "text": "To increase team size for faster execution", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize documentation over development", "isCorrect": false }
    ],
    "hint": "Lean focuses on efficiency and value creation.",
    "answerDescription": "The core objective of Lean Software Development is to eliminate waste and optimize processes for delivering value to customers."
  },
  {
    "id": "agile_829",
    "question": "What does 'Deliver Fast' mean in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It emphasizes quick iterations and short feedback loops", "isCorrect": true },
      { "id": "option_2", "text": "It requires skipping essential testing phases", "isCorrect": false },
      { "id": "option_3", "text": "It focuses on increasing developer workload", "isCorrect": false },
      { "id": "option_4", "text": "It demands frequent restructuring of teams", "isCorrect": false }
    ],
    "hint": "Lean promotes speed without sacrificing quality.",
    "answerDescription": "Delivering fast in Lean means prioritizing frequent iterations and obtaining customer feedback early to enhance product quality."
  },
  {
    "id": "agile_830",
    "question": "How does Lean Software Development handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By embracing flexibility and adaptive planning", "isCorrect": true },
      { "id": "option_2", "text": "By locking requirements at the start of the project", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging modifications after design approval", "isCorrect": false },
      { "id": "option_4", "text": "By relying solely on predictive planning", "isCorrect": false }
    ],
    "hint": "Lean prioritizes adaptability in development.",
    "answerDescription": "Lean supports changing requirements by maintaining flexibility, using short iterations, and continuously adapting to customer needs."
  },
  {
    "id": "agile_831",
    "question": "Why is eliminating waste important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To improve efficiency and focus on value-added activities", "isCorrect": true },
      { "id": "option_2", "text": "To reduce team size and cut project costs", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate all documentation processes", "isCorrect": false },
      { "id": "option_4", "text": "To increase project complexity", "isCorrect": false }
    ],
    "hint": "Waste reduction leads to optimized workflows.",
    "answerDescription": "Eliminating waste allows teams to focus on activities that deliver real value, improving efficiency and reducing unnecessary effort."
  },
  {
    "id": "agile_832",
    "question": "How does Lean Software Development enhance product quality?",
    "options": [
      { "id": "option_1", "text": "By integrating continuous feedback and testing", "isCorrect": true },
      { "id": "option_2", "text": "By extending the development cycle", "isCorrect": false },
      { "id": "option_3", "text": "By reducing collaboration among teams", "isCorrect": false },
      { "id": "option_4", "text": "By limiting customer involvement", "isCorrect": false }
    ],
    "hint": "Lean relies on continuous improvement and testing.",
    "answerDescription": "Lean focuses on continuous feedback and iterative testing to ensure defects are detected early and product quality remains high."
  },
  {
    "id": "agile_833",
    "question": "What principle in Lean Software Development helps avoid overproduction?",
    "options": [
      { "id": "option_1", "text": "Just-In-Time (JIT) development", "isCorrect": true },
      { "id": "option_2", "text": "Delivering large releases at once", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing extensive upfront planning", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring changing customer needs", "isCorrect": false }
    ],
    "hint": "JIT helps in producing only what is necessary.",
    "answerDescription": "Just-In-Time (JIT) development ensures that work is completed only when needed, avoiding unnecessary production and reducing waste."
  },
  {
    "id": "agile_834",
    "question": "How does Lean Software Development support decision-making?",
    "options": [
      { "id": "option_1", "text": "By deferring decisions until necessary information is available", "isCorrect": true },
      { "id": "option_2", "text": "By making all decisions at the beginning of a project", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "By relying only on past experiences", "isCorrect": false }
    ],
    "hint": "Lean promotes making informed decisions at the right time.",
    "answerDescription": "Lean recommends deferring decisions until sufficient information is available, reducing risks and improving outcomes."
  },
  {
    "id": "agile_835",
    "question": "What is the role of feedback loops in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To enable rapid learning and continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_3", "text": "To increase project complexity", "isCorrect": false },
      { "id": "option_4", "text": "To limit user engagement", "isCorrect": false }
    ],
    "hint": "Feedback loops help teams improve continuously.",
    "answerDescription": "Feedback loops allow teams to learn quickly from mistakes and make necessary adjustments to improve software development efficiency."
  },
  {
    "id": "agile_836",
    "question": "What is a key benefit of empowering teams in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increased ownership and faster problem-solving", "isCorrect": true },
      { "id": "option_2", "text": "More hierarchical control over decision-making", "isCorrect": false },
      { "id": "option_3", "text": "Stricter managerial oversight", "isCorrect": false },
      { "id": "option_4", "text": "Reduced team responsibility", "isCorrect": false }
    ],
    "hint": "Empowered teams take responsibility for their work.",
    "answerDescription": "Empowering teams leads to greater engagement, accountability, and faster resolution of problems, improving efficiency."
  },
  {
    "id": "agile_837",
    "question": "Why is customer collaboration important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It ensures that the product meets real user needs", "isCorrect": true },
      { "id": "option_2", "text": "It increases the complexity of decision-making", "isCorrect": false },
      { "id": "option_3", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_4", "text": "It focuses solely on internal technical improvements", "isCorrect": false }
    ],
    "hint": "Customer involvement helps deliver valuable products.",
    "answerDescription": "Customer collaboration helps ensure that the developed software aligns with user expectations, leading to higher satisfaction and better products."
  },  {
    "id": "agile_838",
    "question": "Which Lean principle helps in minimizing unnecessary work?",
    "options": [
      { "id": "option_1", "text": "Maximizing documentation", "isCorrect": false },
      { "id": "option_2", "text": "Eliminating waste", "isCorrect": true },
      { "id": "option_3", "text": "Increasing process overhead", "isCorrect": false },
      { "id": "option_4", "text": "Extending development cycles", "isCorrect": false }
    ],
    "hint": "Lean focuses on removing inefficiencies in workflows.",
    "answerDescription": "Eliminating waste is a key Lean principle aimed at reducing unnecessary work, improving efficiency, and optimizing value delivery."
  },
  {
    "id": "agile_839",
    "question": "How does Lean Software Development approach large batch sizes?",
    "options": [
      { "id": "option_1", "text": "By increasing delivery intervals", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging small and frequent releases", "isCorrect": true },
      { "id": "option_3", "text": "By delaying feedback until project completion", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing bulk deployments", "isCorrect": false }
    ],
    "hint": "Smaller increments lead to faster feedback.",
    "answerDescription": "Lean advocates for smaller and more frequent releases to ensure early validation and adaptability to customer needs."
  },
  {
    "id": "agile_840",
    "question": "What is the significance of 'Respect for People' in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It promotes strict managerial control", "isCorrect": false },
      { "id": "option_2", "text": "It empowers teams and encourages collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "It restricts team autonomy", "isCorrect": false }
    ],
    "hint": "Lean values collaboration and team empowerment.",
    "answerDescription": "Respect for People in Lean ensures that team members are empowered, motivated, and work together effectively to achieve better outcomes."
  },
  {
    "id": "agile_841",
    "question": "Why is optimizing the whole process important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To focus on individual tasks without considering the system", "isCorrect": false },
      { "id": "option_2", "text": "To improve overall efficiency and system performance", "isCorrect": true },
      { "id": "option_3", "text": "To increase bottlenecks in the workflow", "isCorrect": false },
      { "id": "option_4", "text": "To slow down the development cycle", "isCorrect": false }
    ],
    "hint": "Lean focuses on end-to-end efficiency.",
    "answerDescription": "Optimizing the whole process ensures that all aspects of software development work together efficiently rather than focusing on isolated improvements."
  },
  {
    "id": "agile_842",
    "question": "What Lean Software Development practice helps reduce delays in feedback loops?",
    "options": [
      { "id": "option_1", "text": "Delaying user feedback until full release", "isCorrect": false },
      { "id": "option_2", "text": "Frequent integration and early testing", "isCorrect": true },
      { "id": "option_3", "text": "Extending development phases", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding real-time stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Early detection of issues improves efficiency.",
    "answerDescription": "Lean encourages frequent integration and early testing to detect issues early and allow for rapid course corrections."
  },
  {
    "id": "agile_843",
    "question": "How does Lean Software Development address variability in processes?",
    "options": [
      { "id": "option_1", "text": "By rigidly enforcing predefined plans", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining flexibility and adaptability", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding any process improvements", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging continuous learning", "isCorrect": false }
    ],
    "hint": "Lean is adaptable to change and evolving requirements.",
    "answerDescription": "Lean handles variability by allowing flexibility in planning and execution, enabling teams to adjust to changing needs efficiently."
  },
  {
    "id": "agile_844",
    "question": "Which Lean principle focuses on delivering value as early as possible?",
    "options": [
      { "id": "option_1", "text": "Maximizing documentation efforts", "isCorrect": false },
      { "id": "option_2", "text": "Delivering fast and continuously", "isCorrect": true },
      { "id": "option_3", "text": "Reducing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Following rigid processes", "isCorrect": false }
    ],
    "hint": "Lean promotes fast and iterative delivery.",
    "answerDescription": "Lean focuses on delivering fast through iterative releases, ensuring early and continuous value delivery to customers."
  },
  {
    "id": "agile_845",
    "question": "How does Lean Software Development improve learning within teams?",
    "options": [
      { "id": "option_1", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging continuous learning and feedback", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding retrospective analysis", "isCorrect": false },
      { "id": "option_4", "text": "By restricting knowledge-sharing", "isCorrect": false }
    ],
    "hint": "Lean promotes a culture of learning and improvement.",
    "answerDescription": "Continuous learning and feedback loops help teams refine their practices and improve software development efficiency."
  },
  {
    "id": "agile_846",
    "question": "What role does leadership play in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To micromanage teams", "isCorrect": false },
      { "id": "option_2", "text": "To support and enable teams' decision-making", "isCorrect": true },
      { "id": "option_3", "text": "To enforce rigid top-down processes", "isCorrect": false },
      { "id": "option_4", "text": "To focus only on cost reduction", "isCorrect": false }
    ],
    "hint": "Lean leadership empowers teams rather than controlling them.",
    "answerDescription": "Leadership in Lean Software Development focuses on guiding, supporting, and enabling teams to make effective decisions and drive improvements."
  },
  {
    "id": "agile_847",
    "question": "Why does Lean Software Development encourage minimizing handoffs?",
    "options": [
      { "id": "option_1", "text": "To increase dependencies between teams", "isCorrect": false },
      { "id": "option_2", "text": "To reduce communication gaps and delays", "isCorrect": true },
      { "id": "option_3", "text": "To extend development cycles", "isCorrect": false },
      { "id": "option_4", "text": "To limit collaboration among team members", "isCorrect": false }
    ],
    "hint": "Fewer handoffs lead to smoother workflows and faster delivery.",
    "answerDescription": "Reducing handoffs minimizes delays and improves collaboration, leading to more efficient and effective software development."
  },
  {
    "id": "agile_848",
    "question": "Which Lean principle emphasizes reducing unnecessary processes and inefficiencies?",
    "options": [
      { "id": "option_1", "text": "Maximizing documentation", "isCorrect": false },
      { "id": "option_2", "text": "Delaying customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "Eliminating waste", "isCorrect": true },
      { "id": "option_4", "text": "Expanding process overhead", "isCorrect": false }
    ],
    "hint": "Lean focuses on efficiency by removing what does not add value.",
    "answerDescription": "Eliminating waste ensures that only valuable work is prioritized, improving efficiency and effectiveness in Lean Software Development."
  },
  {
    "id": "agile_849",
    "question": "How does Lean Software Development enhance customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By increasing project timelines", "isCorrect": false },
      { "id": "option_2", "text": "By restricting feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "By delivering value early and often", "isCorrect": true },
      { "id": "option_4", "text": "By prioritizing extensive documentation", "isCorrect": false }
    ],
    "hint": "Frequent delivery of value keeps customers engaged.",
    "answerDescription": "Lean focuses on delivering value in small increments, allowing for early feedback and improved customer satisfaction."
  },
  {
    "id": "agile_850",
    "question": "Why does Lean Software Development promote small batch sizes?",
    "options": [
      { "id": "option_1", "text": "To increase production costs", "isCorrect": false },
      { "id": "option_2", "text": "To delay customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To enable faster feedback and reduced risk", "isCorrect": true },
      { "id": "option_4", "text": "To avoid iterative improvements", "isCorrect": false }
    ],
    "hint": "Smaller increments allow for quicker validation and adaptation.",
    "answerDescription": "Using small batch sizes reduces risk, accelerates feedback loops, and improves efficiency in software delivery."
  },
  {
    "id": "agile_851",
    "question": "What is a key benefit of applying Lean thinking to software development?",
    "options": [
      { "id": "option_1", "text": "Increased bureaucracy", "isCorrect": false },
      { "id": "option_2", "text": "Limited customer interaction", "isCorrect": false },
      { "id": "option_3", "text": "Improved process efficiency", "isCorrect": true },
      { "id": "option_4", "text": "Reduced team collaboration", "isCorrect": false }
    ],
    "hint": "Lean focuses on optimizing processes for efficiency.",
    "answerDescription": "Lean Software Development helps teams streamline workflows, remove bottlenecks, and enhance efficiency."
  },
  {
    "id": "agile_852",
    "question": "What is the purpose of limiting work in progress (WIP) in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To maximize multitasking", "isCorrect": false },
      { "id": "option_2", "text": "To increase project delays", "isCorrect": false },
      { "id": "option_3", "text": "To improve focus and flow efficiency", "isCorrect": true },
      { "id": "option_4", "text": "To reduce collaboration", "isCorrect": false }
    ],
    "hint": "Fewer active tasks help maintain a smooth workflow.",
    "answerDescription": "Limiting WIP ensures that teams focus on completing tasks before starting new ones, reducing bottlenecks and improving efficiency."
  },
  {
    "id": "agile_853",
    "question": "How does Lean Software Development handle defects and errors?",
    "options": [
      { "id": "option_1", "text": "By postponing fixes until the final stage", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring minor defects", "isCorrect": false },
      { "id": "option_3", "text": "By identifying and resolving them early", "isCorrect": true },
      { "id": "option_4", "text": "By adding more complex approval processes", "isCorrect": false }
    ],
    "hint": "Lean focuses on preventing defects rather than fixing them later.",
    "answerDescription": "Early defect detection helps teams maintain high-quality standards and reduce costly late-stage fixes."
  },
  {
    "id": "agile_854",
    "question": "What Lean practice ensures a steady and sustainable pace of work?",
    "options": [
      { "id": "option_1", "text": "Encouraging overtime", "isCorrect": false },
      { "id": "option_2", "text": "Delaying work completion", "isCorrect": false },
      { "id": "option_3", "text": "Maintaining a continuous flow", "isCorrect": true },
      { "id": "option_4", "text": "Increasing batch sizes", "isCorrect": false }
    ],
    "hint": "A stable workflow ensures predictable delivery.",
    "answerDescription": "Maintaining a continuous flow helps teams work at a sustainable pace without burnout, leading to steady and reliable software development."
  },
  {
    "id": "agile_855",
    "question": "Why does Lean Software Development emphasize empowering teams?",
    "options": [
      { "id": "option_1", "text": "To increase management control", "isCorrect": false },
      { "id": "option_2", "text": "To restrict decision-making to leadership", "isCorrect": false },
      { "id": "option_3", "text": "To enable faster decision-making and innovation", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate team autonomy", "isCorrect": false }
    ],
    "hint": "Empowered teams work more efficiently and creatively.",
    "answerDescription": "Empowering teams ensures they can make informed decisions, leading to faster innovation and problem-solving."
  },
  {
    "id": "agile_856",
    "question": "How does Lean Software Development reduce lead time?",
    "options": [
      { "id": "option_1", "text": "By increasing process complexity", "isCorrect": false },
      { "id": "option_2", "text": "By delaying issue resolution", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating bottlenecks and optimizing flow", "isCorrect": true },
      { "id": "option_4", "text": "By adding additional approval stages", "isCorrect": false }
    ],
    "hint": "A smooth workflow leads to faster delivery.",
    "answerDescription": "Reducing bottlenecks and improving workflow efficiency helps teams deliver software more quickly."
  },
  {
    "id": "agile_857",
    "question": "What is the impact of Lean Software Development on decision-making?",
    "options": [
      { "id": "option_1", "text": "It slows down decision-making", "isCorrect": false },
      { "id": "option_2", "text": "It centralizes decision-making to leadership", "isCorrect": false },
      { "id": "option_3", "text": "It encourages decentralized and timely decisions", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for team input", "isCorrect": false }
    ],
    "hint": "Lean promotes autonomy and efficiency in decision-making.",
    "answerDescription": "Decentralized decision-making in Lean enables teams to react quickly and make informed choices without unnecessary delays."
  },
  {
    "id": "agile_858",
    "question": "What does Lean Software Development prioritize to improve workflow efficiency?",
    "options": [
      { "id": "option_1", "text": "Increasing work in progress", "isCorrect": false },
      { "id": "option_2", "text": "Adding more process layers", "isCorrect": false },
      { "id": "option_3", "text": "Reducing team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing delays and bottlenecks", "isCorrect": true }
    ],
    "hint": "Lean focuses on eliminating unnecessary delays to improve workflow.",
    "answerDescription": "Minimizing delays and removing bottlenecks helps teams maintain a steady workflow and optimize efficiency."
  },
  {
    "id": "agile_859",
    "question": "Which approach aligns best with Lean Software Development principles?",
    "options": [
      { "id": "option_1", "text": "Following rigid, inflexible processes", "isCorrect": false },
      { "id": "option_2", "text": "Focusing on maximizing documentation", "isCorrect": false },
      { "id": "option_3", "text": "Delaying product delivery for full feature completion", "isCorrect": false },
      { "id": "option_4", "text": "Delivering value incrementally", "isCorrect": true }
    ],
    "hint": "Lean favors small, continuous releases rather than waiting for everything to be done.",
    "answerDescription": "Delivering value incrementally allows teams to adapt to changes quickly and continuously provide benefits to customers."
  },
  {
    "id": "agile_860",
    "question": "How does Lean Software Development reduce risk in product delivery?",
    "options": [
      { "id": "option_1", "text": "By avoiding customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "By increasing batch sizes", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing documentation over feedback", "isCorrect": false },
      { "id": "option_4", "text": "By incorporating continuous feedback loops", "isCorrect": true }
    ],
    "hint": "Frequent feedback allows teams to adjust and correct early.",
    "answerDescription": "Continuous feedback loops help teams identify and fix issues early, reducing the risk of delivering a flawed product."
  },
  {
    "id": "agile_861",
    "question": "What is the primary purpose of 'Just-in-Time' decision-making in Lean?",
    "options": [
      { "id": "option_1", "text": "To delay key decisions indefinitely", "isCorrect": false },
      { "id": "option_2", "text": "To increase approval stages", "isCorrect": false },
      { "id": "option_3", "text": "To centralize decision-making power", "isCorrect": false },
      { "id": "option_4", "text": "To make informed decisions at the right moment", "isCorrect": true }
    ],
    "hint": "Lean encourages decisions based on current, accurate data.",
    "answerDescription": "Just-in-Time decision-making ensures teams make choices when they have the most relevant and complete information, reducing waste and inefficiency."
  },
  {
    "id": "agile_862",
    "question": "Why does Lean Software Development emphasize customer collaboration?",
    "options": [
      { "id": "option_1", "text": "To reduce team autonomy", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on internal process efficiency", "isCorrect": false },
      { "id": "option_3", "text": "To delay feedback until project completion", "isCorrect": false },
      { "id": "option_4", "text": "To ensure continuous alignment with customer needs", "isCorrect": true }
    ],
    "hint": "Lean values customer input at all stages of development.",
    "answerDescription": "By engaging customers throughout the process, teams can ensure that the final product meets real-world needs and expectations."
  },
  {
    "id": "agile_863",
    "question": "Which Lean Software Development practice helps optimize team performance?",
    "options": [
      { "id": "option_1", "text": "Strictly following predefined roles", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing knowledge sharing", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding process improvements", "isCorrect": false },
      { "id": "option_4", "text": "Encouraging continuous learning and adaptation", "isCorrect": true }
    ],
    "hint": "Lean promotes an evolving and adaptable approach to work.",
    "answerDescription": "Continuous learning helps teams refine their processes, improve efficiency, and deliver better results over time."
  },
  {
    "id": "agile_864",
    "question": "How does Lean Software Development improve software quality?",
    "options": [
      { "id": "option_1", "text": "By postponing testing until the final stages", "isCorrect": false },
      { "id": "option_2", "text": "By increasing documentation over testing", "isCorrect": false },
      { "id": "option_3", "text": "By limiting developer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By integrating testing throughout the development process", "isCorrect": true }
    ],
    "hint": "Lean favors early and frequent validation.",
    "answerDescription": "Continuous testing ensures that defects are identified and fixed early, reducing long-term costs and improving overall quality."
  },
  {
    "id": "agile_865",
    "question": "What is a key goal of value stream mapping in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To add complexity to workflows", "isCorrect": false },
      { "id": "option_2", "text": "To ignore inefficient steps", "isCorrect": false },
      { "id": "option_3", "text": "To reduce stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "To identify and eliminate inefficiencies", "isCorrect": true }
    ],
    "hint": "This technique helps visualize and optimize the development process.",
    "answerDescription": "Value stream mapping helps teams analyze their workflow, pinpoint inefficiencies, and optimize their process for better results."
  },
  {
    "id": "agile_866",
    "question": "What principle of Lean Software Development helps prevent rework?",
    "options": [
      { "id": "option_1", "text": "Delivering all features at once", "isCorrect": false },
      { "id": "option_2", "text": "Deferring defect resolution", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing direct customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Building quality into the development process", "isCorrect": true }
    ],
    "hint": "Lean focuses on preventing defects rather than fixing them later.",
    "answerDescription": "By ensuring quality at every step of development, teams can avoid costly rework and deliver reliable software faster."
  },
  {
    "id": "agile_867",
    "question": "What is the impact of reducing batch sizes in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increases work-in-progress limits", "isCorrect": false },
      { "id": "option_2", "text": "Delays customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "Increases waiting time between releases", "isCorrect": false },
      { "id": "option_4", "text": "Speeds up feedback and iteration cycles", "isCorrect": true }
    ],
    "hint": "Smaller batches help teams learn and adapt faster.",
    "answerDescription": "Reducing batch sizes enables quicker feedback, allowing teams to iterate faster and reduce waste in the development process."
  },{ 
    "id": "agile_868",
    "question": "How does Lean Software Development promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By maintaining rigid processes", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging incremental learning and refinement", "isCorrect": true },
      { "id": "option_3", "text": "By sticking to an initial plan without changes", "isCorrect": false },
      { "id": "option_4", "text": "By increasing the number of required approvals", "isCorrect": false }
    ],
    "hint": "Small, continuous improvements lead to long-term success.",
    "answerDescription": "Iterating on processes and incorporating feedback allows teams to continuously improve their software development practices."
  },
  
  {
    "id": "agile_869",
    "question": "Which principle of Lean Software Development helps teams identify inefficiencies?",
    "options": [
      { "id": "option_1", "text": "Value stream mapping", "isCorrect": true },
      { "id": "option_2", "text": "Increasing process approvals", "isCorrect": false },
      { "id": "option_3", "text": "Delaying feedback cycles", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing customer collaboration", "isCorrect": false }
    ],
    "hint": "This technique visualizes the entire workflow to spot delays and bottlenecks.",
    "answerDescription": "Value stream mapping helps teams analyze their process flow, identify waste, and improve efficiency."
  },
  {
    "id": "agile_870",
    "question": "How does Lean Software Development ensure high-quality software?",
    "options": [
      { "id": "option_1", "text": "By building quality into the process", "isCorrect": true },
      { "id": "option_2", "text": "By testing only at the end of development", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on speed over quality", "isCorrect": false },
      { "id": "option_4", "text": "By reducing developer involvement in testing", "isCorrect": false }
    ],
    "hint": "Lean emphasizes preventing defects rather than fixing them later.",
    "answerDescription": "Building quality into the process ensures that defects are caught early, reducing rework and improving software reliability."
  },
  {
    "id": "agile_871",
    "question": "Which Lean principle encourages delivering small, valuable increments?",
    "options": [
      { "id": "option_1", "text": "Deliver fast by managing flow", "isCorrect": true },
      { "id": "option_2", "text": "Postpone testing until later stages", "isCorrect": false },
      { "id": "option_3", "text": "Maximize batch sizes for efficiency", "isCorrect": false },
      { "id": "option_4", "text": "Limit customer feedback until after release", "isCorrect": false }
    ],
    "hint": "Lean promotes quick and continuous delivery to enhance feedback loops.",
    "answerDescription": "Managing flow helps teams release smaller increments of work frequently, allowing faster feedback and improvements."
  },
  {
    "id": "agile_872",
    "question": "What is the benefit of reducing work in progress (WIP) in Lean?",
    "options": [
      { "id": "option_1", "text": "It speeds up delivery by reducing context switching", "isCorrect": true },
      { "id": "option_2", "text": "It increases multitasking for team members", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to focus on multiple tasks at once", "isCorrect": false },
      { "id": "option_4", "text": "It delays the release of completed features", "isCorrect": false }
    ],
    "hint": "Limiting WIP helps teams focus and complete tasks faster.",
    "answerDescription": "By reducing WIP, teams minimize distractions and complete tasks more efficiently, improving overall flow and speed."
  },
  {
    "id": "agile_873",
    "question": "How does Lean Software Development improve team productivity?",
    "options": [
      { "id": "option_1", "text": "By fostering continuous learning and improvement", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict hierarchical decision-making", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing process over people", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating customer feedback loops", "isCorrect": false }
    ],
    "hint": "Lean encourages teams to evolve and improve over time.",
    "answerDescription": "Continuous learning helps teams refine their skills, improve efficiency, and adapt to changing needs."
  },
  {
    "id": "agile_874",
    "question": "What is the purpose of empowering teams in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To enable faster decision-making and innovation", "isCorrect": true },
      { "id": "option_2", "text": "To enforce strict process adherence", "isCorrect": false },
      { "id": "option_3", "text": "To limit communication within teams", "isCorrect": false },
      { "id": "option_4", "text": "To discourage experimentation", "isCorrect": false }
    ],
    "hint": "Lean values team autonomy and responsibility.",
    "answerDescription": "Empowered teams can make decisions quickly, adapt to changes, and continuously innovate without excessive bureaucracy."
  },
  {
    "id": "agile_875",
    "question": "Which Lean practice helps reduce unnecessary features in software?",
    "options": [
      { "id": "option_1", "text": "Delivering only what provides customer value", "isCorrect": true },
      { "id": "option_2", "text": "Adding all features upfront", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding customer feedback on requirements", "isCorrect": false },
      { "id": "option_4", "text": "Focusing solely on internal team preferences", "isCorrect": false }
    ],
    "hint": "Lean encourages delivering only what benefits the end user.",
    "answerDescription": "By focusing on value-driven development, teams avoid unnecessary features and deliver what truly matters to customers."
  },
  {
    "id": "agile_876",
    "question": "How does Lean Software Development address bottlenecks?",
    "options": [
      { "id": "option_1", "text": "By identifying and resolving constraints early", "isCorrect": true },
      { "id": "option_2", "text": "By ignoring slowdowns and focusing on speed", "isCorrect": false },
      { "id": "option_3", "text": "By adding more process steps", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging cross-functional collaboration", "isCorrect": false }
    ],
    "hint": "Lean promotes continuous improvement in workflow efficiency.",
    "answerDescription": "Addressing bottlenecks early prevents delays, ensuring a smoother workflow and faster delivery."
  },
  {
    "id": "agile_877",
    "question": "Why does Lean encourage deferring decisions until the last responsible moment?",
    "options": [
      { "id": "option_1", "text": "To make informed choices based on current data", "isCorrect": true },
      { "id": "option_2", "text": "To delay progress unnecessarily", "isCorrect": false },
      { "id": "option_3", "text": "To avoid stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "To reduce team responsibility", "isCorrect": false }
    ],
    "hint": "Lean decisions are made with the most accurate and up-to-date information.",
    "answerDescription": "Deferring decisions until the last responsible moment ensures that teams make well-informed choices without premature commitments."
  },
  {
    "id": "agile_878",
    "question": "Which principle of Lean Software Development emphasizes delivering value quickly?",
    "options": [
      { "id": "option_1", "text": "Deliver as fast as possible", "isCorrect": true },
      { "id": "option_2", "text": "Increase work in progress", "isCorrect": false },
      { "id": "option_3", "text": "Maximize documentation efforts", "isCorrect": false },
      { "id": "option_4", "text": "Reduce collaboration to minimize delays", "isCorrect": false }
    ],
    "hint": "Lean aims to reduce lead times and get value to customers sooner.",
    "answerDescription": "Delivering as fast as possible ensures that customers receive incremental value quickly, improving feedback loops."
  },
  {
    "id": "agile_879",
    "question": "How does Lean Software Development help teams avoid unnecessary work?",
    "options": [
      { "id": "option_1", "text": "By eliminating waste", "isCorrect": true },
      { "id": "option_2", "text": "By prioritizing large batch processing", "isCorrect": false },
      { "id": "option_3", "text": "By increasing dependencies between tasks", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging customer feedback", "isCorrect": false }
    ],
    "hint": "Lean focuses on removing non-value-adding activities.",
    "answerDescription": "Eliminating waste ensures that teams only work on tasks that directly contribute to customer value."
  },
  {
    "id": "agile_880",
    "question": "Why does Lean Software Development encourage continuous integration?",
    "options": [
      { "id": "option_1", "text": "To detect issues early and reduce rework", "isCorrect": true },
      { "id": "option_2", "text": "To delay testing until later stages", "isCorrect": false },
      { "id": "option_3", "text": "To avoid frequent deployments", "isCorrect": false },
      { "id": "option_4", "text": "To reduce team collaboration", "isCorrect": false }
    ],
    "hint": "Continuous integration helps identify defects quickly.",
    "answerDescription": "Frequent integration and testing help catch issues early, reducing the cost of fixing defects later."
  },
  {
    "id": "agile_881",
    "question": "What is the primary benefit of minimizing handoffs in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It reduces delays and miscommunication", "isCorrect": true },
      { "id": "option_2", "text": "It increases bureaucratic approvals", "isCorrect": false },
      { "id": "option_3", "text": "It adds complexity to the development process", "isCorrect": false },
      { "id": "option_4", "text": "It ensures only managers make key decisions", "isCorrect": false }
    ],
    "hint": "Reducing handoffs helps streamline communication.",
    "answerDescription": "Minimizing handoffs leads to faster decision-making and fewer misunderstandings, improving overall efficiency."
  },
  {
    "id": "agile_882",
    "question": "How does Lean Software Development handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By embracing change and adapting quickly", "isCorrect": true },
      { "id": "option_2", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By requiring lengthy approval processes", "isCorrect": false }
    ],
    "hint": "Lean encourages flexibility to meet evolving customer needs.",
    "answerDescription": "By welcoming change, Lean teams can continuously refine their product to deliver maximum value."
  },
  {
    "id": "agile_883",
    "question": "What is the key focus of Lean Software Development when it comes to resource utilization?",
    "options": [
      { "id": "option_1", "text": "Maximizing flow efficiency", "isCorrect": true },
      { "id": "option_2", "text": "Keeping all resources fully occupied", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging excessive multitasking", "isCorrect": false },
      { "id": "option_4", "text": "Increasing queue lengths", "isCorrect": false }
    ],
    "hint": "Lean focuses on optimizing flow rather than full utilization.",
    "answerDescription": "Prioritizing flow efficiency over resource utilization helps teams deliver work faster and reduce bottlenecks."
  },
  {
    "id": "agile_884",
    "question": "How does Lean Software Development help teams deliver higher customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By focusing on customer-defined value", "isCorrect": true },
      { "id": "option_2", "text": "By reducing communication with customers", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing internal goals over user needs", "isCorrect": false },
      { "id": "option_4", "text": "By delaying feature releases", "isCorrect": false }
    ],
    "hint": "Lean emphasizes delivering what customers truly need.",
    "answerDescription": "By continuously understanding and delivering customer-defined value, Lean teams improve customer satisfaction."
  },
  {
    "id": "agile_885",
    "question": "Which Lean Software Development practice ensures a steady and predictable workflow?",
    "options": [
      { "id": "option_1", "text": "Limiting work in progress (WIP)", "isCorrect": true },
      { "id": "option_2", "text": "Starting multiple tasks at once", "isCorrect": false },
      { "id": "option_3", "text": "Postponing defect resolution", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing batch sizes", "isCorrect": false }
    ],
    "hint": "This practice helps teams focus on completing work efficiently.",
    "answerDescription": "By limiting WIP, teams prevent overload and ensure a smooth, continuous flow of work."
  },
  {
    "id": "agile_886",
    "question": "What is the purpose of setting clear priorities in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To ensure the most valuable work is done first", "isCorrect": true },
      { "id": "option_2", "text": "To avoid decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To encourage teams to work on all tasks simultaneously", "isCorrect": false },
      { "id": "option_4", "text": "To minimize customer involvement", "isCorrect": false }
    ],
    "hint": "Lean focuses on delivering value in the right order.",
    "answerDescription": "Setting priorities ensures that teams work on high-impact tasks first, maximizing efficiency and customer value."
  },
  {
    "id": "agile_887",
    "question": "Why is frequent feedback important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It helps teams make continuous improvements", "isCorrect": true },
      { "id": "option_2", "text": "It slows down development cycles", "isCorrect": false },
      { "id": "option_3", "text": "It increases documentation efforts", "isCorrect": false },
      { "id": "option_4", "text": "It discourages customer collaboration", "isCorrect": false }
    ],
    "hint": "Feedback loops allow teams to adjust and refine their work.",
    "answerDescription": "Frequent feedback ensures that teams are continuously improving their process and aligning with customer expectations."
  },  {
    "id": "agile_888",
    "question": "How does Lean Software Development address quality issues?",
    "options": [
      { "id": "option_1", "text": "By fixing defects after release", "isCorrect": false },
      { "id": "option_2", "text": "By building quality into the process", "isCorrect": true },
      { "id": "option_3", "text": "By increasing development speed at any cost", "isCorrect": false },
      { "id": "option_4", "text": "By reducing testing phases", "isCorrect": false }
    ],
    "hint": "Quality should be integrated throughout the development cycle.",
    "answerDescription": "Lean Software Development ensures quality by embedding it into the process rather than addressing defects later."
  },
  {
    "id": "agile_889",
    "question": "Which Lean principle helps in minimizing rework?",
    "options": [
      { "id": "option_1", "text": "Delaying feedback cycles", "isCorrect": false },
      { "id": "option_2", "text": "Building quality into the process", "isCorrect": true },
      { "id": "option_3", "text": "Focusing on output over outcomes", "isCorrect": false },
      { "id": "option_4", "text": "Increasing work in progress", "isCorrect": false }
    ],
    "hint": "Ensuring quality from the start prevents rework later.",
    "answerDescription": "Lean minimizes rework by emphasizing quality control throughout the development cycle."
  },
  {
    "id": "agile_890",
    "question": "How does Lean Software Development help in improving team productivity?",
    "options": [
      { "id": "option_1", "text": "By increasing work in progress", "isCorrect": false },
      { "id": "option_2", "text": "By reducing wasteful activities", "isCorrect": true },
      { "id": "option_3", "text": "By focusing solely on speed", "isCorrect": false },
      { "id": "option_4", "text": "By adding more tasks to the backlog", "isCorrect": false }
    ],
    "hint": "Eliminating unnecessary tasks increases efficiency.",
    "answerDescription": "By reducing waste, Lean allows teams to focus on high-value activities, improving productivity."
  },
  {
    "id": "agile_891",
    "question": "Why is delivering value quickly important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To maximize feature count", "isCorrect": false },
      { "id": "option_2", "text": "To gain fast feedback and adapt", "isCorrect": true },
      { "id": "option_3", "text": "To reduce costs by skipping testing", "isCorrect": false },
      { "id": "option_4", "text": "To extend development cycles", "isCorrect": false }
    ],
    "hint": "Early feedback enables continuous improvement.",
    "answerDescription": "Delivering value quickly helps teams receive feedback early, making it easier to adapt to changes."
  },
  {
    "id": "agile_892",
    "question": "What is the benefit of reducing batch sizes in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Increases bottlenecks", "isCorrect": false },
      { "id": "option_2", "text": "Enables faster iteration and feedback", "isCorrect": true },
      { "id": "option_3", "text": "Delays delivery of features", "isCorrect": false },
      { "id": "option_4", "text": "Encourages more parallel work", "isCorrect": false }
    ],
    "hint": "Smaller batches reduce cycle time and improve adaptability.",
    "answerDescription": "By reducing batch sizes, teams can iterate faster and incorporate feedback efficiently."
  }, {
    "id": "agile_893",
    "question": "What is a key characteristic of Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "Maximizing documentation", "isCorrect": false },
      { "id": "option_2", "text": "Adding complexity to processes", "isCorrect": false },
      { "id": "option_3", "text": "Delivering value quickly", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding customer collaboration", "isCorrect": false }
    ],
    "hint": "Lean focuses on efficiency and speed.",
    "answerDescription": "Delivering value quickly ensures faster feedback and improved adaptability."
  },{
    "id": "agile_894",
    "question": "Why does Lean Software Development promote visual management tools?",
    "options": [
      { "id": "option_1", "text": "To increase process complexity", "isCorrect": false },
      { "id": "option_2", "text": "To make tracking progress easier", "isCorrect": true },
      { "id": "option_3", "text": "To discourage team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To hide inefficiencies", "isCorrect": false }
    ],
    "hint": "These tools provide transparency into workflow stages.",
    "answerDescription": "Visual management tools help teams stay aligned and identify bottlenecks quickly."
  },
  {
    "id": "agile_895",
    "question": "Why does Lean Software Development prioritize customer collaboration?",
    "options": [
      { "id": "option_1", "text": "To increase project costs", "isCorrect": false },
      { "id": "option_2", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the product meets real needs", "isCorrect": true },
      { "id": "option_4", "text": "To avoid team autonomy", "isCorrect": false }
    ],
    "hint": "Customer input helps teams build relevant solutions.",
    "answerDescription": "Prioritizing collaboration ensures software aligns with user expectations."
  },
  {
    "id": "agile_896",
    "question": "What is the benefit of reducing handoffs in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases bureaucracy", "isCorrect": false },
      { "id": "option_2", "text": "It makes the process slower", "isCorrect": false },
      { "id": "option_3", "text": "It improves efficiency and knowledge retention", "isCorrect": true },
      { "id": "option_4", "text": "It discourages teamwork", "isCorrect": false }
    ],
    "hint": "Too many handoffs can lead to delays and miscommunication.",
    "answerDescription": "Reducing handoffs ensures that work moves smoothly and knowledge remains within teams."
  },
  {
    "id": "agile_897",
    "question": "What is the key benefit of limiting work in progress in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases multitasking", "isCorrect": false },
      { "id": "option_2", "text": "It slows down the workflow", "isCorrect": false },
      { "id": "option_3", "text": "It creates more bottlenecks", "isCorrect": false },
      { "id": "option_4", "text": "It improves focus and faster delivery", "isCorrect": true }
    ],
    "hint": "Reducing work in progress helps teams concentrate on completing tasks efficiently.",
    "answerDescription": "By limiting work in progress, teams can focus better, reduce context switching, and deliver value faster."
  },
  {
    "id": "agile_898",
    "question": "How does Lean Software Development improve software quality?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of features", "isCorrect": false },
      { "id": "option_2", "text": "By extending development time", "isCorrect": false },
      { "id": "option_3", "text": "By focusing on defect prevention", "isCorrect": false },
      { "id": "option_4", "text": "By delaying testing", "isCorrect": true }
    ],
    "hint": "Quality should be built into the process from the start.",
    "answerDescription": "Preventing defects early leads to higher software quality and lower costs."
  },
  {
    "id": "agile_899",
    "question": "Why does Lean Software Development promote a sustainable pace?",
    "options": [
      { "id": "option_1", "text": "To complete projects faster at any cost", "isCorrect": false },
      { "id": "option_2", "text": "To prevent team burnout and maintain productivity", "isCorrect": false },
      { "id": "option_3", "text": "To encourage overtime work", "isCorrect": false },
      { "id": "option_4", "text": "To increase last-minute changes", "isCorrect": true }
    ],
    "hint": "Long-term efficiency depends on a balanced workload.",
    "answerDescription": "A sustainable pace ensures teams remain productive without exhaustion."
  },
  {
    "id": "agile_900",
    "question": "What is a major advantage of reducing batch sizes in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases the amount of work in progress", "isCorrect": false },
      { "id": "option_2", "text": "It enables faster feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "It delays integration", "isCorrect": false },
      { "id": "option_4", "text": "It discourages automation", "isCorrect": true }
    ],
    "hint": "Smaller batch sizes help teams iterate and improve faster.",
    "answerDescription": "Faster feedback loops lead to quicker adjustments and better product quality."
  },
  {
    "id": "agile_901",
    "question": "What Lean principle helps teams focus on delivering customer value?",
    "options": [
      { "id": "option_1", "text": "Maximizing work in progress", "isCorrect": false },
      { "id": "option_2", "text": "Delaying customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "Optimizing the whole process", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on local optimizations", "isCorrect": true }
    ],
    "hint": "Improving only parts of the system may not benefit the overall process.",
    "answerDescription": "Optimizing the whole process ensures customer value is prioritized at every stage."
  },
  {
    "id": "agile_902",
    "question": "How does Lean Software Development encourage innovation?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict processes", "isCorrect": false },
      { "id": "option_2", "text": "By fostering an environment of experimentation", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging risk-taking", "isCorrect": false },
      { "id": "option_4", "text": "By limiting team autonomy", "isCorrect": true }
    ],
    "hint": "A culture of experimentation leads to creative solutions.",
    "answerDescription": "Encouraging experimentation allows teams to explore new and innovative approaches."
  },
  {
    "id": "agile_903",
    "question": "How does Lean Software Development enhance customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By focusing solely on internal goals", "isCorrect": false },
      { "id": "option_2", "text": "By reducing product quality", "isCorrect": false },
      { "id": "option_3", "text": "By limiting customer interactions", "isCorrect": false },
      { "id": "option_4", "text": "By delivering value faster", "isCorrect": true }
    ],
    "hint": "Delivering value quickly improves user experience.",
    "answerDescription": "Lean ensures customer needs are met promptly through continuous delivery."
  },
  {
    "id": "agile_904",
    "question": "Why is reducing handoffs important in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases specialization", "isCorrect": false },
      { "id": "option_2", "text": "It promotes departmental silos", "isCorrect": false },
      { "id": "option_3", "text": "It adds more approval steps", "isCorrect": false },
      { "id": "option_4", "text": "It improves collaboration and efficiency", "isCorrect": true }
    ],
    "hint": "Fewer handoffs reduce miscommunication and delays.",
    "answerDescription": "Minimizing handoffs allows teams to work more efficiently and reduce errors."
  },
  {
    "id": "agile_905",
    "question": "How does Lean Software Development reduce unnecessary work?",
    "options": [
      { "id": "option_1", "text": "By increasing documentation", "isCorrect": false },
      { "id": "option_2", "text": "By adding more approval steps", "isCorrect": false },
      { "id": "option_3", "text": "By promoting multitasking", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating wasteful activities", "isCorrect": true }
    ],
    "hint": "Lean focuses on removing non-value-adding tasks.",
    "answerDescription": "Reducing unnecessary work allows teams to focus on delivering value efficiently."
  },
  {
    "id": "agile_906",
    "question": "Why is quick feedback crucial in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To increase development time", "isCorrect": false },
      { "id": "option_3", "text": "To avoid customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "To identify and fix issues early", "isCorrect": true }
    ],
    "hint": "Early issue detection improves product quality.",
    "answerDescription": "Quick feedback loops help in reducing errors and making timely adjustments."
  },
  {
    "id": "agile_907",
    "question": "What is the impact of limiting work in progress (WIP) in Lean?",
    "options": [
      { "id": "option_1", "text": "It slows down delivery", "isCorrect": false },
      { "id": "option_2", "text": "It increases task switching", "isCorrect": false },
      { "id": "option_3", "text": "It creates more bottlenecks", "isCorrect": false },
      { "id": "option_4", "text": "It improves flow efficiency", "isCorrect": true }
    ],
    "hint": "Too many tasks in progress reduce productivity.",
    "answerDescription": "Limiting WIP ensures tasks are completed efficiently before starting new ones."
  },
  {
    "id": "agile_908",
    "question": "How does Lean Software Development handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By resisting change", "isCorrect": false },
      { "id": "option_2", "text": "By following rigid plans", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By embracing adaptability", "isCorrect": true }
    ],
    "hint": "Flexibility is key to responding to customer needs.",
    "answerDescription": "Lean promotes adapting to changes rather than rigidly following a plan."
  },
  {
    "id": "agile_909",
    "question": "What is the benefit of empowering teams in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "It increases micromanagement", "isCorrect": false },
      { "id": "option_2", "text": "It reduces team responsibility", "isCorrect": false },
      { "id": "option_3", "text": "It slows down decision-making", "isCorrect": false },
      { "id": "option_4", "text": "It fosters ownership and accountability", "isCorrect": true }
    ],
    "hint": "Autonomous teams can make faster and better decisions.",
    "answerDescription": "Empowered teams take ownership and drive continuous improvement."
  },{ 
    "id": "agile_910",
    "question": "What is the role of a feedback loop in Lean Software Development?",
    "options": [
      { "id": "option_1", "text": "To increase the number of approvals required", "isCorrect": false },
      { "id": "option_2", "text": "To enable rapid learning and quick adjustments", "isCorrect": true },
      { "id": "option_3", "text": "To document every decision in detail", "isCorrect": false },
      { "id": "option_4", "text": "To delay development until all requirements are known", "isCorrect": false }
    ],
    "hint": "Continuous learning and iteration are key principles of Lean Software Development.",
    "answerDescription": "Feedback loops help teams quickly identify issues and make necessary adjustments, improving efficiency and reducing waste."
  },
  { 
    "id": "agile_911",
    "question": "Which principle of Lean Software Development helps teams adapt to changing requirements?",
    "options": [
      { "id": "option_1", "text": "Building to specifications", "isCorrect": false },
      { "id": "option_2", "text": "Emphasizing adaptability and flexibility", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding change to meet deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Freezing project requirements early", "isCorrect": false }
    ],
    "hint": "Lean encourages responsiveness to changes in requirements.",
    "answerDescription": "Being adaptable allows teams to respond effectively to changing requirements, reducing waste and increasing efficiency."
  },
  {
    "id": "agile_912",
    "question": "What is a key practice of Extreme Programming (XP) that ensures continuous improvement in code quality?",
    "options": [
      { "id": "option_1", "text": "Big design upfront", "isCorrect": false },
      { "id": "option_2", "text": "Pair programming", "isCorrect": true },
      { "id": "option_3", "text": "Minimal customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Skipping code reviews", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair programming enhances collaboration, reduces defects, and improves overall code quality."
  },
  {
    "id": "agile_913",
    "question": "Which Extreme Programming (XP) practice helps prevent integration issues by ensuring that new code works with existing code?",
    "options": [
      { "id": "option_1", "text": "Code branching", "isCorrect": false },
      { "id": "option_2", "text": "Frequent releases", "isCorrect": true },
      { "id": "option_3", "text": "Delaying testing", "isCorrect": false },
      { "id": "option_4", "text": "Skipping documentation", "isCorrect": false }
    ],
    "hint": "XP promotes early and continuous integration of code.",
    "answerDescription": "Frequent releases ensure that changes are integrated and tested early, reducing integration issues."
  },
  {
    "id": "agile_914",
    "question": "What is the primary goal of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To create detailed design documents before coding", "isCorrect": false },
      { "id": "option_2", "text": "To write tests before writing the code", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the need for automated tests", "isCorrect": false },
      { "id": "option_4", "text": "To limit customer feedback", "isCorrect": false }
    ],
    "hint": "TDD involves writing tests first and then developing code to pass those tests.",
    "answerDescription": "Test-driven development (TDD) ensures that code is built to meet requirements while reducing defects."
  },
  {
    "id": "agile_915",
    "question": "Why does XP emphasize collective code ownership?",
    "options": [
      { "id": "option_1", "text": "To ensure that only senior developers write code", "isCorrect": false },
      { "id": "option_2", "text": "To allow any team member to modify any part of the codebase", "isCorrect": true },
      { "id": "option_3", "text": "To prevent developers from working on the same code", "isCorrect": false },
      { "id": "option_4", "text": "To discourage team collaboration", "isCorrect": false }
    ],
    "hint": "This practice promotes shared responsibility for the code.",
    "answerDescription": "Collective code ownership allows all developers to improve any part of the codebase, increasing flexibility and collaboration."
  },
  {
    "id": "agile_916",
    "question": "Which XP principle ensures that customer needs are continuously integrated into development?",
    "options": [
      { "id": "option_1", "text": "Ignoring customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "Continuous customer involvement", "isCorrect": true },
      { "id": "option_3", "text": "Delaying user testing until the end", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on developer preferences", "isCorrect": false }
    ],
    "hint": "XP encourages ongoing interaction with the customer.",
    "answerDescription": "Continuous customer involvement helps teams stay aligned with business goals and adapt to changing requirements."
  },
  {
    "id": "agile_917",
    "question": "In XP, what is the purpose of refactoring?",
    "options": [
      { "id": "option_1", "text": "To improve code structure without changing functionality", "isCorrect": true },
      { "id": "option_2", "text": "To add new features rapidly", "isCorrect": false },
      { "id": "option_3", "text": "To remove automated tests", "isCorrect": false },
      { "id": "option_4", "text": "To increase technical debt", "isCorrect": false }
    ],
    "hint": "This practice helps keep the code clean and maintainable.",
    "answerDescription": "Refactoring improves the readability and maintainability of code without altering its behavior."
  },
  {
    "id": "agile_918",
    "question": "What is the recommended approach to planning in XP?",
    "options": [
      { "id": "option_1", "text": "Fixed long-term planning", "isCorrect": false },
      { "id": "option_2", "text": "Adaptive and iterative planning", "isCorrect": true },
      { "id": "option_3", "text": "No planning at all", "isCorrect": false },
      { "id": "option_4", "text": "One-time upfront planning", "isCorrect": false }
    ],
    "hint": "XP promotes flexibility in planning.",
    "answerDescription": "Adaptive planning allows teams to respond to changes effectively and align with evolving project needs."
  },
  {
    "id": "agile_919",
    "question": "Why does XP advocate for a sustainable pace of development?",
    "options": [
      { "id": "option_1", "text": "To encourage long hours and burnout", "isCorrect": false },
      { "id": "option_2", "text": "To maintain consistent productivity over time", "isCorrect": true },
      { "id": "option_3", "text": "To complete projects as fast as possible", "isCorrect": false },
      { "id": "option_4", "text": "To delay delivery timelines", "isCorrect": false }
    ],
    "hint": "XP focuses on steady progress without exhaustion.",
    "answerDescription": "A sustainable pace prevents burnout and ensures long-term team efficiency and productivity."
  },
  {
    "id": "agile_920",
    "question": "Which XP practice ensures that all changes to the codebase are immediately tested?",
    "options": [
      { "id": "option_1", "text": "Manual testing", "isCorrect": false },
      { "id": "option_2", "text": "Automated unit tests", "isCorrect": true },
      { "id": "option_3", "text": "Skipping tests for minor changes", "isCorrect": false },
      { "id": "option_4", "text": "Only testing at the end of development", "isCorrect": false }
    ],
    "hint": "XP emphasizes writing tests that run automatically.",
    "answerDescription": "Automated unit tests ensure code correctness and detect issues early in the development process."
  },
  {
    "id": "agile_921",
    "question": "Which XP value promotes open communication and quick decision-making within the team?",
    "options": [
      { "id": "option_1", "text": "Silence", "isCorrect": false },
      { "id": "option_2", "text": "Feedback", "isCorrect": true },
      { "id": "option_3", "text": "Isolation", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding collaboration", "isCorrect": false }
    ],
    "hint": "This value helps teams learn and adjust rapidly.",
    "answerDescription": "Regular feedback fosters improvement, enhances collaboration, and leads to better decision-making."
  },  {
    "id": "agile_922",
    "question": "Which key practice in XP helps minimize defects early in development?",
    "options": [
      { "id": "option_1", "text": "Skipping reviews", "isCorrect": false },
      { "id": "option_2", "text": "Writing code without testing", "isCorrect": false },
      { "id": "option_3", "text": "Continuous testing", "isCorrect": true },
      { "id": "option_4", "text": "Delaying testing until later stages", "isCorrect": false }
    ],
    "hint": "XP emphasizes frequent validation of code.",
    "answerDescription": "Continuous testing ensures that defects are detected and resolved early, improving code quality."
  },
  {
    "id": "agile_923",
    "question": "What does XP recommend for maintaining high code quality throughout development?",
    "options": [
      { "id": "option_1", "text": "Avoiding code refactoring", "isCorrect": false },
      { "id": "option_2", "text": "Writing long and complex code", "isCorrect": false },
      { "id": "option_3", "text": "Frequent refactoring", "isCorrect": true },
      { "id": "option_4", "text": "Ignoring technical debt", "isCorrect": false }
    ],
    "hint": "This practice keeps the codebase clean and efficient.",
    "answerDescription": "Frequent refactoring helps remove redundancies and improves maintainability without changing functionality."
  },
  {
    "id": "agile_924",
    "question": "How does XP encourage rapid response to changing requirements?",
    "options": [
      { "id": "option_1", "text": "By sticking to a fixed plan", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding customer input", "isCorrect": false },
      { "id": "option_3", "text": "By delivering small, incremental releases", "isCorrect": true },
      { "id": "option_4", "text": "By postponing changes to later phases", "isCorrect": false }
    ],
    "hint": "XP values frequent software delivery over long release cycles.",
    "answerDescription": "Incremental releases allow for feedback and adaptation, ensuring the software meets user needs."
  },
  {
    "id": "agile_925",
    "question": "Why does XP recommend keeping the design simple?",
    "options": [
      { "id": "option_1", "text": "To minimize customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "To avoid writing automated tests", "isCorrect": false },
      { "id": "option_3", "text": "To reduce complexity and improve maintainability", "isCorrect": true },
      { "id": "option_4", "text": "To delay integration until later", "isCorrect": false }
    ],
    "hint": "XP promotes simplicity to make changes easier.",
    "answerDescription": "A simple design reduces technical debt and makes the system easier to modify and extend."
  },
  {
    "id": "agile_926",
    "question": "What is the role of a customer in an XP team?",
    "options": [
      { "id": "option_1", "text": "To oversee project management", "isCorrect": false },
      { "id": "option_2", "text": "To test the product at the final stage", "isCorrect": false },
      { "id": "option_3", "text": "To provide continuous feedback and define user stories", "isCorrect": true },
      { "id": "option_4", "text": "To develop the software with the team", "isCorrect": false }
    ],
    "hint": "The customer plays an active role in shaping the product.",
    "answerDescription": "Continuous customer involvement ensures that the product aligns with business needs and user expectations."
  },
  {
    "id": "agile_927",
    "question": "Which XP practice helps developers improve their skills and ensure high-quality code?",
    "options": [
      { "id": "option_1", "text": "Working in isolation", "isCorrect": false },
      { "id": "option_2", "text": "Skipping peer reviews", "isCorrect": false },
      { "id": "option_3", "text": "Pair programming", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding collaboration", "isCorrect": false }
    ],
    "hint": "Two developers work together to write code.",
    "answerDescription": "Pair programming improves code quality and knowledge sharing, leading to better software development practices."
  },
  {
    "id": "agile_928",
    "question": "How does XP ensure effective communication within teams?",
    "options": [
      { "id": "option_1", "text": "By limiting discussions to managers", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding documentation", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging open and frequent feedback", "isCorrect": true },
      { "id": "option_4", "text": "By reducing interactions between team members", "isCorrect": false }
    ],
    "hint": "XP values feedback as a key element of improvement.",
    "answerDescription": "Open communication ensures that problems are identified early and solutions are collaboratively developed."
  },
  {
    "id": "agile_929",
    "question": "What is an advantage of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "They delay customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "They reduce the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "They provide frequent opportunities for user feedback", "isCorrect": true },
      { "id": "option_4", "text": "They increase integration issues", "isCorrect": false }
    ],
    "hint": "XP favors early and frequent deliveries.",
    "answerDescription": "Small releases allow for continuous user feedback, improving product alignment with requirements."
  },
  {
    "id": "agile_930",
    "question": "What is the significance of a sustainable work pace in XP?",
    "options": [
      { "id": "option_1", "text": "It encourages working long hours", "isCorrect": false },
      { "id": "option_2", "text": "It increases burnout", "isCorrect": false },
      { "id": "option_3", "text": "It maintains consistent productivity and team well-being", "isCorrect": true },
      { "id": "option_4", "text": "It slows down development", "isCorrect": false }
    ],
    "hint": "XP promotes long-term efficiency over short-term speed.",
    "answerDescription": "A sustainable pace prevents burnout and ensures that teams maintain high productivity over time."
  },
  {
    "id": "agile_931",
    "question": "Which XP principle helps teams handle uncertainty and changing requirements?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing customer collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Embracing change through incremental development", "isCorrect": true },
      { "id": "option_4", "text": "Delaying feedback until project completion", "isCorrect": false }
    ],
    "hint": "XP encourages responsiveness to new requirements.",
    "answerDescription": "Incremental development allows teams to adapt to changes quickly, improving product flexibility."
  },
  {
    "id": "agile_932",
    "question": "Which XP practice ensures that code remains clean and efficient over time?",
    "options": [
      { "id": "option_1", "text": "Skipping code reviews", "isCorrect": false },
      { "id": "option_2", "text": "Writing long, complex functions", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding code refactoring", "isCorrect": false },
      { "id": "option_4", "text": "Continuous refactoring", "isCorrect": true }
    ],
    "hint": "XP encourages making improvements to code without altering functionality.",
    "answerDescription": "Continuous refactoring keeps the codebase clean, improving maintainability and reducing technical debt."
  },
  {
    "id": "agile_933",
    "question": "How does XP ensure rapid feedback from customers?",
    "options": [
      { "id": "option_1", "text": "By delaying releases until completion", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding customer collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By gathering feedback only at project end", "isCorrect": false },
      { "id": "option_4", "text": "By delivering small, frequent releases", "isCorrect": true }
    ],
    "hint": "XP emphasizes delivering working software frequently.",
    "answerDescription": "Frequent releases allow customers to provide timely feedback, leading to continuous improvement."
  },
  {
    "id": "agile_934",
    "question": "Which practice in XP ensures that team members share knowledge effectively?",
    "options": [
      { "id": "option_1", "text": "Working in isolation", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding discussions", "isCorrect": false },
      { "id": "option_3", "text": "Limiting collaboration to senior developers", "isCorrect": false },
      { "id": "option_4", "text": "Pair programming", "isCorrect": true }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair programming enhances knowledge sharing, improves code quality, and reduces defects."
  },
  {
    "id": "agile_935",
    "question": "What is the benefit of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "It slows down coding to avoid errors", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for refactoring", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the importance of customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "It ensures code correctness through automated tests", "isCorrect": true }
    ],
    "hint": "TDD follows a cycle of writing tests before writing the actual code.",
    "answerDescription": "Test-driven development helps developers catch errors early and build more reliable software."
  },
  {
    "id": "agile_936",
    "question": "Why does XP recommend a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "To encourage overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To push teams to deliver faster", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on short-term gains", "isCorrect": false },
      { "id": "option_4", "text": "To maintain long-term productivity and team well-being", "isCorrect": true }
    ],
    "hint": "XP discourages burnout and unsustainable workloads.",
    "answerDescription": "A sustainable pace allows teams to stay productive without experiencing exhaustion."
  },
  {
    "id": "agile_937",
    "question": "How does XP handle changing requirements effectively?",
    "options": [
      { "id": "option_1", "text": "By avoiding requirement changes", "isCorrect": false },
      { "id": "option_2", "text": "By finalizing all requirements at the start", "isCorrect": false },
      { "id": "option_3", "text": "By limiting customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By embracing changes through frequent iterations", "isCorrect": true }
    ],
    "hint": "XP promotes flexibility and responsiveness to change.",
    "answerDescription": "Frequent iterations allow teams to adapt quickly to changing customer needs."
  },
  {
    "id": "agile_938",
    "question": "Why does XP encourage writing the simplest code that works?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for collaboration", "isCorrect": false },
      { "id": "option_2", "text": "To avoid writing automated tests", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize development speed over quality", "isCorrect": false },
      { "id": "option_4", "text": "To improve maintainability and reduce complexity", "isCorrect": true }
    ],
    "hint": "Simplicity in XP helps teams avoid unnecessary complexity.",
    "answerDescription": "Simple code is easier to maintain, understand, and modify, reducing technical debt."
  },
  {
    "id": "agile_939",
    "question": "Which XP practice ensures software quality by validating code regularly?",
    "options": [
      { "id": "option_1", "text": "Writing documentation instead of tests", "isCorrect": false },
      { "id": "option_2", "text": "Skipping tests to speed up development", "isCorrect": false },
      { "id": "option_3", "text": "Testing only at the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "Continuous testing", "isCorrect": true }
    ],
    "hint": "XP encourages testing at every stage of development.",
    "answerDescription": "Continuous testing ensures that defects are caught and fixed early, improving overall software quality."
  },
  {
    "id": "agile_940",
    "question": "What is the purpose of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "To delay customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To minimize the number of deployments", "isCorrect": false },
      { "id": "option_3", "text": "To postpone bug fixes", "isCorrect": false },
      { "id": "option_4", "text": "To receive continuous feedback and improve iteratively", "isCorrect": true }
    ],
    "hint": "Small releases allow for frequent evaluation of progress.",
    "answerDescription": "Frequent releases enable rapid feedback, helping teams align the product with customer needs."
  },
  {
    "id": "agile_941",
    "question": "Why does XP emphasize frequent team communication?",
    "options": [
      { "id": "option_1", "text": "To reduce individual accountability", "isCorrect": false },
      { "id": "option_2", "text": "To minimize discussions and focus on coding", "isCorrect": false },
      { "id": "option_3", "text": "To avoid customer involvement in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "To ensure alignment and quick resolution of issues", "isCorrect": true }
    ],
    "hint": "Collaboration is a key value in XP.",
    "answerDescription": "Frequent communication helps teams stay aligned, resolve issues faster, and maintain agility."
  },  {
    "id": "agile_942",
    "question": "What is a core value of Extreme Programming (XP) that promotes teamwork and collaboration?",
    "options": [
      { "id": "option_1", "text": "Communication", "isCorrect": true },
      { "id": "option_2", "text": "Isolation", "isCorrect": false },
      { "id": "option_3", "text": "Strict individual ownership", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding code reviews", "isCorrect": false }
    ],
    "hint": "XP encourages developers to share knowledge frequently.",
    "answerDescription": "Communication is essential in XP to ensure smooth collaboration and shared understanding within the team."
  },
  {
    "id": "agile_943",
    "question": "Which XP practice ensures that new code integrates smoothly with the existing system?",
    "options": [
      { "id": "option_1", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_2", "text": "Batch releases", "isCorrect": false },
      { "id": "option_3", "text": "Manual testing at the end of development", "isCorrect": false },
      { "id": "option_4", "text": "Long development cycles", "isCorrect": false }
    ],
    "hint": "XP recommends frequent code integration to detect issues early.",
    "answerDescription": "Continuous Integration allows teams to merge code frequently, reducing integration problems and improving stability."
  },
  {
    "id": "agile_944",
    "question": "How does XP improve software quality through frequent automated tests?",
    "options": [
      { "id": "option_1", "text": "Test-Driven Development (TDD)", "isCorrect": true },
      { "id": "option_2", "text": "Testing only at the project end", "isCorrect": false },
      { "id": "option_3", "text": "Skipping tests to speed up development", "isCorrect": false },
      { "id": "option_4", "text": "Writing tests after deployment", "isCorrect": false }
    ],
    "hint": "This approach ensures that code is tested before implementation.",
    "answerDescription": "Test-Driven Development (TDD) helps prevent defects by requiring tests to be written before writing actual code."
  },
  {
    "id": "agile_945",
    "question": "Which XP principle emphasizes delivering value quickly through frequent releases?",
    "options": [
      { "id": "option_1", "text": "Rapid Feedback", "isCorrect": true },
      { "id": "option_2", "text": "Ignoring customer input", "isCorrect": false },
      { "id": "option_3", "text": "Releasing software only at project completion", "isCorrect": false },
      { "id": "option_4", "text": "Focusing solely on internal team opinions", "isCorrect": false }
    ],
    "hint": "XP encourages quick learning from customer responses.",
    "answerDescription": "Rapid Feedback allows teams to adjust and improve based on continuous input from customers and stakeholders."
  },
  {
    "id": "agile_946",
    "question": "Why does XP emphasize simplicity in design?",
    "options": [
      { "id": "option_1", "text": "To make the code easier to understand and maintain", "isCorrect": true },
      { "id": "option_2", "text": "To limit future enhancements", "isCorrect": false },
      { "id": "option_3", "text": "To avoid writing documentation", "isCorrect": false },
      { "id": "option_4", "text": "To add unnecessary complexity", "isCorrect": false }
    ],
    "hint": "XP encourages developers to write only what is needed.",
    "answerDescription": "Simple design makes code easier to maintain, modify, and extend while avoiding unnecessary complexity."
  },
  {
    "id": "agile_947",
    "question": "What is the main advantage of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "Improved code quality and shared knowledge", "isCorrect": true },
      { "id": "option_2", "text": "Faster individual development", "isCorrect": false },
      { "id": "option_3", "text": "Fewer discussions between developers", "isCorrect": false },
      { "id": "option_4", "text": "Limited review of each otherâ€™s work", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working on the same code.",
    "answerDescription": "Pair programming enhances code quality by providing continuous review and knowledge transfer between team members."
  },
  {
    "id": "agile_948",
    "question": "How does XP handle uncertain or changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By embracing change through continuous iterations", "isCorrect": true },
      { "id": "option_2", "text": "By finalizing all requirements upfront", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding requirement changes", "isCorrect": false },
      { "id": "option_4", "text": "By limiting customer interactions", "isCorrect": false }
    ],
    "hint": "XP is designed to be highly adaptable.",
    "answerDescription": "Frequent iterations allow XP teams to adjust quickly based on new customer requirements and feedback."
  },
  {
    "id": "agile_949",
    "question": "What is the key benefit of collective code ownership in XP?",
    "options": [
      { "id": "option_1", "text": "All team members can modify and improve code", "isCorrect": true },
      { "id": "option_2", "text": "Only one person owns each module", "isCorrect": false },
      { "id": "option_3", "text": "Developers avoid reviewing each otherâ€™s code", "isCorrect": false },
      { "id": "option_4", "text": "Only senior developers can make changes", "isCorrect": false }
    ],
    "hint": "XP encourages shared responsibility for code.",
    "answerDescription": "Collective code ownership ensures that any developer can improve the code, leading to better quality and maintainability."
  },
  {
    "id": "agile_950",
    "question": "What is the primary reason XP promotes a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "To avoid burnout and maintain long-term productivity", "isCorrect": true },
      { "id": "option_2", "text": "To encourage constant overtime", "isCorrect": false },
      { "id": "option_3", "text": "To push for unrealistic deadlines", "isCorrect": false },
      { "id": "option_4", "text": "To complete projects as fast as possible", "isCorrect": false }
    ],
    "hint": "XP discourages overworking developers.",
    "answerDescription": "A sustainable pace allows developers to maintain high performance over the long run without exhaustion."
  },
  {
    "id": "agile_951",
    "question": "How does XP encourage continuous learning and improvement?",
    "options": [
      { "id": "option_1", "text": "By reflecting on experiences and adapting", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "By following rigid processes without change", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring past mistakes", "isCorrect": false }
    ],
    "hint": "XP teams analyze their work regularly to improve.",
    "answerDescription": "XP encourages teams to reflect on past experiences and adapt to continuously improve their processes."
  },  {
    "id": "agile_952",
    "question": "What is a key benefit of writing automated tests in XP?",
    "options": [
      { "id": "option_1", "text": "Delays the development process", "isCorrect": false },
      { "id": "option_2", "text": "Ensures continuous validation of code", "isCorrect": true },
      { "id": "option_3", "text": "Eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "Makes manual testing unnecessary", "isCorrect": false }
    ],
    "hint": "XP emphasizes automated testing for reliability.",
    "answerDescription": "Automated tests in XP provide continuous validation, helping to catch errors early and improve code quality."
  },
  {
    "id": "agile_953",
    "question": "Why does XP promote small, frequent releases?",
    "options": [
      { "id": "option_1", "text": "To reduce customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To deliver value incrementally", "isCorrect": true },
      { "id": "option_3", "text": "To increase project complexity", "isCorrect": false },
      { "id": "option_4", "text": "To delay addressing bugs", "isCorrect": false }
    ],
    "hint": "XP values rapid and iterative delivery.",
    "answerDescription": "Small, frequent releases ensure that customers receive value continuously and provide feedback for improvements."
  },
  {
    "id": "agile_954",
    "question": "Which XP practice ensures that the system is always in a working state?",
    "options": [
      { "id": "option_1", "text": "Waterfall planning", "isCorrect": false },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_3", "text": "Big bang integration", "isCorrect": false },
      { "id": "option_4", "text": "Testing at the end of development", "isCorrect": false }
    ],
    "hint": "XP encourages merging code frequently to detect issues early.",
    "answerDescription": "Continuous Integration helps maintain a stable system by ensuring that all changes integrate smoothly and errors are identified quickly."
  },
  {
    "id": "agile_955",
    "question": "How does XP improve code quality through shared responsibility?",
    "options": [
      { "id": "option_1", "text": "By assigning code ownership to one person", "isCorrect": false },
      { "id": "option_2", "text": "By using Collective Code Ownership", "isCorrect": true },
      { "id": "option_3", "text": "By preventing code changes from other team members", "isCorrect": false },
      { "id": "option_4", "text": "By limiting collaboration", "isCorrect": false }
    ],
    "hint": "XP encourages everyone to contribute to the codebase.",
    "answerDescription": "Collective Code Ownership allows all team members to modify and improve the code, leading to higher quality and better maintainability."
  },
  {
    "id": "agile_956",
    "question": "What is the purpose of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To avoid writing tests", "isCorrect": false },
      { "id": "option_2", "text": "To ensure code is tested before implementation", "isCorrect": true },
      { "id": "option_3", "text": "To only test after development is completed", "isCorrect": false },
      { "id": "option_4", "text": "To increase project complexity", "isCorrect": false }
    ],
    "hint": "This practice involves writing tests before writing the actual code.",
    "answerDescription": "TDD ensures that code is thoroughly tested from the start, reducing defects and improving software reliability."
  },
  {
    "id": "agile_957",
    "question": "How does XP ensure adaptability to changing requirements?",
    "options": [
      { "id": "option_1", "text": "By resisting change to maintain stability", "isCorrect": false },
      { "id": "option_2", "text": "By using iterative development cycles", "isCorrect": true },
      { "id": "option_3", "text": "By finalizing all requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "By delaying customer feedback", "isCorrect": false }
    ],
    "hint": "XP is designed to be flexible and responsive to change.",
    "answerDescription": "Iterative development allows XP teams to quickly adjust to new requirements and continuously improve the software."
  },
  {
    "id": "agile_958",
    "question": "What role does customer involvement play in XP?",
    "options": [
      { "id": "option_1", "text": "Customers provide feedback only at the end", "isCorrect": false },
      { "id": "option_2", "text": "Customers work closely with the development team", "isCorrect": true },
      { "id": "option_3", "text": "Customers define all requirements at the start", "isCorrect": false },
      { "id": "option_4", "text": "Customers have no say in development decisions", "isCorrect": false }
    ],
    "hint": "XP encourages active collaboration between developers and customers.",
    "answerDescription": "Close customer involvement ensures that the product meets user needs and allows for continuous refinement based on feedback."
  },
  {
    "id": "agile_959",
    "question": "Why does XP promote a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "To encourage overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To prevent burnout and maintain productivity", "isCorrect": true },
      { "id": "option_3", "text": "To complete projects as quickly as possible", "isCorrect": false },
      { "id": "option_4", "text": "To work long hours to meet deadlines", "isCorrect": false }
    ],
    "hint": "XP values long-term productivity over short-term gains.",
    "answerDescription": "A sustainable work pace helps maintain team morale and ensures consistent productivity without excessive stress."
  },
  {
    "id": "agile_960",
    "question": "What is the primary benefit of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "Faster development with no code reviews", "isCorrect": false },
      { "id": "option_2", "text": "Improved code quality through collaboration", "isCorrect": true },
      { "id": "option_3", "text": "One developer works while the other observes without input", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding teamwork to speed up coding", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair Programming enhances code quality by allowing continuous review and knowledge sharing between developers."
  },
  {
    "id": "agile_961",
    "question": "Which XP value ensures that teams focus on delivering what is truly needed?",
    "options": [
      { "id": "option_1", "text": "Complexity", "isCorrect": false },
      { "id": "option_2", "text": "Simplicity", "isCorrect": true },
      { "id": "option_3", "text": "Extensive planning", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring customer feedback", "isCorrect": false }
    ],
    "hint": "XP encourages avoiding unnecessary work.",
    "answerDescription": "Simplicity in XP means focusing on only what is necessary, reducing complexity and increasing efficiency."
  },  {
    "id": "agile_962",
    "question": "What is a key characteristic of XP's Planning Game?",
    "options": [
      { "id": "option_1", "text": "It avoids customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "It is a one-time planning event", "isCorrect": false },
      { "id": "option_3", "text": "It involves continuous collaboration between developers and customers", "isCorrect": true },
      { "id": "option_4", "text": "It sets fixed requirements upfront", "isCorrect": false }
    ],
    "hint": "XP encourages ongoing planning with customer input.",
    "answerDescription": "The Planning Game in XP is a continuous, collaborative process where customers and developers work together to prioritize features."
  },
  {
    "id": "agile_963",
    "question": "How does XP promote high-quality software?",
    "options": [
      { "id": "option_1", "text": "By reducing testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "By assigning all coding to a single developer", "isCorrect": false },
      { "id": "option_3", "text": "By emphasizing continuous testing and refactoring", "isCorrect": true },
      { "id": "option_4", "text": "By limiting customer feedback", "isCorrect": false }
    ],
    "hint": "XP encourages frequent code improvements and validation.",
    "answerDescription": "XP ensures software quality through continuous testing and refactoring, which helps catch defects early and improve maintainability."
  },
  {
    "id": "agile_964",
    "question": "Which XP practice ensures that code remains maintainable and efficient?",
    "options": [
      { "id": "option_1", "text": "Ignoring legacy code", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding code reviews", "isCorrect": false },
      { "id": "option_3", "text": "Continuous Refactoring", "isCorrect": true },
      { "id": "option_4", "text": "Delaying improvements until the end", "isCorrect": false }
    ],
    "hint": "XP promotes improving code structure without altering functionality.",
    "answerDescription": "Continuous Refactoring keeps the codebase clean, reducing technical debt and making future changes easier."
  },
  {
    "id": "agile_965",
    "question": "Why does XP advocate for small development teams?",
    "options": [
      { "id": "option_1", "text": "To limit communication", "isCorrect": false },
      { "id": "option_2", "text": "To minimize collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To ensure better coordination and efficiency", "isCorrect": true },
      { "id": "option_4", "text": "To avoid customer involvement", "isCorrect": false }
    ],
    "hint": "XP values close communication and collaboration.",
    "answerDescription": "Smaller teams in XP enhance coordination, making it easier to implement agile practices like Pair Programming and Continuous Integration."
  },
  {
    "id": "agile_966",
    "question": "What is the role of a customer in an XP team?",
    "options": [
      { "id": "option_1", "text": "To only provide requirements at the beginning", "isCorrect": false },
      { "id": "option_2", "text": "To delegate decisions entirely to developers", "isCorrect": false },
      { "id": "option_3", "text": "To collaborate actively and provide ongoing feedback", "isCorrect": true },
      { "id": "option_4", "text": "To approve the final product without involvement", "isCorrect": false }
    ],
    "hint": "XP promotes continuous interaction between customers and developers.",
    "answerDescription": "In XP, customers play an active role in defining priorities, refining requirements, and giving feedback to ensure the product meets business needs."
  },
  {
    "id": "agile_967",
    "question": "Which XP practice focuses on enhancing teamwork and knowledge sharing?",
    "options": [
      { "id": "option_1", "text": "Solo development", "isCorrect": false },
      { "id": "option_2", "text": "Strict code ownership", "isCorrect": false },
      { "id": "option_3", "text": "Pair Programming", "isCorrect": true },
      { "id": "option_4", "text": "Minimal developer interaction", "isCorrect": false }
    ],
    "hint": "XP encourages two developers working together on the same code.",
    "answerDescription": "Pair Programming helps improve code quality and facilitates knowledge transfer between team members."
  },
  {
    "id": "agile_968",
    "question": "What is a key goal of XPâ€™s frequent releases?",
    "options": [
      { "id": "option_1", "text": "To increase project duration", "isCorrect": false },
      { "id": "option_2", "text": "To limit customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To deliver incremental value quickly", "isCorrect": true },
      { "id": "option_4", "text": "To finalize requirements early", "isCorrect": false }
    ],
    "hint": "XP aims to provide working software at regular intervals.",
    "answerDescription": "Frequent releases in XP allow teams to deliver usable features faster, incorporate feedback, and make adjustments quickly."
  },
  {
    "id": "agile_969",
    "question": "Which XP principle encourages developers to write the simplest code possible?",
    "options": [
      { "id": "option_1", "text": "Code Complexity", "isCorrect": false },
      { "id": "option_2", "text": "Extensive Documentation", "isCorrect": false },
      { "id": "option_3", "text": "Simplicity", "isCorrect": true },
      { "id": "option_4", "text": "Rigid Design", "isCorrect": false }
    ],
    "hint": "XP encourages avoiding unnecessary complexity.",
    "answerDescription": "The Simplicity principle in XP ensures that developers build only what is necessary, reducing waste and making future modifications easier."
  },
  {
    "id": "agile_970",
    "question": "Why does XP emphasize Test-Driven Development (TDD)?",
    "options": [
      { "id": "option_1", "text": "To delay testing until the end", "isCorrect": false },
      { "id": "option_2", "text": "To write tests after the code is completed", "isCorrect": false },
      { "id": "option_3", "text": "To ensure functionality is tested before implementation", "isCorrect": true },
      { "id": "option_4", "text": "To reduce the need for refactoring", "isCorrect": false }
    ],
    "hint": "XP encourages writing tests before coding begins.",
    "answerDescription": "TDD ensures that all code is tested from the start, leading to fewer bugs and a more stable codebase."
  },
  {
    "id": "agile_971",
    "question": "What is the purpose of Continuous Integration in XP?",
    "options": [
      { "id": "option_1", "text": "To integrate all code at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "To merge code only when major features are complete", "isCorrect": false },
      { "id": "option_3", "text": "To integrate code frequently and detect issues early", "isCorrect": true },
      { "id": "option_4", "text": "To limit team collaboration", "isCorrect": false }
    ],
    "hint": "XP promotes frequent code integration to avoid major conflicts.",
    "answerDescription": "Continuous Integration ensures that new code is merged regularly, reducing integration conflicts and allowing early detection of issues."
  },  {
    "id": "agile_972",
    "question": "What is the primary benefit of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces the number of developers needed", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up the development process significantly", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "It improves code quality and knowledge sharing", "isCorrect": true }
    ],
    "hint": "Pair Programming involves two developers working together on the same code.",
    "answerDescription": "Pair Programming enhances collaboration, improves code quality, and ensures knowledge transfer between team members."
  },
  {
    "id": "agile_973",
    "question": "Why does XP encourage writing tests before code implementation?",
    "options": [
      { "id": "option_1", "text": "To reduce development time", "isCorrect": false },
      { "id": "option_2", "text": "To avoid writing unnecessary documentation", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for debugging", "isCorrect": false },
      { "id": "option_4", "text": "To ensure functionality is validated from the start", "isCorrect": true }
    ],
    "hint": "Test-Driven Development (TDD) is a key XP practice.",
    "answerDescription": "By writing tests first, developers ensure that code meets requirements from the beginning, reducing bugs and improving reliability."
  },
  {
    "id": "agile_974",
    "question": "Which XP practice ensures that software is always in a working state?",
    "options": [
      { "id": "option_1", "text": "Delaying testing until later stages", "isCorrect": false },
      { "id": "option_2", "text": "Developing features in isolation", "isCorrect": false },
      { "id": "option_3", "text": "Merging code only at the end of development", "isCorrect": false },
      { "id": "option_4", "text": "Continuous Integration", "isCorrect": true }
    ],
    "hint": "XP encourages frequent code merging to avoid integration issues.",
    "answerDescription": "Continuous Integration ensures that new code is merged frequently, allowing teams to detect and fix integration issues early."
  },
  {
    "id": "agile_975",
    "question": "What is a key benefit of XP's frequent releases?",
    "options": [
      { "id": "option_1", "text": "It reduces customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "It minimizes the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "It extends the project timeline", "isCorrect": false },
      { "id": "option_4", "text": "It allows for rapid feedback and iterative improvements", "isCorrect": true }
    ],
    "hint": "XP emphasizes delivering working software in small increments.",
    "answerDescription": "Frequent releases ensure that customers provide continuous feedback, allowing teams to adapt and improve the product efficiently."
  },
  {
    "id": "agile_976",
    "question": "Which XP principle encourages building only necessary functionality?",
    "options": [
      { "id": "option_1", "text": "Comprehensive Documentation", "isCorrect": false },
      { "id": "option_2", "text": "Gold-Plating Features", "isCorrect": false },
      { "id": "option_3", "text": "Adding features proactively", "isCorrect": false },
      { "id": "option_4", "text": "Simplicity", "isCorrect": true }
    ],
    "hint": "XP promotes avoiding unnecessary complexity.",
    "answerDescription": "The Simplicity principle ensures that teams develop only what is needed, reducing waste and making future modifications easier."
  },
  {
    "id": "agile_977",
    "question": "How does XP improve communication within development teams?",
    "options": [
      { "id": "option_1", "text": "By reducing face-to-face interactions", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging individual work over collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By limiting documentation to a minimum", "isCorrect": false },
      { "id": "option_4", "text": "By promoting daily stand-ups and direct collaboration", "isCorrect": true }
    ],
    "hint": "XP emphasizes open and frequent communication among team members.",
    "answerDescription": "Daily stand-ups and team collaboration help improve alignment, ensure transparency, and enhance teamwork in XP."
  },
  {
    "id": "agile_978",
    "question": "What does XP recommend to handle changing requirements effectively?",
    "options": [
      { "id": "option_1", "text": "Finalizing requirements upfront", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing customer interactions", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding mid-project adjustments", "isCorrect": false },
      { "id": "option_4", "text": "Embracing flexibility and continuous feedback", "isCorrect": true }
    ],
    "hint": "XP is designed to accommodate evolving business needs.",
    "answerDescription": "XP encourages teams to stay adaptable by continuously refining requirements based on customer feedback and business changes."
  },
  {
    "id": "agile_979",
    "question": "Why does XP advocate for coding standards?",
    "options": [
      { "id": "option_1", "text": "To enforce a rigid structure for all projects", "isCorrect": false },
      { "id": "option_2", "text": "To limit creativity among developers", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "To ensure consistency and maintainability of code", "isCorrect": true }
    ],
    "hint": "XP promotes shared ownership and high-quality code.",
    "answerDescription": "Coding standards help XP teams write consistent, readable, and maintainable code, making collaboration more effective."
  },
  {
    "id": "agile_980",
    "question": "How does XP address the challenge of technical debt?",
    "options": [
      { "id": "option_1", "text": "By delaying refactoring until the end", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on new feature development", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring minor code issues", "isCorrect": false },
      { "id": "option_4", "text": "By promoting continuous refactoring", "isCorrect": true }
    ],
    "hint": "XP encourages ongoing code improvement to prevent accumulation of technical debt.",
    "answerDescription": "Continuous refactoring helps XP teams maintain a clean, efficient codebase, reducing technical debt and improving software longevity."
  },
  {
    "id": "agile_981",
    "question": "What role does customer feedback play in XP development?",
    "options": [
      { "id": "option_1", "text": "It is only considered at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "It is collected but not prioritized", "isCorrect": false },
      { "id": "option_3", "text": "It is used solely for documentation purposes", "isCorrect": false },
      { "id": "option_4", "text": "It guides iterations and feature prioritization", "isCorrect": true }
    ],
    "hint": "XP relies on continuous interaction with customers to refine product development.",
    "answerDescription": "Customer feedback in XP is crucial for ensuring that the software meets real-world needs and is continuously improved based on user input."
  },
  {
    "id": "agile_982",
    "question": "What is a key advantage of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "It ensures that code meets requirements before implementation", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for automated testing", "isCorrect": false },
      { "id": "option_3", "text": "It speeds up coding by skipping test creation", "isCorrect": false },
      { "id": "option_4", "text": "It allows testing to be deferred until later stages", "isCorrect": false }
    ],
    "hint": "TDD requires tests to be written before code is developed.",
    "answerDescription": "TDD ensures that every piece of code meets requirements from the start, reducing defects and improving maintainability."
  },
  {
    "id": "agile_983",
    "question": "Why does XP encourage Continuous Integration?",
    "options": [
      { "id": "option_1", "text": "To detect and fix integration issues early", "isCorrect": true },
      { "id": "option_2", "text": "To delay testing until after coding is complete", "isCorrect": false },
      { "id": "option_3", "text": "To prevent developers from merging code frequently", "isCorrect": false },
      { "id": "option_4", "text": "To avoid the need for automated builds", "isCorrect": false }
    ],
    "hint": "Continuous Integration involves frequent code integration to avoid conflicts.",
    "answerDescription": "By integrating code continuously, teams catch issues early, ensuring smooth collaboration and reducing integration challenges."
  },
  {
    "id": "agile_984",
    "question": "How does XP promote customer collaboration?",
    "options": [
      { "id": "option_1", "text": "By involving customers in the development process frequently", "isCorrect": true },
      { "id": "option_2", "text": "By finalizing requirements before coding starts", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing customer interactions to avoid scope changes", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on developer decisions", "isCorrect": false }
    ],
    "hint": "XP values ongoing customer feedback throughout development.",
    "answerDescription": "Engaging customers in development ensures that the final product aligns with their needs and expectations."
  },
  {
    "id": "agile_985",
    "question": "Which XP practice ensures that the system is always in a deployable state?",
    "options": [
      { "id": "option_1", "text": "Continuous Deployment", "isCorrect": true },
      { "id": "option_2", "text": "Delaying testing until release", "isCorrect": false },
      { "id": "option_3", "text": "Performing manual integrations at the end", "isCorrect": false },
      { "id": "option_4", "text": "Merging all code only at project completion", "isCorrect": false }
    ],
    "hint": "XP encourages releasing small, functional updates frequently.",
    "answerDescription": "Continuous Deployment ensures that every change is ready for release, improving software stability and user feedback cycles."
  },
  {
    "id": "agile_986",
    "question": "Why does XP advocate for a simple design?",
    "options": [
      { "id": "option_1", "text": "To make the code easier to maintain and extend", "isCorrect": true },
      { "id": "option_2", "text": "To reduce customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To increase development complexity", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize speed over quality", "isCorrect": false }
    ],
    "hint": "Simplicity in design reduces unnecessary complexity and future rework.",
    "answerDescription": "By keeping designs simple, XP teams can adapt easily to changing requirements and avoid unnecessary complications."
  },
  {
    "id": "agile_987",
    "question": "Why refactoring used in XP?",
    "options": [
      { "id": "option_1", "text": "To improve code structure without changing functionality", "isCorrect": true },
      { "id": "option_2", "text": "To add new features without testing", "isCorrect": false },
      { "id": "option_3", "text": "To remove test cases that fail", "isCorrect": false },
      { "id": "option_4", "text": "To replace working code with newer technology", "isCorrect": false }
    ],
    "hint": "Refactoring is an ongoing practice that maintains code health.",
    "answerDescription": "Refactoring improves readability and efficiency, making future modifications easier without altering behavior."
  },
  {
    "id": "agile_988",
    "question": "How does XP ensure a sustainable development pace?",
    "options": [
      { "id": "option_1", "text": "By promoting a sustainable work-life balance for developers", "isCorrect": true },
      { "id": "option_2", "text": "By requiring overtime during sprints", "isCorrect": false },
      { "id": "option_3", "text": "By setting unrealistic deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging teamwork and collaboration", "isCorrect": false }
    ],
    "hint": "XP encourages developers to work at a steady, manageable pace.",
    "answerDescription": "A sustainable pace ensures consistent productivity while avoiding burnout, leading to higher long-term efficiency."
  },
  {
    "id": "agile_989",
    "question": "What is the main goal of XPâ€™s frequent releases?",
    "options": [
      { "id": "option_1", "text": "To allow early feedback and iterative improvements", "isCorrect": true },
      { "id": "option_2", "text": "To minimize customer interactions", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "To avoid code refactoring", "isCorrect": false }
    ],
    "hint": "XP focuses on continuous delivery of working software.",
    "answerDescription": "Frequent releases help XP teams incorporate feedback quickly, leading to better product alignment with customer needs."
  },
  {
    "id": "agile_990",
    "question": "Why is collective code ownership important in XP?",
    "options": [
      { "id": "option_1", "text": "It ensures that all developers can modify any part of the codebase", "isCorrect": true },
      { "id": "option_2", "text": "It limits code changes to only senior developers", "isCorrect": false },
      { "id": "option_3", "text": "It discourages team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "It prevents junior developers from contributing", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility for maintaining and improving code.",
    "answerDescription": "Collective ownership encourages collaboration, knowledge sharing, and flexibility in development, reducing dependency on specific individuals."
  },
  {
    "id": "agile_991",
    "question": "What role does customer feedback play in XP development?",
    "options": [
      { "id": "option_1", "text": "It helps prioritize features and guide development", "isCorrect": true },
      { "id": "option_2", "text": "It is collected only at the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "It is used only for documentation purposes", "isCorrect": false },
      { "id": "option_4", "text": "It has no impact on development decisions", "isCorrect": false }
    ],
    "hint": "XP values continuous interaction with customers to refine development.",
    "answerDescription": "Regular feedback helps XP teams build features that align with user needs, ensuring a more valuable end product."
  },  {
    "id": "agile_992",
    "question": "What is the  key benefit of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for code reviews", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality through collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It allows one developer to take breaks while the other codes", "isCorrect": false },
      { "id": "option_4", "text": "It speeds up coding by reducing discussions", "isCorrect": false }
    ],
    "hint": "Pair Programming involves two developers working together to improve quality.",
    "answerDescription": "By working in pairs, developers catch mistakes early, share knowledge, and produce higher-quality code."
  },
  {
    "id": "agile_993",
    "question": "How does XP encourage responsiveness to change?",
    "options": [
      { "id": "option_1", "text": "By locking in requirements early", "isCorrect": false },
      { "id": "option_2", "text": "By frequently incorporating customer feedback", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding changes to prevent disruptions", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on initial project plans", "isCorrect": false }
    ],
    "hint": "XP values continuous adaptation based on customer input.",
    "answerDescription": "Regular customer feedback helps XP teams adjust priorities and ensure the product aligns with user needs."
  },
  {
    "id": "agile_994",
    "question": "What is the purpose of a sustainable pace in XP?",
    "options": [
      { "id": "option_1", "text": "To encourage extended overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To maintain consistent productivity without burnout", "isCorrect": true },
      { "id": "option_3", "text": "To rush development for faster releases", "isCorrect": false },
      { "id": "option_4", "text": "To push developers to meet tight deadlines", "isCorrect": false }
    ],
    "hint": "XP promotes a steady work pace to ensure long-term efficiency.",
    "answerDescription": "A sustainable pace prevents burnout, keeping the team productive and motivated throughout the project."
  },
  {
    "id": "agile_995",
    "question": "Why does XP emphasize simplicity in design?",
    "options": [
      { "id": "option_1", "text": "To reduce development costs", "isCorrect": false },
      { "id": "option_2", "text": "To make the system easier to modify and maintain", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize speed over quality", "isCorrect": false }
    ],
    "hint": "A simple design is easier to work with and modify as needed.",
    "answerDescription": "Keeping the design simple allows teams to adapt quickly to changes and maintain the system efficiently."
  },
  {
    "id": "agile_996",
    "question": "How does Continuous Integration benefit XP teams?",
    "options": [
      { "id": "option_1", "text": "By reducing the frequency of code merges", "isCorrect": false },
      { "id": "option_2", "text": "By detecting integration issues early", "isCorrect": true },
      { "id": "option_3", "text": "By allowing teams to integrate only at the end of a project", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating the need for automated testing", "isCorrect": false }
    ],
    "hint": "Frequent integration prevents large merge conflicts and errors.",
    "answerDescription": "Continuous Integration helps teams identify and resolve issues early, ensuring smoother development workflows."
  },
  {
    "id": "agile_997",
    "question": "What does XP recommend for handling defects in code?",
    "options": [
      { "id": "option_1", "text": "Ignoring minor defects to focus on speed", "isCorrect": false },
      { "id": "option_2", "text": "Fixing defects as soon as they are found", "isCorrect": true },
      { "id": "option_3", "text": "Delaying defect fixes until the testing phase", "isCorrect": false },
      { "id": "option_4", "text": "Documenting defects but not fixing them immediately", "isCorrect": false }
    ],
    "hint": "XP encourages addressing issues immediately to maintain quality.",
    "answerDescription": "Fixing defects promptly prevents them from accumulating and leading to larger problems in the future."
  },
  {
    "id": "agile_998",
    "question": "Why does XP value frequent releases?",
    "options": [
      { "id": "option_1", "text": "To keep development cycles as short as possible", "isCorrect": false },
      { "id": "option_2", "text": "To get continuous feedback and improve the product", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the amount of testing required", "isCorrect": false },
      { "id": "option_4", "text": "To avoid making changes after a release", "isCorrect": false }
    ],
    "hint": "XP relies on iterative development with regular feedback loops.",
    "answerDescription": "Frequent releases allow teams to adapt quickly based on real-world usage and customer input."
  },
  {
    "id": "agile_999",
    "question": "What is the primary reason for automated testing in XP?",
    "options": [
      { "id": "option_1", "text": "To eliminate the need for manual testing", "isCorrect": false },
      { "id": "option_2", "text": "To catch defects early and improve software reliability", "isCorrect": true },
      { "id": "option_3", "text": "To speed up development by skipping reviews", "isCorrect": false },
      { "id": "option_4", "text": "To replace the need for code refactoring", "isCorrect": false }
    ],
    "hint": "XP emphasizes continuous testing to maintain software quality.",
    "answerDescription": "Automated testing helps detect defects quickly, ensuring that new changes do not break existing functionality."
  },
  {
    "id": "agile_1000",
    "question": "What does XP say about the role of coding standards?",
    "options": [
      { "id": "option_1", "text": "They should be optional based on developer preferences", "isCorrect": false },
      { "id": "option_2", "text": "They help maintain consistency and readability", "isCorrect": true },
      { "id": "option_3", "text": "They should be ignored in favor of speed", "isCorrect": false },
      { "id": "option_4", "text": "They are only necessary for large teams", "isCorrect": false }
    ],
    "hint": "Consistent code style improves collaboration and maintainability.",
    "answerDescription": "Coding standards ensure that the code remains clean, readable, and easy to modify across the team."
  },
 {
    "id": "agile_1001",
    "question": "Why does XP promote collective code ownership?",
    "options": [
      { "id": "option_1", "text": "To allow anyone in the team to improve the code", "isCorrect": false },
      { "id": "option_2", "text": "To prevent knowledge silos and encourage collaboration", "isCorrect": true },
      { "id": "option_3", "text": "To restrict code changes to senior developers", "isCorrect": false },
      { "id": "option_4", "text": "To ensure that only one person owns each code section", "isCorrect": false }
    ],
    "hint": "XP encourages shared responsibility over the codebase.",
    "answerDescription": "With collective ownership, all developers contribute to maintaining and improving the code, fostering teamwork and flexibility."
},
{
  "id": "agile_1002",
  "question": "What is the main goal of Test-Driven Development (TDD) in XP?",
  "options": [
    { "id": "option_1", "text": "To eliminate the need for manual testing", "isCorrect": false },
    { "id": "option_2", "text": "To ensure code meets requirements before implementation", "isCorrect": true },
    { "id": "option_3", "text": "To speed up the coding process by writing tests later", "isCorrect": false },
    { "id": "option_4", "text": "To avoid writing unnecessary documentation", "isCorrect": false }
  ],
  "hint": "TDD requires writing tests before implementing the functionality.",
  "answerDescription": "By writing tests first, developers ensure the code meets requirements and is well-structured."
},
{
  "id": "agile_1003",
  "question": "Why does XP encourage refactoring?",
  "options": [
    { "id": "option_1", "text": "To frequently rewrite the entire codebase", "isCorrect": false },
    { "id": "option_2", "text": "To improve code quality without changing functionality", "isCorrect": true },
    { "id": "option_3", "text": "To avoid writing tests and rely on intuition", "isCorrect": false },
    { "id": "option_4", "text": "To make code more complex and feature-rich", "isCorrect": false }
  ],
  "hint": "Refactoring helps keep the code clean and maintainable.",
  "answerDescription": "XP promotes refactoring to simplify the code, making it easier to understand and modify."
},
{
  "id": "agile_1004",
  "question": "What role do user stories play in XP?",
  "options": [
    { "id": "option_1", "text": "They are optional descriptions of features", "isCorrect": false },
    { "id": "option_2", "text": "They define small, testable functionalities based on user needs", "isCorrect": true },
    { "id": "option_3", "text": "They replace the need for planning and design", "isCorrect": false },
    { "id": "option_4", "text": "They are technical specifications for developers", "isCorrect": false }
  ],
  "hint": "XP focuses on delivering value through short, well-defined tasks.",
  "answerDescription": "User stories help teams prioritize features based on real-world needs, ensuring continuous value delivery."
},
{
  "id": "agile_1005",
  "question": "How does XP handle changing requirements?",
  "options": [
    { "id": "option_1", "text": "By freezing requirements early to avoid disruptions", "isCorrect": false },
    { "id": "option_2", "text": "By embracing change and continuously adapting", "isCorrect": true },
    { "id": "option_3", "text": "By limiting customer input after the first iteration", "isCorrect": false },
    { "id": "option_4", "text": "By allowing changes only in emergency situations", "isCorrect": false }
  ],
  "hint": "XP thrives on flexibility and iterative development.",
  "answerDescription": "XP's adaptability ensures that teams can respond to feedback and evolving business needs efficiently."
},
{
  "id": "agile_1006",
  "question": "Why is on-site customer involvement important in XP?",
  "options": [
    { "id": "option_1", "text": "To reduce the need for testing and validation", "isCorrect": false },
    { "id": "option_2", "text": "To ensure requirements are clear and frequently updated", "isCorrect": true },
    { "id": "option_3", "text": "To approve code changes before deployment", "isCorrect": false },
    { "id": "option_4", "text": "To act as a project manager for the team", "isCorrect": false }
  ],
  "hint": "Direct customer involvement leads to better alignment with business needs.",
  "answerDescription": "Having an on-site customer allows XP teams to make decisions quickly and keep the product relevant."
},
{
  "id": "agile_1007",
  "question": "What is the main benefit of small releases in XP?",
  "options": [
    { "id": "option_1", "text": "To speed up development without testing", "isCorrect": false },
    { "id": "option_2", "text": "To provide frequent feedback and improve quality", "isCorrect": true },
    { "id": "option_3", "text": "To reduce the number of features delivered", "isCorrect": false },
    { "id": "option_4", "text": "To minimize customer involvement", "isCorrect": false }
  ],
  "hint": "Frequent releases help teams learn and adjust quickly.",
  "answerDescription": "Small releases allow customers to provide feedback, ensuring that development stays aligned with user needs."
},
{
  "id": "agile_1008",
  "question": "How does XP promote continuous learning within teams?",
  "options": [
    { "id": "option_1", "text": "By assigning a single expert to teach others", "isCorrect": false },
    { "id": "option_2", "text": "By encouraging knowledge sharing and pair programming", "isCorrect": true },
    { "id": "option_3", "text": "By restricting learning to scheduled training sessions", "isCorrect": false },
    { "id": "option_4", "text": "By focusing only on experienced developers", "isCorrect": false }
  ],
  "hint": "XP fosters a culture of shared knowledge and teamwork.",
  "answerDescription": "By working closely together, XP teams continuously improve their skills and collaborate effectively."
},
{
  "id": "agile_1009",
  "question": "Why does XP encourage simple solutions over complex ones?",
  "options": [
    { "id": "option_1", "text": "Because complex solutions are harder to test", "isCorrect": false },
    { "id": "option_2", "text": "Because simple solutions are easier to maintain and modify", "isCorrect": true },
    { "id": "option_3", "text": "Because simple solutions require less coding effort", "isCorrect": false },
    { "id": "option_4", "text": "Because complexity slows down the development process", "isCorrect": false }
  ],
  "hint": "XP aims for solutions that are easy to change and expand.",
  "answerDescription": "Keeping solutions simple makes it easier to adapt and refine the software as requirements evolve."
},
{
  "id": "agile_1010",
  "question": "How does XP promote accountability among developers?",
  "options": [
    { "id": "option_1", "text": "By assigning strict roles and responsibilities", "isCorrect": false },
    { "id": "option_2", "text": "By using collective code ownership and collaboration", "isCorrect": true },
    { "id": "option_3", "text": "By requiring developers to work independently", "isCorrect": false },
    { "id": "option_4", "text": "By limiting access to critical parts of the code", "isCorrect": false }
  ],
  "hint": "XP values teamwork and shared responsibility.",
  "answerDescription": "With collective code ownership, developers feel responsible for maintaining and improving the codebase together."
},
{
  "id": "agile_1011",
  "question": "Why does XP emphasize open workspaces for development teams?",
  "options": [
    { "id": "option_1", "text": "To reduce the need for meetings", "isCorrect": false },
    { "id": "option_2", "text": "To improve communication and collaboration", "isCorrect": true },
    { "id": "option_3", "text": "To increase competition among team members", "isCorrect": false },
    { "id": "option_4", "text": "To eliminate distractions while coding", "isCorrect": false }
  ],
  "hint": "XP values team interaction and fast problem-solving.",
  "answerDescription": "Open workspaces allow developers to discuss ideas, solve problems quickly, and work more effectively as a team."
},
{
  "id": "agile_1012",
  "question": "What is the purpose of Continuous Integration (CI) in XP?",
  "options": [
    { "id": "option_1", "text": "To deploy code only at the end of a project", "isCorrect": false },
    { "id": "option_2", "text": "To avoid conflicts by assigning tasks to individuals", "isCorrect": false },
    { "id": "option_3", "text": "To frequently merge code and detect issues early", "isCorrect": true },
    { "id": "option_4", "text": "To minimize team collaboration", "isCorrect": false }
  ],
  "hint": "CI helps maintain a stable and functional codebase by integrating changes often.",
  "answerDescription": "Continuous Integration ensures that code is merged frequently, reducing integration problems and improving software quality."
},
{
  "id": "agile_1013",
  "question": "How does XP ensure code quality?",
  "options": [
    { "id": "option_1", "text": "By relying solely on automated testing", "isCorrect": false },
    { "id": "option_2", "text": "By discouraging frequent code changes", "isCorrect": false },
    { "id": "option_3", "text": "By emphasizing TDD, pair programming, and refactoring", "isCorrect": true },
    { "id": "option_4", "text": "By allowing only senior developers to write code", "isCorrect": false }
  ],
  "hint": "XP relies on multiple techniques to maintain high code quality.",
  "answerDescription": "Through TDD, pair programming, and continuous refactoring, XP ensures that the code remains clean, efficient, and reliable."
},
{
  "id": "agile_1014",
  "question": "What is the key advantage of pair programming in XP?",
  "options": [
    { "id": "option_1", "text": "It speeds up individual coding tasks", "isCorrect": false },
    { "id": "option_2", "text": "It reduces the need for automated testing", "isCorrect": false },
    { "id": "option_3", "text": "It enhances knowledge sharing and reduces defects", "isCorrect": true },
    { "id": "option_4", "text": "It eliminates the need for code reviews", "isCorrect": false }
  ],
  "hint": "Pair programming is about teamwork and improving code quality.",
  "answerDescription": "By working in pairs, developers share knowledge, catch mistakes early, and produce higher-quality code."
},
{
  "id": "agile_1015",
  "question": "Why does XP advocate for a sustainable pace in development?",
  "options": [
    { "id": "option_1", "text": "To complete projects as quickly as possible", "isCorrect": false },
    { "id": "option_2", "text": "To ensure developers work overtime to meet deadlines", "isCorrect": false },
    { "id": "option_3", "text": "To maintain long-term productivity and team well-being", "isCorrect": true },
    { "id": "option_4", "text": "To minimize changes to project requirements", "isCorrect": false }
  ],
  "hint": "XP values long-term efficiency over short-term speed.",
  "answerDescription": "A sustainable pace prevents burnout and allows teams to remain productive over extended periods."
},
{
  "id": "agile_1016",
  "question": "What is the role of collective code ownership in XP?",
  "options": [
    { "id": "option_1", "text": "To assign specific modules to individual developers", "isCorrect": false },
    { "id": "option_2", "text": "To limit code changes to senior team members", "isCorrect": false },
    { "id": "option_3", "text": "To allow anyone on the team to improve the code", "isCorrect": true },
    { "id": "option_4", "text": "To discourage collaboration between developers", "isCorrect": false }
  ],
  "hint": "XP promotes shared responsibility for the entire codebase.",
  "answerDescription": "With collective code ownership, any developer can refine and improve the code, leading to better collaboration and fewer bottlenecks."
},
{
  "id": "agile_1017",
  "question": "How does XP handle project documentation?",
  "options": [
    { "id": "option_1", "text": "By requiring extensive written reports", "isCorrect": false },
    { "id": "option_2", "text": "By prioritizing documentation over coding", "isCorrect": false },
    { "id": "option_3", "text": "By keeping documentation minimal and just enough", "isCorrect": true },
    { "id": "option_4", "text": "By avoiding documentation entirely", "isCorrect": false }
  ],
  "hint": "XP values working software over comprehensive documentation.",
  "answerDescription": "XP focuses on writing only essential documentation while prioritizing working code and real-time collaboration."
},
{
  "id": "agile_1018",
  "question": "What is a key characteristic of XP planning?",
  "options": [
    { "id": "option_1", "text": "Fixed long-term schedules", "isCorrect": false },
    { "id": "option_2", "text": "Minimal customer involvement", "isCorrect": false },
    { "id": "option_3", "text": "Frequent, adaptive planning with customer feedback", "isCorrect": true },
    { "id": "option_4", "text": "Strictly defined project scope", "isCorrect": false }
  ],
  "hint": "XP planning is iterative and collaborative.",
  "answerDescription": "XP promotes continuous planning with active customer participation to adjust priorities as needed."
},
{
  "id": "agile_1019",
  "question": "How does XP promote better collaboration in teams?",
  "options": [
    { "id": "option_1", "text": "By assigning individual tasks to each developer", "isCorrect": false },
    { "id": "option_2", "text": "By encouraging competition among team members", "isCorrect": false },
    { "id": "option_3", "text": "By using pair programming and open communication", "isCorrect": true },
    { "id": "option_4", "text": "By avoiding direct customer interaction", "isCorrect": false }
  ],
  "hint": "XP thrives on teamwork and shared responsibility.",
  "answerDescription": "Pair programming and open collaboration help developers share knowledge and solve problems efficiently."
},
{
  "id": "agile_1020",
  "question": "Why does XP emphasize fast feedback loops?",
  "options": [
    { "id": "option_1", "text": "To limit customer input in development", "isCorrect": false },
    { "id": "option_2", "text": "To delay bug detection until later phases", "isCorrect": false },
    { "id": "option_3", "text": "To quickly identify and address issues in development", "isCorrect": true },
    { "id": "option_4", "text": "To slow down releases and improve planning", "isCorrect": false }
  ],
  "hint": "XP promotes rapid iterations and testing.",
  "answerDescription": "Fast feedback loops enable teams to detect problems early, refine their work, and continuously improve the product."
},
{
  "id": "agile_1021",
  "question": "What is the importance of simplicity in XP?",
  "options": [
    { "id": "option_1", "text": "To avoid making changes once the code is written", "isCorrect": false },
    { "id": "option_2", "text": "To increase the complexity of software design", "isCorrect": false },
    { "id": "option_3", "text": "To make software easier to maintain and extend", "isCorrect": true },
    { "id": "option_4", "text": "To remove the need for automated testing", "isCorrect": false }
  ],
  "hint": "XP values the easiest solution that works effectively.",
  "answerDescription": "By keeping solutions simple, XP teams ensure that their code is easier to understand, modify, and scale."
},
{
  "id": "agile_1022",
  "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
  "options": [
    { "id": "option_1", "text": "To write tests only after the code is complete", "isCorrect": false },
    { "id": "option_2", "text": "To eliminate the need for manual testing", "isCorrect": false },
    { "id": "option_3", "text": "To focus only on passing tests, not code quality", "isCorrect": false },
    { "id": "option_4", "text": "To guide design and improve code reliability", "isCorrect": true }
  ],
  "hint": "TDD helps in structuring code by writing tests first.",
  "answerDescription": "TDD ensures that code is well-structured and functions as intended by writing tests before implementation."
},
{
  "id": "agile_1023",
  "question": "Why does XP encourage frequent releases?",
  "options": [
    { "id": "option_1", "text": "To avoid customer involvement until the final release", "isCorrect": false },
    { "id": "option_2", "text": "To reduce the development team's workload", "isCorrect": false },
    { "id": "option_3", "text": "To prioritize documentation over software delivery", "isCorrect": false },
    { "id": "option_4", "text": "To gather feedback and make incremental improvements", "isCorrect": true }
  ],
  "hint": "Frequent releases help refine the product based on real-world feedback.",
  "answerDescription": "By releasing software in short iterations, XP teams can quickly adjust to user needs and improve quality."
},
{
  "id": "agile_1024",
  "question": "How does XP support continuous improvement?",
  "options": [
    { "id": "option_1", "text": "By finalizing processes early and avoiding changes", "isCorrect": false },
    { "id": "option_2", "text": "By focusing on documentation instead of coding", "isCorrect": false },
    { "id": "option_3", "text": "By isolating developers to work independently", "isCorrect": false },
    { "id": "option_4", "text": "By regularly reflecting and refining development practices", "isCorrect": true }
  ],
  "hint": "XP encourages self-assessment and iterative enhancements.",
  "answerDescription": "Through retrospectives and iterative development, XP enables teams to continually refine their processes."
},
{
  "id": "agile_1025",
  "question": "What is the main benefit of refactoring in XP?",
  "options": [
    { "id": "option_1", "text": "To replace existing code with complex alternatives", "isCorrect": false },
    { "id": "option_2", "text": "To remove unit testing from the development process", "isCorrect": false },
    { "id": "option_3", "text": "To delay improvements until the project is complete", "isCorrect": false },
    { "id": "option_4", "text": "To simplify and enhance code without altering functionality", "isCorrect": true }
  ],
  "hint": "Refactoring focuses on improving code while keeping behavior unchanged.",
  "answerDescription": "Refactoring improves code maintainability and readability while preserving its original behavior."
},
{
  "id": "agile_1026",
  "question": "Why is customer collaboration crucial in XP?",
  "options": [
    { "id": "option_1", "text": "To ensure developers make all decisions without interference", "isCorrect": false },
    { "id": "option_2", "text": "To limit the frequency of changes in requirements", "isCorrect": false },
    { "id": "option_3", "text": "To reduce the number of testing cycles", "isCorrect": false },
    { "id": "option_4", "text": "To align development with real business needs", "isCorrect": true }
  ],
  "hint": "Frequent customer input helps XP teams build the right product.",
  "answerDescription": "Customer collaboration ensures that the software meets actual business requirements and user expectations."
},
{
  "id": "agile_1027",
  "question": "What is the key principle behind simple design in XP?",
  "options": [
    { "id": "option_1", "text": "To anticipate future requirements by adding extra features", "isCorrect": false },
    { "id": "option_2", "text": "To make the system as complex as possible", "isCorrect": false },
    { "id": "option_3", "text": "To limit code changes after implementation", "isCorrect": false },
    { "id": "option_4", "text": "To build the simplest solution that works effectively", "isCorrect": true }
  ],
  "hint": "XP focuses on minimal complexity and efficiency.",
  "answerDescription": "A simple design ensures that the system remains flexible, maintainable, and easy to modify as needed."
},
{
  "id": "agile_1028",
  "question": "How does XP handle changing requirements?",
  "options": [
    { "id": "option_1", "text": "By finalizing requirements at the start and avoiding changes", "isCorrect": false },
    { "id": "option_2", "text": "By discouraging customer feedback after development begins", "isCorrect": false },
    { "id": "option_3", "text": "By treating all changes as scope creep", "isCorrect": false },
    { "id": "option_4", "text": "By welcoming changes and adjusting iteratively", "isCorrect": true }
  ],
  "hint": "XP is designed to be highly adaptable.",
  "answerDescription": "XP embraces changes by using short development cycles and continuous feedback to refine the product."
},
{
  "id": "agile_1029",
  "question": "What role does automated testing play in XP?",
  "options": [
    { "id": "option_1", "text": "To replace the need for manual testing entirely", "isCorrect": false },
    { "id": "option_2", "text": "To test only major releases", "isCorrect": false },
    { "id": "option_3", "text": "To reduce the importance of developer testing", "isCorrect": false },
    { "id": "option_4", "text": "To quickly detect and prevent defects in code", "isCorrect": true }
  ],
  "hint": "XP relies on rapid feedback from tests.",
  "answerDescription": "Automated testing helps XP teams identify and fix defects early, ensuring a stable and reliable codebase."
},
{
  "id": "agile_1030",
  "question": "Why does XP promote coding standards?",
  "options": [
    { "id": "option_1", "text": "To restrict creativity in software development", "isCorrect": false },
    { "id": "option_2", "text": "To allow only senior developers to make code changes", "isCorrect": false },
    { "id": "option_3", "text": "To discourage frequent code modifications", "isCorrect": false },
    { "id": "option_4", "text": "To ensure consistency and maintainability", "isCorrect": true }
  ],
  "hint": "XP values readability and uniformity in code.",
  "answerDescription": "Coding standards in XP help teams write consistent, maintainable, and collaborative code."
},
{
  "id": "agile_1031",
  "question": "What is the role of on-site customers in XP?",
  "options": [
    { "id": "option_1", "text": "To act as passive observers of the development process", "isCorrect": false },
    { "id": "option_2", "text": "To review software only after completion", "isCorrect": false },
    { "id": "option_3", "text": "To limit interactions with the development team", "isCorrect": false },
    { "id": "option_4", "text": "To provide immediate feedback and prioritize features", "isCorrect": true }
  ],
  "hint": "On-site customers help XP teams stay aligned with business goals.",
  "answerDescription": "By being present and involved, on-site customers can give real-time feedback and ensure the software meets their needs."
},
{
  "id": "agile_1032",
  "question": "What is a key advantage of pair programming in XP?",
  "options": [
    { "id": "option_1", "text": "It improves code quality and reduces errors", "isCorrect": true },
    { "id": "option_2", "text": "It slows down the development process significantly", "isCorrect": false },
    { "id": "option_3", "text": "It eliminates the need for automated testing", "isCorrect": false },
    { "id": "option_4", "text": "It allows developers to work independently", "isCorrect": false }
  ],
  "hint": "Two developers working together can produce higher-quality code.",
  "answerDescription": "Pair programming enhances code quality by enabling continuous review and reducing defects early."
},
{
  "id": "agile_1033",
  "question": "What is use of XP emphasize collective code ownership?",
  "options": [
    { "id": "option_1", "text": "It ensures that all team members can contribute and improve the code", "isCorrect": true },
    { "id": "option_2", "text": "It limits the number of developers who can modify the code", "isCorrect": false },
    { "id": "option_3", "text": "It reduces collaboration among developers", "isCorrect": false },
    { "id": "option_4", "text": "It assigns strict ownership of code to individuals", "isCorrect": false }
  ],
  "hint": "XP promotes shared responsibility for maintaining code quality.",
  "answerDescription": "By allowing everyone to modify the code, collective ownership enhances flexibility, knowledge sharing, and maintainability."
},
{
  "id": "agile_1034",
  "question": "What is the purpose of small releases in XP?",
  "options": [
    { "id": "option_1", "text": "To quickly deliver working software and gather feedback", "isCorrect": true },
    { "id": "option_2", "text": "To delay feedback until the final stages", "isCorrect": false },
    { "id": "option_3", "text": "To reduce the frequency of customer involvement", "isCorrect": false },
    { "id": "option_4", "text": "To focus on delivering the full product at once", "isCorrect": false }
  ],
  "hint": "Frequent delivery enables rapid improvements.",
  "answerDescription": "Small releases ensure that customers receive working software frequently and can provide feedback for continuous refinement."
},
{
  "id": "agile_1035",
  "question": "Why is sustainable pace important in XP?",
  "options": [
    { "id": "option_1", "text": "It prevents developer burnout and maintains productivity", "isCorrect": true },
    { "id": "option_2", "text": "It encourages long working hours for faster delivery", "isCorrect": false },
    { "id": "option_3", "text": "It focuses on completing tasks without considering developer well-being", "isCorrect": false },
    { "id": "option_4", "text": "It aims to finish projects as quickly as possible regardless of quality", "isCorrect": false }
  ],
  "hint": "Sustainable development ensures consistent team performance.",
  "answerDescription": "A sustainable pace helps teams maintain efficiency and quality without exhausting developers."
},
{
  "id": "agile_1036",
  "question": "How does XP improve software quality?",
  "options": [
    { "id": "option_1", "text": "By using practices like continuous integration and refactoring", "isCorrect": true },
    { "id": "option_2", "text": "By avoiding changes to the code once written", "isCorrect": false },
    { "id": "option_3", "text": "By focusing only on speed rather than quality", "isCorrect": false },
    { "id": "option_4", "text": "By minimizing testing to speed up development", "isCorrect": false }
  ],
  "hint": "XP relies on constant feedback and refinement.",
  "answerDescription": "XP enhances quality through continuous integration, test-driven development, and ongoing refactoring."
},
{
  "id": "agile_1037",
  "question": "What is the benefit of continuous integration in XP?",
  "options": [
    { "id": "option_1", "text": "It detects and fixes integration issues early", "isCorrect": true },
    { "id": "option_2", "text": "It delays integration until the final release", "isCorrect": false },
    { "id": "option_3", "text": "It eliminates the need for automated testing", "isCorrect": false },
    { "id": "option_4", "text": "It limits the frequency of code changes", "isCorrect": false }
  ],
  "hint": "Frequent integration helps catch errors quickly.",
  "answerDescription": "By continuously integrating code changes, teams can identify and resolve issues early in the development process."
},
{
  "id": "agile_1038",
  "question": "Why does XP advocate for simple design?",
  "options": [
    { "id": "option_1", "text": "To ensure flexibility and ease of modification", "isCorrect": true },
    { "id": "option_2", "text": "To predict all future requirements upfront", "isCorrect": false },
    { "id": "option_3", "text": "To add as many features as possible initially", "isCorrect": false },
    { "id": "option_4", "text": "To avoid any changes to the design after implementation", "isCorrect": false }
  ],
  "hint": "A simple design is easier to adapt and maintain.",
  "answerDescription": "XP encourages simple designs to make software flexible and easily adaptable to future needs."
},
{
  "id": "agile_1039",
  "question": "How does XP enhance team collaboration?",
  "options": [
    { "id": "option_1", "text": "By fostering constant communication and feedback", "isCorrect": true },
    { "id": "option_2", "text": "By minimizing interactions between team members", "isCorrect": false },
    { "id": "option_3", "text": "By having individuals work independently without discussion", "isCorrect": false },
    { "id": "option_4", "text": "By reducing the need for team meetings", "isCorrect": false }
  ],
  "hint": "XP thrives on active team communication.",
  "answerDescription": "Regular discussions, pair programming, and open collaboration help XP teams work efficiently together."
},
{
  "id": "agile_1040",
  "question": "What is the purpose of metaphor in XP?",
  "options": [
    { "id": "option_1", "text": "To create a shared understanding of the system", "isCorrect": true },
    { "id": "option_2", "text": "To add complexity to software explanations", "isCorrect": false },
    { "id": "option_3", "text": "To document requirements instead of user stories", "isCorrect": false },
    { "id": "option_4", "text": "To replace traditional coding practices", "isCorrect": false }
  ],
  "hint": "Metaphors simplify system concepts for all stakeholders.",
  "answerDescription": "XP uses metaphors to help teams and stakeholders understand the system's structure and functionality in a simplified way."
},
{
  "id": "agile_1041",
  "question": "What is the main reason XP promotes customer involvement?",
  "options": [
    { "id": "option_1", "text": "To ensure the product meets business needs and expectations", "isCorrect": true },
    { "id": "option_2", "text": "To reduce the development team's autonomy", "isCorrect": false },
    { "id": "option_3", "text": "To minimize feedback loops", "isCorrect": false },
    { "id": "option_4", "text": "To delay development decisions", "isCorrect": false }
  ],
  "hint": "Frequent customer collaboration ensures alignment with business goals.",
  "answerDescription": "Customer involvement allows XP teams to build software that aligns closely with business requirements and user needs."
},  {
    "id": "agile_1042",
    "question": "What role does refactoring play in XP?",
    "options": [
      { "id": "option_1", "text": "It complicates the codebase over time", "isCorrect": false },
      { "id": "option_2", "text": "It improves code maintainability and efficiency", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for automated testing", "isCorrect": false },
      { "id": "option_4", "text": "It discourages frequent code changes", "isCorrect": false }
    ],
    "hint": "Refactoring helps keep the code clean and efficient.",
    "answerDescription": "XP encourages refactoring to continuously improve code quality and make it easier to maintain."
  },
  {
    "id": "agile_1043",
    "question": "Why is test-driven development (TDD) a core practice in XP?",
    "options": [
      { "id": "option_1", "text": "It increases development time significantly", "isCorrect": false },
      { "id": "option_2", "text": "It ensures code correctness and reduces defects", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for manual testing", "isCorrect": false },
      { "id": "option_4", "text": "It allows developers to skip writing tests", "isCorrect": false }
    ],
    "hint": "TDD emphasizes writing tests before coding.",
    "answerDescription": "By writing tests before implementation, developers in XP create more reliable and defect-free software."
  },
  {
    "id": "agile_1044",
    "question": "How does XP handle changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By discouraging changes after initial planning", "isCorrect": false },
      { "id": "option_2", "text": "By embracing changes through iterative development", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing rigid project specifications", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing customer involvement", "isCorrect": false }
    ],
    "hint": "XP values flexibility and adaptability.",
    "answerDescription": "XP's iterative approach allows teams to incorporate feedback and adjust to changing requirements seamlessly."
  },
  {
    "id": "agile_1045",
    "question": "What is the purpose of user stories in XP?",
    "options": [
      { "id": "option_1", "text": "To replace all documentation requirements", "isCorrect": false },
      { "id": "option_2", "text": "To define customer requirements in a simple, understandable format", "isCorrect": true },
      { "id": "option_3", "text": "To enforce strict coding guidelines", "isCorrect": false },
      { "id": "option_4", "text": "To limit changes to project scope", "isCorrect": false }
    ],
    "hint": "User stories capture customer needs in XP.",
    "answerDescription": "XP uses user stories to ensure requirements are clearly defined, helping teams align development with customer expectations."
  },
  {
    "id": "agile_1046",
    "question": "Why is feedback essential in XP?",
    "options": [
      { "id": "option_1", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_2", "text": "To enable continuous improvements and course corrections", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for automated testing", "isCorrect": false },
      { "id": "option_4", "text": "To avoid direct communication with customers", "isCorrect": false }
    ],
    "hint": "Feedback helps XP teams improve iteratively.",
    "answerDescription": "Frequent feedback allows teams to adapt quickly, improve quality, and meet customer needs efficiently."
  },
  {
    "id": "agile_1047",
    "question": "What is a key benefit of XPâ€™s simple design principle?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for refactoring", "isCorrect": false },
      { "id": "option_2", "text": "It makes the system easier to modify and maintain", "isCorrect": true },
      { "id": "option_3", "text": "It prevents adding new features later", "isCorrect": false },
      { "id": "option_4", "text": "It restricts developers from making changes", "isCorrect": false }
    ],
    "hint": "Simple design makes the system flexible.",
    "answerDescription": "XP promotes simple design to ensure the software remains adaptable, efficient, and maintainable."
  },
  {
    "id": "agile_1048",
    "question": "How does XP ensure that code meets high-quality standards?",
    "options": [
      { "id": "option_1", "text": "By writing all tests after development is complete", "isCorrect": false },
      { "id": "option_2", "text": "By using test-driven development and continuous refactoring", "isCorrect": true },
      { "id": "option_3", "text": "By minimizing customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging code changes after release", "isCorrect": false }
    ],
    "hint": "XP relies on automated testing and improvements.",
    "answerDescription": "XP maintains high-quality code by ensuring tests drive development and code is constantly refined."
  },
  {
    "id": "agile_1049",
    "question": "Why is on-site customer presence important in XP?",
    "options": [
      { "id": "option_1", "text": "To enforce rigid project specifications", "isCorrect": false },
      { "id": "option_2", "text": "To provide immediate feedback and clarify requirements", "isCorrect": true },
      { "id": "option_3", "text": "To micromanage the development team", "isCorrect": false },
      { "id": "option_4", "text": "To reduce developer independence", "isCorrect": false }
    ],
    "hint": "Customer collaboration helps refine project goals.",
    "answerDescription": "Having a customer on-site ensures quick decision-making and helps developers align with business needs."
  },
  {
    "id": "agile_1050",
    "question": "What is the primary goal of XP's planning game?",
    "options": [
      { "id": "option_1", "text": "To define project timelines without customer input", "isCorrect": false },
      { "id": "option_2", "text": "To prioritize features based on business value and feasibility", "isCorrect": true },
      { "id": "option_3", "text": "To replace daily stand-up meetings", "isCorrect": false },
      { "id": "option_4", "text": "To minimize developer involvement in decision-making", "isCorrect": false }
    ],
    "hint": "The planning game balances business and technical priorities.",
    "answerDescription": "XPâ€™s planning game ensures that development focuses on high-value features while considering feasibility constraints."
  },
  {
    "id": "agile_1051",
    "question": "How does XP handle project risks?",
    "options": [
      { "id": "option_1", "text": "By avoiding customer feedback to prevent scope changes", "isCorrect": false },
      { "id": "option_2", "text": "By using rapid iterations and continuous testing", "isCorrect": true },
      { "id": "option_3", "text": "By eliminating all refactoring efforts", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing a fixed development plan", "isCorrect": false }
    ],
    "hint": "Frequent iterations reduce risk in XP.",
    "answerDescription": "XP mitigates risks by incorporating continuous feedback, testing, and incremental improvements throughout development."
  },
  {
    "id": "agile_1052",
    "question": "What is the primary reason XP advocates for pair programming?",
    "options": [
      { "id": "option_1", "text": "To reduce the overall cost of development", "isCorrect": false },
      { "id": "option_2", "text": "To minimize testing requirements", "isCorrect": false },
      { "id": "option_3", "text": "To improve code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for documentation", "isCorrect": false }
    ],
    "hint": "Pair programming enhances collaboration and code reliability.",
    "answerDescription": "XP encourages pair programming to enhance code quality, share knowledge, and reduce defects."
  },
  {
    "id": "agile_1053",
    "question": "How does XP ensure continuous integration?",
    "options": [
      { "id": "option_1", "text": "By merging code changes only at the end of development", "isCorrect": false },
      { "id": "option_2", "text": "By performing integration testing once per release cycle", "isCorrect": false },
      { "id": "option_3", "text": "By integrating and testing code frequently", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging changes during a sprint", "isCorrect": false }
    ],
    "hint": "XP emphasizes frequent integration to avoid conflicts.",
    "answerDescription": "XP promotes continuous integration to detect issues early and ensure seamless software development."
  },
  {
    "id": "agile_1054",
    "question": "What is the role of collective code ownership in XP?",
    "options": [
      { "id": "option_1", "text": "It assigns strict ownership of code to specific developers", "isCorrect": false },
      { "id": "option_2", "text": "It limits changes to designated individuals", "isCorrect": false },
      { "id": "option_3", "text": "It allows any developer to improve any part of the code", "isCorrect": true },
      { "id": "option_4", "text": "It discourages collaboration on code", "isCorrect": false }
    ],
    "hint": "XP values team-wide responsibility for code quality.",
    "answerDescription": "Collective code ownership in XP ensures that all team members can contribute to and improve the codebase."
  },
  {
    "id": "agile_1055",
    "question": "Why does XP emphasize small, frequent releases?",
    "options": [
      { "id": "option_1", "text": "To increase development costs", "isCorrect": false },
      { "id": "option_2", "text": "To minimize customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To deliver value quickly and adapt to change", "isCorrect": true },
      { "id": "option_4", "text": "To avoid regression testing", "isCorrect": false }
    ],
    "hint": "Frequent releases ensure customer needs are met efficiently.",
    "answerDescription": "XPâ€™s approach to small, frequent releases allows teams to deliver value quickly and respond to evolving requirements."
  },
  {
    "id": "agile_1056",
    "question": "How does XP handle defects in software development?",
    "options": [
      { "id": "option_1", "text": "By delaying bug fixes until the final release", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on manual testing", "isCorrect": false },
      { "id": "option_3", "text": "By using test-driven development and continuous feedback", "isCorrect": true },
      { "id": "option_4", "text": "By freezing code changes after development", "isCorrect": false }
    ],
    "hint": "XP prevents defects through proactive testing and feedback.",
    "answerDescription": "XP uses TDD and continuous feedback to catch and fix defects early in the development process."
  },
  {
    "id": "agile_1057",
    "question": "Why does XP encourage metaphor in software design?",
    "options": [
      { "id": "option_1", "text": "To replace documentation entirely", "isCorrect": false },
      { "id": "option_2", "text": "To limit changes to project requirements", "isCorrect": false },
      { "id": "option_3", "text": "To provide a common understanding of system architecture", "isCorrect": true },
      { "id": "option_4", "text": "To enforce strict coding standards", "isCorrect": false }
    ],
    "hint": "Metaphors help teams communicate complex designs effectively.",
    "answerDescription": "XP promotes metaphors to create a shared understanding of system architecture, making design concepts more accessible."
  },
  {
    "id": "agile_1058",
    "question": "What is an advantage of having a sustainable work pace in XP?",
    "options": [
      { "id": "option_1", "text": "It speeds up short-term delivery at the cost of burnout", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for automation", "isCorrect": false },
      { "id": "option_3", "text": "It maintains productivity while preventing exhaustion", "isCorrect": true },
      { "id": "option_4", "text": "It encourages working long hours to meet deadlines", "isCorrect": false }
    ],
    "hint": "XP values long-term team well-being.",
    "answerDescription": "A sustainable work pace ensures consistent productivity without causing team burnout or fatigue."
  },
  {
    "id": "agile_1059",
    "question": "How does XP ensure that customer needs are met effectively?",
    "options": [
      { "id": "option_1", "text": "By locking in requirements at the start", "isCorrect": false },
      { "id": "option_2", "text": "By reducing customer interactions", "isCorrect": false },
      { "id": "option_3", "text": "By involving customers in planning and feedback", "isCorrect": true },
      { "id": "option_4", "text": "By minimizing iteration cycles", "isCorrect": false }
    ],
    "hint": "XP values customer collaboration throughout the project.",
    "answerDescription": "XP integrates customers in planning and review sessions to ensure the final product meets their expectations."
  },
  {
    "id": "agile_1060",
    "question": "Why does XP promote coding standards?",
    "options": [
      { "id": "option_1", "text": "To enforce rigid development processes", "isCorrect": false },
      { "id": "option_2", "text": "To discourage refactoring", "isCorrect": false },
      { "id": "option_3", "text": "To ensure consistency and readability in code", "isCorrect": true },
      { "id": "option_4", "text": "To restrict individual developer creativity", "isCorrect": false }
    ],
    "hint": "XP encourages clean and maintainable code.",
    "answerDescription": "XP promotes coding standards to enhance code clarity, maintainability, and teamwork efficiency."
  },
  {
    "id": "agile_1061",
    "question": "What is a key characteristic of an XP team?",
    "options": [
      { "id": "option_1", "text": "A strict hierarchy of decision-making", "isCorrect": false },
      { "id": "option_2", "text": "A focus on isolated development efforts", "isCorrect": false },
      { "id": "option_3", "text": "A collaborative and adaptive mindset", "isCorrect": true },
      { "id": "option_4", "text": "A resistance to customer feedback", "isCorrect": false }
    ],
    "hint": "XP teams thrive on teamwork and adaptability.",
    "answerDescription": "XP fosters a collaborative culture where team members work together, adapt quickly, and prioritize continuous improvement."
  },  {
    "id": "agile_1062",
    "question": "Which XP practice helps reduce defects before they reach production?",
    "options": [
      { "id": "option_1", "text": "Late-stage testing", "isCorrect": false },
      { "id": "option_2", "text": "Waterfall-style development", "isCorrect": false },
      { "id": "option_3", "text": "Code reviews only after release", "isCorrect": false },
      { "id": "option_4", "text": "Test-driven development (TDD)", "isCorrect": true }
    ],
    "hint": "XP emphasizes writing tests before writing code.",
    "answerDescription": "TDD helps identify defects early by requiring tests before implementing code, reducing issues in production."
  },
  {
    "id": "agile_1063",
    "question": "Why does XP emphasize continuous feedback?",
    "options": [
      { "id": "option_1", "text": "To avoid making adjustments during development", "isCorrect": false },
      { "id": "option_2", "text": "To replace the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To ensure requirements remain fixed", "isCorrect": false },
      { "id": "option_4", "text": "To improve adaptability and quality", "isCorrect": true }
    ],
    "hint": "Feedback loops are crucial for XPâ€™s iterative approach.",
    "answerDescription": "XP relies on continuous feedback from customers and team members to quickly adapt and improve product quality."
  },
  {
    "id": "agile_1064",
    "question": "What does XP encourage to keep the codebase maintainable?",
    "options": [
      { "id": "option_1", "text": "Writing large functions with complex logic", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding refactoring", "isCorrect": false },
      { "id": "option_3", "text": "Keeping changes limited to individual developers", "isCorrect": false },
      { "id": "option_4", "text": "Refactoring regularly", "isCorrect": true }
    ],
    "hint": "XP promotes improving code structure without changing functionality.",
    "answerDescription": "XP advocates for continuous refactoring to simplify and enhance the maintainability of the codebase."
  },
  {
    "id": "agile_1065",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By resisting changes to avoid delays", "isCorrect": false },
      { "id": "option_2", "text": "By requiring upfront planning with no revisions", "isCorrect": false },
      { "id": "option_3", "text": "By setting requirements in stone", "isCorrect": false },
      { "id": "option_4", "text": "By embracing change through short iterations", "isCorrect": true }
    ],
    "hint": "XP thrives on adapting to customer needs.",
    "answerDescription": "XPâ€™s iterative development cycle allows teams to incorporate changing requirements quickly and efficiently."
  },
  {
    "id": "agile_1066",
    "question": "Which XP practice helps minimize technical debt?",
    "options": [
      { "id": "option_1", "text": "Delaying bug fixes until major releases", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding code reviews", "isCorrect": false },
      { "id": "option_3", "text": "Deferring refactoring efforts", "isCorrect": false },
      { "id": "option_4", "text": "Continuous integration and refactoring", "isCorrect": true }
    ],
    "hint": "Frequent integration prevents the buildup of unresolved issues.",
    "answerDescription": "XP emphasizes continuous integration and refactoring to keep the codebase clean and reduce technical debt."
  },
  {
    "id": "agile_1067",
    "question": "What role does customer involvement play in XP?",
    "options": [
      { "id": "option_1", "text": "Providing input only at the start of a project", "isCorrect": false },
      { "id": "option_2", "text": "Signing off on final features without participation", "isCorrect": false },
      { "id": "option_3", "text": "Reviewing only major milestones", "isCorrect": false },
      { "id": "option_4", "text": "Actively collaborating throughout development", "isCorrect": true }
    ],
    "hint": "XP encourages constant communication with customers.",
    "answerDescription": "Customers work closely with the development team in XP to ensure the product aligns with their needs."
  },
  {
    "id": "agile_1068",
    "question": "How does XP ensure high software quality?",
    "options": [
      { "id": "option_1", "text": "By skipping tests to save time", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the frequency of code reviews", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding pair programming", "isCorrect": false },
      { "id": "option_4", "text": "By using automated testing and pair programming", "isCorrect": true }
    ],
    "hint": "XP combines collaborative coding and automated validation.",
    "answerDescription": "XP maintains software quality by implementing automated tests and encouraging pair programming for better code review."
  },
  {
    "id": "agile_1069",
    "question": "Why does XP encourage a simple design approach?",
    "options": [
      { "id": "option_1", "text": "To speed up initial development at the cost of maintainability", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on short-term gains", "isCorrect": false },
      { "id": "option_3", "text": "To create overly generic architectures", "isCorrect": false },
      { "id": "option_4", "text": "To keep code easy to understand and modify", "isCorrect": true }
    ],
    "hint": "XP values clarity and adaptability in design.",
    "answerDescription": "A simple design ensures that the system remains flexible, easy to understand, and maintainable over time."
  },
  {
    "id": "agile_1070",
    "question": "What is the advantage of frequent releases in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces customer engagement", "isCorrect": false },
      { "id": "option_2", "text": "It makes it harder to implement feedback", "isCorrect": false },
      { "id": "option_3", "text": "It leads to longer development cycles", "isCorrect": false },
      { "id": "option_4", "text": "It ensures continuous delivery of value", "isCorrect": true }
    ],
    "hint": "Frequent releases improve responsiveness to feedback.",
    "answerDescription": "XP promotes frequent releases to deliver value quickly and adapt to customer needs."
  },
  {
    "id": "agile_1071",
    "question": "Why does XP value face-to-face communication?",
    "options": [
      { "id": "option_1", "text": "To replace all documentation", "isCorrect": false },
      { "id": "option_2", "text": "To avoid using digital collaboration tools", "isCorrect": false },
      { "id": "option_3", "text": "To limit communication only to the development team", "isCorrect": false },
      { "id": "option_4", "text": "To improve clarity and reduce misunderstandings", "isCorrect": true }
    ],
    "hint": "Direct interaction prevents misinterpretations.",
    "answerDescription": "XP prioritizes face-to-face communication to enhance clarity and collaboration within teams."
  },  {
    "id": "agile_1072",
    "question": "What is a core benefit of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for automated testing", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for documentation", "isCorrect": false },
      { "id": "option_3", "text": "It speeds up individual coding efforts", "isCorrect": false },
      { "id": "option_4", "text": "It enhances code quality and knowledge sharing", "isCorrect": true }
    ],
    "hint": "Pair programming helps prevent errors and promotes shared understanding.",
    "answerDescription": "Pair programming improves code quality by having two developers work together, reducing defects and increasing knowledge sharing."
  },
  {
    "id": "agile_1073",
    "question": "How does XP promote sustainable development?",
    "options": [
      { "id": "option_1", "text": "By enforcing long work hours", "isCorrect": false },
      { "id": "option_2", "text": "By minimizing customer collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging frequent communication", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining a consistent work pace", "isCorrect": true }
    ],
    "hint": "XP focuses on a steady and manageable workflow.",
    "answerDescription": "XP encourages teams to maintain a sustainable pace to prevent burnout and improve long-term productivity."
  },
  {
    "id": "agile_1074",
    "question": "Why does XP prioritize simplicity in design?",
    "options": [
      { "id": "option_1", "text": "To speed up initial development with shortcuts", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on short-term solutions", "isCorrect": false },
      { "id": "option_3", "text": "To increase code complexity for scalability", "isCorrect": false },
      { "id": "option_4", "text": "To make code easier to maintain and modify", "isCorrect": true }
    ],
    "hint": "XP values maintainability and adaptability.",
    "answerDescription": "Keeping designs simple ensures that code remains adaptable, easy to understand, and less error-prone."
  },
  {
    "id": "agile_1075",
    "question": "What is the purpose of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "To delay merging code until the final release", "isCorrect": false },
      { "id": "option_2", "text": "To allow developers to work in isolation", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for automated testing", "isCorrect": false },
      { "id": "option_4", "text": "To detect integration issues early", "isCorrect": true }
    ],
    "hint": "Frequent integration helps catch problems before they escalate.",
    "answerDescription": "Continuous integration ensures that changes are merged frequently, reducing integration problems and improving software stability."
  },
  {
    "id": "agile_1076",
    "question": "How does XP encourage customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By minimizing customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing documentation over interaction", "isCorrect": false },
      { "id": "option_3", "text": "By focusing solely on fixed requirements", "isCorrect": false },
      { "id": "option_4", "text": "By involving customers throughout development", "isCorrect": true }
    ],
    "hint": "XP values continuous feedback from stakeholders.",
    "answerDescription": "Frequent customer collaboration ensures that the product meets evolving needs and expectations."
  },
  {
    "id": "agile_1077",
    "question": "Which XP practice helps reduce project risks?",
    "options": [
      { "id": "option_1", "text": "Working in large, infrequent iterations", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing code reviews", "isCorrect": false },
      { "id": "option_3", "text": "Delaying testing until deployment", "isCorrect": false },
      { "id": "option_4", "text": "Using small, frequent releases", "isCorrect": true }
    ],
    "hint": "Frequent delivery provides early feedback and reduces uncertainty.",
    "answerDescription": "Releasing in small increments reduces risk by allowing quick adjustments based on feedback."
  },
  {
    "id": "agile_1078",
    "question": "What role do user stories play in XP?",
    "options": [
      { "id": "option_1", "text": "They replace all technical documentation", "isCorrect": false },
      { "id": "option_2", "text": "They define rigid, unchangeable requirements", "isCorrect": false },
      { "id": "option_3", "text": "They are only used at the start of the project", "isCorrect": false },
      { "id": "option_4", "text": "They guide development based on customer needs", "isCorrect": true }
    ],
    "hint": "User stories describe desired functionality from the user's perspective.",
    "answerDescription": "XP uses user stories to ensure that development aligns with real user requirements and priorities."
  },
  {
    "id": "agile_1079",
    "question": "How does XP ensure rapid feedback loops?",
    "options": [
      { "id": "option_1", "text": "By avoiding customer interaction", "isCorrect": false },
      { "id": "option_2", "text": "By using long development cycles", "isCorrect": false },
      { "id": "option_3", "text": "By deferring testing until later stages", "isCorrect": false },
      { "id": "option_4", "text": "By incorporating continuous testing and reviews", "isCorrect": true }
    ],
    "hint": "XP encourages immediate validation and feedback.",
    "answerDescription": "Continuous testing and feedback help teams quickly identify and resolve issues, ensuring a high-quality product."
  },
  {
    "id": "agile_1080",
    "question": "Why is collective code ownership important in XP?",
    "options": [
      { "id": "option_1", "text": "It allows only senior developers to modify the code", "isCorrect": false },
      { "id": "option_2", "text": "It limits access to certain team members", "isCorrect": false },
      { "id": "option_3", "text": "It prevents code modifications by multiple developers", "isCorrect": false },
      { "id": "option_4", "text": "It ensures that any developer can improve the code", "isCorrect": true }
    ],
    "hint": "XP promotes shared responsibility for code quality.",
    "answerDescription": "With collective code ownership, any developer can make improvements, increasing team collaboration and code quality."
  },
  {
    "id": "agile_1081",
    "question": "How does XP handle evolving requirements?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding changes to maintain stability", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging feedback after development starts", "isCorrect": false },
      { "id": "option_4", "text": "By adapting through frequent iterations", "isCorrect": true }
    ],
    "hint": "XP embraces flexibility and customer collaboration.",
    "answerDescription": "XP uses short iterations to incorporate changes quickly, ensuring that the software meets evolving needs."
  },
  {
    "id": "agile_1082",
    "question": "Which XP practice ensures that code remains clean and maintainable?",
    "options": [
      { "id": "option_1", "text": "Refactoring", "isCorrect": true },
      { "id": "option_2", "text": "Delaying testing", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding code reviews", "isCorrect": false },
      { "id": "option_4", "text": "Writing code only once", "isCorrect": false }
    ],
    "hint": "This practice involves continuously improving the code structure.",
    "answerDescription": "Refactoring improves code readability and maintainability without changing functionality."
  },
  {
    "id": "agile_1083",
    "question": "What is the primary goal of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To ensure code correctness before implementation", "isCorrect": true },
      { "id": "option_2", "text": "To replace manual testing", "isCorrect": false },
      { "id": "option_3", "text": "To delay testing until later stages", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for collaboration", "isCorrect": false }
    ],
    "hint": "TDD focuses on writing tests before writing the actual code.",
    "answerDescription": "By writing tests first, developers ensure that code meets requirements and is less prone to defects."
  },
  {
    "id": "agile_1084",
    "question": "Why does XP encourage frequent releases?",
    "options": [
      { "id": "option_1", "text": "To gather continuous feedback from users", "isCorrect": true },
      { "id": "option_2", "text": "To increase the amount of documentation", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "To avoid working on customer priorities", "isCorrect": false }
    ],
    "hint": "Short cycles provide quick feedback and adaptability.",
    "answerDescription": "Frequent releases help teams adapt to changing customer needs and improve product quality."
  },
  {
    "id": "agile_1085",
    "question": "How does XP ensure that software meets user expectations?",
    "options": [
      { "id": "option_1", "text": "By continuous customer involvement", "isCorrect": true },
      { "id": "option_2", "text": "By relying solely on developer intuition", "isCorrect": false },
      { "id": "option_3", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing communication", "isCorrect": false }
    ],
    "hint": "XP values frequent interaction with customers.",
    "answerDescription": "Involving customers throughout the process ensures that the final product aligns with their needs."
  },
  {
    "id": "agile_1086",
    "question": "What is a key characteristic of XPâ€™s coding standards?",
    "options": [
      { "id": "option_1", "text": "Consistent and simple code", "isCorrect": true },
      { "id": "option_2", "text": "Highly complex code for security", "isCorrect": false },
      { "id": "option_3", "text": "No restrictions on coding style", "isCorrect": false },
      { "id": "option_4", "text": "Allowing each developer to use a unique format", "isCorrect": false }
    ],
    "hint": "XP promotes maintainability through standardization.",
    "answerDescription": "Consistent, simple code is easier to understand, modify, and debug."
  },
  {
    "id": "agile_1087",
    "question": "How does XP promote team collaboration?",
    "options": [
      { "id": "option_1", "text": "Through pair programming", "isCorrect": true },
      { "id": "option_2", "text": "By isolating developers on tasks", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing communication", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging knowledge sharing", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together.",
    "answerDescription": "Pair programming enhances collaboration and ensures higher-quality code."
  },
  {
    "id": "agile_1088",
    "question": "Why is continuous integration important in XP?",
    "options": [
      { "id": "option_1", "text": "It helps detect integration issues early", "isCorrect": true },
      { "id": "option_2", "text": "It delays testing until the end", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for automated tests", "isCorrect": false },
      { "id": "option_4", "text": "It allows developers to work in isolation", "isCorrect": false }
    ],
    "hint": "Frequent integration ensures smooth collaboration.",
    "answerDescription": "Continuous integration prevents integration conflicts and ensures stable, working software."
  },
  {
    "id": "agile_1089",
    "question": "What is a key principle of XPâ€™s simple design?",
    "options": [
      { "id": "option_1", "text": "Avoid unnecessary complexity", "isCorrect": true },
      { "id": "option_2", "text": "Ensure code is difficult to change", "isCorrect": false },
      { "id": "option_3", "text": "Ignore customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Add extra features in advance", "isCorrect": false }
    ],
    "hint": "XP values code that is easy to maintain and adapt.",
    "answerDescription": "Keeping designs simple reduces technical debt and makes future changes easier."
  },
  {
    "id": "agile_1090",
    "question": "How does XP support adaptability to change?",
    "options": [
      { "id": "option_1", "text": "By using short iterations", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "By locking in requirements early", "isCorrect": false },
      { "id": "option_4", "text": "By reducing testing efforts", "isCorrect": false }
    ],
    "hint": "Frequent feedback cycles allow adjustments.",
    "answerDescription": "Short iterations allow teams to quickly adapt to new requirements and market conditions."
  },
  {
    "id": "agile_1091",
    "question": "What is the purpose of metaphor in XP?",
    "options": [
      { "id": "option_1", "text": "To create a shared understanding of the system", "isCorrect": true },
      { "id": "option_2", "text": "To add unnecessary complexity", "isCorrect": false },
      { "id": "option_3", "text": "To replace all documentation", "isCorrect": false },
      { "id": "option_4", "text": "To restrict design flexibility", "isCorrect": false }
    ],
    "hint": "XP uses simple explanations to help teams communicate effectively.",
    "answerDescription": "Metaphors help developers and stakeholders understand the system by using familiar comparisons."
  },  {
    "id": "agile_1092",
    "question": "What role does continuous feedback play in XP?",
    "options": [
      { "id": "option_1", "text": "It slows down development", "isCorrect": false },
      { "id": "option_2", "text": "It helps teams improve and adapt", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "It discourages customer involvement", "isCorrect": false }
    ],
    "hint": "XP relies on quick responses to issues and improvements.",
    "answerDescription": "Continuous feedback helps teams make informed decisions and enhance product quality."
  },
  {
    "id": "agile_1093",
    "question": "How does XP address rapidly changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By avoiding changes to requirements", "isCorrect": false },
      { "id": "option_2", "text": "By using short development cycles", "isCorrect": true },
      { "id": "option_3", "text": "By documenting all changes extensively", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing rigid planning", "isCorrect": false }
    ],
    "hint": "XP relies on frequent releases to accommodate changes.",
    "answerDescription": "Short cycles allow teams to adapt to new requirements without major disruptions."
  },
  {
    "id": "agile_1094",
    "question": "Why is collective code ownership encouraged in XP?",
    "options": [
      { "id": "option_1", "text": "To limit access to code", "isCorrect": false },
      { "id": "option_2", "text": "To allow any developer to improve the code", "isCorrect": true },
      { "id": "option_3", "text": "To ensure only senior developers make changes", "isCorrect": false },
      { "id": "option_4", "text": "To reduce team collaboration", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility over code.",
    "answerDescription": "Collective ownership allows developers to fix, enhance, and refactor code as needed."
  },
  {
    "id": "agile_1095",
    "question": "What is the role of simplicity in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "To make code easier to maintain", "isCorrect": true },
      { "id": "option_3", "text": "To focus only on short-term solutions", "isCorrect": false },
      { "id": "option_4", "text": "To discourage refactoring", "isCorrect": false }
    ],
    "hint": "XP emphasizes maintaining clarity in code.",
    "answerDescription": "Keeping designs and code simple reduces complexity and increases maintainability."
  },
  {
    "id": "agile_1096",
    "question": "What is one of the key benefits of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "It replaces the need for code reviews", "isCorrect": false },
      { "id": "option_2", "text": "It ensures that code meets requirements from the start", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for documentation", "isCorrect": false },
      { "id": "option_4", "text": "It slows down development speed", "isCorrect": false }
    ],
    "hint": "TDD ensures code correctness before implementation.",
    "answerDescription": "Writing tests first helps developers create code that meets specifications and reduces defects."
  },
  {
    "id": "agile_1097",
    "question": "Why does XP emphasize face-to-face communication?",
    "options": [
      { "id": "option_1", "text": "To reduce reliance on documentation", "isCorrect": false },
      { "id": "option_2", "text": "To improve collaboration and understanding", "isCorrect": true },
      { "id": "option_3", "text": "To avoid the use of online tools", "isCorrect": false },
      { "id": "option_4", "text": "To minimize team interactions", "isCorrect": false }
    ],
    "hint": "Direct communication helps resolve issues faster.",
    "answerDescription": "Face-to-face discussions ensure clear communication, quick decision-making, and better collaboration."
  },
  {
    "id": "agile_1098",
    "question": "What is the purpose of the XP practice of frequent integration?",
    "options": [
      { "id": "option_1", "text": "To allow developers to work in isolation", "isCorrect": false },
      { "id": "option_2", "text": "To detect and fix integration issues early", "isCorrect": true },
      { "id": "option_3", "text": "To delay testing until the final stages", "isCorrect": false },
      { "id": "option_4", "text": "To increase project complexity", "isCorrect": false }
    ],
    "hint": "Integrating frequently reduces potential conflicts.",
    "answerDescription": "Frequent integration helps teams identify and fix issues before they become major problems."
  },
  {
    "id": "agile_1099",
    "question": "Why does XP emphasize working at a sustainable pace?",
    "options": [
      { "id": "option_1", "text": "To complete projects as fast as possible", "isCorrect": false },
      { "id": "option_2", "text": "To maintain high productivity over time", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for planning", "isCorrect": false },
      { "id": "option_4", "text": "To discourage time management", "isCorrect": false }
    ],
    "hint": "A steady work rhythm prevents burnout.",
    "answerDescription": "Sustainable development ensures consistent productivity without overworking the team."
  },
  {
    "id": "agile_1100",
    "question": "What is the primary advantage of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces collaboration among developers", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality through shared knowledge", "isCorrect": true },
      { "id": "option_3", "text": "It increases the need for individual work", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for automated testing", "isCorrect": false }
    ],
    "hint": "Two developers work together to enhance code quality.",
    "answerDescription": "Pair programming helps developers catch errors early and improve overall code quality."
  },
  {
    "id": "agile_1101",
    "question": "What is the importance of an on-site customer in XP?",
    "options": [
      { "id": "option_1", "text": "To provide extensive documentation", "isCorrect": false },
      { "id": "option_2", "text": "To give immediate feedback on development", "isCorrect": true },
      { "id": "option_3", "text": "To enforce rigid requirements", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for developer input", "isCorrect": false }
    ],
    "hint": "Having a customer available improves responsiveness.",
    "answerDescription": "An on-site customer ensures that development aligns with business needs and adapts quickly to changes."
  },
  {
    "id": "agile_1102",
    "question": "How does XP handle changing requirements during development?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements after planning", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging late-stage changes", "isCorrect": false },
      { "id": "option_3", "text": "By embracing flexibility and continuous feedback", "isCorrect": true },
      { "id": "option_4", "text": "By requiring extensive documentation for changes", "isCorrect": false }
    ],
    "hint": "XP welcomes change to improve the final product.",
    "answerDescription": "XP values adaptability and encourages teams to respond effectively to evolving requirements."
  },
  {
    "id": "agile_1103",
    "question": "What is the key purpose of automated testing in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for developer testing", "isCorrect": false },
      { "id": "option_2", "text": "To delay defect detection until later stages", "isCorrect": false },
      { "id": "option_3", "text": "To provide immediate feedback on code quality", "isCorrect": true },
      { "id": "option_4", "text": "To replace manual code reviews", "isCorrect": false }
    ],
    "hint": "Tests help ensure code quality throughout development.",
    "answerDescription": "Automated tests in XP enable quick validation of code changes and prevent defects from accumulating."
  },
  {
    "id": "agile_1104",
    "question": "Why does XP promote small and frequent releases?",
    "options": [
      { "id": "option_1", "text": "To reduce the frequency of customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To minimize team communication", "isCorrect": false },
      { "id": "option_3", "text": "To allow rapid adaptation to customer needs", "isCorrect": true },
      { "id": "option_4", "text": "To avoid writing detailed requirements", "isCorrect": false }
    ],
    "hint": "XP emphasizes iterative progress and fast feedback loops.",
    "answerDescription": "Frequent releases help teams quickly incorporate customer feedback and refine their product."
  },
  {
    "id": "agile_1105",
    "question": "What is one of the main benefits of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "It allows developers to work in isolation", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for automated testing", "isCorrect": false },
      { "id": "option_3", "text": "It helps detect and fix integration issues early", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for version control", "isCorrect": false }
    ],
    "hint": "Frequent code integration prevents major conflicts later.",
    "answerDescription": "Continuous integration ensures that code remains functional by detecting issues early and promoting collaboration."
  },
  {
    "id": "agile_1106",
    "question": "Why does XP emphasize customer collaboration?",
    "options": [
      { "id": "option_1", "text": "To ensure rigid control over project scope", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the development team's decision-making power", "isCorrect": false },
      { "id": "option_3", "text": "To align development with business needs and expectations", "isCorrect": true },
      { "id": "option_4", "text": "To avoid making frequent adjustments to requirements", "isCorrect": false }
    ],
    "hint": "Customer involvement ensures the product meets real-world needs.",
    "answerDescription": "Collaboration with customers helps prioritize features and ensures the software delivers value."
  },
  {
    "id": "agile_1107",
    "question": "What is the advantage of having an XP team work in a co-located environment?",
    "options": [
      { "id": "option_1", "text": "It limits access to remote collaboration tools", "isCorrect": false },
      { "id": "option_2", "text": "It discourages asynchronous communication", "isCorrect": false },
      { "id": "option_3", "text": "It improves direct communication and teamwork", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the need for daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "XP encourages face-to-face interactions for efficiency.",
    "answerDescription": "Co-located teams collaborate more effectively, reducing delays in communication and decision-making."
  },
  {
    "id": "agile_1108",
    "question": "How does XP encourage high-quality code?",
    "options": [
      { "id": "option_1", "text": "By discouraging frequent code reviews", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing fast delivery over quality", "isCorrect": false },
      { "id": "option_3", "text": "By emphasizing continuous refactoring and testing", "isCorrect": true },
      { "id": "option_4", "text": "By allowing developers to write code independently", "isCorrect": false }
    ],
    "hint": "XP values code improvement and rigorous testing.",
    "answerDescription": "Continuous refactoring and testing ensure that XP teams maintain a clean and efficient codebase."
  },
  {
    "id": "agile_1109",
    "question": "What is the primary reason XP teams use a sustainable pace?",
    "options": [
      { "id": "option_1", "text": "To complete development as quickly as possible", "isCorrect": false },
      { "id": "option_2", "text": "To minimize customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To maintain steady productivity without burnout", "isCorrect": true },
      { "id": "option_4", "text": "To delay releases and gather more requirements", "isCorrect": false }
    ],
    "hint": "XP values consistent performance over long periods.",
    "answerDescription": "A sustainable pace helps developers remain productive without sacrificing work-life balance."
  },
  {
    "id": "agile_1110",
    "question": "Why does XP advocate for simple design?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for refactoring", "isCorrect": false },
      { "id": "option_2", "text": "To make code difficult to modify", "isCorrect": false },
      { "id": "option_3", "text": "To keep the system easy to understand and change", "isCorrect": true },
      { "id": "option_4", "text": "To prioritize speed over maintainability", "isCorrect": false }
    ],
    "hint": "XP values clarity and ease of maintenance.",
    "answerDescription": "Simple design reduces technical debt, making code more flexible and adaptable."
  },
  {
    "id": "agile_1111",
    "question": "How does XP improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict role definitions", "isCorrect": false },
      { "id": "option_2", "text": "By limiting communication to formal meetings", "isCorrect": false },
      { "id": "option_3", "text": "By fostering open communication and shared ownership", "isCorrect": true },
      { "id": "option_4", "text": "By reducing interaction among team members", "isCorrect": false }
    ],
    "hint": "XP teams work closely together to ensure efficiency.",
    "answerDescription": "XP promotes shared responsibility and transparency, enabling teams to work effectively as a unit."
  },
  {
    "id": "agile_1112",
    "question": "Which practice in XP ensures continuous learning and knowledge sharing among developers?",
    "options": [
      { "id": "option_1", "text": "Solo programming", "isCorrect": false },
      { "id": "option_2", "text": "Code silos", "isCorrect": false },
      { "id": "option_3", "text": "Individual ownership of tasks", "isCorrect": false },
      { "id": "option_4", "text": "Pair programming", "isCorrect": true }
    ],
    "hint": "Two developers work together on the same code.",
    "answerDescription": "Pair programming in XP helps improve code quality, reduces defects, and promotes knowledge sharing within the team."
  },
  {
    "id": "agile_1113",
    "question": "How does XP ensure that software design remains simple and maintainable?",
    "options": [
      { "id": "option_1", "text": "By avoiding refactoring", "isCorrect": false },
      { "id": "option_2", "text": "By creating extensive documentation", "isCorrect": false },
      { "id": "option_3", "text": "By focusing on feature-heavy design", "isCorrect": false },
      { "id": "option_4", "text": "By continuous refactoring", "isCorrect": true }
    ],
    "hint": "XP encourages regularly improving existing code.",
    "answerDescription": "Continuous refactoring prevents technical debt and ensures that code remains clean and adaptable to future changes."
  },
  {
    "id": "agile_1114",
    "question": "Why is test-driven development (TDD) a core practice in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for debugging", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "It slows down development intentionally", "isCorrect": false },
      { "id": "option_4", "text": "It ensures code is tested before implementation", "isCorrect": true }
    ],
    "hint": "XP encourages writing tests before writing code.",
    "answerDescription": "TDD ensures that all code is tested from the start, leading to fewer defects and a more reliable software system."
  },
  {
    "id": "agile_1115",
    "question": "What role does collective code ownership play in XP?",
    "options": [
      { "id": "option_1", "text": "It limits who can modify the codebase", "isCorrect": false },
      { "id": "option_2", "text": "It assigns different parts of code to specific individuals", "isCorrect": false },
      { "id": "option_3", "text": "It prevents refactoring by multiple developers", "isCorrect": false },
      { "id": "option_4", "text": "It allows anyone in the team to modify any part of the code", "isCorrect": true }
    ],
    "hint": "XP promotes shared responsibility over the codebase.",
    "answerDescription": "With collective code ownership, any developer can improve any part of the code, leading to higher flexibility and fewer bottlenecks."
  },
  {
    "id": "agile_1116",
    "question": "How does XP promote a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "By encouraging overtime work", "isCorrect": false },
      { "id": "option_2", "text": "By setting strict deadlines without flexibility", "isCorrect": false },
      { "id": "option_3", "text": "By pushing teams to complete work faster", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring a balanced workload and avoiding burnout", "isCorrect": true }
    ],
    "hint": "XP values long-term productivity over short-term gains.",
    "answerDescription": "A sustainable pace in XP helps maintain steady productivity and reduces the risk of burnout among developers."
  },
  {
    "id": "agile_1117",
    "question": "What is the main advantage of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "It allows developers to work independently for longer periods", "isCorrect": false },
      { "id": "option_2", "text": "It minimizes customer involvement in early stages", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "It enables quick feedback and incremental improvements", "isCorrect": true }
    ],
    "hint": "Frequent iterations help refine the product.",
    "answerDescription": "By releasing software in small increments, XP teams can gather user feedback and adjust features based on real-world needs."
  },
  {
    "id": "agile_1118",
    "question": "Why does XP emphasize customer involvement throughout the project?",
    "options": [
      { "id": "option_1", "text": "To ensure strict adherence to the initial plan", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To avoid making changes during development", "isCorrect": false },
      { "id": "option_4", "text": "To align development with real business needs", "isCorrect": true }
    ],
    "hint": "Continuous feedback helps deliver a product that meets expectations.",
    "answerDescription": "Customer collaboration in XP ensures that the software aligns with user needs and prevents costly changes later."
  },
  {
    "id": "agile_1119",
    "question": "What is the main purpose of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "To delay testing until the final phase", "isCorrect": false },
      { "id": "option_2", "text": "To assign integration tasks to a dedicated team", "isCorrect": false },
      { "id": "option_3", "text": "To minimize code changes during development", "isCorrect": false },
      { "id": "option_4", "text": "To detect and resolve integration issues early", "isCorrect": true }
    ],
    "hint": "Frequent integration helps maintain a working codebase.",
    "answerDescription": "Continuous integration allows teams to detect errors early, reducing costly fixes and improving development efficiency."
  },
  {
    "id": "agile_1120",
    "question": "Which XP practice helps ensure that code is always ready to deploy?",
    "options": [
      { "id": "option_1", "text": "Extensive manual testing before release", "isCorrect": false },
      { "id": "option_2", "text": "Delaying integration until the last phase", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding frequent code changes", "isCorrect": false },
      { "id": "option_4", "text": "Automated testing with continuous integration", "isCorrect": true }
    ],
    "hint": "XP relies on automation to ensure reliability.",
    "answerDescription": "By using automated tests and continuous integration, XP ensures that the software is always in a deployable state."
  },
  {
    "id": "agile_1121",
    "question": "What is a key benefit of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "It slows down development to reduce errors", "isCorrect": false },
      { "id": "option_2", "text": "It reduces collaboration among developers", "isCorrect": false },
      { "id": "option_3", "text": "It limits the sharing of knowledge", "isCorrect": false },
      { "id": "option_4", "text": "It improves code quality and team collaboration", "isCorrect": true }
    ],
    "hint": "Two developers working together leads to better code.",
    "answerDescription": "Pair programming enhances teamwork, improves code quality, and helps distribute knowledge across the team."
  },  {
    "id": "agile_1122",
    "question": "What is a key benefit of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "It ensures code is tested before implementation", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_3", "text": "It allows testing to be skipped in later stages", "isCorrect": false },
      { "id": "option_4", "text": "It focuses only on functional testing", "isCorrect": false }
    ],
    "hint": "TDD requires writing tests before writing the actual code.",
    "answerDescription": "TDD ensures that all code is written with tests first, leading to fewer defects and higher reliability."
  },
  {
    "id": "agile_1123",
    "question": "Why is continuous integration an essential practice in XP?",
    "options": [
      { "id": "option_1", "text": "It helps detect integration issues early", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for automated testing", "isCorrect": false },
      { "id": "option_3", "text": "It delays bug detection until later stages", "isCorrect": false },
      { "id": "option_4", "text": "It requires separate teams for integration tasks", "isCorrect": false }
    ],
    "hint": "Frequent integration reduces last-minute surprises.",
    "answerDescription": "By continuously integrating code, teams can catch and fix issues early, improving software stability."
  },
  {
    "id": "agile_1124",
    "question": "What is the purpose of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "To improve code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_2", "text": "To reduce collaboration among team members", "isCorrect": false },
      { "id": "option_3", "text": "To limit the number of developers working on code", "isCorrect": false },
      { "id": "option_4", "text": "To allow developers to work independently", "isCorrect": false }
    ],
    "hint": "Two developers work together on a single piece of code.",
    "answerDescription": "Pair programming increases collaboration, improves code quality, and helps distribute knowledge across the team."
  },
  {
    "id": "agile_1125",
    "question": "How does XP encourage a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "By ensuring a balanced workload and avoiding burnout", "isCorrect": true },
      { "id": "option_2", "text": "By encouraging extended overtime work", "isCorrect": false },
      { "id": "option_3", "text": "By pushing teams to complete work faster", "isCorrect": false },
      { "id": "option_4", "text": "By focusing on delivering everything at once", "isCorrect": false }
    ],
    "hint": "XP values steady productivity over short bursts.",
    "answerDescription": "A sustainable pace helps maintain productivity and ensures long-term success without developer burnout."
  },
  {
    "id": "agile_1126",
    "question": "Why is customer involvement crucial in XP?",
    "options": [
      { "id": "option_1", "text": "To align development with real business needs", "isCorrect": true },
      { "id": "option_2", "text": "To reduce the need for user testing", "isCorrect": false },
      { "id": "option_3", "text": "To avoid making changes to the project", "isCorrect": false },
      { "id": "option_4", "text": "To ensure strict adherence to initial requirements", "isCorrect": false }
    ],
    "hint": "XP values continuous feedback from end users.",
    "answerDescription": "Regular customer feedback helps teams build the right product and adapt quickly to changing needs."
  },
  {
    "id": "agile_1127",
    "question": "What does simple design in XP aim to achieve?",
    "options": [
      { "id": "option_1", "text": "It keeps the codebase easy to modify and understand", "isCorrect": true },
      { "id": "option_2", "text": "It prevents any changes to the code once written", "isCorrect": false },
      { "id": "option_3", "text": "It adds unnecessary complexity for scalability", "isCorrect": false },
      { "id": "option_4", "text": "It requires extensive documentation", "isCorrect": false }
    ],
    "hint": "XP encourages avoiding unnecessary complexity.",
    "answerDescription": "Simple design ensures that code remains maintainable, flexible, and easy to modify as requirements evolve."
  },
  {
    "id": "agile_1128",
    "question": "What is the main goal of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "To enable quick feedback and incremental improvements", "isCorrect": true },
      { "id": "option_2", "text": "To delay testing until the final stages", "isCorrect": false },
      { "id": "option_3", "text": "To minimize customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "To work on large feature sets before release", "isCorrect": false }
    ],
    "hint": "Frequent delivery helps refine the product based on feedback.",
    "answerDescription": "By releasing in small increments, XP allows teams to incorporate feedback early and refine the product efficiently."
  },
  {
    "id": "agile_1129",
    "question": "How does XP handle changing requirements effectively?",
    "options": [
      { "id": "option_1", "text": "By using continuous feedback and iterative development", "isCorrect": true },
      { "id": "option_2", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging frequent updates", "isCorrect": false }
    ],
    "hint": "XP embraces change as a natural part of development.",
    "answerDescription": "By continuously adapting through feedback and small iterations, XP teams ensure that the product remains relevant and valuable."
  },
  {
    "id": "agile_1130",
    "question": "Why is refactoring an important practice in XP?",
    "options": [
      { "id": "option_1", "text": "It helps keep the code clean and maintainable", "isCorrect": true },
      { "id": "option_2", "text": "It removes all existing tests", "isCorrect": false },
      { "id": "option_3", "text": "It increases complexity over time", "isCorrect": false },
      { "id": "option_4", "text": "It prevents changes to existing code", "isCorrect": false }
    ],
    "hint": "XP promotes continuously improving code quality.",
    "answerDescription": "Refactoring ensures that code remains efficient, readable, and easy to modify as the project evolves."
  },
  {
    "id": "agile_1131",
    "question": "What does collective code ownership mean in XP?",
    "options": [
      { "id": "option_1", "text": "All team members can modify any part of the code", "isCorrect": true },
      { "id": "option_2", "text": "Only specific developers can modify certain sections", "isCorrect": false },
      { "id": "option_3", "text": "Developers work on their own assigned code", "isCorrect": false },
      { "id": "option_4", "text": "Code changes require lengthy approval processes", "isCorrect": false }
    ],
    "hint": "XP encourages shared responsibility for the entire codebase.",
    "answerDescription": "Collective code ownership allows for greater flexibility and ensures that no single developer becomes a bottleneck in the development process."
  },
  {
    "id": "agile_1132",
    "question": "What is the primary purpose of user stories in XP?",
    "options": [
      { "id": "option_1", "text": "To document every detail of the project", "isCorrect": false },
      { "id": "option_2", "text": "To capture customer needs in a simple and flexible format", "isCorrect": true },
      { "id": "option_3", "text": "To replace automated testing in the development process", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict design constraints", "isCorrect": false }
    ],
    "hint": "User stories are meant to express requirements concisely.",
    "answerDescription": "User stories help teams understand customer needs and prioritize work in an iterative manner."
  },
  {
    "id": "agile_1133",
    "question": "Why does XP promote frequent releases?",
    "options": [
      { "id": "option_1", "text": "To deliver large batches of features at once", "isCorrect": false },
      { "id": "option_2", "text": "To allow quick feedback and course correction", "isCorrect": true },
      { "id": "option_3", "text": "To avoid customer involvement until the final stages", "isCorrect": false },
      { "id": "option_4", "text": "To reduce testing efforts", "isCorrect": false }
    ],
    "hint": "Frequent releases help teams adjust based on real user feedback.",
    "answerDescription": "By releasing software in small increments, XP teams can incorporate feedback early and improve product quality."
  },
  {
    "id": "agile_1134",
    "question": "How does XP ensure software quality?",
    "options": [
      { "id": "option_1", "text": "By minimizing testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "By using practices like TDD and pair programming", "isCorrect": true },
      { "id": "option_3", "text": "By focusing only on fast delivery", "isCorrect": false },
      { "id": "option_4", "text": "By limiting customer involvement", "isCorrect": false }
    ],
    "hint": "XP emphasizes continuous testing and collaboration.",
    "answerDescription": "XP improves software quality through test-driven development, continuous integration, and frequent feedback loops."
  },
  {
    "id": "agile_1135",
    "question": "What role does the on-site customer play in XP?",
    "options": [
      { "id": "option_1", "text": "To oversee team productivity", "isCorrect": false },
      { "id": "option_2", "text": "To provide real-time feedback on development progress", "isCorrect": true },
      { "id": "option_3", "text": "To approve every line of code before release", "isCorrect": false },
      { "id": "option_4", "text": "To perform testing without developer involvement", "isCorrect": false }
    ],
    "hint": "The on-site customer ensures the team stays aligned with business needs.",
    "answerDescription": "Having an on-site customer allows the development team to make quick adjustments based on immediate feedback."
  },
  {
    "id": "agile_1136",
    "question": "What is the key principle behind the XP practice of refactoring?",
    "options": [
      { "id": "option_1", "text": "To add new features quickly", "isCorrect": false },
      { "id": "option_2", "text": "To improve code maintainability and simplicity", "isCorrect": true },
      { "id": "option_3", "text": "To remove all existing documentation", "isCorrect": false },
      { "id": "option_4", "text": "To write code only once and never modify it", "isCorrect": false }
    ],
    "hint": "Refactoring helps make code cleaner without changing its behavior.",
    "answerDescription": "XP promotes refactoring to keep the codebase simple, readable, and adaptable to future changes."
  },
  {
    "id": "agile_1137",
    "question": "Why does XP emphasize continuous feedback?",
    "options": [
      { "id": "option_1", "text": "To increase project complexity", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the product evolves according to real user needs", "isCorrect": true },
      { "id": "option_3", "text": "To reduce testing efforts", "isCorrect": false },
      { "id": "option_4", "text": "To avoid making changes to requirements", "isCorrect": false }
    ],
    "hint": "XP values learning from real-world usage.",
    "answerDescription": "Frequent feedback allows teams to adapt quickly and continuously improve their product."
  },
  {
    "id": "agile_1138",
    "question": "How does XP handle code ownership?",
    "options": [
      { "id": "option_1", "text": "Only senior developers modify code", "isCorrect": false },
      { "id": "option_2", "text": "All developers share responsibility for the codebase", "isCorrect": true },
      { "id": "option_3", "text": "Each developer works only on their assigned modules", "isCorrect": false },
      { "id": "option_4", "text": "Code ownership is transferred periodically", "isCorrect": false }
    ],
    "hint": "XP encourages collective responsibility for the entire codebase.",
    "answerDescription": "By sharing code ownership, XP ensures flexibility, better collaboration, and higher code quality."
  },
  {
    "id": "agile_1139",
    "question": "Why does XP promote a sustainable pace for development teams?",
    "options": [
      { "id": "option_1", "text": "To reduce overall productivity", "isCorrect": false },
      { "id": "option_2", "text": "To avoid burnout and maintain long-term efficiency", "isCorrect": true },
      { "id": "option_3", "text": "To increase overtime hours", "isCorrect": false },
      { "id": "option_4", "text": "To accelerate feature delivery without considering team well-being", "isCorrect": false }
    ],
    "hint": "XP prioritizes steady productivity over short-term bursts.",
    "answerDescription": "A sustainable pace ensures teams remain productive and motivated without excessive overtime or burnout."
  },
  {
    "id": "agile_1140",
    "question": "What is the role of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To write tests after completing the code", "isCorrect": false },
      { "id": "option_2", "text": "To guide the design and ensure correctness of the code", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for refactoring", "isCorrect": false },
      { "id": "option_4", "text": "To focus only on performance testing", "isCorrect": false }
    ],
    "hint": "TDD encourages writing tests before implementing functionality.",
    "answerDescription": "TDD ensures that code is developed in a test-driven manner, leading to better design and fewer defects."
  },
  {
    "id": "agile_1141",
    "question": "Why does XP recommend using simple design principles?",
    "options": [
      { "id": "option_1", "text": "To create complex architectures from the start", "isCorrect": false },
      { "id": "option_2", "text": "To make the system easy to understand and modify", "isCorrect": true },
      { "id": "option_3", "text": "To avoid writing automated tests", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for customer feedback", "isCorrect": false }
    ],
    "hint": "XP encourages keeping things straightforward to allow easy modifications.",
    "answerDescription": "Simple design makes the system more adaptable, reducing technical debt and ensuring long-term maintainability."
  },

  {
    "id": "agile_1142",
    "question": "What is the main benefit of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "It doubles development time", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "It removes the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for documentation", "isCorrect": false }
    ],
    "hint": "Pair programming enhances collaboration and reduces errors.",
    "answerDescription": "Pair programming helps developers share knowledge and write cleaner, more maintainable code."
  },
  {
    "id": "agile_1143",
    "question": "Why does XP advocate for frequent communication within the team?",
    "options": [
      { "id": "option_1", "text": "To increase documentation effort", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment and quick issue resolution", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for automated testing", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the development speed", "isCorrect": false }
    ],
    "hint": "Clear and open communication helps XP teams work efficiently.",
    "answerDescription": "Frequent communication ensures that teams stay aligned and can quickly resolve misunderstandings."
  },
  {
    "id": "agile_1144",
    "question": "What is a key characteristic of an XP planning game?",
    "options": [
      { "id": "option_1", "text": "Developers make all planning decisions alone", "isCorrect": false },
      { "id": "option_2", "text": "It involves both customers and developers", "isCorrect": true },
      { "id": "option_3", "text": "Only the project manager decides priorities", "isCorrect": false },
      { "id": "option_4", "text": "It is done only once at the start of the project", "isCorrect": false }
    ],
    "hint": "XP emphasizes collaboration in planning.",
    "answerDescription": "The XP planning game allows customers and developers to work together to prioritize and estimate work."
  },
  {
    "id": "agile_1145",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements at the start", "isCorrect": false },
      { "id": "option_2", "text": "By embracing change and adapting frequently", "isCorrect": true },
      { "id": "option_3", "text": "By limiting customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By delaying changes until the next project phase", "isCorrect": false }
    ],
    "hint": "XP is designed to handle dynamic requirements.",
    "answerDescription": "XP practices such as frequent releases and constant feedback help teams respond effectively to changing requirements."
  },
  {
    "id": "agile_1146",
    "question": "What is the primary goal of collective code ownership in XP?",
    "options": [
      { "id": "option_1", "text": "To restrict access to certain parts of the codebase", "isCorrect": false },
      { "id": "option_2", "text": "To allow any developer to modify any part of the code", "isCorrect": true },
      { "id": "option_3", "text": "To ensure only senior developers review code", "isCorrect": false },
      { "id": "option_4", "text": "To prevent code changes without management approval", "isCorrect": false }
    ],
    "hint": "XP encourages flexibility in development.",
    "answerDescription": "Collective code ownership ensures that all developers can improve the code, leading to fewer bottlenecks and higher quality."
  },
  {
    "id": "agile_1147",
    "question": "Why does XP emphasize a test-first approach?",
    "options": [
      { "id": "option_1", "text": "To delay coding until tests are complete", "isCorrect": false },
      { "id": "option_2", "text": "To guide design and catch defects early", "isCorrect": true },
      { "id": "option_3", "text": "To replace the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "To limit refactoring opportunities", "isCorrect": false }
    ],
    "hint": "XP prioritizes testing as a core development practice.",
    "answerDescription": "Test-first development ensures that software meets requirements and helps prevent defects early in the process."
  },
  {
    "id": "agile_1148",
    "question": "How does XP ensure continuous improvement in development practices?",
    "options": [
      { "id": "option_1", "text": "By sticking to a fixed process", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging feedback and iterative learning", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding changes to established workflows", "isCorrect": false },
      { "id": "option_4", "text": "By limiting team discussions", "isCorrect": false }
    ],
    "hint": "XP teams refine their practices regularly.",
    "answerDescription": "XP promotes continuous improvement through feedback, retrospectives, and learning from real-world experiences."
  },
  {
    "id": "agile_1149",
    "question": "Why does XP recommend writing the simplest possible code?",
    "options": [
      { "id": "option_1", "text": "To avoid writing tests", "isCorrect": false },
      { "id": "option_2", "text": "To make the code easier to understand and maintain", "isCorrect": true },
      { "id": "option_3", "text": "To limit functionality", "isCorrect": false },
      { "id": "option_4", "text": "To reduce development speed", "isCorrect": false }
    ],
    "hint": "Simplicity is a core principle of XP.",
    "answerDescription": "XP prioritizes simple code because it is easier to modify, debug, and extend over time."
  },
  {
    "id": "agile_1150",
    "question": "How does XP encourage team collaboration?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks individually", "isCorrect": false },
      { "id": "option_2", "text": "By promoting open communication and shared responsibility", "isCorrect": true },
      { "id": "option_3", "text": "By limiting knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing rigid team roles", "isCorrect": false }
    ],
    "hint": "XP values teamwork and shared ownership.",
    "answerDescription": "XP fosters collaboration through techniques like pair programming, collective code ownership, and frequent discussions."
  },
  {
    "id": "agile_1151",
    "question": "What is the key advantage of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "It reduces testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "It helps catch integration issues early", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for refactoring", "isCorrect": false },
      { "id": "option_4", "text": "It postpones bug fixes until later stages", "isCorrect": false }
    ],
    "hint": "Continuous integration ensures code changes work smoothly together.",
    "answerDescription": "By integrating code frequently, XP teams can identify and fix issues early, reducing costly errors in later stages."
  },
  {
    "id": "agile_1152",
    "question": "Which XP practice focuses on improving the system's internal structure without changing its external behavior?",
    "options": [
      { "id": "option_1", "text": "Code branching", "isCorrect": false },
      { "id": "option_2", "text": "Refactoring", "isCorrect": true },
      { "id": "option_3", "text": "Feature freezing", "isCorrect": false },
      { "id": "option_4", "text": "Big design upfront", "isCorrect": false }
    ],
    "hint": "XP encourages continuous code improvement to maintain simplicity.",
    "answerDescription": "Refactoring enhances code readability and maintainability without altering functionality."
  },
  {
    "id": "agile_1153",
    "question": "Why does XP recommend frequent releases?",
    "options": [
      { "id": "option_1", "text": "To reduce testing time", "isCorrect": false },
      { "id": "option_2", "text": "To gather continuous feedback and improve incrementally", "isCorrect": true },
      { "id": "option_3", "text": "To avoid integrating new features", "isCorrect": false },
      { "id": "option_4", "text": "To minimize collaboration with stakeholders", "isCorrect": false }
    ],
    "hint": "Frequent releases allow teams to respond to user needs quickly.",
    "answerDescription": "By releasing frequently, XP teams can incorporate feedback, fix issues, and refine product features efficiently."
  },
  {
    "id": "agile_1154",
    "question": "What role does the customer play in an XP project?",
    "options": [
      { "id": "option_1", "text": "Provides requirements only at the start", "isCorrect": false },
      { "id": "option_2", "text": "Works closely with the team to provide continuous feedback", "isCorrect": true },
      { "id": "option_3", "text": "Is consulted only for major decisions", "isCorrect": false },
      { "id": "option_4", "text": "Does not interact with developers", "isCorrect": false }
    ],
    "hint": "Customer collaboration is essential in XP.",
    "answerDescription": "The customer actively participates in XP by defining requirements, prioritizing features, and providing ongoing feedback."
  },
  {
    "id": "agile_1155",
    "question": "Why is a sustainable work pace emphasized in XP?",
    "options": [
      { "id": "option_1", "text": "To delay project deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To maintain long-term productivity and avoid burnout", "isCorrect": true },
      { "id": "option_3", "text": "To reduce communication among team members", "isCorrect": false },
      { "id": "option_4", "text": "To ensure developers work long hours", "isCorrect": false }
    ],
    "hint": "XP values a balanced work-life approach.",
    "answerDescription": "A sustainable work pace helps maintain developer well-being, ensuring consistent productivity and quality over time."
  },
  {
    "id": "agile_1156",
    "question": "How does XP handle defect management?",
    "options": [
      { "id": "option_1", "text": "By fixing bugs only at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "By addressing defects as soon as they are found", "isCorrect": true },
      { "id": "option_3", "text": "By tracking defects but not prioritizing fixes", "isCorrect": false },
      { "id": "option_4", "text": "By relying on manual testing alone", "isCorrect": false }
    ],
    "hint": "Defects should not be postponed in XP.",
    "answerDescription": "XP promotes immediate defect resolution to maintain code quality and prevent technical debt."
  },
  {
    "id": "agile_1157",
    "question": "What is the main purpose of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "To delay code testing", "isCorrect": false },
      { "id": "option_2", "text": "To detect and fix integration issues early", "isCorrect": true },
      { "id": "option_3", "text": "To minimize collaboration between developers", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for automated testing", "isCorrect": false }
    ],
    "hint": "XP encourages frequent code integration.",
    "answerDescription": "Continuous integration ensures that code changes work well together, reducing integration problems and improving system stability."
  },
  {
    "id": "agile_1158",
    "question": "How does XP promote knowledge sharing within the development team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to specific developers only", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging pair programming and collective code ownership", "isCorrect": true },
      { "id": "option_3", "text": "By restricting code access to senior developers", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding documentation", "isCorrect": false }
    ],
    "hint": "XP ensures that no single person has exclusive knowledge of the code.",
    "answerDescription": "Pair programming and collective code ownership allow all team members to contribute and learn from each other, reducing knowledge silos."
  },
  {
    "id": "agile_1159",
    "question": "What is the key advantage of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "It speeds up feature delivery by skipping tests", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality by guiding design and catching errors early", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for automated tests", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for refactoring", "isCorrect": false }
    ],
    "hint": "TDD focuses on writing tests before code.",
    "answerDescription": "By writing tests first, developers can ensure the code meets requirements, reducing defects and improving maintainability."
  },
  {
    "id": "agile_1160",
    "question": "Why does XP promote small, incremental changes to the codebase?",
    "options": [
      { "id": "option_1", "text": "To delay project progress", "isCorrect": false },
      { "id": "option_2", "text": "To reduce risk and simplify debugging", "isCorrect": true },
      { "id": "option_3", "text": "To minimize customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "To avoid automated testing", "isCorrect": false }
    ],
    "hint": "Small changes make it easier to identify and fix issues.",
    "answerDescription": "Incremental changes ensure stability, improve maintainability, and help teams adapt quickly to evolving requirements."
  },
  {
    "id": "agile_1161",
    "question": "What is the purpose of on-site customers in XP?",
    "options": [
      { "id": "option_1", "text": "To review the final product only", "isCorrect": false },
      { "id": "option_2", "text": "To provide immediate feedback and clarify requirements", "isCorrect": true },
      { "id": "option_3", "text": "To replace the role of developers in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "To focus only on project deadlines", "isCorrect": false }
    ],
    "hint": "On-site customers play an active role in XP projects.",
    "answerDescription": "Having an on-site customer ensures that developers can get real-time feedback and refine features based on actual business needs."
  },
  {
    "id": "agile_1162",
    "question": "Which XP practice helps ensure that code remains simple and maintainable over time?",
    "options": [
      { "id": "option_1", "text": "Code duplication", "isCorrect": false },
      { "id": "option_2", "text": "Continuous refactoring", "isCorrect": true },
      { "id": "option_3", "text": "Ignoring technical debt", "isCorrect": false },
      { "id": "option_4", "text": "Delaying improvements until later stages", "isCorrect": false }
    ],
    "hint": "XP encourages ongoing refinement of the codebase.",
    "answerDescription": "Continuous refactoring prevents complexity from growing and helps maintain high code quality."
  },
  {
    "id": "agile_1163",
    "question": "Why does XP emphasize writing automated tests before implementing functionality?",
    "options": [
      { "id": "option_1", "text": "To increase development time", "isCorrect": false },
      { "id": "option_2", "text": "To validate requirements and catch defects early", "isCorrect": true },
      { "id": "option_3", "text": "To avoid manual testing", "isCorrect": false },
      { "id": "option_4", "text": "To reduce developer responsibility", "isCorrect": false }
    ],
    "hint": "XP promotes a test-first approach to development.",
    "answerDescription": "Writing tests first ensures that functionality meets requirements and prevents defects from accumulating."
  },
  {
    "id": "agile_1164",
    "question": "How does XP encourage rapid feedback loops in development?",
    "options": [
      { "id": "option_1", "text": "By minimizing customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "By promoting continuous testing and frequent releases", "isCorrect": true },
      { "id": "option_3", "text": "By relying solely on developer intuition", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding code reviews", "isCorrect": false }
    ],
    "hint": "XP integrates testing and frequent deliveries.",
    "answerDescription": "Rapid feedback through testing and frequent releases helps developers quickly identify and address issues."
  },
  {
    "id": "agile_1165",
    "question": "What is the primary goal of collective code ownership in XP?",
    "options": [
      { "id": "option_1", "text": "To restrict changes to senior developers", "isCorrect": false },
      { "id": "option_2", "text": "To allow any team member to modify any part of the code", "isCorrect": true },
      { "id": "option_3", "text": "To limit knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "To prevent frequent code updates", "isCorrect": false }
    ],
    "hint": "XP encourages team-wide responsibility for the codebase.",
    "answerDescription": "Collective code ownership ensures that everyone on the team can contribute, review, and improve the codebase."
  },
  {
    "id": "agile_1166",
    "question": "Why does XP advocate for pair programming?",
    "options": [
      { "id": "option_1", "text": "To slow down development", "isCorrect": false },
      { "id": "option_2", "text": "To improve code quality through collaboration", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the number of tests required", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate code reviews", "isCorrect": false }
    ],
    "hint": "Two heads are better than one when writing code.",
    "answerDescription": "Pair programming leads to better design, fewer defects, and knowledge sharing among team members."
  },
  {
    "id": "agile_1167",
    "question": "How does XP handle changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By resisting any changes after development starts", "isCorrect": false },
      { "id": "option_2", "text": "By embracing change and adapting quickly", "isCorrect": true },
      { "id": "option_3", "text": "By freezing requirements after sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "By limiting customer interactions", "isCorrect": false }
    ],
    "hint": "XP is highly adaptive to evolving needs.",
    "answerDescription": "XP allows teams to incorporate changes quickly by working in small increments and maintaining flexibility."
  },
  {
    "id": "agile_1168",
    "question": "What is the purpose of a metaphor in XP?",
    "options": [
      { "id": "option_1", "text": "To replace technical documentation", "isCorrect": false },
      { "id": "option_2", "text": "To provide a shared understanding of the system design", "isCorrect": true },
      { "id": "option_3", "text": "To simplify customer communication", "isCorrect": false },
      { "id": "option_4", "text": "To standardize coding practices", "isCorrect": false }
    ],
    "hint": "XP uses metaphors to help teams align on system architecture.",
    "answerDescription": "A metaphor acts as a simple, consistent model that helps both developers and stakeholders understand the software structure."
  },
  {
    "id": "agile_1169",
    "question": "Why does XP emphasize simplicity in design?",
    "options": [
      { "id": "option_1", "text": "To limit future enhancements", "isCorrect": false },
      { "id": "option_2", "text": "To make code easier to maintain and extend", "isCorrect": true },
      { "id": "option_3", "text": "To reduce development costs", "isCorrect": false },
      { "id": "option_4", "text": "To avoid using advanced technologies", "isCorrect": false }
    ],
    "hint": "XP encourages designing for current needs, not future guesses.",
    "answerDescription": "Keeping designs simple reduces complexity, making code easier to update, test, and refactor."
  },
  {
    "id": "agile_1170",
    "question": "What is the key advantage of frequent releases in XP?",
    "options": [
      { "id": "option_1", "text": "To decrease customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "To allow quick feedback and course corrections", "isCorrect": true },
      { "id": "option_3", "text": "To avoid automated testing", "isCorrect": false },
      { "id": "option_4", "text": "To speed up final deployment", "isCorrect": false }
    ],
    "hint": "XP relies on continuous learning from user feedback.",
    "answerDescription": "Frequent releases ensure customer feedback is incorporated early, reducing the risk of major rework."
  },
  {
    "id": "agile_1171",
    "question": "What does XP recommend to ensure software remains defect-free?",
    "options": [
      { "id": "option_1", "text": "Manual testing before deployment", "isCorrect": false },
      { "id": "option_2", "text": "Automated testing and continuous integration", "isCorrect": true },
      { "id": "option_3", "text": "Delaying tests until the final release", "isCorrect": false },
      { "id": "option_4", "text": "Skipping tests for small features", "isCorrect": false }
    ],
    "hint": "XP values automation in testing to maintain quality.",
    "answerDescription": "Automated testing ensures that code changes do not introduce new defects and supports rapid iterations."
  },
  {
    "id": "agile_1172",
    "question": "Which XP practice helps developers identify integration issues early?",
    "options": [
      { "id": "option_1", "text": "Pair programming", "isCorrect": false },
      { "id": "option_2", "text": "Code reviews", "isCorrect": false },
      { "id": "option_3", "text": "Continuous integration", "isCorrect": true },
      { "id": "option_4", "text": "Big-bang integration", "isCorrect": false }
    ],
    "hint": "XP promotes frequent code integration to detect conflicts early.",
    "answerDescription": "Continuous integration ensures that code is merged and tested frequently, reducing integration problems."
  },
  {
    "id": "agile_1173",
    "question": "Why does XP recommend co-located teams?",
    "options": [
      { "id": "option_1", "text": "To increase development costs", "isCorrect": false },
      { "id": "option_2", "text": "To limit remote collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To improve communication and collaboration", "isCorrect": true },
      { "id": "option_4", "text": "To reduce team autonomy", "isCorrect": false }
    ],
    "hint": "XP values face-to-face interactions for better teamwork.",
    "answerDescription": "Co-located teams enable faster decision-making and better coordination through direct communication."
  },
  {
    "id": "agile_1174",
    "question": "What is the role of an on-site customer in XP?",
    "options": [
      { "id": "option_1", "text": "To supervise the development team", "isCorrect": false },
      { "id": "option_2", "text": "To approve every code change", "isCorrect": false },
      { "id": "option_3", "text": "To provide immediate feedback and clarify requirements", "isCorrect": true },
      { "id": "option_4", "text": "To create detailed documentation", "isCorrect": false }
    ],
    "hint": "XP ensures that customers are actively involved in the development process.",
    "answerDescription": "An on-site customer helps ensure that the team delivers exactly what is needed by providing continuous feedback."
  },
  {
    "id": "agile_1175",
    "question": "How does XP handle technical debt?",
    "options": [
      { "id": "option_1", "text": "By ignoring small issues", "isCorrect": false },
      { "id": "option_2", "text": "By delaying refactoring until the project ends", "isCorrect": false },
      { "id": "option_3", "text": "By performing continuous refactoring", "isCorrect": true },
      { "id": "option_4", "text": "By rewriting code from scratch frequently", "isCorrect": false }
    ],
    "hint": "XP recommends ongoing improvements to the codebase.",
    "answerDescription": "Continuous refactoring helps keep the codebase clean and prevents the accumulation of technical debt."
  },
  {
    "id": "agile_1176",
    "question": "Why does XP emphasize coding standards?",
    "options": [
      { "id": "option_1", "text": "To restrict developers' creativity", "isCorrect": false },
      { "id": "option_2", "text": "To enforce uniform coding styles across projects", "isCorrect": false },
      { "id": "option_3", "text": "To ensure consistency and maintainability", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for refactoring", "isCorrect": false }
    ],
    "hint": "XP encourages shared coding practices for better collaboration.",
    "answerDescription": "Following coding standards improves code readability, maintainability, and team efficiency."
  },
  {
    "id": "agile_1177",
    "question": "What is the benefit of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "To increase the workload on developers", "isCorrect": false },
      { "id": "option_2", "text": "To delay customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To receive early feedback and adjust quickly", "isCorrect": true },
      { "id": "option_4", "text": "To limit flexibility in requirements", "isCorrect": false }
    ],
    "hint": "XP prefers frequent, incremental deliveries.",
    "answerDescription": "Small releases allow teams to validate assumptions early, reducing risk and improving customer satisfaction."
  },
  {
    "id": "agile_1178",
    "question": "Why does XP encourage a sustainable pace of work?",
    "options": [
      { "id": "option_1", "text": "To complete projects as quickly as possible", "isCorrect": false },
      { "id": "option_2", "text": "To limit the number of features delivered", "isCorrect": false },
      { "id": "option_3", "text": "To avoid burnout and maintain long-term productivity", "isCorrect": true },
      { "id": "option_4", "text": "To reduce team accountability", "isCorrect": false }
    ],
    "hint": "XP values sustainable productivity over short-term speed.",
    "answerDescription": "A sustainable pace ensures that developers remain productive without suffering from fatigue or burnout."
  },
  {
    "id": "agile_1179",
    "question": "What does XP suggest about designing for future scalability?",
    "options": [
      { "id": "option_1", "text": "To build an extensive architecture upfront", "isCorrect": false },
      { "id": "option_2", "text": "To make assumptions about future requirements", "isCorrect": false },
      { "id": "option_3", "text": "To design for current needs and refactor when necessary", "isCorrect": true },
      { "id": "option_4", "text": "To avoid design discussions early on", "isCorrect": false }
    ],
    "hint": "XP avoids over-engineering and prioritizes flexibility.",
    "answerDescription": "XP promotes simplicity by designing only for current needs and adjusting as requirements evolve."
  },
  {
    "id": "agile_1180",
    "question": "How does XP ensure that developers understand business needs?",
    "options": [
      { "id": "option_1", "text": "By focusing only on technical implementation", "isCorrect": false },
      { "id": "option_2", "text": "By relying solely on requirement documents", "isCorrect": false },
      { "id": "option_3", "text": "By involving customers in discussions and development", "isCorrect": true },
      { "id": "option_4", "text": "By limiting developer-customer interactions", "isCorrect": false }
    ],
    "hint": "XP encourages active collaboration with customers.",
    "answerDescription": "Regular customer involvement ensures that developers build the right features based on actual business needs."
  },
  {
    "id": "agile_1181",
    "question": "What is the advantage of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To speed up coding without testing", "isCorrect": false },
      { "id": "option_2", "text": "To write tests after implementation", "isCorrect": false },
      { "id": "option_3", "text": "To improve code reliability and prevent defects early", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for refactoring", "isCorrect": false }
    ],
    "hint": "XP promotes writing tests before coding.",
    "answerDescription": "TDD ensures that each piece of code has a defined purpose and works correctly before it is implemented."
  },
  {
    "id": "agile_1182",
    "question": "What is a key benefit of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "Increases individual productivity", "isCorrect": false },
      { "id": "option_2", "text": "Reduces the need for documentation", "isCorrect": false },
      { "id": "option_3", "text": "Eliminates the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "Improves code quality through continuous review", "isCorrect": true }
    ],
    "hint": "XP promotes two developers working together to write better code.",
    "answerDescription": "Pair programming enhances collaboration, leading to higher code quality and fewer defects."
  },
  {
    "id": "agile_1183",
    "question": "Why does XP advocate for frequent releases?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To allow developers to work independently", "isCorrect": false },
      { "id": "option_3", "text": "To minimize planning efforts", "isCorrect": false },
      { "id": "option_4", "text": "To get quick feedback and improve the product", "isCorrect": true }
    ],
    "hint": "XP focuses on delivering value incrementally.",
    "answerDescription": "Frequent releases ensure that customer feedback is incorporated early and often, improving product quality."
  },
  {
    "id": "agile_1184",
    "question": "How does XP ensure better test coverage?",
    "options": [
      { "id": "option_1", "text": "By testing only after development is complete", "isCorrect": false },
      { "id": "option_2", "text": "By using manual testing exclusively", "isCorrect": false },
      { "id": "option_3", "text": "By relying on exploratory testing", "isCorrect": false },
      { "id": "option_4", "text": "By emphasizing automated unit testing", "isCorrect": true }
    ],
    "hint": "XP promotes writing tests alongside development.",
    "answerDescription": "Automated unit testing in XP ensures that the codebase remains stable and new changes do not introduce defects."
  },
  {
    "id": "agile_1185",
    "question": "Why does XP encourage customer involvement in development?",
    "options": [
      { "id": "option_1", "text": "To approve every line of code", "isCorrect": false },
      { "id": "option_2", "text": "To replace project managers", "isCorrect": false },
      { "id": "option_3", "text": "To create detailed requirement documents", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the product meets business needs", "isCorrect": true }
    ],
    "hint": "XP values continuous feedback from customers.",
    "answerDescription": "Active customer involvement helps the team build the right features and adjust based on real needs."
  },
  {
    "id": "agile_1186",
    "question": "What is a primary goal of simple design in XP?",
    "options": [
      { "id": "option_1", "text": "To avoid writing unit tests", "isCorrect": false },
      { "id": "option_2", "text": "To maximize the use of design patterns", "isCorrect": false },
      { "id": "option_3", "text": "To create complex architectures early", "isCorrect": false },
      { "id": "option_4", "text": "To reduce complexity and enable easy modifications", "isCorrect": true }
    ],
    "hint": "XP favors keeping things as simple as possible.",
    "answerDescription": "A simple design reduces development effort and makes future changes easier."
  },
  {
    "id": "agile_1187",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging changes", "isCorrect": false },
      { "id": "option_3", "text": "By relying solely on initial planning", "isCorrect": false },
      { "id": "option_4", "text": "By embracing changes and adapting quickly", "isCorrect": true }
    ],
    "hint": "XP is designed to handle evolving business needs.",
    "answerDescription": "XP welcomes changes and adjusts plans dynamically to meet customer expectations."
  },
  {
    "id": "agile_1188",
    "question": "Why does XP emphasize writing tests before code?",
    "options": [
      { "id": "option_1", "text": "To slow down development", "isCorrect": false },
      { "id": "option_2", "text": "To reduce coding creativity", "isCorrect": false },
      { "id": "option_3", "text": "To avoid unnecessary code refactoring", "isCorrect": false },
      { "id": "option_4", "text": "To ensure code correctness and design clarity", "isCorrect": true }
    ],
    "hint": "XP uses Test-Driven Development (TDD) for quality assurance.",
    "answerDescription": "Writing tests before code helps developers focus on functionality and write reliable, maintainable code."
  },
  {
    "id": "agile_1189",
    "question": "What is the purpose of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "To delay testing until the project is completed", "isCorrect": false },
      { "id": "option_2", "text": "To prevent developers from working independently", "isCorrect": false },
      { "id": "option_3", "text": "To minimize collaboration between developers", "isCorrect": false },
      { "id": "option_4", "text": "To detect integration issues early and ensure code stability", "isCorrect": true }
    ],
    "hint": "XP promotes frequent code integration to detect conflicts early.",
    "answerDescription": "Continuous integration helps catch errors early, reducing integration risks and improving overall code quality."
  },
  {
    "id": "agile_1190",
    "question": "Why does XP discourage adding extra features too early?",
    "options": [
      { "id": "option_1", "text": "To avoid delivering a complete product", "isCorrect": false },
      { "id": "option_2", "text": "To ignore customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To slow down development", "isCorrect": false },
      { "id": "option_4", "text": "To prevent wasted effort on unneeded functionality", "isCorrect": true }
    ],
    "hint": "XP follows the principle of 'You Ainâ€™t Gonna Need It' (YAGNI).",
    "answerDescription": "XP focuses on building only what is necessary to avoid wasting time and resources on unused features."
  },
  {
    "id": "agile_1191",
    "question": "What is a key advantage of collective code ownership in XP?",
    "options": [
      { "id": "option_1", "text": "Only senior developers can modify code", "isCorrect": false },
      { "id": "option_2", "text": "Developers work on isolated modules", "isCorrect": false },
      { "id": "option_3", "text": "Each developer owns a specific part of the code", "isCorrect": false },
      { "id": "option_4", "text": "Anyone on the team can improve any part of the code", "isCorrect": true }
    ],
    "hint": "XP promotes shared responsibility for the entire codebase.",
    "answerDescription": "Collective code ownership allows for continuous improvements, reduces bottlenecks, and ensures knowledge is shared across the team."
  },
  {
    "id": "agile_1192",
    "question": "Which practice in XP ensures that the entire team shares responsibility for the codebase?",
    "options": [
      { "id": "option_1", "text": "Collective code ownership", "isCorrect": true },
      { "id": "option_2", "text": "Code isolation", "isCorrect": false },
      { "id": "option_3", "text": "Personal code repositories", "isCorrect": false },
      { "id": "option_4", "text": "Individual code assignments", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility for maintaining and improving code.",
    "answerDescription": "Collective code ownership allows any team member to improve any part of the code, ensuring continuous enhancements and reducing bottlenecks."
  },
  {
    "id": "agile_1193",
    "question": "Why does XP emphasize continuous feedback from customers?",
    "options": [
      { "id": "option_1", "text": "To ensure the product meets evolving business needs", "isCorrect": true },
      { "id": "option_2", "text": "To reduce the need for user testing", "isCorrect": false },
      { "id": "option_3", "text": "To finalize requirements early", "isCorrect": false },
      { "id": "option_4", "text": "To limit changes in project scope", "isCorrect": false }
    ],
    "hint": "XP values customer collaboration throughout the development process.",
    "answerDescription": "Regular customer feedback helps align development efforts with business priorities and improves the final product."
  },
  {
    "id": "agile_1194",
    "question": "What is the main purpose of test-driven development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To write tests before writing the actual code", "isCorrect": true },
      { "id": "option_2", "text": "To eliminate the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To delay testing until the final stage", "isCorrect": false },
      { "id": "option_4", "text": "To increase manual testing efforts", "isCorrect": false }
    ],
    "hint": "TDD follows the 'write test first' approach.",
    "answerDescription": "TDD improves code quality by requiring tests to be written before implementation, ensuring functionality is well-defined and covered."
  },
  {
    "id": "agile_1195",
    "question": "What does XP suggest to keep designs as simple as possible?",
    "options": [
      { "id": "option_1", "text": "Following the principle of simple design", "isCorrect": true },
      { "id": "option_2", "text": "Using complex architectures", "isCorrect": false },
      { "id": "option_3", "text": "Delaying design decisions", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding documentation", "isCorrect": false }
    ],
    "hint": "XP avoids unnecessary complexity in design.",
    "answerDescription": "The principle of simple design ensures that the code is easy to understand, modify, and maintain."
  },
  {
    "id": "agile_1196",
    "question": "How does XP ensure that coding standards are followed?",
    "options": [
      { "id": "option_1", "text": "By enforcing coding standards as a team practice", "isCorrect": true },
      { "id": "option_2", "text": "By assigning coding standards to individuals", "isCorrect": false },
      { "id": "option_3", "text": "By allowing developers to use any coding style", "isCorrect": false },
      { "id": "option_4", "text": "By removing standardization in coding", "isCorrect": false }
    ],
    "hint": "XP promotes a shared approach to maintaining clean and consistent code.",
    "answerDescription": "Enforcing coding standards as a team practice ensures maintainability, readability, and a unified development approach."
  },
  {
    "id": "agile_1197",
    "question": "What is one of the key values of XP that helps teams respond to change?",
    "options": [
      { "id": "option_1", "text": "Courage", "isCorrect": true },
      { "id": "option_2", "text": "Strict planning", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Delaying decision-making", "isCorrect": false }
    ],
    "hint": "XP encourages teams to take action even when facing uncertainty.",
    "answerDescription": "Courage in XP means adapting to change, embracing feedback, and making necessary improvements without hesitation."
  },
  {
    "id": "agile_1198",
    "question": "How does XP improve collaboration between developers?",
    "options": [
      { "id": "option_1", "text": "By encouraging pair programming", "isCorrect": true },
      { "id": "option_2", "text": "By assigning isolated tasks", "isCorrect": false },
      { "id": "option_3", "text": "By limiting knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "By reducing peer reviews", "isCorrect": false }
    ],
    "hint": "XP involves two developers working together on a single task.",
    "answerDescription": "Pair programming improves collaboration, knowledge sharing, and the quality of the code produced."
  },
  {
    "id": "agile_1199",
    "question": "What role does refactoring play in XP?",
    "options": [
      { "id": "option_1", "text": "Improving code structure without changing functionality", "isCorrect": true },
      { "id": "option_2", "text": "Adding unnecessary complexity", "isCorrect": false },
      { "id": "option_3", "text": "Increasing technical debt", "isCorrect": false },
      { "id": "option_4", "text": "Delaying product releases", "isCorrect": false }
    ],
    "hint": "Refactoring helps maintain clean and efficient code.",
    "answerDescription": "XP promotes refactoring to keep the codebase simple, maintainable, and adaptable to future changes."
  },
  {
    "id": "agile_1200",
    "question": "Why is sustainable pace important in XP?",
    "options": [
      { "id": "option_1", "text": "To prevent developer burnout", "isCorrect": true },
      { "id": "option_2", "text": "To increase overtime hours", "isCorrect": false },
      { "id": "option_3", "text": "To complete work as fast as possible", "isCorrect": false },
      { "id": "option_4", "text": "To sacrifice work-life balance", "isCorrect": false }
    ],
    "hint": "XP encourages maintaining a steady work rhythm.",
    "answerDescription": "Sustainable pace ensures that developers remain productive and motivated over the long term without overworking."
  },
  {
    "id": "agile_1201",
    "question": "What does XP encourage to ensure high-quality code is always deployed?",
    "options": [
      { "id": "option_1", "text": "Continuous integration", "isCorrect": true },
      { "id": "option_2", "text": "Manual deployments", "isCorrect": false },
      { "id": "option_3", "text": "Infrequent code merging", "isCorrect": false },
      { "id": "option_4", "text": "Deploying without testing", "isCorrect": false }
    ],
    "hint": "XP promotes frequent integration of code to detect errors early.",
    "answerDescription": "Continuous integration helps teams identify and fix issues quickly, ensuring a stable and reliable codebase."
  },
  {
    "id": "agile_1202",
    "question": "Which XP practice ensures frequent feedback and rapid identification of integration issues?",
    "options": [
      { "id": "option_1", "text": "Big Bang Integration", "isCorrect": false },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_3", "text": "Code Freezing", "isCorrect": false },
      { "id": "option_4", "text": "Batch Processing", "isCorrect": false }
    ],
    "hint": "XP encourages merging code frequently to detect errors early.",
    "answerDescription": "Continuous Integration ensures that small, incremental changes are merged and tested frequently, preventing integration issues."
  },
  {
    "id": "agile_1203",
    "question": "What is a key benefit of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "Reduces the need for documentation", "isCorrect": false },
      { "id": "option_2", "text": "Improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "Eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "Slows down development speed", "isCorrect": false }
    ],
    "hint": "Pair programming involves two developers working together on the same code.",
    "answerDescription": "Pair programming enhances collaboration, reduces errors, and promotes continuous knowledge sharing among developers."
  },
  {
    "id": "agile_1204",
    "question": "Why does XP emphasize refactoring throughout the development process?",
    "options": [
      { "id": "option_1", "text": "To rewrite the entire codebase frequently", "isCorrect": false },
      { "id": "option_2", "text": "To maintain clean, simple, and adaptable code", "isCorrect": true },
      { "id": "option_3", "text": "To introduce complex structures early", "isCorrect": false },
      { "id": "option_4", "text": "To delay development decisions", "isCorrect": false }
    ],
    "hint": "XP aims to keep the codebase simple and maintainable.",
    "answerDescription": "Refactoring in XP ensures that the code remains easy to understand and modify, reducing technical debt and improving efficiency."
  },
  {
    "id": "agile_1205",
    "question": "How does XP ensure that teams deliver high-value features quickly?",
    "options": [
      { "id": "option_1", "text": "By focusing on long-term plans", "isCorrect": false },
      { "id": "option_2", "text": "By delivering small, incremental releases", "isCorrect": true },
      { "id": "option_3", "text": "By finalizing requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "By delaying feedback until project completion", "isCorrect": false }
    ],
    "hint": "XP promotes rapid feedback through frequent releases.",
    "answerDescription": "Incremental releases in XP allow teams to adapt to customer needs, reduce risk, and continuously improve the product."
  },
  {
    "id": "agile_1206",
    "question": "What principle in XP encourages teams to take calculated risks and experiment?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_2", "text": "Courage", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding change", "isCorrect": false },
      { "id": "option_4", "text": "Following rigid rules", "isCorrect": false }
    ],
    "hint": "XP promotes adaptability and continuous improvement.",
    "answerDescription": "Courage in XP enables teams to embrace change, make decisions, and experiment with innovative approaches."
  },
  {
    "id": "agile_1207",
    "question": "Why is a sustainable pace an important practice in XP?",
    "options": [
      { "id": "option_1", "text": "To maximize overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To ensure long-term productivity and avoid burnout", "isCorrect": true },
      { "id": "option_3", "text": "To complete projects faster", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for breaks", "isCorrect": false }
    ],
    "hint": "XP promotes a work-life balance for developers.",
    "answerDescription": "Sustainable pace prevents burnout and keeps the team motivated, leading to higher quality software in the long run."
  },
  {
    "id": "agile_1208",
    "question": "How does XP enhance collaboration between developers and customers?",
    "options": [
      { "id": "option_1", "text": "By limiting customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "By involving customers in daily development activities", "isCorrect": true },
      { "id": "option_3", "text": "By finalizing requirements early", "isCorrect": false },
      { "id": "option_4", "text": "By restricting customer feedback", "isCorrect": false }
    ],
    "hint": "XP encourages active customer participation throughout the project.",
    "answerDescription": "By continuously involving customers, XP ensures that the final product aligns with their needs and expectations."
  },
  {
    "id": "agile_1209",
    "question": "What XP practice ensures that code changes do not introduce new defects?",
    "options": [
      { "id": "option_1", "text": "Manual verification", "isCorrect": false },
      { "id": "option_2", "text": "Test-Driven Development (TDD)", "isCorrect": true },
      { "id": "option_3", "text": "Skipping tests for minor changes", "isCorrect": false },
      { "id": "option_4", "text": "Delaying testing until release", "isCorrect": false }
    ],
    "hint": "This practice requires writing tests before writing the actual code.",
    "answerDescription": "TDD ensures that every feature is tested before implementation, reducing the chances of introducing defects."
  },
  {
    "id": "agile_1210",
    "question": "Why does XP encourage frequent small releases?",
    "options": [
      { "id": "option_1", "text": "To complete the project quickly", "isCorrect": false },
      { "id": "option_2", "text": "To gather user feedback and adapt", "isCorrect": true },
      { "id": "option_3", "text": "To reduce testing requirements", "isCorrect": false },
      { "id": "option_4", "text": "To minimize customer involvement", "isCorrect": false }
    ],
    "hint": "Frequent releases provide opportunities for course correction.",
    "answerDescription": "Small, frequent releases allow teams to adapt to user needs, reduce risk, and improve software quality iteratively."
  },
  {
    "id": "agile_1211",
    "question": "What XP value supports open communication and transparency within teams?",
    "options": [
      { "id": "option_1", "text": "Secrecy", "isCorrect": false },
      { "id": "option_2", "text": "Respect", "isCorrect": true },
      { "id": "option_3", "text": "Isolation", "isCorrect": false },
      { "id": "option_4", "text": "Restricting knowledge sharing", "isCorrect": false }
    ],
    "hint": "This XP value fosters trust and collaboration among team members.",
    "answerDescription": "Respect in XP encourages open discussions, idea-sharing, and collaboration, ensuring a productive and harmonious team environment."
  },  {
    "id": "agile_1212",
    "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To increase development speed", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To ensure code correctness before implementation", "isCorrect": true },
      { "id": "option_4", "text": "To delay testing until later stages", "isCorrect": false }
    ],
    "hint": "TDD involves writing tests before writing the actual code.",
    "answerDescription": "Test-Driven Development (TDD) ensures that each feature is tested before implementation, reducing defects and improving code reliability."
  },
  {
    "id": "agile_1213",
    "question": "Why does XP encourage a simple design approach?",
    "options": [
      { "id": "option_1", "text": "To avoid using modern tools", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate refactoring", "isCorrect": false },
      { "id": "option_3", "text": "To reduce complexity and make code easier to modify", "isCorrect": true },
      { "id": "option_4", "text": "To prioritize aesthetics over functionality", "isCorrect": false }
    ],
    "hint": "XP values simplicity to enhance maintainability.",
    "answerDescription": "A simple design ensures that the system is easy to understand, modify, and scale without unnecessary complexity."
  },
  {
    "id": "agile_1214",
    "question": "Which XP practice involves developers working together on the same code at the same time?",
    "options": [
      { "id": "option_1", "text": "Solo programming", "isCorrect": false },
      { "id": "option_2", "text": "Code isolation", "isCorrect": false },
      { "id": "option_3", "text": "Pair programming", "isCorrect": true },
      { "id": "option_4", "text": "Silent coding", "isCorrect": false }
    ],
    "hint": "This practice involves two developers collaborating at a single workstation.",
    "answerDescription": "Pair programming improves code quality, fosters collaboration, and ensures knowledge sharing within the team."
  },
  {
    "id": "agile_1215",
    "question": "What role do user stories play in XP?",
    "options": [
      { "id": "option_1", "text": "They replace detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "They document all possible test cases", "isCorrect": false },
      { "id": "option_3", "text": "They describe customer needs in simple terms", "isCorrect": true },
      { "id": "option_4", "text": "They are only used for final project documentation", "isCorrect": false }
    ],
    "hint": "User stories focus on customer requirements in a non-technical format.",
    "answerDescription": "User stories provide a concise way to capture customer needs and guide development in an XP environment."
  },
  {
    "id": "agile_1216",
    "question": "How does XP handle changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements early", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change through frequent iterations", "isCorrect": true },
      { "id": "option_4", "text": "By ignoring change requests until project completion", "isCorrect": false }
    ],
    "hint": "XP is designed to be flexible and responsive to change.",
    "answerDescription": "XP encourages adaptability by allowing customer requirements to evolve through iterative development cycles."
  },
  {
    "id": "agile_1217",
    "question": "Why is feedback an essential principle in XP?",
    "options": [
      { "id": "option_1", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To minimize developer input", "isCorrect": false },
      { "id": "option_3", "text": "To continuously improve the product and process", "isCorrect": true },
      { "id": "option_4", "text": "To avoid making changes to the codebase", "isCorrect": false }
    ],
    "hint": "XP relies on quick iterations and continuous improvements.",
    "answerDescription": "Frequent feedback loops help teams refine the software, correct mistakes early, and deliver better value."
  },
  {
    "id": "agile_1218",
    "question": "What is the purpose of a sustainable pace in XP?",
    "options": [
      { "id": "option_1", "text": "To increase overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To push developers to work harder", "isCorrect": false },
      { "id": "option_3", "text": "To maintain consistent productivity without burnout", "isCorrect": true },
      { "id": "option_4", "text": "To ensure the fastest possible delivery", "isCorrect": false }
    ],
    "hint": "Sustainable pace helps maintain team morale and efficiency.",
    "answerDescription": "A sustainable pace ensures that developers remain productive and engaged without excessive stress or fatigue."
  },
  {
    "id": "agile_1219",
    "question": "How does XP ensure high code quality?",
    "options": [
      { "id": "option_1", "text": "By skipping testing in early stages", "isCorrect": false },
      { "id": "option_2", "text": "By relying solely on automated tools", "isCorrect": false },
      { "id": "option_3", "text": "By using practices like TDD, refactoring, and pair programming", "isCorrect": true },
      { "id": "option_4", "text": "By minimizing developer collaboration", "isCorrect": false }
    ],
    "hint": "XP uses multiple practices to maintain high-quality code.",
    "answerDescription": "XP employs techniques like TDD, frequent refactoring, and pair programming to ensure clean, maintainable, and error-free code."
  },
  {
    "id": "agile_1220",
    "question": "Which XP practice promotes a close relationship between developers and customers?",
    "options": [
      { "id": "option_1", "text": "Isolating development teams", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing customer interactions", "isCorrect": false },
      { "id": "option_3", "text": "Onsite customer involvement", "isCorrect": true },
      { "id": "option_4", "text": "Finalizing requirements without feedback", "isCorrect": false }
    ],
    "hint": "XP encourages customers to work closely with developers.",
    "answerDescription": "Having an onsite customer ensures that development aligns with user needs and fosters rapid feedback."
  },
  {
    "id": "agile_1221",
    "question": "What is the purpose of small releases in XP?",
    "options": [
      { "id": "option_1", "text": "To avoid making frequent changes", "isCorrect": false },
      { "id": "option_2", "text": "To limit user feedback", "isCorrect": false },
      { "id": "option_3", "text": "To provide frequent value and gather feedback", "isCorrect": true },
      { "id": "option_4", "text": "To delay project completion", "isCorrect": false }
    ],
    "hint": "Small releases allow teams to validate features regularly.",
    "answerDescription": "Frequent small releases ensure customer involvement, early issue detection, and continuous software improvements."
  },
  
  {
    "id": "agile_1222",
    "question": "What is the key benefit of Continuous Integration (CI) in XP?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the importance of code reviews", "isCorrect": false },
      { "id": "option_3", "text": "It allows developers to work in isolation", "isCorrect": false },
      { "id": "option_4", "text": "It ensures code changes are frequently integrated and tested", "isCorrect": true }
    ],
    "hint": "CI helps catch integration issues early.",
    "answerDescription": "Continuous Integration (CI) ensures that code changes are regularly merged and tested, reducing integration issues and improving software quality."
  },
  {
    "id": "agile_1223",
    "question": "Which practice in XP ensures that code remains clean and maintainable?",
    "options": [
      { "id": "option_1", "text": "Skipping code reviews", "isCorrect": false },
      { "id": "option_2", "text": "Writing documentation after release", "isCorrect": false },
      { "id": "option_3", "text": "Ignoring customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Refactoring code continuously", "isCorrect": true }
    ],
    "hint": "XP encourages improving existing code structure without changing functionality.",
    "answerDescription": "Refactoring ensures that code remains simple, readable, and adaptable to future changes while maintaining its functionality."
  },
  {
    "id": "agile_1224",
    "question": "How does XP promote effective communication within the team?",
    "options": [
      { "id": "option_1", "text": "By relying only on documentation", "isCorrect": false },
      { "id": "option_2", "text": "By minimizing interactions between developers", "isCorrect": false },
      { "id": "option_3", "text": "By using lengthy meetings", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging face-to-face discussions and collaboration", "isCorrect": true }
    ],
    "hint": "XP values direct and clear communication over excessive documentation.",
    "answerDescription": "Face-to-face discussions help teams quickly resolve issues, share knowledge, and maintain alignment on project goals."
  },
  {
    "id": "agile_1225",
    "question": "What is a characteristic of XP teams regarding decision-making?",
    "options": [
      { "id": "option_1", "text": "Decisions are made only by managers", "isCorrect": false },
      { "id": "option_2", "text": "Teams avoid making decisions until the last moment", "isCorrect": false },
      { "id": "option_3", "text": "Decisions are made without consulting stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Teams make collective and quick decisions based on feedback", "isCorrect": true }
    ],
    "hint": "XP emphasizes team collaboration in decision-making.",
    "answerDescription": "XP teams make decisions collectively, ensuring quick responses to changes and continuous improvement based on feedback."
  },
  {
    "id": "agile_1226",
    "question": "Why does XP emphasize the principle of 'coding standards'?",
    "options": [
      { "id": "option_1", "text": "To force developers to write longer code", "isCorrect": false },
      { "id": "option_2", "text": "To prevent developers from using different programming languages", "isCorrect": false },
      { "id": "option_3", "text": "To make debugging more difficult", "isCorrect": false },
      { "id": "option_4", "text": "To maintain consistency and readability across the codebase", "isCorrect": true }
    ],
    "hint": "XP ensures that all developers follow a common set of guidelines.",
    "answerDescription": "Coding standards help teams write consistent and maintainable code, improving collaboration and reducing errors."
  },
  {
    "id": "agile_1227",
    "question": "Which XP practice helps ensure software stability throughout development?",
    "options": [
      { "id": "option_1", "text": "Postponing testing until the final release", "isCorrect": false },
      { "id": "option_2", "text": "Using untested code in production", "isCorrect": false },
      { "id": "option_3", "text": "Skipping integration steps", "isCorrect": false },
      { "id": "option_4", "text": "Frequent automated testing", "isCorrect": true }
    ],
    "hint": "Testing is done regularly in XP to catch errors early.",
    "answerDescription": "Frequent automated testing ensures that the software remains stable and functional, reducing bugs and improving reliability."
  },
  {
    "id": "agile_1228",
    "question": "How does XP handle customer involvement in the development process?",
    "options": [
      { "id": "option_1", "text": "Customers provide input only at the start", "isCorrect": false },
      { "id": "option_2", "text": "Customer feedback is ignored", "isCorrect": false },
      { "id": "option_3", "text": "Customer participation is discouraged", "isCorrect": false },
      { "id": "option_4", "text": "Customers are actively involved throughout development", "isCorrect": true }
    ],
    "hint": "XP encourages frequent interactions between developers and customers.",
    "answerDescription": "Customer involvement ensures that requirements are met accurately, leading to better alignment between business goals and development outcomes."
  },
  {
    "id": "agile_1229",
    "question": "What is the purpose of writing unit tests before writing actual code in XP?",
    "options": [
      { "id": "option_1", "text": "To slow down development", "isCorrect": false },
      { "id": "option_2", "text": "To avoid writing unnecessary documentation", "isCorrect": false },
      { "id": "option_3", "text": "To increase the complexity of testing", "isCorrect": false },
      { "id": "option_4", "text": "To guide development and ensure correctness", "isCorrect": true }
    ],
    "hint": "XP follows a test-first approach to development.",
    "answerDescription": "Writing unit tests first helps developers focus on expected behavior and prevents defects early in the development process."
  },
  {
    "id": "agile_1230",
    "question": "Which XP practice involves breaking down large tasks into smaller, manageable parts?",
    "options": [
      { "id": "option_1", "text": "Developing everything at once", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding planning and estimation", "isCorrect": false },
      { "id": "option_3", "text": "Working on features only at the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "Incremental development", "isCorrect": true }
    ],
    "hint": "XP emphasizes delivering value in small, frequent increments.",
    "answerDescription": "Incremental development allows teams to implement and test small portions of functionality, reducing risks and improving flexibility."
  },
  {
    "id": "agile_1231",
    "question": "Why does XP encourage a high level of customer collaboration?",
    "options": [
      { "id": "option_1", "text": "To minimize testing requirements", "isCorrect": false },
      { "id": "option_2", "text": "To reduce developer workload", "isCorrect": false },
      { "id": "option_3", "text": "To limit scope changes", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the product meets real user needs", "isCorrect": true }
    ],
    "hint": "Frequent customer input leads to better software alignment with business goals.",
    "answerDescription": "Close collaboration with customers ensures that the software delivers maximum value by continuously adapting to their needs and expectations."
  },
  {
    "id": "agile_1232",
    "question": "Which XP practice ensures that developers work in pairs to improve code quality?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": true },
      { "id": "option_2", "text": "Solo Coding", "isCorrect": false },
      { "id": "option_3", "text": "Code Ignoring", "isCorrect": false },
      { "id": "option_4", "text": "Delayed Debugging", "isCorrect": false }
    ],
    "hint": "Two developers work together on the same code at the same time.",
    "answerDescription": "Pair Programming enhances collaboration, reduces errors, and improves overall code quality by having two developers share responsibilities."
  },
  {
    "id": "agile_1233",
    "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To write tests before writing the actual code", "isCorrect": true },
      { "id": "option_2", "text": "To avoid writing tests entirely", "isCorrect": false },
      { "id": "option_3", "text": "To delay testing until the project is complete", "isCorrect": false },
      { "id": "option_4", "text": "To write test cases only for critical components", "isCorrect": false }
    ],
    "hint": "TDD follows a 'red-green-refactor' cycle.",
    "answerDescription": "Test-Driven Development (TDD) ensures better code quality by defining test cases first and then writing the minimal code to pass the tests."
  },
  {
    "id": "agile_1234",
    "question": "How does XP handle frequent requirement changes?",
    "options": [
      { "id": "option_1", "text": "By embracing change through iterative development", "isCorrect": true },
      { "id": "option_2", "text": "By locking requirements at the start", "isCorrect": false },
      { "id": "option_3", "text": "By rejecting any modifications", "isCorrect": false },
      { "id": "option_4", "text": "By making changes only in the final stage", "isCorrect": false }
    ],
    "hint": "XP values customer feedback and adapts accordingly.",
    "answerDescription": "XP allows for continuous adaptation by welcoming changes based on customer feedback and iterative releases."
  },
  {
    "id": "agile_1235",
    "question": "What does 'Simple Design' in XP emphasize?",
    "options": [
      { "id": "option_1", "text": "Keeping the codebase as simple as possible", "isCorrect": true },
      { "id": "option_2", "text": "Adding unnecessary complexity", "isCorrect": false },
      { "id": "option_3", "text": "Writing lengthy code for better performance", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring best coding practices", "isCorrect": false }
    ],
    "hint": "XP encourages simplicity to avoid overengineering.",
    "answerDescription": "Simple Design ensures that the code is easy to understand, modify, and maintain, preventing unnecessary complexity."
  },
  {
    "id": "agile_1236",
    "question": "Why does XP encourage frequent releases?",
    "options": [
      { "id": "option_1", "text": "To deliver value quickly and get feedback", "isCorrect": true },
      { "id": "option_2", "text": "To avoid customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To delay bug fixes", "isCorrect": false },
      { "id": "option_4", "text": "To reduce collaboration between teams", "isCorrect": false }
    ],
    "hint": "Frequent releases improve adaptability and responsiveness.",
    "answerDescription": "By releasing frequently, teams can gather user feedback early and adjust development efforts accordingly."
  },
  {
    "id": "agile_1237",
    "question": "Which XP practice ensures that teams focus on the highest-value work first?",
    "options": [
      { "id": "option_1", "text": "Prioritizing stories based on customer value", "isCorrect": true },
      { "id": "option_2", "text": "Ignoring customer needs", "isCorrect": false },
      { "id": "option_3", "text": "Working on features in random order", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding backlog refinement", "isCorrect": false }
    ],
    "hint": "XP aligns development priorities with customer needs.",
    "answerDescription": "By focusing on customer value, XP teams deliver the most impactful features first, ensuring a better return on investment."
  },
  {
    "id": "agile_1238",
    "question": "What is the role of a customer in an XP team?",
    "options": [
      { "id": "option_1", "text": "To provide requirements and feedback continuously", "isCorrect": true },
      { "id": "option_2", "text": "To approve the final product without prior involvement", "isCorrect": false },
      { "id": "option_3", "text": "To avoid participating in daily development", "isCorrect": false },
      { "id": "option_4", "text": "To write all the code", "isCorrect": false }
    ],
    "hint": "Customer collaboration is a core XP principle.",
    "answerDescription": "Active customer involvement helps ensure that the developed product meets real business needs."
  },
  {
    "id": "agile_1239",
    "question": "How does XP ensure that software remains adaptable?",
    "options": [
      { "id": "option_1", "text": "By continuously refactoring code", "isCorrect": true },
      { "id": "option_2", "text": "By keeping code unchanged after the first release", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By limiting customer feedback", "isCorrect": false }
    ],
    "hint": "XP emphasizes improving code structure over time.",
    "answerDescription": "Refactoring allows developers to simplify and improve code while keeping functionality intact, ensuring long-term maintainability."
  },
  {
    "id": "agile_1240",
    "question": "Which XP practice prevents long integration delays?",
    "options": [
      { "id": "option_1", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_2", "text": "Integrating code only at the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding version control", "isCorrect": false },
      { "id": "option_4", "text": "Testing only in the production environment", "isCorrect": false }
    ],
    "hint": "Frequent code merging helps detect issues early.",
    "answerDescription": "Continuous Integration ensures that changes are merged frequently, reducing conflicts and improving software stability."
  },
  {
    "id": "agile_1241",
    "question": "What is the key benefit of Collective Code Ownership in XP?",
    "options": [
      { "id": "option_1", "text": "Any team member can improve the codebase", "isCorrect": true },
      { "id": "option_2", "text": "Only senior developers can modify the code", "isCorrect": false },
      { "id": "option_3", "text": "Developers work in silos", "isCorrect": false },
      { "id": "option_4", "text": "Only one person is responsible for each feature", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility for code quality.",
    "answerDescription": "Collective Code Ownership ensures that all developers contribute to maintaining and improving the code, preventing knowledge silos."
  },
  {
    "id": "agile_1242",
    "question": "Which XP practice helps maintain code quality by ensuring every new feature is tested?",
    "options": [
      { "id": "option_1", "text": "Ignoring tests", "isCorrect": false },
      { "id": "option_2", "text": "Test-Driven Development (TDD)", "isCorrect": true },
      { "id": "option_3", "text": "Skipping refactoring", "isCorrect": false },
      { "id": "option_4", "text": "Manual testing only", "isCorrect": false }
    ],
    "hint": "It involves writing tests before writing the code.",
    "answerDescription": "Test-Driven Development (TDD) ensures that tests guide the development process, leading to reliable and maintainable code."
  },
  {
    "id": "agile_1243",
    "question": "What is a core principle of XP that helps teams respond to changes effectively?",
    "options": [
      { "id": "option_1", "text": "Rigid planning", "isCorrect": false },
      { "id": "option_2", "text": "Embracing change", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Delaying feedback cycles", "isCorrect": false }
    ],
    "hint": "XP encourages flexibility and adaptability.",
    "answerDescription": "By embracing change, XP allows teams to adapt quickly based on customer needs and evolving project requirements."
  },
  {
    "id": "agile_1244",
    "question": "Why is Continuous Integration important in XP?",
    "options": [
      { "id": "option_1", "text": "It prevents early testing", "isCorrect": false },
      { "id": "option_2", "text": "It ensures that code changes are integrated frequently", "isCorrect": true },
      { "id": "option_3", "text": "It delays code review", "isCorrect": false },
      { "id": "option_4", "text": "It restricts collaboration", "isCorrect": false }
    ],
    "hint": "It helps detect integration issues early.",
    "answerDescription": "Continuous Integration (CI) allows teams to merge code changes frequently, reducing integration problems and improving software stability."
  },
  {
    "id": "agile_1245",
    "question": "How does Pair Programming improve software development in XP?",
    "options": [
      { "id": "option_1", "text": "By reducing collaboration", "isCorrect": false },
      { "id": "option_2", "text": "By improving code quality through teamwork", "isCorrect": true },
      { "id": "option_3", "text": "By restricting knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "By allowing only senior developers to write code", "isCorrect": false }
    ],
    "hint": "Two developers work together at one workstation.",
    "answerDescription": "Pair Programming enhances collaboration, reduces defects, and increases knowledge sharing among team members."
  },
  {
    "id": "agile_1246",
    "question": "Which XP principle ensures that software remains simple and easy to maintain?",
    "options": [
      { "id": "option_1", "text": "Adding unnecessary complexity", "isCorrect": false },
      { "id": "option_2", "text": "Simple Design", "isCorrect": true },
      { "id": "option_3", "text": "Ignoring best practices", "isCorrect": false },
      { "id": "option_4", "text": "Writing long, unreadable code", "isCorrect": false }
    ],
    "hint": "XP encourages writing only the necessary code.",
    "answerDescription": "Simple Design ensures that the codebase remains clear and maintainable, preventing technical debt."
  },
  {
    "id": "agile_1247",
    "question": "How does XP encourage collective responsibility for the codebase?",
    "options": [
      { "id": "option_1", "text": "By allowing only one developer to make changes", "isCorrect": false },
      { "id": "option_2", "text": "Through Collective Code Ownership", "isCorrect": true },
      { "id": "option_3", "text": "By discouraging code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By preventing team collaboration", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility for maintaining code quality.",
    "answerDescription": "Collective Code Ownership allows all team members to contribute to the codebase, ensuring better maintainability and knowledge sharing."
  },
  {
    "id": "agile_1248",
    "question": "What is the primary purpose of customer involvement in XP?",
    "options": [
      { "id": "option_1", "text": "To approve the product only at the end", "isCorrect": false },
      { "id": "option_2", "text": "To provide continuous feedback and prioritize features", "isCorrect": true },
      { "id": "option_3", "text": "To delay requirement changes", "isCorrect": false },
      { "id": "option_4", "text": "To write all test cases", "isCorrect": false }
    ],
    "hint": "Customer collaboration is a key XP principle.",
    "answerDescription": "By actively involving customers, XP ensures that development aligns with business needs and user expectations."
  },
  {
    "id": "agile_1249",
    "question": "Which XP practice helps teams deliver high-value features first?",
    "options": [
      { "id": "option_1", "text": "Random feature selection", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing user stories based on business value", "isCorrect": true },
      { "id": "option_3", "text": "Delaying feature development", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring customer priorities", "isCorrect": false }
    ],
    "hint": "XP aligns development efforts with customer needs.",
    "answerDescription": "By prioritizing user stories based on value, XP teams ensure they deliver the most impactful features early."
  },
  {
    "id": "agile_1250",
    "question": "How does XP ensure that code remains adaptable over time?",
    "options": [
      { "id": "option_1", "text": "By avoiding changes after release", "isCorrect": false },
      { "id": "option_2", "text": "By continuously refactoring the code", "isCorrect": true },
      { "id": "option_3", "text": "By ignoring technical debt", "isCorrect": false },
      { "id": "option_4", "text": "By limiting collaboration", "isCorrect": false }
    ],
    "hint": "Refactoring keeps code clean and efficient.",
    "answerDescription": "Refactoring ensures that code remains clean, efficient, and maintainable without altering functionality."
  },
  {
    "id": "agile_1251",
    "question": "Why are frequent releases encouraged in XP?",
    "options": [
      { "id": "option_1", "text": "To delay user feedback", "isCorrect": false },
      { "id": "option_2", "text": "To ensure rapid delivery and early feedback", "isCorrect": true },
      { "id": "option_3", "text": "To avoid testing new features", "isCorrect": false },
      { "id": "option_4", "text": "To introduce unnecessary complexity", "isCorrect": false }
    ],
    "hint": "Frequent releases help teams iterate quickly.",
    "answerDescription": "Frequent releases allow teams to collect feedback early, adapt quickly, and deliver incremental improvements."
  },
  {
    "id": "agile_1252",
    "question": "What is the main benefit of frequent releases in XP?",
    "options": [
      { "id": "option_1", "text": "To avoid early customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To delay bug fixes", "isCorrect": false },
      { "id": "option_3", "text": "To allow continuous user feedback and improvements", "isCorrect": true },
      { "id": "option_4", "text": "To increase development time", "isCorrect": false }
    ],
    "hint": "XP encourages iterative delivery.",
    "answerDescription": "Frequent releases help teams gather feedback early and improve the product continuously."
  },
  {
    "id": "agile_1253",
    "question": "Which XP practice ensures that all team members contribute to the quality of the code?",
    "options": [
      { "id": "option_1", "text": "Limiting code access to senior developers", "isCorrect": false },
      { "id": "option_2", "text": "Writing undocumented code", "isCorrect": false },
      { "id": "option_3", "text": "Collective Code Ownership", "isCorrect": true },
      { "id": "option_4", "text": "Skipping peer reviews", "isCorrect": false }
    ],
    "hint": "XP promotes shared responsibility for code quality.",
    "answerDescription": "Collective Code Ownership ensures that all developers can modify and improve any part of the codebase."
  },
  {
    "id": "agile_1254",
    "question": "Why is Continuous Integration (CI) crucial in XP?",
    "options": [
      { "id": "option_1", "text": "It delays testing until the project is complete", "isCorrect": false },
      { "id": "option_2", "text": "It avoids frequent code merges", "isCorrect": false },
      { "id": "option_3", "text": "It helps detect and fix integration issues early", "isCorrect": true },
      { "id": "option_4", "text": "It restricts developer collaboration", "isCorrect": false }
    ],
    "hint": "CI encourages frequent code integration and testing.",
    "answerDescription": "Continuous Integration reduces integration problems by frequently merging and testing new code changes."
  },
  {
    "id": "agile_1255",
    "question": "What role does customer involvement play in XP?",
    "options": [
      { "id": "option_1", "text": "Providing feedback only at the final stage", "isCorrect": false },
      { "id": "option_2", "text": "Delaying requirement changes", "isCorrect": false },
      { "id": "option_3", "text": "Actively prioritizing features and giving continuous feedback", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding interaction with developers", "isCorrect": false }
    ],
    "hint": "XP values continuous collaboration with customers.",
    "answerDescription": "Customer involvement ensures that the development team builds a product that aligns with user needs."
  },
  {
    "id": "agile_1256",
    "question": "How does Test-Driven Development (TDD) benefit XP teams?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for tests", "isCorrect": false },
      { "id": "option_2", "text": "By delaying testing until later stages", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring tests are written before implementing code", "isCorrect": true },
      { "id": "option_4", "text": "By ignoring test failures", "isCorrect": false }
    ],
    "hint": "TDD involves writing tests before writing the actual code.",
    "answerDescription": "TDD helps create well-tested code, reducing defects and improving software reliability."
  },
  {
    "id": "agile_1257",
    "question": "Which XP principle focuses on keeping the codebase easy to understand and modify?",
    "options": [
      { "id": "option_1", "text": "Adding unnecessary complexity", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring best practices", "isCorrect": false },
      { "id": "option_3", "text": "Simple Design", "isCorrect": true },
      { "id": "option_4", "text": "Writing long, unreadable code", "isCorrect": false }
    ],
    "hint": "XP promotes avoiding unnecessary complexity.",
    "answerDescription": "Simple Design helps maintain clarity and makes future changes easier."
  },
  {
    "id": "agile_1258",
    "question": "Why is Pair Programming an essential practice in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce collaboration", "isCorrect": false },
      { "id": "option_2", "text": "To allow one developer to dominate decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To improve code quality through two-person collaboration", "isCorrect": true },
      { "id": "option_4", "text": "To restrict knowledge sharing", "isCorrect": false }
    ],
    "hint": "Two developers work together at a single workstation.",
    "answerDescription": "Pair Programming ensures higher-quality code and encourages knowledge sharing between developers."
  },
  {
    "id": "agile_1259",
    "question": "What is the primary goal of refactoring in XP?",
    "options": [
      { "id": "option_1", "text": "To introduce new functionality", "isCorrect": false },
      { "id": "option_2", "text": "To make the code more complex", "isCorrect": false },
      { "id": "option_3", "text": "To improve code structure without changing its behavior", "isCorrect": true },
      { "id": "option_4", "text": "To remove all comments from the code", "isCorrect": false }
    ],
    "hint": "Refactoring improves code maintainability without altering its functionality.",
    "answerDescription": "By refactoring code regularly, teams ensure the code remains clean and efficient."
  },
  {
    "id": "agile_1260",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By resisting all changes", "isCorrect": false },
      { "id": "option_2", "text": "By requiring full project re-planning", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change through iterative development", "isCorrect": true },
      { "id": "option_4", "text": "By locking requirements early", "isCorrect": false }
    ],
    "hint": "XP is designed to adapt to evolving business needs.",
    "answerDescription": "XP encourages flexibility, allowing teams to adjust to new requirements without major disruptions."
  },
  {
    "id": "agile_1261",
    "question": "What is the main advantage of a sustainable work pace in XP?",
    "options": [
      { "id": "option_1", "text": "It increases burnout", "isCorrect": false },
      { "id": "option_2", "text": "It forces developers to work overtime", "isCorrect": false },
      { "id": "option_3", "text": "It ensures long-term productivity and team well-being", "isCorrect": true },
      { "id": "option_4", "text": "It sacrifices quality for speed", "isCorrect": false }
    ],
    "hint": "XP promotes balanced workloads to maintain efficiency.",
    "answerDescription": "A sustainable work pace allows teams to maintain productivity and quality over time without burnout."
  },  {
    "id": "agile_1262",
    "question": "Which XP practice helps in detecting errors early by merging code changes frequently?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "Sustainable Pace", "isCorrect": false },
      { "id": "option_3", "text": "Onsite Customer", "isCorrect": false },
      { "id": "option_4", "text": "Continuous Integration", "isCorrect": true }
    ],
    "hint": "This XP practice ensures that changes are integrated and tested regularly.",
    "answerDescription": "Continuous Integration reduces integration issues by merging and testing code frequently."
  },
  {
    "id": "agile_1263",
    "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "To write tests after coding", "isCorrect": false },
      { "id": "option_3", "text": "To avoid automated testing", "isCorrect": false },
      { "id": "option_4", "text": "To ensure tests guide code implementation", "isCorrect": true }
    ],
    "hint": "TDD involves writing tests before implementing code.",
    "answerDescription": "By writing tests first, developers ensure better code design and fewer defects."
  },
  {
    "id": "agile_1264",
    "question": "Which XP principle focuses on developing only what is necessary to meet the current requirements?",
    "options": [
      { "id": "option_1", "text": "Comprehensive Documentation", "isCorrect": false },
      { "id": "option_2", "text": "Future-Proofing", "isCorrect": false },
      { "id": "option_3", "text": "Complex Design", "isCorrect": false },
      { "id": "option_4", "text": "YAGNI (You Ain't Gonna Need It)", "isCorrect": true }
    ],
    "hint": "This principle prevents teams from over-engineering solutions.",
    "answerDescription": "YAGNI encourages developers to build only what is necessary, reducing waste and complexity."
  },
  {
    "id": "agile_1265",
    "question": "What does XP recommend regarding working hours to maintain team productivity?",
    "options": [
      { "id": "option_1", "text": "Working long hours regularly", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring team well-being", "isCorrect": false },
      { "id": "option_3", "text": "Allowing inconsistent work schedules", "isCorrect": false },
      { "id": "option_4", "text": "Following a sustainable pace", "isCorrect": true }
    ],
    "hint": "XP promotes a balance between work and personal life.",
    "answerDescription": "A sustainable pace prevents burnout and ensures long-term team efficiency."
  },
  {
    "id": "agile_1266",
    "question": "Which XP practice encourages team members to collectively improve the codebase?",
    "options": [
      { "id": "option_1", "text": "Individual Code Ownership", "isCorrect": false },
      { "id": "option_2", "text": "Strict Change Control", "isCorrect": false },
      { "id": "option_3", "text": "Code Locking", "isCorrect": false },
      { "id": "option_4", "text": "Collective Code Ownership", "isCorrect": true }
    ],
    "hint": "This practice allows all developers to contribute to any part of the code.",
    "answerDescription": "Collective Code Ownership ensures knowledge sharing and prevents bottlenecks in development."
  },
  {
    "id": "agile_1267",
    "question": "Why does XP emphasize small releases?",
    "options": [
      { "id": "option_1", "text": "To avoid early customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "To delay deployment", "isCorrect": false },
      { "id": "option_3", "text": "To increase development time", "isCorrect": false },
      { "id": "option_4", "text": "To deliver value incrementally and gather feedback", "isCorrect": true }
    ],
    "hint": "Frequent releases help teams adapt quickly to changing requirements.",
    "answerDescription": "Small releases enable teams to continuously improve based on user feedback."
  },
  {
    "id": "agile_1268",
    "question": "How does Pair Programming improve code quality?",
    "options": [
      { "id": "option_1", "text": "By reducing communication", "isCorrect": false },
      { "id": "option_2", "text": "By allowing developers to work in isolation", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging real-time review and knowledge sharing", "isCorrect": true }
    ],
    "hint": "Two developers work together at one workstation.",
    "answerDescription": "Pair Programming helps identify errors early and promotes best coding practices."
  },
  {
    "id": "agile_1269",
    "question": "What is the usage of refactoring in XP?",
    "options": [
      { "id": "option_1", "text": "To add new features", "isCorrect": false },
      { "id": "option_2", "text": "To make the code harder to understand", "isCorrect": false },
      { "id": "option_3", "text": "To rewrite the entire system frequently", "isCorrect": false },
      { "id": "option_4", "text": "To improve code structure without changing its behavior", "isCorrect": true }
    ],
    "hint": "Refactoring makes code more maintainable without altering functionality.",
    "answerDescription": "By improving code quality, refactoring ensures long-term maintainability and performance."
  },
  {
    "id": "agile_1270",
    "question": "Why does XP emphasize continuous feedback from customers?",
    "options": [
      { "id": "option_1", "text": "To delay improvements until the final stage", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the involvement of developers", "isCorrect": false },
      { "id": "option_3", "text": "To prevent requirement changes", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the product aligns with user needs", "isCorrect": true }
    ],
    "hint": "Customer feedback helps refine requirements continuously.",
    "answerDescription": "XP relies on regular customer feedback to deliver high-value software."
  },
  {
    "id": "agile_1271",
    "question": "What is the purpose of the 'Whole Team' approach in XP?",
    "options": [
      { "id": "option_1", "text": "To isolate developers from stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "To limit collaboration to specific roles", "isCorrect": false },
      { "id": "option_3", "text": "To allow only senior members to make decisions", "isCorrect": false },
      { "id": "option_4", "text": "To encourage active collaboration between all team members", "isCorrect": true }
    ],
    "hint": "This XP principle ensures that the entire team works together towards project success.",
    "answerDescription": "The 'Whole Team' approach ensures shared responsibility and effective decision-making."
  },  {
    "id": "agile_1272",
    "question": "Which XP practice involves two developers working together at a single workstation?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": true },
      { "id": "option_2", "text": "Continuous Deployment", "isCorrect": false },
      { "id": "option_3", "text": "Refactoring", "isCorrect": false },
      { "id": "option_4", "text": "Stand-up Meetings", "isCorrect": false }
    ],
    "hint": "This practice enhances collaboration and real-time code review.",
    "answerDescription": "Pair Programming improves code quality by having two developers work together."
  },
  {
    "id": "agile_1273",
    "question": "What is a core XP practice that ensures code is frequently checked and tested in a shared repository?",
    "options": [
      { "id": "option_1", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_2", "text": "Code Ownership", "isCorrect": false },
      { "id": "option_3", "text": "Spike Solutions", "isCorrect": false },
      { "id": "option_4", "text": "Crystal Clear", "isCorrect": false }
    ],
    "hint": "This practice prevents integration issues by merging code changes often.",
    "answerDescription": "Continuous Integration helps teams identify and fix errors early."
  },
  {
    "id": "agile_1274",
    "question": "Which XP principle encourages developers to design and implement only the necessary features?",
    "options": [
      { "id": "option_1", "text": "YAGNI (You Ainâ€™t Gonna Need It)", "isCorrect": true },
      { "id": "option_2", "text": "Gold Plating", "isCorrect": false },
      { "id": "option_3", "text": "Big Design Up Front", "isCorrect": false },
      { "id": "option_4", "text": "Feature Creep", "isCorrect": false }
    ],
    "hint": "This principle prevents adding unnecessary functionality.",
    "answerDescription": "YAGNI helps teams focus on immediate project needs, avoiding wasted effort."
  },
  {
    "id": "agile_1275",
    "question": "What is the primary purpose of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To guide software design", "isCorrect": true },
      { "id": "option_2", "text": "To eliminate all bugs", "isCorrect": false },
      { "id": "option_3", "text": "To replace manual testing", "isCorrect": false },
      { "id": "option_4", "text": "To delay development", "isCorrect": false }
    ],
    "hint": "TDD ensures tests are written before actual code implementation.",
    "answerDescription": "By writing tests first, developers design better-structured, more maintainable code."
  },
  {
    "id": "agile_1276",
    "question": "Which XP practice ensures that all team members can modify and improve the entire codebase?",
    "options": [
      { "id": "option_1", "text": "Collective Code Ownership", "isCorrect": true },
      { "id": "option_2", "text": "Feature Branching", "isCorrect": false },
      { "id": "option_3", "text": "Individual Code Control", "isCorrect": false },
      { "id": "option_4", "text": "Private Repositories", "isCorrect": false }
    ],
    "hint": "This practice prevents bottlenecks caused by individual code ownership.",
    "answerDescription": "Collective Code Ownership fosters collaboration and enhances software quality."
  },
  {
    "id": "agile_1277",
    "question": "Why does XP recommend frequent small releases?",
    "options": [
      { "id": "option_1", "text": "To quickly deliver value to customers", "isCorrect": true },
      { "id": "option_2", "text": "To delay testing phases", "isCorrect": false },
      { "id": "option_3", "text": "To limit team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To avoid getting early feedback", "isCorrect": false }
    ],
    "hint": "Small releases allow for continuous improvement based on real user input.",
    "answerDescription": "Frequent releases help teams adapt to changing requirements and user needs."
  },
  {
    "id": "agile_1278",
    "question": "What is the main advantage of the Sustainable Pace principle in XP?",
    "options": [
      { "id": "option_1", "text": "It prevents burnout and ensures long-term productivity", "isCorrect": true },
      { "id": "option_2", "text": "It maximizes overtime work", "isCorrect": false },
      { "id": "option_3", "text": "It encourages random work schedules", "isCorrect": false },
      { "id": "option_4", "text": "It removes all deadlines", "isCorrect": false }
    ],
    "hint": "This practice helps teams maintain efficiency without overworking.",
    "answerDescription": "A Sustainable Pace ensures that developers remain productive without exhaustion."
  },
  {
    "id": "agile_1279",
    "question": "Which XP practice focuses on improving existing code without altering functionality?",
    "options": [
      { "id": "option_1", "text": "Refactoring", "isCorrect": true },
      { "id": "option_2", "text": "Feature Freeze", "isCorrect": false },
      { "id": "option_3", "text": "Code Locking", "isCorrect": false },
      { "id": "option_4", "text": "Hardening Sprints", "isCorrect": false }
    ],
    "hint": "This process enhances maintainability and code readability.",
    "answerDescription": "Refactoring makes the code cleaner and more efficient without changing its behavior."
  },
  {
    "id": "agile_1280",
    "question": "Why is customer feedback essential in XP?",
    "options": [
      { "id": "option_1", "text": "To ensure the product meets user expectations", "isCorrect": true },
      { "id": "option_2", "text": "To postpone project changes", "isCorrect": false },
      { "id": "option_3", "text": "To reduce testing efforts", "isCorrect": false },
      { "id": "option_4", "text": "To limit developer involvement", "isCorrect": false }
    ],
    "hint": "Frequent feedback helps align the software with real business needs.",
    "answerDescription": "Continuous customer feedback ensures that the software remains relevant and valuable."
  },
  {
    "id": "agile_1281",
    "question": "What is the key benefit of the 'Whole Team' approach in XP?",
    "options": [
      { "id": "option_1", "text": "It promotes collaboration among all members", "isCorrect": true },
      { "id": "option_2", "text": "It assigns strict roles to team members", "isCorrect": false },
      { "id": "option_3", "text": "It prevents developers from interacting with customers", "isCorrect": false },
      { "id": "option_4", "text": "It limits communication to only managers", "isCorrect": false }
    ],
    "hint": "This approach encourages shared responsibility and open communication.",
    "answerDescription": "The Whole Team approach ensures that everyone contributes to the project's success."
  },
  {
    "id": "agile_1282",
    "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To speed up debugging", "isCorrect": false },
      { "id": "option_2", "text": "To write tests before writing code", "isCorrect": true },
      { "id": "option_3", "text": "To remove all bugs", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate manual testing", "isCorrect": false }
    ],
    "hint": "TDD follows a cycle of writing tests first, then implementing code.",
    "answerDescription": "By writing tests first, TDD helps guide software design and ensures quality."
  },
  {
    "id": "agile_1283",
    "question": "Which XP principle suggests that teams should avoid adding unnecessary features?",
    "options": [
      { "id": "option_1", "text": "Big Design Up Front", "isCorrect": false },
      { "id": "option_2", "text": "YAGNI (You Ainâ€™t Gonna Need It)", "isCorrect": true },
      { "id": "option_3", "text": "Feature Expansion", "isCorrect": false },
      { "id": "option_4", "text": "Gold Plating", "isCorrect": false }
    ],
    "hint": "This principle helps teams focus on only the required features.",
    "answerDescription": "YAGNI encourages simplicity by preventing unnecessary work on unneeded features."
  },
  {
    "id": "agile_1284",
    "question": "What is the main advantage of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "Faster coding", "isCorrect": false },
      { "id": "option_2", "text": "Higher code quality through real-time review", "isCorrect": true },
      { "id": "option_3", "text": "Less collaboration", "isCorrect": false },
      { "id": "option_4", "text": "More individual control over code", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together at a single workstation.",
    "answerDescription": "Pair Programming enhances code quality by reducing defects through continuous review."
  },
  {
    "id": "agile_1285",
    "question": "Why does XP encourage a Sustainable Pace?",
    "options": [
      { "id": "option_1", "text": "To increase overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To maintain long-term productivity and prevent burnout", "isCorrect": true },
      { "id": "option_3", "text": "To speed up project completion", "isCorrect": false },
      { "id": "option_4", "text": "To allow for unpredictable workloads", "isCorrect": false }
    ],
    "hint": "A consistent work rhythm prevents exhaustion and improves efficiency.",
    "answerDescription": "Sustainable Pace ensures developers stay productive without compromising their well-being."
  },
  {
    "id": "agile_1286",
    "question": "Which XP practice helps teams deliver working software more frequently?",
    "options": [
      { "id": "option_1", "text": "Big Bang Releases", "isCorrect": false },
      { "id": "option_2", "text": "Frequent Small Releases", "isCorrect": true },
      { "id": "option_3", "text": "Feature Freeze", "isCorrect": false },
      { "id": "option_4", "text": "Hardening Sprints", "isCorrect": false }
    ],
    "hint": "XP promotes delivering updates regularly instead of waiting for large deployments.",
    "answerDescription": "Frequent Small Releases allow customers to get value sooner and provide early feedback."
  },
  {
    "id": "agile_1287",
    "question": "Why is customer involvement crucial in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the product meets user expectations", "isCorrect": true },
      { "id": "option_3", "text": "To delay changes until the end", "isCorrect": false },
      { "id": "option_4", "text": "To remove decision-making from developers", "isCorrect": false }
    ],
    "hint": "Frequent customer feedback helps align development with business needs.",
    "answerDescription": "Customer involvement ensures the product remains valuable and relevant to users."
  },
  {
    "id": "agile_1288",
    "question": "Which XP practice helps improve the structure and readability of existing code?",
    "options": [
      { "id": "option_1", "text": "Code Locking", "isCorrect": false },
      { "id": "option_2", "text": "Refactoring", "isCorrect": true },
      { "id": "option_3", "text": "Feature Branching", "isCorrect": false },
      { "id": "option_4", "text": "Hardening Sprints", "isCorrect": false }
    ],
    "hint": "This practice involves modifying code without changing its functionality.",
    "answerDescription": "Refactoring makes code more maintainable and efficient without altering its behavior."
  },
  {
    "id": "agile_1289",
    "question": "What is the role of Continuous Integration in XP?",
    "options": [
      { "id": "option_1", "text": "To limit code merging", "isCorrect": false },
      { "id": "option_2", "text": "To frequently integrate and test code changes", "isCorrect": true },
      { "id": "option_3", "text": "To delay integration until the project ends", "isCorrect": false },
      { "id": "option_4", "text": "To prevent automated builds", "isCorrect": false }
    ],
    "hint": "This practice reduces integration issues by merging changes often.",
    "answerDescription": "Continuous Integration helps detect and fix errors early by merging code frequently."
  },
  {
    "id": "agile_1290",
    "question": "What is the purpose of a Spike Solution in XP?",
    "options": [
      { "id": "option_1", "text": "To delay feature development", "isCorrect": false },
      { "id": "option_2", "text": "To explore solutions to complex problems", "isCorrect": true },
      { "id": "option_3", "text": "To finalize architecture decisions", "isCorrect": false },
      { "id": "option_4", "text": "To replace automated testing", "isCorrect": false }
    ],
    "hint": "This technique is used to reduce uncertainty in development.",
    "answerDescription": "Spike Solutions help teams investigate technical or design challenges before full implementation."
  },
  {
    "id": "agile_1291",
    "question": "Why does XP promote the 'Whole Team' approach?",
    "options": [
      { "id": "option_1", "text": "To enforce strict hierarchies", "isCorrect": false },
      { "id": "option_2", "text": "To encourage collaboration among all members", "isCorrect": true },
      { "id": "option_3", "text": "To separate developers from customers", "isCorrect": false },
      { "id": "option_4", "text": "To assign work to specific individuals only", "isCorrect": false }
    ],
    "hint": "This approach fosters teamwork and shared responsibility.",
    "answerDescription": "The Whole Team approach ensures all members contribute to project success."
  },
  {
    "id": "agile_1292",
    "question": "Which XP practice emphasizes writing automated tests before writing code?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": false },
      { "id": "option_3", "text": "Test-Driven Development (TDD)", "isCorrect": true },
      { "id": "option_4", "text": "Refactoring", "isCorrect": false }
    ],
    "hint": "This practice ensures code correctness before implementation.",
    "answerDescription": "TDD helps maintain high code quality by writing tests first."
  },
  {
    "id": "agile_1293",
    "question": "What is the purpose of refactoring in XP?",
    "options": [
      { "id": "option_1", "text": "To add new features", "isCorrect": false },
      { "id": "option_2", "text": "To increase technical debt", "isCorrect": false },
      { "id": "option_3", "text": "To improve code structure without changing functionality", "isCorrect": true },
      { "id": "option_4", "text": "To merge all branches", "isCorrect": false }
    ],
    "hint": "It enhances code readability and maintainability.",
    "answerDescription": "Refactoring ensures cleaner and more efficient code without altering its behavior."
  },
  {
    "id": "agile_1294",
    "question": "Which XP value promotes team interaction and feedback?",
    "options": [
      { "id": "option_1", "text": "Courage", "isCorrect": false },
      { "id": "option_2", "text": "Simplicity", "isCorrect": false },
      { "id": "option_3", "text": "Communication", "isCorrect": true },
      { "id": "option_4", "text": "Respect", "isCorrect": false }
    ],
    "hint": "This value ensures that team members share information openly.",
    "answerDescription": "Communication helps teams collaborate efficiently and prevent misunderstandings."
  },
  {
    "id": "agile_1295",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements at the start", "isCorrect": false },
      { "id": "option_2", "text": "By requiring a formal change request", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change through iterative development", "isCorrect": true },
      { "id": "option_4", "text": "By delaying changes until project completion", "isCorrect": false }
    ],
    "hint": "XP is designed to accommodate changes frequently.",
    "answerDescription": "XP welcomes changing requirements by using iterative cycles and customer feedback."
  },
  {
    "id": "agile_1296",
    "question": "Why does XP encourage pair programming?",
    "options": [
      { "id": "option_1", "text": "To increase code complexity", "isCorrect": false },
      { "id": "option_2", "text": "To slow down development", "isCorrect": false },
      { "id": "option_3", "text": "To improve code quality through collaboration", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for testing", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working on the same code simultaneously.",
    "answerDescription": "Pair programming improves code quality by providing immediate peer review."
  },
  {
    "id": "agile_1297",
    "question": "What role does a Customer play in an XP team?",
    "options": [
      { "id": "option_1", "text": "They only approve final deliverables", "isCorrect": false },
      { "id": "option_2", "text": "They manage team schedules", "isCorrect": false },
      { "id": "option_3", "text": "They provide requirements and feedback continuously", "isCorrect": true },
      { "id": "option_4", "text": "They write test cases", "isCorrect": false }
    ],
    "hint": "Customers are actively involved throughout the development process.",
    "answerDescription": "XP ensures that customers frequently provide input to align the product with their needs."
  },
  {
    "id": "agile_1298",
    "question": "Which XP practice ensures software is always in a deployable state?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "Frequent Small Releases", "isCorrect": false },
      { "id": "option_3", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_4", "text": "Refactoring", "isCorrect": false }
    ],
    "hint": "This practice helps teams integrate and test code frequently.",
    "answerDescription": "Continuous Integration reduces integration issues and ensures deployable software at all times."
  },
  {
    "id": "agile_1299",
    "question": "What does the XP principle 'Simplicity' encourage?",
    "options": [
      { "id": "option_1", "text": "Building complex architectures first", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "Writing only necessary and simple code", "isCorrect": true },
      { "id": "option_4", "text": "Developing multiple versions simultaneously", "isCorrect": false }
    ],
    "hint": "This principle helps reduce unnecessary complexity in software.",
    "answerDescription": "XP promotes simplicity to make code easier to maintain and enhance."
  },
  {
    "id": "agile_1300",
    "question": "How does XP handle defects in software development?",
    "options": [
      { "id": "option_1", "text": "By fixing them only at the end", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring minor defects", "isCorrect": false },
      { "id": "option_3", "text": "By identifying and addressing them early through testing", "isCorrect": true },
      { "id": "option_4", "text": "By allowing developers to bypass testing", "isCorrect": false }
    ],
    "hint": "XP promotes early defect detection through continuous testing.",
    "answerDescription": "By catching defects early, XP reduces the cost and effort of fixing them later."
  },
  {
    "id": "agile_1301",
    "question": "What does the XP practice of Whole Team focus on?",
    "options": [
      { "id": "option_1", "text": "Assigning work to only a few members", "isCorrect": false },
      { "id": "option_2", "text": "Reducing customer interactions", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging collaboration across the entire team", "isCorrect": true },
      { "id": "option_4", "text": "Following strict individual roles", "isCorrect": false }
    ],
    "hint": "This practice fosters teamwork and shared responsibility.",
    "answerDescription": "The Whole Team approach ensures that every team member contributes to project success."
  },
  {
    "id": "agile_1302",
    "question": "Which XP practice ensures that code is always clean and maintainable?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "Collective Code Ownership", "isCorrect": false },
      { "id": "option_3", "text": "Frequent Small Releases", "isCorrect": false },
      { "id": "option_4", "text": "Refactoring", "isCorrect": true }
    ],
    "hint": "This practice improves code structure without changing its behavior.",
    "answerDescription": "Refactoring helps keep the codebase clean, making it easier to maintain and extend."
  },
  {
    "id": "agile_1303",
    "question": "How does XP ensure that new changes do not break existing functionality?",
    "options": [
      { "id": "option_1", "text": "By delaying integration until the end", "isCorrect": false },
      { "id": "option_2", "text": "By manually testing all changes", "isCorrect": false },
      { "id": "option_3", "text": "By assigning testing to a dedicated team", "isCorrect": false },
      { "id": "option_4", "text": "By using Continuous Integration and automated tests", "isCorrect": true }
    ],
    "hint": "This practice frequently integrates and tests code changes.",
    "answerDescription": "Continuous Integration ensures that new code is merged and tested regularly, reducing integration issues."
  },
  {
    "id": "agile_1304",
    "question": "What is the key benefit of having a 'Whole Team' in XP?",
    "options": [
      { "id": "option_1", "text": "It allows developers to work in silos", "isCorrect": false },
      { "id": "option_2", "text": "It minimizes communication between team members", "isCorrect": false },
      { "id": "option_3", "text": "It focuses only on code quality", "isCorrect": false },
      { "id": "option_4", "text": "It promotes shared responsibility and collaboration", "isCorrect": true }
    ],
    "hint": "This practice ensures every team member contributes to project success.",
    "answerDescription": "The Whole Team concept fosters teamwork, leading to better collaboration and efficiency."
  },
  {
    "id": "agile_1305",
    "question": "Why does XP recommend writing unit tests before implementing a feature?",
    "options": [
      { "id": "option_1", "text": "To document how the feature works", "isCorrect": false },
      { "id": "option_2", "text": "To slow down the development process", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for refactoring", "isCorrect": false },
      { "id": "option_4", "text": "To validate the functionality before writing the code", "isCorrect": true }
    ],
    "hint": "This approach ensures that the code meets its requirements from the start.",
    "answerDescription": "By writing tests first, developers can ensure their implementation meets expectations before writing code."
  },
  {
    "id": "agile_1306",
    "question": "How does XP promote quick feedback loops?",
    "options": [
      { "id": "option_1", "text": "By limiting communication to the end of development", "isCorrect": false },
      { "id": "option_2", "text": "By removing customers from the development process", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding frequent code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By using continuous testing and customer involvement", "isCorrect": true }
    ],
    "hint": "XP encourages frequent interactions between developers and customers.",
    "answerDescription": "Frequent testing and regular customer input ensure that feedback loops are short and effective."
  },
  {
    "id": "agile_1307",
    "question": "Which XP practice helps prevent knowledge silos within a team?",
    "options": [
      { "id": "option_1", "text": "Code Reviews", "isCorrect": false },
      { "id": "option_2", "text": "Stand-up Meetings", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "Collective Code Ownership", "isCorrect": true }
    ],
    "hint": "This practice ensures that every developer is responsible for the codebase.",
    "answerDescription": "With Collective Code Ownership, any team member can improve and modify any part of the code."
  },
  {
    "id": "agile_1308",
    "question": "Why does XP recommend simple design in software development?",
    "options": [
      { "id": "option_1", "text": "To create a complex system early on", "isCorrect": false },
      { "id": "option_2", "text": "To delay software delivery", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on non-functional requirements", "isCorrect": false },
      { "id": "option_4", "text": "To build just enough functionality to meet current needs", "isCorrect": true }
    ],
    "hint": "This principle avoids over-engineering and unnecessary complexity.",
    "answerDescription": "XP promotes simplicity to reduce development time and ensure flexibility for future changes."
  },
  {
    "id": "agile_1309",
    "question": "What is the main goal of 'Metaphor' in XP?",
    "options": [
      { "id": "option_1", "text": "To enforce strict documentation", "isCorrect": false },
      { "id": "option_2", "text": "To define a rigid architectural framework", "isCorrect": false },
      { "id": "option_3", "text": "To limit collaboration between developers", "isCorrect": false },
      { "id": "option_4", "text": "To provide a shared understanding of the system's design", "isCorrect": true }
    ],
    "hint": "This practice helps developers communicate using a common analogy.",
    "answerDescription": "Metaphors in XP make complex concepts easier to understand and discuss within the team."
  },
  {
    "id": "agile_1310",
    "question": "What does XP recommend regarding the frequency of software releases?",
    "options": [
      { "id": "option_1", "text": "Releasing only at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "Releasing in large batches", "isCorrect": false },
      { "id": "option_3", "text": "Releasing only when major features are complete", "isCorrect": false },
      { "id": "option_4", "text": "Frequent small releases", "isCorrect": true }
    ],
    "hint": "This approach ensures that customers get value as soon as possible.",
    "answerDescription": "Frequent small releases allow teams to deliver working software quickly and incorporate feedback."
  },
  {
    "id": "agile_1311",
    "question": "What is the benefit of continuous testing in XP?",
    "options": [
      { "id": "option_1", "text": "It delays deployment", "isCorrect": false },
      { "id": "option_2", "text": "It increases the complexity of software", "isCorrect": false },
      { "id": "option_3", "text": "It allows defects to accumulate until the end", "isCorrect": false },
      { "id": "option_4", "text": "It identifies and fixes issues early", "isCorrect": true }
    ],
    "hint": "XP encourages catching issues as soon as possible.",
    "answerDescription": "Continuous testing helps developers detect and fix issues before they become costly problems."
  },{
    "id": "agile_1312",
    "question": "Which XP practice encourages two developers to work together at the same workstation?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": true },
      { "id": "option_2", "text": "Test-Driven Development", "isCorrect": false },
      { "id": "option_3", "text": "Code Reviews", "isCorrect": false },
      { "id": "option_4", "text": "Continuous Integration", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working on the same piece of code.",
    "answerDescription": "Pair Programming helps improve code quality and knowledge sharing within the team."
  },
  {
    "id": "agile_1313",
    "question": "What is the primary goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To ensure that code is thoroughly tested before implementation", "isCorrect": true },
      { "id": "option_2", "text": "To delay testing until after deployment", "isCorrect": false },
      { "id": "option_3", "text": "To replace all manual testing", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for refactoring", "isCorrect": false }
    ],
    "hint": "This practice ensures code correctness from the start.",
    "answerDescription": "TDD requires writing tests before implementing functionality, ensuring high-quality and maintainable code."
  },
  {
    "id": "agile_1314",
    "question": "Why does XP emphasize the practice of Continuous Integration?",
    "options": [
      { "id": "option_1", "text": "To detect integration issues early", "isCorrect": true },
      { "id": "option_2", "text": "To increase development time", "isCorrect": false },
      { "id": "option_3", "text": "To delay testing until the end", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the frequency of code merging", "isCorrect": false }
    ],
    "hint": "This practice helps identify integration problems as soon as possible.",
    "answerDescription": "Continuous Integration ensures that new changes are tested and merged frequently, reducing integration issues."
  },
  {
    "id": "agile_1315",
    "question": "What is the purpose of 'Small Releases' in XP?",
    "options": [
      { "id": "option_1", "text": "To deliver working software frequently", "isCorrect": true },
      { "id": "option_2", "text": "To delay feature delivery", "isCorrect": false },
      { "id": "option_3", "text": "To avoid getting customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "To reduce testing efforts", "isCorrect": false }
    ],
    "hint": "XP encourages delivering value to customers quickly.",
    "answerDescription": "Small Releases ensure that customers receive updates frequently and provide timely feedback."
  },
  {
    "id": "agile_1316",
    "question": "How does XP improve collaboration among developers?",
    "options": [
      { "id": "option_1", "text": "By encouraging shared code ownership", "isCorrect": true },
      { "id": "option_2", "text": "By limiting communication between team members", "isCorrect": false },
      { "id": "option_3", "text": "By assigning strict ownership to specific code sections", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging pair programming", "isCorrect": false }
    ],
    "hint": "XP encourages all team members to contribute to the entire codebase.",
    "answerDescription": "Shared Code Ownership allows any developer to improve and modify any part of the code, promoting collaboration."
  },
  {
    "id": "agile_1317",
    "question": "Why does XP recommend an on-site customer?",
    "options": [
      { "id": "option_1", "text": "To provide immediate feedback on requirements", "isCorrect": true },
      { "id": "option_2", "text": "To delay decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the development teamâ€™s autonomy", "isCorrect": false },
      { "id": "option_4", "text": "To replace the project managerâ€™s role", "isCorrect": false }
    ],
    "hint": "This practice ensures that business needs are understood and met quickly.",
    "answerDescription": "An on-site customer helps the development team clarify requirements and adjust features in real-time."
  },
  {
    "id": "agile_1318",
    "question": "What is the benefit of maintaining a sustainable pace in XP?",
    "options": [
      { "id": "option_1", "text": "To prevent burnout and improve productivity", "isCorrect": true },
      { "id": "option_2", "text": "To increase developer workload", "isCorrect": false },
      { "id": "option_3", "text": "To encourage excessive overtime", "isCorrect": false },
      { "id": "option_4", "text": "To speed up feature development at any cost", "isCorrect": false }
    ],
    "hint": "XP promotes a balance between productivity and well-being.",
    "answerDescription": "Sustainable pace ensures that teams remain productive without suffering from burnout or excessive stress."
  },
  {
    "id": "agile_1319",
    "question": "What does XP recommend regarding customer involvement?",
    "options": [
      { "id": "option_1", "text": "Frequent collaboration with the development team", "isCorrect": true },
      { "id": "option_2", "text": "Limited interaction until the final product is ready", "isCorrect": false },
      { "id": "option_3", "text": "Customer involvement only during testing", "isCorrect": false },
      { "id": "option_4", "text": "No direct interaction with the customer", "isCorrect": false }
    ],
    "hint": "XP values continuous feedback from customers.",
    "answerDescription": "Regular customer involvement ensures that the product meets expectations and can be adjusted as needed."
  },
  {
    "id": "agile_1320",
    "question": "What role does 'Refactoring' play in XP?",
    "options": [
      { "id": "option_1", "text": "Improving code structure without changing its behavior", "isCorrect": true },
      { "id": "option_2", "text": "Adding new features without testing", "isCorrect": false },
      { "id": "option_3", "text": "Increasing code complexity for future changes", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding changes to existing code", "isCorrect": false }
    ],
    "hint": "This practice keeps the codebase clean and maintainable.",
    "answerDescription": "Refactoring helps improve readability and maintainability without altering functionality."
  },
  {
    "id": "agile_1321",
    "question": "Why does XP encourage frequent feedback?",
    "options": [
      { "id": "option_1", "text": "To quickly adapt to changing requirements", "isCorrect": true },
      { "id": "option_2", "text": "To reduce customer involvement", "isCorrect": false },
      { "id": "option_3", "text": "To delay testing until the final release", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for refactoring", "isCorrect": false }
    ],
    "hint": "Frequent feedback allows the team to improve continuously.",
    "answerDescription": "Regular feedback ensures that the development process aligns with customer needs and technical requirements."
  },
  {
    "id": "agile_1322",
    "question": "Which XP principle focuses on writing only the necessary amount of code needed for a feature?",
    "options": [
      { "id": "option_1", "text": "Code Reviews", "isCorrect": false },
      { "id": "option_2", "text": "Simplicity", "isCorrect": true },
      { "id": "option_3", "text": "Continuous Deployment", "isCorrect": false },
      { "id": "option_4", "text": "Refactoring", "isCorrect": false }
    ],
    "hint": "This principle ensures minimal complexity and easy maintenance.",
    "answerDescription": "The XP principle of Simplicity ensures that the team writes only the necessary amount of code to achieve functionality."
  },
  {
    "id": "agile_1323",
    "question": "What is the main advantage of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "Increases individual coding speed", "isCorrect": false },
      { "id": "option_2", "text": "Improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "Eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "Reduces the number of tests needed", "isCorrect": false }
    ],
    "hint": "This practice enhances teamwork and reduces defects.",
    "answerDescription": "Pair Programming helps improve code quality by enabling real-time review and knowledge transfer between developers."
  },
  {
    "id": "agile_1324",
    "question": "Which practice in XP ensures that software is always in a working state?",
    "options": [
      { "id": "option_1", "text": "Daily Standups", "isCorrect": false },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "Code Ownership", "isCorrect": false }
    ],
    "hint": "This practice merges code frequently to detect issues early.",
    "answerDescription": "Continuous Integration helps maintain a stable codebase by merging and testing changes regularly."
  },
  {
    "id": "agile_1325",
    "question": "What is the purpose of 'Small Releases' in XP?",
    "options": [
      { "id": "option_1", "text": "To reduce customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "To deliver incremental updates frequently", "isCorrect": true },
      { "id": "option_3", "text": "To limit the number of iterations", "isCorrect": false },
      { "id": "option_4", "text": "To replace unit testing", "isCorrect": false }
    ],
    "hint": "XP promotes frequent delivery of working software.",
    "answerDescription": "Small Releases ensure that customers receive regular updates and can provide continuous feedback."
  },
  {
    "id": "agile_1326",
    "question": "Why does XP emphasize the importance of a 'Sustainable Pace'?",
    "options": [
      { "id": "option_1", "text": "To increase team burnout", "isCorrect": false },
      { "id": "option_2", "text": "To maintain long-term productivity and well-being", "isCorrect": true },
      { "id": "option_3", "text": "To maximize overtime work", "isCorrect": false },
      { "id": "option_4", "text": "To reduce time spent on testing", "isCorrect": false }
    ],
    "hint": "This approach prevents excessive workload and stress.",
    "answerDescription": "A Sustainable Pace ensures that teams work efficiently without excessive pressure, maintaining high performance over time."
  },
  {
    "id": "agile_1327",
    "question": "Which XP practice ensures that developers work on different parts of the codebase?",
    "options": [
      { "id": "option_1", "text": "Standup Meetings", "isCorrect": false },
      { "id": "option_2", "text": "Collective Code Ownership", "isCorrect": true },
      { "id": "option_3", "text": "Burndown Charts", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This practice prevents knowledge silos.",
    "answerDescription": "Collective Code Ownership allows all developers to work on any part of the code, increasing flexibility and collaboration."
  },
  {
    "id": "agile_1328",
    "question": "What is the primary benefit of frequent customer involvement in XP?",
    "options": [
      { "id": "option_1", "text": "Reduces the need for developers to make decisions", "isCorrect": false },
      { "id": "option_2", "text": "Ensures alignment with business needs", "isCorrect": true },
      { "id": "option_3", "text": "Delays feature implementation", "isCorrect": false },
      { "id": "option_4", "text": "Limits testing to the final phase", "isCorrect": false }
    ],
    "hint": "This approach helps teams build the right product.",
    "answerDescription": "Frequent customer involvement ensures that features meet real business needs and reduces the risk of rework."
  },
  {
    "id": "agile_1329",
    "question": "How does XP handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By discouraging any changes", "isCorrect": false },
      { "id": "option_2", "text": "By embracing change through iterative development", "isCorrect": true },
      { "id": "option_3", "text": "By freezing requirements at the start", "isCorrect": false },
      { "id": "option_4", "text": "By delaying adjustments until the next release cycle", "isCorrect": false }
    ],
    "hint": "XP is highly adaptable to new information.",
    "answerDescription": "XP welcomes changing requirements and adapts through continuous iteration and customer collaboration."
  },
  {
    "id": "agile_1330",
    "question": "What is the primary purpose of writing unit tests in XP?",
    "options": [
      { "id": "option_1", "text": "To replace manual testing", "isCorrect": false },
      { "id": "option_2", "text": "To verify that code behaves as expected", "isCorrect": true },
      { "id": "option_3", "text": "To delay integration testing", "isCorrect": false },
      { "id": "option_4", "text": "To increase development time", "isCorrect": false }
    ],
    "hint": "These tests help catch defects early in development.",
    "answerDescription": "Unit tests ensure that individual components work correctly and help prevent regressions in the code."
  },
  {
    "id": "agile_1331",
    "question": "Why is continuous feedback important in XP?",
    "options": [
      { "id": "option_1", "text": "To limit team communication", "isCorrect": false },
      { "id": "option_2", "text": "To improve decision-making and adaptability", "isCorrect": true },
      { "id": "option_3", "text": "To finalize requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the number of iterations", "isCorrect": false }
    ],
    "hint": "XP relies on rapid learning and adjustments.",
    "answerDescription": "Continuous feedback helps teams quickly address issues and align development with evolving requirements."
  },  {
    "id": "agile_1332",
    "question": "What is the main goal of Test-Driven Development (TDD) in XP?",
    "options": [
      { "id": "option_1", "text": "To eliminate the need for code refactoring", "isCorrect": false },
      { "id": "option_2", "text": "To reduce customer involvement in testing", "isCorrect": false },
      { "id": "option_3", "text": "To ensure code correctness before implementation", "isCorrect": true },
      { "id": "option_4", "text": "To allow last-minute requirement changes", "isCorrect": false }
    ],
    "hint": "This practice focuses on writing tests before the code itself.",
    "answerDescription": "TDD ensures that every piece of code is tested before implementation, improving reliability and maintainability."
  },
  {
    "id": "agile_1333",
    "question": "Which of the following XP practices helps prevent bottlenecks by allowing any team member to work on any part of the code?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "User Stories", "isCorrect": false },
      { "id": "option_3", "text": "Collective Code Ownership", "isCorrect": true },
      { "id": "option_4", "text": "Task Prioritization", "isCorrect": false }
    ],
    "hint": "This practice ensures that knowledge is shared among all developers.",
    "answerDescription": "Collective Code Ownership prevents bottlenecks by allowing all developers to contribute to any part of the codebase."
  },
  {
    "id": "agile_1334",
    "question": "Why does XP encourage refactoring?",
    "options": [
      { "id": "option_1", "text": "To slow down development for quality checks", "isCorrect": false },
      { "id": "option_2", "text": "To delay delivery until all code is perfect", "isCorrect": false },
      { "id": "option_3", "text": "To continuously improve code structure without changing functionality", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for unit testing", "isCorrect": false }
    ],
    "hint": "This process improves maintainability without altering behavior.",
    "answerDescription": "XP promotes refactoring to enhance code readability, reduce complexity, and ensure long-term maintainability."
  },
  {
    "id": "agile_1335",
    "question": "Which XP principle focuses on delivering working software as early as possible?",
    "options": [
      { "id": "option_1", "text": "Code Ownership", "isCorrect": false },
      { "id": "option_2", "text": "Sustainable Pace", "isCorrect": false },
      { "id": "option_3", "text": "Small Releases", "isCorrect": true },
      { "id": "option_4", "text": "Customer Testing", "isCorrect": false }
    ],
    "hint": "XP values early and frequent delivery.",
    "answerDescription": "The Small Releases principle ensures that teams deliver functional software frequently, enabling early feedback and adaptation."
  },
  {
    "id": "agile_1336",
    "question": "What is the key reason for using a 'Metaphor' in XP?",
    "options": [
      { "id": "option_1", "text": "To replace technical documentation", "isCorrect": false },
      { "id": "option_2", "text": "To simplify coding standards", "isCorrect": false },
      { "id": "option_3", "text": "To create a shared understanding of the system", "isCorrect": true },
      { "id": "option_4", "text": "To improve customer involvement", "isCorrect": false }
    ],
    "hint": "This practice helps align the teamâ€™s understanding of the system architecture.",
    "answerDescription": "The XP Metaphor principle creates a simple analogy for the system, making it easier to communicate complex ideas."
  },
  {
    "id": "agile_1337",
    "question": "Which XP practice ensures that developers receive immediate feedback on their work?",
    "options": [
      { "id": "option_1", "text": "Code Reviews", "isCorrect": false },
      { "id": "option_2", "text": "Retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "Pair Programming", "isCorrect": true },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working on the same code.",
    "answerDescription": "Pair Programming allows immediate code review and collaboration, improving quality and reducing errors."
  },
  {
    "id": "agile_1338",
    "question": "How does XP improve code quality over time?",
    "options": [
      { "id": "option_1", "text": "By prioritizing speed over correctness", "isCorrect": false },
      { "id": "option_2", "text": "By writing minimal tests", "isCorrect": false },
      { "id": "option_3", "text": "By continuously refactoring and testing", "isCorrect": true },
      { "id": "option_4", "text": "By reducing iterations", "isCorrect": false }
    ],
    "hint": "XP follows an iterative improvement approach.",
    "answerDescription": "XP maintains high code quality through continuous refactoring and testing, ensuring robustness and maintainability."
  },
  {
    "id": "agile_1339",
    "question": "What is the primary reason for having an 'On-site Customer' in XP?",
    "options": [
      { "id": "option_1", "text": "To approve every single line of code", "isCorrect": false },
      { "id": "option_2", "text": "To perform quality assurance testing", "isCorrect": false },
      { "id": "option_3", "text": "To provide immediate feedback and clarify requirements", "isCorrect": true },
      { "id": "option_4", "text": "To replace the product owner role", "isCorrect": false }
    ],
    "hint": "This practice ensures continuous alignment between development and business goals.",
    "answerDescription": "An on-site customer ensures that the team gets real-time feedback, preventing misunderstandings and costly rework."
  },
  {
    "id": "agile_1340",
    "question": "What does XP's 'Sustainable Pace' principle aim to prevent?",
    "options": [
      { "id": "option_1", "text": "Frequent software releases", "isCorrect": false },
      { "id": "option_2", "text": "High test coverage", "isCorrect": false },
      { "id": "option_3", "text": "Developer burnout and exhaustion", "isCorrect": true },
      { "id": "option_4", "text": "Continuous integration", "isCorrect": false }
    ],
    "hint": "XP promotes work-life balance for long-term productivity.",
    "answerDescription": "Sustainable Pace ensures that developers work at a consistent speed without burnout, maintaining quality over time."
  },
  {
    "id": "agile_1341",
    "question": "Which XP practice encourages continuous improvement of the development process?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_2", "text": "Delaying testing until the end", "isCorrect": false },
      { "id": "option_3", "text": "Regular retrospectives and feedback loops", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing customer involvement", "isCorrect": false }
    ],
    "hint": "This practice focuses on learning and adapting over time.",
    "answerDescription": "Regular retrospectives help teams identify whatâ€™s working well and what needs improvement, leading to continuous enhancement of the process."
  },
  {
    "id": "agile_1342",
    "question": "Which XP practice involves writing tests before writing the actual code?",
    "options": [
      { "id": "option_1", "text": "Pair Programming", "isCorrect": false },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": false },
      { "id": "option_3", "text": "Incremental Design", "isCorrect": false },
      { "id": "option_4", "text": "Test-Driven Development (TDD)", "isCorrect": true }
    ],
    "hint": "This practice ensures the code meets the requirements before implementation.",
    "answerDescription": "Test-Driven Development (TDD) helps improve code reliability by requiring tests before actual coding."
  },
  {
    "id": "agile_1343",
    "question": "How does XP ensure quick adaptation to changing customer requirements?",
    "options": [
      { "id": "option_1", "text": "Strict change control processes", "isCorrect": false },
      { "id": "option_2", "text": "Delivering large releases at once", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "Frequent small releases with continuous feedback", "isCorrect": true }
    ],
    "hint": "XP focuses on frequent and iterative deliveries.",
    "answerDescription": "XP enables rapid adaptation by delivering small increments and incorporating continuous customer feedback."
  },
  {
    "id": "agile_1344",
    "question": "Which XP principle promotes close collaboration between developers?",
    "options": [
      { "id": "option_1", "text": "Working in isolation", "isCorrect": false },
      { "id": "option_2", "text": "Code Reviews", "isCorrect": false },
      { "id": "option_3", "text": "Individual Code Ownership", "isCorrect": false },
      { "id": "option_4", "text": "Pair Programming", "isCorrect": true }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair Programming in XP enhances code quality and knowledge sharing by having two developers collaborate on the same task."
  },
  {
    "id": "agile_1345",
    "question": "What is the key benefit of Continuous Integration (CI) in XP?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "It reduces developer collaboration", "isCorrect": false },
      { "id": "option_3", "text": "It allows large code merges at the end of development", "isCorrect": false },
      { "id": "option_4", "text": "It ensures early detection of integration issues", "isCorrect": true }
    ],
    "hint": "CI helps identify and resolve issues sooner rather than later.",
    "answerDescription": "Continuous Integration in XP enables early detection of integration problems, improving software stability and delivery speed."
  },
  {
    "id": "agile_1346",
    "question": "Which XP value emphasizes open and honest team communication?",
    "options": [
      { "id": "option_1", "text": "Courage", "isCorrect": false },
      { "id": "option_2", "text": "Simplicity", "isCorrect": false },
      { "id": "option_3", "text": "Feedback", "isCorrect": false },
      { "id": "option_4", "text": "Communication", "isCorrect": true }
    ],
    "hint": "This value ensures clarity and collaboration in XP teams.",
    "answerDescription": "The Communication value in XP promotes transparent and effective teamwork, ensuring everyone is aligned."
  },
  {
    "id": "agile_1347",
    "question": "How does XP handle defects in software development?",
    "options": [
      { "id": "option_1", "text": "By fixing defects only in the final release", "isCorrect": false },
      { "id": "option_2", "text": "By postponing bug fixes to later iterations", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing testing efforts", "isCorrect": false },
      { "id": "option_4", "text": "By addressing defects as soon as they are found", "isCorrect": true }
    ],
    "hint": "XP values rapid feedback and continuous improvement.",
    "answerDescription": "XP encourages addressing defects immediately, preventing issues from accumulating and ensuring high-quality code."
  },
  {
    "id": "agile_1348",
    "question": "What is the purpose of the 'Customer Tests' practice in XP?",
    "options": [
      { "id": "option_1", "text": "To replace developer unit tests", "isCorrect": false },
      { "id": "option_2", "text": "To delay validation until after development", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for test automation", "isCorrect": false },
      { "id": "option_4", "text": "To validate that the system meets business requirements", "isCorrect": true }
    ],
    "hint": "This practice ensures alignment between software and business needs.",
    "answerDescription": "Customer Tests in XP help confirm that the system behaves as expected from the end-user perspective."
  },
  {
    "id": "agile_1349",
    "question": "Which XP principle helps maintain a sustainable development pace?",
    "options": [
      { "id": "option_1", "text": "Frequent overtime work", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring team well-being", "isCorrect": false },
      { "id": "option_3", "text": "Delaying work until the last minute", "isCorrect": false },
      { "id": "option_4", "text": "Sustainable Pace", "isCorrect": true }
    ],
    "hint": "XP values long-term developer productivity.",
    "answerDescription": "The Sustainable Pace principle in XP ensures developers maintain a healthy work-life balance for consistent performance."
  },
  {
    "id": "agile_1350",
    "question": "What is a key characteristic of XP's approach to design?",
    "options": [
      { "id": "option_1", "text": "Detailed upfront design with fixed plans", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding design until testing is complete", "isCorrect": false },
      { "id": "option_3", "text": "Building complex designs early in the process", "isCorrect": false },
      { "id": "option_4", "text": "Incremental design with continuous refactoring", "isCorrect": true }
    ],
    "hint": "XP embraces an evolving approach to design.",
    "answerDescription": "XP follows an Incremental Design approach, allowing continuous improvement and adaptability to changes."
  },
  {
    "id": "agile_1351",
    "question": "Which XP practice supports knowledge sharing and reduces bottlenecks in development?",
    "options": [
      { "id": "option_1", "text": "Assigning specific code areas to individual developers", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding documentation to increase speed", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing developer collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Collective Code Ownership", "isCorrect": true }
    ],
    "hint": "This practice allows all developers to contribute to any part of the code.",
    "answerDescription": "Collective Code Ownership ensures that no single developer is a bottleneck, improving team agility and flexibility."
  },
  {
    "id": "agile_1352",
    "question": "Which XP practice ensures that the code is continuously reviewed and improved?",
    "options": [
      { "id": "option_1", "text": "Refactoring", "isCorrect": true },
      { "id": "option_2", "text": "Code Freezing", "isCorrect": false },
      { "id": "option_3", "text": "Big Design Up Front", "isCorrect": false },
      { "id": "option_4", "text": "Feature Locking", "isCorrect": false }
    ],
    "hint": "This practice improves code quality without changing its behavior.",
    "answerDescription": "Refactoring in XP involves continuously improving the code without altering its external behavior."
  },
  {
    "id": "agile_1353",
    "question": "What is the role of a customer in an XP team?",
    "options": [
      { "id": "option_1", "text": "To define requirements and provide feedback", "isCorrect": true },
      { "id": "option_2", "text": "To manage the development team", "isCorrect": false },
      { "id": "option_3", "text": "To write test cases for developers", "isCorrect": false },
      { "id": "option_4", "text": "To handle deployment and maintenance", "isCorrect": false }
    ],
    "hint": "The customer ensures the team delivers value through direct interaction.",
    "answerDescription": "In XP, the customer actively defines requirements, prioritizes features, and provides continuous feedback."
  },
  {
    "id": "agile_1354",
    "question": "Which XP value emphasizes delivering simple solutions instead of overcomplicating designs?",
    "options": [
      { "id": "option_1", "text": "Simplicity", "isCorrect": true },
      { "id": "option_2", "text": "Courage", "isCorrect": false },
      { "id": "option_3", "text": "Feedback", "isCorrect": false },
      { "id": "option_4", "text": "Respect", "isCorrect": false }
    ],
    "hint": "XP promotes minimal and efficient solutions.",
    "answerDescription": "The Simplicity value in XP encourages teams to avoid unnecessary complexity in design and implementation."
  },
  {
    "id": "agile_1355",
    "question": "Which XP practice encourages rapid detection of defects and integration issues?",
    "options": [
      { "id": "option_1", "text": "Continuous Integration", "isCorrect": true },
      { "id": "option_2", "text": "Manual Code Merging", "isCorrect": false },
      { "id": "option_3", "text": "Late-Stage Testing", "isCorrect": false },
      { "id": "option_4", "text": "Quarterly Release Planning", "isCorrect": false }
    ],
    "hint": "This practice involves merging code changes frequently to avoid conflicts.",
    "answerDescription": "Continuous Integration ensures that new code is regularly merged and tested, reducing integration risks."
  },
  {
    "id": "agile_1356",
    "question": "How does XP promote adaptability in software development?",
    "options": [
      { "id": "option_1", "text": "By welcoming changing requirements", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing a fixed plan", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging refactoring", "isCorrect": false },
      { "id": "option_4", "text": "By requiring long approval processes for changes", "isCorrect": false }
    ],
    "hint": "XP embraces change as part of the development process.",
    "answerDescription": "XP welcomes changing requirements, allowing teams to adapt quickly and deliver value iteratively."
  },
  {
    "id": "agile_1357",
    "question": "What does Test-Driven Development (TDD) in XP help achieve?",
    "options": [
      { "id": "option_1", "text": "Ensures code correctness before implementation", "isCorrect": true },
      { "id": "option_2", "text": "Eliminates the need for unit testing", "isCorrect": false },
      { "id": "option_3", "text": "Delays testing until after coding", "isCorrect": false },
      { "id": "option_4", "text": "Removes the need for customer feedback", "isCorrect": false }
    ],
    "hint": "This practice helps prevent defects from occurring in the first place.",
    "answerDescription": "TDD in XP requires writing tests before code, ensuring functionality meets expectations from the start."
  },
  {
    "id": "agile_1358",
    "question": "Which XP principle focuses on making small, frequent releases?",
    "options": [
      { "id": "option_1", "text": "Small Releases", "isCorrect": true },
      { "id": "option_2", "text": "Big Bang Deployment", "isCorrect": false },
      { "id": "option_3", "text": "Monolithic Updates", "isCorrect": false },
      { "id": "option_4", "text": "Annual Planning", "isCorrect": false }
    ],
    "hint": "XP promotes frequent delivery of working software.",
    "answerDescription": "Small Releases in XP ensure customers receive value frequently while minimizing risks."
  },
  {
    "id": "agile_1359",
    "question": "Why is Collective Code Ownership encouraged in XP?",
    "options": [
      { "id": "option_1", "text": "To prevent knowledge silos", "isCorrect": true },
      { "id": "option_2", "text": "To restrict code changes to specific developers", "isCorrect": false },
      { "id": "option_3", "text": "To limit collaboration among team members", "isCorrect": false },
      { "id": "option_4", "text": "To avoid frequent code reviews", "isCorrect": false }
    ],
    "hint": "This practice ensures all developers can work on any part of the code.",
    "answerDescription": "Collective Code Ownership allows the whole team to contribute to any part of the code, increasing flexibility and reducing bottlenecks."
  },
  {
    "id": "agile_1360",
    "question": "Which XP practice ensures that developers work at a sustainable pace?",
    "options": [
      { "id": "option_1", "text": "Sustainable Pace", "isCorrect": true },
      { "id": "option_2", "text": "Overtime Sprinting", "isCorrect": false },
      { "id": "option_3", "text": "Working 24/7", "isCorrect": false },
      { "id": "option_4", "text": "Pushing Hard Deadlines", "isCorrect": false }
    ],
    "hint": "This practice prevents burnout and promotes long-term productivity.",
    "answerDescription": "Sustainable Pace in XP ensures developers work at a balanced and steady rhythm, maintaining high productivity over time."
  },
  {
    "id": "agile_1361",
    "question": "Which XP value supports openness and respect among team members?",
    "options": [
      { "id": "option_1", "text": "Respect", "isCorrect": true },
      { "id": "option_2", "text": "Ambition", "isCorrect": false },
      { "id": "option_3", "text": "Independence", "isCorrect": false },
      { "id": "option_4", "text": "Isolation", "isCorrect": false }
    ],
    "hint": "This value encourages teams to value each other's contributions.",
    "answerDescription": "Respect in XP fosters teamwork by ensuring all members appreciate each other's work and collaborate effectively."
  },  {
    "id": "agile_1362",
    "question": "What is the main benefit of Pair Programming in XP?",
    "options": [
      { "id": "option_1", "text": "It speeds up coding by dividing work", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality through collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "It allows developers to work independently", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working on the same code together.",
    "answerDescription": "Pair Programming in XP enhances code quality by having two developers collaborate, reducing errors and improving design."
  },
  {
    "id": "agile_1363",
    "question": "Why does XP encourage writing tests before writing code?",
    "options": [
      { "id": "option_1", "text": "To delay the development process", "isCorrect": false },
      { "id": "option_2", "text": "To ensure code meets requirements from the start", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for debugging", "isCorrect": false },
      { "id": "option_4", "text": "To avoid writing documentation", "isCorrect": false }
    ],
    "hint": "This practice is known as Test-Driven Development (TDD).",
    "answerDescription": "XP's Test-Driven Development (TDD) approach ensures correctness by requiring tests to be written before implementation."
  },
  {
    "id": "agile_1364",
    "question": "What role does Continuous Integration play in XP?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "It reduces integration issues by merging code frequently", "isCorrect": true },
      { "id": "option_3", "text": "It postpones code deployment", "isCorrect": false },
      { "id": "option_4", "text": "It requires developers to work in isolation", "isCorrect": false }
    ],
    "hint": "This practice helps detect and resolve conflicts early.",
    "answerDescription": "Continuous Integration in XP ensures that new code is merged frequently, reducing integration problems and improving software stability."
  },
  {
    "id": "agile_1365",
    "question": "Which XP practice ensures the development team receives ongoing feedback?",
    "options": [
      { "id": "option_1", "text": "Quarterly Retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Frequent Releases", "isCorrect": true },
      { "id": "option_3", "text": "Annual Planning", "isCorrect": false },
      { "id": "option_4", "text": "Delayed Testing", "isCorrect": false }
    ],
    "hint": "XP emphasizes delivering value continuously.",
    "answerDescription": "Frequent Releases in XP allow customers and stakeholders to provide early and continuous feedback, improving product direction."
  },
  {
    "id": "agile_1366",
    "question": "How does XP ensure that team members collaborate effectively?",
    "options": [
      { "id": "option_1", "text": "By restricting communication", "isCorrect": false },
      { "id": "option_2", "text": "By promoting open workspaces and discussions", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict documentation policies", "isCorrect": false },
      { "id": "option_4", "text": "By limiting developer interactions", "isCorrect": false }
    ],
    "hint": "XP values direct and frequent communication among team members.",
    "answerDescription": "XP encourages open collaboration through shared workspaces, stand-up meetings, and constant team discussions."
  },
  {
    "id": "agile_1367",
    "question": "Which XP practice prevents large-scale rework in software projects?",
    "options": [
      { "id": "option_1", "text": "Postponing Testing", "isCorrect": false },
      { "id": "option_2", "text": "Incremental Development", "isCorrect": true },
      { "id": "option_3", "text": "Big Bang Deployment", "isCorrect": false },
      { "id": "option_4", "text": "Feature Freezing", "isCorrect": false }
    ],
    "hint": "XP focuses on building software step by step.",
    "answerDescription": "Incremental Development in XP ensures that changes are introduced in small, manageable steps to prevent major rework."
  },
  {
    "id": "agile_1368",
    "question": "What is the purpose of the 'Sustainable Pace' practice in XP?",
    "options": [
      { "id": "option_1", "text": "To push developers to work faster", "isCorrect": false },
      { "id": "option_2", "text": "To prevent burnout and maintain long-term productivity", "isCorrect": true },
      { "id": "option_3", "text": "To extend work hours", "isCorrect": false },
      { "id": "option_4", "text": "To minimize team interactions", "isCorrect": false }
    ],
    "hint": "This practice ensures a balanced work-life approach.",
    "answerDescription": "Sustainable Pace in XP helps developers maintain a steady workflow, preventing stress and exhaustion."
  },
  {
    "id": "agile_1369",
    "question": "Which XP value ensures that developers feel safe sharing their ideas?",
    "options": [
      { "id": "option_1", "text": "Secrecy", "isCorrect": false },
      { "id": "option_2", "text": "Courage", "isCorrect": true },
      { "id": "option_3", "text": "Isolation", "isCorrect": false },
      { "id": "option_4", "text": "Hierarchy", "isCorrect": false }
    ],
    "hint": "XP promotes openness and taking risks.",
    "answerDescription": "Courage in XP encourages developers to take initiative, share ideas, and challenge existing practices without fear."
  },
  {
    "id": "agile_1370",
    "question": "What does the XP practice of 'Metaphor' help with?",
    "options": [
      { "id": "option_1", "text": "Clarifying project concepts using simple analogies", "isCorrect": false },
      { "id": "option_2", "text": "Defining the overall system architecture in an understandable way", "isCorrect": true },
      { "id": "option_3", "text": "Eliminating the need for planning", "isCorrect": false },
      { "id": "option_4", "text": "Replacing documentation with informal discussions", "isCorrect": false }
    ],
    "hint": "This practice simplifies understanding of system design.",
    "answerDescription": "The 'Metaphor' practice in XP provides a shared understanding of the system architecture through simple, relatable concepts."
  },
  {
    "id": "agile_1371",
    "question": "Why does XP favor small and frequent releases?",
    "options": [
      { "id": "option_1", "text": "To delay feedback", "isCorrect": false },
      { "id": "option_2", "text": "To deliver working software quickly and iteratively", "isCorrect": true },
      { "id": "option_3", "text": "To avoid user involvement", "isCorrect": false },
      { "id": "option_4", "text": "To focus on long-term planning", "isCorrect": false }
    ],
    "hint": "XP prioritizes delivering value to customers early and often.",
    "answerDescription": "Small and frequent releases in XP allow continuous feedback, reducing risk and improving customer satisfaction."
  },
  {
    "id": "agile_1372",
    "question": "What is the main goal of refactoring in XP?",
    "options": [
      { "id": "option_1", "text": "To add new features without testing", "isCorrect": false },
      { "id": "option_2", "text": "To rewrite the entire system frequently", "isCorrect": false },
      { "id": "option_3", "text": "To improve code structure without changing functionality", "isCorrect": true },
      { "id": "option_4", "text": "To remove all documentation", "isCorrect": false }
    ],
    "hint": "Refactoring focuses on improving existing code while keeping behavior unchanged.",
    "answerDescription": "XP emphasizes refactoring to enhance code readability and maintainability without modifying functionality."
  },
  {
    "id": "agile_1373",
    "question": "Which XP principle ensures that the simplest solution is implemented first?",
    "options": [
      { "id": "option_1", "text": "Big Design Up Front", "isCorrect": false },
      { "id": "option_2", "text": "Code Over Documentation", "isCorrect": false },
      { "id": "option_3", "text": "Simplicity", "isCorrect": true },
      { "id": "option_4", "text": "Rigid Planning", "isCorrect": false }
    ],
    "hint": "XP values reducing complexity and unnecessary work.",
    "answerDescription": "Simplicity in XP encourages developers to choose the least complex solution that fulfills the requirement."
  },
  {
    "id": "agile_1374",
    "question": "How does XP promote customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "By limiting customer involvement", "isCorrect": false },
      { "id": "option_2", "text": "By delivering software only at the end", "isCorrect": false },
      { "id": "option_3", "text": "By incorporating continuous feedback and iterative releases", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding documentation", "isCorrect": false }
    ],
    "hint": "XP values frequent customer interaction and feedback loops.",
    "answerDescription": "XP achieves customer satisfaction through continuous feedback, small releases, and responding to changing requirements."
  },
  {
    "id": "agile_1375",
    "question": "What is the purpose of an on-site customer in XP?",
    "options": [
      { "id": "option_1", "text": "To write all the code", "isCorrect": false },
      { "id": "option_2", "text": "To replace the development team", "isCorrect": false },
      { "id": "option_3", "text": "To provide quick feedback and clarify requirements", "isCorrect": true },
      { "id": "option_4", "text": "To perform software testing alone", "isCorrect": false }
    ],
    "hint": "This role ensures business requirements are understood and implemented correctly.",
    "answerDescription": "An on-site customer in XP ensures that development aligns with business needs by giving direct and immediate feedback."
  },
  {
    "id": "agile_1376",
    "question": "Why does XP emphasize small releases?",
    "options": [
      { "id": "option_1", "text": "To increase project delays", "isCorrect": false },
      { "id": "option_2", "text": "To avoid customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To enable faster iterations and early feedback", "isCorrect": true },
      { "id": "option_4", "text": "To reduce developer collaboration", "isCorrect": false }
    ],
    "hint": "Small releases help mitigate risks and improve adaptability.",
    "answerDescription": "XP encourages small, frequent releases to collect feedback early and adapt to changing requirements quickly."
  },
  {
    "id": "agile_1377",
    "question": "What is the purpose of continuous feedback in XP?",
    "options": [
      { "id": "option_1", "text": "To increase project documentation", "isCorrect": false },
      { "id": "option_2", "text": "To limit interactions between developers and customers", "isCorrect": false },
      { "id": "option_3", "text": "To make real-time improvements based on user and team input", "isCorrect": true },
      { "id": "option_4", "text": "To delay software deployment", "isCorrect": false }
    ],
    "hint": "XP relies on frequent and quick adjustments to improve software quality.",
    "answerDescription": "Continuous feedback allows teams to refine their work, ensuring the product aligns with customer expectations."
  },
  {
    "id": "agile_1378",
    "question": "Which XP practice ensures software remains adaptable to change?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to initial requirements", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring customer input", "isCorrect": false },
      { "id": "option_3", "text": "Frequent refactoring and continuous integration", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing testing efforts", "isCorrect": false }
    ],
    "hint": "XP encourages improving code quality throughout development.",
    "answerDescription": "XP's frequent refactoring and continuous integration help teams quickly adapt to changes and maintain software flexibility."
  },
  {
    "id": "agile_1379",
    "question": "Why does XP encourage Pair Programming?",
    "options": [
      { "id": "option_1", "text": "To double the development time", "isCorrect": false },
      { "id": "option_2", "text": "To prevent developers from working alone", "isCorrect": false },
      { "id": "option_3", "text": "To improve code quality and team collaboration", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for unit testing", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair Programming enhances teamwork, reduces errors, and improves code readability in XP."
  },
  {
    "id": "agile_1380",
    "question": "How does XP address uncertainty in software projects?",
    "options": [
      { "id": "option_1", "text": "By planning everything in advance", "isCorrect": false },
      { "id": "option_2", "text": "By restricting changes after development starts", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change through continuous iterations", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding customer feedback", "isCorrect": false }
    ],
    "hint": "XP is designed to handle evolving requirements.",
    "answerDescription": "XP manages uncertainty by allowing flexibility and responding to changes through iterative development cycles."
  },
  {
    "id": "agile_1381",
    "question": "Which XP value encourages developers to write clear, maintainable code?",
    "options": [
      { "id": "option_1", "text": "Secrecy", "isCorrect": false },
      { "id": "option_2", "text": "Speed over quality", "isCorrect": false },
      { "id": "option_3", "text": "Communication", "isCorrect": true },
      { "id": "option_4", "text": "Ignoring customer needs", "isCorrect": false }
    ],
    "hint": "XP emphasizes collaboration between team members.",
    "answerDescription": "Communication is a key XP value that helps teams create clear, well-structured code and improve teamwork."
  },
  {
    "id": "agile_1382",
    "question": "What role does Test-Driven Development (TDD) play in XP?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "It delays testing until after deployment", "isCorrect": false },
      { "id": "option_3", "text": "It replaces customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "It ensures code is written to pass tests first", "isCorrect": true }
    ],
    "hint": "TDD in XP follows a cycle of writing tests before coding.",
    "answerDescription": "Test-Driven Development (TDD) ensures that tests drive development by requiring code to be written with testing in mind from the start."
  },
  {
    "id": "agile_1383",
    "question": "Which practice in XP focuses on writing only as much code as needed to fulfill requirements?",
    "options": [
      { "id": "option_1", "text": "Big Design Up Front", "isCorrect": false },
      { "id": "option_2", "text": "Code Hoarding", "isCorrect": false },
      { "id": "option_3", "text": "Feature Overloading", "isCorrect": false },
      { "id": "option_4", "text": "YAGNI (You Arenâ€™t Gonna Need It)", "isCorrect": true }
    ],
    "hint": "This principle prevents unnecessary complexity in software development.",
    "answerDescription": "XP's YAGNI principle discourages adding extra features unless absolutely necessary, reducing wasted effort and complexity."
  },
  {
    "id": "agile_1384",
    "question": "Why does XP emphasize sustainable pace?",
    "options": [
      { "id": "option_1", "text": "To encourage overtime work", "isCorrect": false },
      { "id": "option_2", "text": "To maximize short-term output at the cost of quality", "isCorrect": false },
      { "id": "option_3", "text": "To reduce collaboration between team members", "isCorrect": false },
      { "id": "option_4", "text": "To prevent developer burnout and maintain productivity", "isCorrect": true }
    ],
    "hint": "A balanced work rhythm ensures long-term efficiency.",
    "answerDescription": "XPâ€™s sustainable pace principle promotes a consistent workload to maintain both developer well-being and software quality."
  },
  {
    "id": "agile_1385",
    "question": "What is the purpose of continuous integration in XP?",
    "options": [
      { "id": "option_1", "text": "To delay code integration until project completion", "isCorrect": false },
      { "id": "option_2", "text": "To reduce team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To avoid frequent code commits", "isCorrect": false },
      { "id": "option_4", "text": "To ensure that all changes are integrated frequently and tested", "isCorrect": true }
    ],
    "hint": "This practice prevents integration issues by merging changes regularly.",
    "answerDescription": "Continuous integration helps maintain software stability by incorporating changes frequently and catching issues early."
  },
  {
    "id": "agile_1386",
    "question": "Which XP practice promotes immediate correction of coding defects?",
    "options": [
      { "id": "option_1", "text": "Avoiding testing", "isCorrect": false },
      { "id": "option_2", "text": "Delaying bug fixes until release", "isCorrect": false },
      { "id": "option_3", "text": "Ignoring minor defects", "isCorrect": false },
      { "id": "option_4", "text": "Fixing issues as soon as they are identified", "isCorrect": true }
    ],
    "hint": "XP emphasizes addressing problems early rather than postponing fixes.",
    "answerDescription": "By fixing defects immediately, XP teams ensure high software quality and prevent the accumulation of technical debt."
  },
  {
    "id": "agile_1387",
    "question": "What is the key benefit of XPâ€™s collective code ownership?",
    "options": [
      { "id": "option_1", "text": "Only one developer can modify the codebase", "isCorrect": false },
      { "id": "option_2", "text": "Developers work on isolated sections of the code", "isCorrect": false },
      { "id": "option_3", "text": "Code changes are restricted to senior developers", "isCorrect": false },
      { "id": "option_4", "text": "Any team member can improve any part of the code", "isCorrect": true }
    ],
    "hint": "This practice encourages shared responsibility and knowledge transfer.",
    "answerDescription": "XP's collective code ownership enables all developers to contribute to improvements, increasing collaboration and reducing bottlenecks."
  },
  {
    "id": "agile_1388",
    "question": "How does XP handle changing requirements in software development?",
    "options": [
      { "id": "option_1", "text": "By rejecting all changes once coding starts", "isCorrect": false },
      { "id": "option_2", "text": "By freezing requirements after initial planning", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging customer involvement after the first iteration", "isCorrect": false },
      { "id": "option_4", "text": "By embracing change through iterative development", "isCorrect": true }
    ],
    "hint": "XP is designed to adapt to evolving project needs.",
    "answerDescription": "XP thrives in dynamic environments by incorporating feedback continuously and allowing for flexibility in software requirements."
  },
  {
    "id": "agile_1389",
    "question": "What is the significance of the XP value â€˜Courageâ€™?",
    "options": [
      { "id": "option_1", "text": "To encourage taking reckless risks", "isCorrect": false },
      { "id": "option_2", "text": "To ignore customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "To allow developers to work in isolation", "isCorrect": false },
      { "id": "option_4", "text": "To promote open communication and address challenges proactively", "isCorrect": true }
    ],
    "hint": "This XP value supports transparency and continuous improvement.",
    "answerDescription": "Courage in XP encourages developers to refactor code, raise concerns, and adapt to new challenges without fear."
  },
  {
    "id": "agile_1390",
    "question": "Which XP principle ensures that a project remains aligned with customer needs?",
    "options": [
      { "id": "option_1", "text": "Avoiding customer input after development starts", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on technical excellence", "isCorrect": false },
      { "id": "option_3", "text": "Following a rigid, pre-defined plan", "isCorrect": false },
      { "id": "option_4", "text": "Involving customers continuously throughout the process", "isCorrect": true }
    ],
    "hint": "XP relies on active customer participation to guide development.",
    "answerDescription": "Customer involvement in XP ensures that software is continuously shaped according to business needs and user expectations."
  },
  {
    "id": "agile_1391",
    "question": "Why is simplicity valued in XP development?",
    "options": [
      { "id": "option_1", "text": "To make coding more complicated", "isCorrect": false },
      { "id": "option_2", "text": "To delay releases and updates", "isCorrect": false },
      { "id": "option_3", "text": "To create unnecessary features", "isCorrect": false },
      { "id": "option_4", "text": "To reduce complexity and make future changes easier", "isCorrect": true }
    ],
    "hint": "XP prioritizes straightforward solutions over complexity.",
    "answerDescription": "Simplicity in XP avoids overengineering, ensuring that only the necessary features are developed and maintained efficiently."
  },
  {
    "id": "agile_1392",
    "question": "Which XP practice helps ensure that the code remains maintainable and efficient over time?",
    "options": [
      { "id": "option_1", "text": "Refactoring", "isCorrect": true },
      { "id": "option_2", "text": "Code Duplication", "isCorrect": false },
      { "id": "option_3", "text": "Waterfall Planning", "isCorrect": false },
      { "id": "option_4", "text": "Skipping Testing", "isCorrect": false }
    ],
    "hint": "This practice improves code structure without changing functionality.",
    "answerDescription": "Refactoring in XP ensures that the codebase remains clean and adaptable by improving structure without altering behavior."
  },
  {
    "id": "agile_1393",
    "question": "What is the usage of pair programming in XP?",
    "options": [
      { "id": "option_1", "text": "To improve code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_2", "text": "To increase individual workload", "isCorrect": false },
      { "id": "option_3", "text": "To reduce collaboration among developers", "isCorrect": false },
      { "id": "option_4", "text": "To limit communication between team members", "isCorrect": false }
    ],
    "hint": "This practice involves two developers working together on the same code.",
    "answerDescription": "Pair programming enhances code quality by encouraging collaboration and knowledge exchange between developers."
  },
  {
    "id": "agile_1394",
    "question": "Which XP principle focuses on delivering working software frequently?",
    "options": [
      { "id": "option_1", "text": "Small Releases", "isCorrect": true },
      { "id": "option_2", "text": "Big Bang Integration", "isCorrect": false },
      { "id": "option_3", "text": "Extensive Documentation First", "isCorrect": false },
      { "id": "option_4", "text": "Late Testing", "isCorrect": false }
    ],
    "hint": "XP promotes delivering software in short, functional increments.",
    "answerDescription": "XPâ€™s small releases ensure that customers receive functional software frequently, enabling fast feedback and iteration."
  },
  {
    "id": "agile_1395",
    "question": "Why does XP emphasize continuous feedback?",
    "options": [
      { "id": "option_1", "text": "To improve development through regular evaluation", "isCorrect": true },
      { "id": "option_2", "text": "To delay problem detection until later stages", "isCorrect": false },
      { "id": "option_3", "text": "To avoid customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "To reduce code reviews", "isCorrect": false }
    ],
    "hint": "Feedback helps teams refine and improve their work continuously.",
    "answerDescription": "XP relies on frequent feedback loops to enhance product quality, improve processes, and adapt to changing requirements."
  },
  {
    "id": "agile_1396",
    "question": "How does XP support adaptability in software development?",
    "options": [
      { "id": "option_1", "text": "By embracing changing requirements", "isCorrect": true },
      { "id": "option_2", "text": "By following a strict, unchangeable plan", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By restricting team collaboration", "isCorrect": false }
    ],
    "hint": "XP is designed to accommodate evolving customer needs.",
    "answerDescription": "XPâ€™s iterative approach allows teams to adjust to new requirements while maintaining efficiency and product quality."
  },
  {
    "id": "agile_1397",
    "question": "What is the key advantage of writing automated unit tests in XP?",
    "options": [
      { "id": "option_1", "text": "To catch defects early", "isCorrect": true },
      { "id": "option_2", "text": "To replace all manual testing", "isCorrect": false },
      { "id": "option_3", "text": "To increase the complexity of development", "isCorrect": false },
      { "id": "option_4", "text": "To delay debugging until later stages", "isCorrect": false }
    ],
    "hint": "Unit tests help identify problems before they affect the whole system.",
    "answerDescription": "By catching defects early, automated unit tests reduce debugging time and improve code reliability in XP."
  },
  {
    "id": "agile_1398",
    "question": "Which XP value encourages transparency and openness in a team?",
    "options": [
      { "id": "option_1", "text": "Communication", "isCorrect": true },
      { "id": "option_2", "text": "Secrecy", "isCorrect": false },
      { "id": "option_3", "text": "Isolation", "isCorrect": false },
      { "id": "option_4", "text": "Rigid Documentation", "isCorrect": false }
    ],
    "hint": "This value promotes open dialogue between team members.",
    "answerDescription": "Communication is a core XP value that ensures developers, stakeholders, and customers collaborate effectively."
  },
  {
    "id": "agile_1399",
    "question": "Why does XP recommend writing the simplest code that works?",
    "options": [
      { "id": "option_1", "text": "To reduce complexity and improve maintainability", "isCorrect": true },
      { "id": "option_2", "text": "To increase technical debt", "isCorrect": false },
      { "id": "option_3", "text": "To delay software releases", "isCorrect": false },
      { "id": "option_4", "text": "To add unnecessary features", "isCorrect": false }
    ],
    "hint": "Simple code is easier to understand, test, and modify.",
    "answerDescription": "XPâ€™s focus on simplicity prevents overengineering and ensures that code remains adaptable to future changes."
  },
  {
    "id": "agile_1400",
    "question": "What is the primary benefit of customer collaboration in XP?",
    "options": [
      { "id": "option_1", "text": "To ensure the software meets business needs", "isCorrect": true },
      { "id": "option_2", "text": "To extend project timelines", "isCorrect": false },
      { "id": "option_3", "text": "To avoid testing", "isCorrect": false },
      { "id": "option_4", "text": "To reduce team involvement", "isCorrect": false }
    ],
    "hint": "Direct customer involvement leads to better alignment with business goals.",
    "answerDescription": "Customer collaboration ensures that the software remains aligned with user needs and delivers maximum value."
  },
  {
    "id": "agile_1401",
    "question": "How does XP ensure that all developers can contribute to any part of the codebase?",
    "options": [
      { "id": "option_1", "text": "By using collective code ownership", "isCorrect": true },
      { "id": "option_2", "text": "By assigning code sections permanently to individuals", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging knowledge sharing", "isCorrect": false },
      { "id": "option_4", "text": "By limiting access to specific team members", "isCorrect": false }
    ],
    "hint": "This practice removes bottlenecks and encourages shared responsibility.",
    "answerDescription": "Collective code ownership in XP allows all developers to make changes and improvements, fostering teamwork and agility."
  },
  {
    "id": "agile_1402",
    "question": "What is the primary purpose of SAFe's Program Increment (PI) Planning?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to individual developers", "isCorrect": false },
      { "id": "option_2", "text": "To align teams on a shared vision and objectives", "isCorrect": true },
      { "id": "option_3", "text": "To replace daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "To finalize all requirements upfront", "isCorrect": false }
    ],
    "hint": "This event helps coordinate work across multiple Agile teams.",
    "answerDescription": "PI Planning in SAFe ensures teams align on a common vision, dependencies, and objectives for the upcoming increment."
  },
  {
    "id": "agile_1403",
    "question": "Which core competency of SAFe focuses on building high-performing teams and fostering a culture of collaboration?",
    "options": [
      { "id": "option_1", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Agile Product Delivery", "isCorrect": true },
      { "id": "option_3", "text": "Lean Portfolio Management", "isCorrect": false },
      { "id": "option_4", "text": "Continuous Learning Culture", "isCorrect": false }
    ],
    "hint": "This competency emphasizes customer-centric development and team collaboration.",
    "answerDescription": "Agile Product Delivery ensures teams focus on delivering value efficiently while fostering collaboration and responsiveness to customer needs."
  },
  {
    "id": "agile_1404",
    "question": "How does SAFe's Built-in Quality principle contribute to Agile development?",
    "options": [
      { "id": "option_1", "text": "By focusing only on final testing before release", "isCorrect": false },
      { "id": "option_2", "text": "By embedding quality practices throughout development", "isCorrect": true },
      { "id": "option_3", "text": "By increasing documentation requirements", "isCorrect": false },
      { "id": "option_4", "text": "By limiting collaboration between teams", "isCorrect": false }
    ],
    "hint": "Quality is not an afterthought but a continuous process in SAFe.",
    "answerDescription": "SAFe ensures Built-in Quality by integrating testing, automation, and continuous feedback throughout the development lifecycle."
  },
  {
    "id": "agile_1405",
    "question": "What is the main role of the System Architect in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define the technical roadmap and architectural vision", "isCorrect": false },
      { "id": "option_2", "text": "To provide guidance on system design and integration", "isCorrect": true },
      { "id": "option_3", "text": "To assign coding tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "To manage Agile Release Train budgets", "isCorrect": false }
    ],
    "hint": "This role ensures the technical integrity of solutions.",
    "answerDescription": "The System Architect in SAFe provides technical direction, ensuring scalability, performance, and system integration across Agile teams."
  },
  {
    "id": "agile_1406",
    "question": "Why does SAFe emphasize Lean Portfolio Management (LPM)?",
    "options": [
      { "id": "option_1", "text": "To centralize decision-making at the executive level", "isCorrect": false },
      { "id": "option_2", "text": "To align strategy with execution through decentralized funding and governance", "isCorrect": true },
      { "id": "option_3", "text": "To replace Agile Release Trains with waterfall planning", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for customer feedback", "isCorrect": false }
    ],
    "hint": "LPM balances business strategy with Agile execution.",
    "answerDescription": "Lean Portfolio Management (LPM) in SAFe ensures that funding, governance, and strategy align with Agile principles to deliver value efficiently."
  },  {
    "id": "agile_1407",
    "question": "What is the purpose of the Agile Release Train (ART) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To coordinate large waterfall projects", "isCorrect": false },
      { "id": "option_2", "text": "To replace individual Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To manage portfolio budgeting", "isCorrect": false },
      { "id": "option_4", "text": "To align multiple teams toward a shared mission and deliver value", "isCorrect": true }
    ],
    "hint": "The ART ensures teams work toward a common goal in SAFe.",
    "answerDescription": "The Agile Release Train (ART) in SAFe aligns multiple Agile teams to a shared business and technical mission, ensuring value delivery in a coordinated manner."
  },
  {
    "id": "agile_1408",
    "question": "Which SAFe event helps teams reflect and improve after a Program Increment (PI)?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_2", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Inspect and Adapt Workshop", "isCorrect": true }
    ],
    "hint": "This event focuses on continuous improvement at the program level.",
    "answerDescription": "The Inspect and Adapt Workshop in SAFe allows teams to reflect on the past Program Increment and make improvements for the next iteration."
  },
  {
    "id": "agile_1409",
    "question": "What is a key characteristic of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "It requires manual testing before each release", "isCorrect": false },
      { "id": "option_2", "text": "It follows a strict waterfall approach", "isCorrect": false },
      { "id": "option_3", "text": "It discourages automation", "isCorrect": false },
      { "id": "option_4", "text": "It enables frequent, high-quality releases through automation and feedback loops", "isCorrect": true }
    ],
    "hint": "Automation and continuous feedback are essential elements.",
    "answerDescription": "SAFeâ€™s Continuous Delivery Pipeline promotes automation, fast feedback, and frequent releases to ensure high-quality software delivery."
  },
  {
    "id": "agile_1410",
    "question": "What role does the Release Train Engineer (RTE) play in SAFe?",
    "options": [
      { "id": "option_1", "text": "Defines business requirements", "isCorrect": false },
      { "id": "option_2", "text": "Owns product development", "isCorrect": false },
      { "id": "option_3", "text": "Manages individual teams", "isCorrect": false },
      { "id": "option_4", "text": "Facilitates ART events and ensures execution", "isCorrect": true }
    ],
    "hint": "The RTE acts as a servant leader for the Agile Release Train.",
    "answerDescription": "The Release Train Engineer (RTE) ensures Agile Release Train execution by coordinating teams, facilitating events, and removing impediments."
  },
  {
    "id": "agile_1411",
    "question": "Which level of SAFe focuses on portfolio strategy and investment funding?",
    "options": [
      { "id": "option_1", "text": "Team Level", "isCorrect": false },
      { "id": "option_2", "text": "Program Level", "isCorrect": false },
      { "id": "option_3", "text": "Solution Level", "isCorrect": false },
      { "id": "option_4", "text": "Portfolio Level", "isCorrect": true }
    ],
    "hint": "This level aligns investment decisions with business goals.",
    "answerDescription": "SAFeâ€™s Portfolio Level manages strategy, investment funding, and governance to ensure alignment with organizational goals."
  },
  {
    "id": "agile_1412",
    "question": "What is the purpose of SAFeâ€™s Lean Budgets?",
    "options": [
      { "id": "option_1", "text": "To control costs by predefining every project expense", "isCorrect": false },
      { "id": "option_2", "text": "To allocate budgets without considering Agile principles", "isCorrect": false },
      { "id": "option_3", "text": "To maintain traditional financial controls", "isCorrect": false },
      { "id": "option_4", "text": "To enable decentralized decision-making and dynamic funding", "isCorrect": true }
    ],
    "hint": "Lean Budgets support flexibility in funding decisions.",
    "answerDescription": "Lean Budgets in SAFe provide financial agility by decentralizing budget decisions and aligning investment with business priorities."
  },
  {
    "id": "agile_1413",
    "question": "Which principle of SAFe encourages applying systems thinking to development?",
    "options": [
      { "id": "option_1", "text": "Take an individualistic approach", "isCorrect": false },
      { "id": "option_2", "text": "Optimize local efficiencies", "isCorrect": false },
      { "id": "option_3", "text": "Avoid feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "Understand the entire system rather than isolated components", "isCorrect": true }
    ],
    "hint": "A holistic view of development helps optimize the entire value stream.",
    "answerDescription": "SAFeâ€™s systems thinking principle ensures that teams consider dependencies and interactions across the whole system to improve overall performance."
  },
  {
    "id": "agile_1414",
    "question": "How does SAFe promote customer-centricity?",
    "options": [
      { "id": "option_1", "text": "By focusing only on internal business goals", "isCorrect": false },
      { "id": "option_2", "text": "By limiting customer involvement to the end of development", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding direct customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "By incorporating continuous customer feedback and design thinking", "isCorrect": true }
    ],
    "hint": "Customer needs drive Agile development in SAFe.",
    "answerDescription": "SAFeâ€™s customer-centric approach ensures that Agile teams focus on delivering value by integrating customer feedback and design thinking practices."
  },
  {
    "id": "agile_1415",
    "question": "What is the role of the Product Manager in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define technical architectures", "isCorrect": false },
      { "id": "option_2", "text": "To execute PI Planning events", "isCorrect": false },
      { "id": "option_3", "text": "To manage Agile team workloads", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize the program backlog and define product vision", "isCorrect": true }
    ],
    "hint": "This role ensures the right features are built at the right time.",
    "answerDescription": "The Product Manager in SAFe owns the program backlog, defines the product vision, and ensures alignment with business and customer needs."
  },
  {
    "id": "agile_1416",
    "question": "Which SAFe artifact ensures alignment and transparency across teams?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Burndown Chart", "isCorrect": false },
      { "id": "option_3", "text": "Kanban Board", "isCorrect": false },
      { "id": "option_4", "text": "Program Backlog", "isCorrect": true }
    ],
    "hint": "This backlog contains prioritized features for Agile Release Trains.",
    "answerDescription": "The Program Backlog in SAFe provides a prioritized list of features to ensure alignment and transparency across Agile teams."
},  
{
    "id": "agile_1417",
    "question": "What is the primary goal of PI Planning in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define project deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To create detailed task breakdowns", "isCorrect": false },
      { "id": "option_3", "text": "To align Agile teams on a shared vision and objectives", "isCorrect": true },
      { "id": "option_4", "text": "To assign individual tasks to team members", "isCorrect": false }
    ],
    "hint": "This event helps synchronize Agile teams across the ART.",
    "answerDescription": "PI Planning is a key SAFe event where Agile teams align on shared goals and objectives for the upcoming Program Increment."
  },
  {
    "id": "agile_1418",
    "question": "How does SAFe define a Value Stream?",
    "options": [
      { "id": "option_1", "text": "A set of unrelated projects", "isCorrect": false },
      { "id": "option_2", "text": "A group of Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "A sequence of activities that deliver customer value", "isCorrect": true },
      { "id": "option_4", "text": "A financial reporting structure", "isCorrect": false }
    ],
    "hint": "This concept focuses on optimizing the flow of value.",
    "answerDescription": "A Value Stream in SAFe represents a sequence of activities that deliver value to the customer efficiently."
  },
  {
    "id": "agile_1419",
    "question": "Which SAFe Core Value ensures that teams work toward common objectives?",
    "options": [
      { "id": "option_1", "text": "Built-in Quality", "isCorrect": false },
      { "id": "option_2", "text": "Program Execution", "isCorrect": false },
      { "id": "option_3", "text": "Alignment", "isCorrect": true },
      { "id": "option_4", "text": "Transparency", "isCorrect": false }
    ],
    "hint": "This core value ensures synchronization across teams.",
    "answerDescription": "Alignment in SAFe ensures that teams and stakeholders are synchronized to achieve strategic objectives."
  },
  {
    "id": "agile_1420",
    "question": "What is the role of Business Owners in SAFe?",
    "options": [
      { "id": "option_1", "text": "They manage Agile team workloads", "isCorrect": false },
      { "id": "option_2", "text": "They define technical solutions", "isCorrect": false },
      { "id": "option_3", "text": "They provide strategic direction and approve PI objectives", "isCorrect": true },
      { "id": "option_4", "text": "They facilitate daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "Business Owners play a key role in prioritization and strategy.",
    "answerDescription": "In SAFe, Business Owners ensure teams align with business strategy by approving PI objectives and providing guidance."
  },
  {
    "id": "agile_1421",
    "question": "Which SAFe configuration is best suited for large enterprises managing multiple Value Streams?",
    "options": [
      { "id": "option_1", "text": "Essential SAFe", "isCorrect": false },
      { "id": "option_2", "text": "Large Solution SAFe", "isCorrect": false },
      { "id": "option_3", "text": "Full SAFe", "isCorrect": true },
      { "id": "option_4", "text": "Portfolio SAFe", "isCorrect": false }
    ],
    "hint": "This configuration includes all levels of SAFe.",
    "answerDescription": "Full SAFe is the most comprehensive configuration, enabling large enterprises to manage multiple Value Streams and Agile Release Trains."
  },
  {
    "id": "agile_1422",
    "question": "What is a key benefit of DevOps in SAFe?",
    "options": [
      { "id": "option_1", "text": "Increased manual testing", "isCorrect": false },
      { "id": "option_2", "text": "Delayed software releases", "isCorrect": false },
      { "id": "option_3", "text": "Faster, more reliable delivery of value", "isCorrect": true },
      { "id": "option_4", "text": "Strictly following a waterfall model", "isCorrect": false }
    ],
    "hint": "DevOps accelerates delivery while improving quality.",
    "answerDescription": "SAFeâ€™s DevOps practices focus on automating and streamlining processes to deliver value quickly and reliably."
  },
  {
    "id": "agile_1423",
    "question": "Which backlog in SAFe contains prioritized work for the Agile Release Train?",
    "options": [
      { "id": "option_1", "text": "Team Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Portfolio Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Program Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Backlog", "isCorrect": false }
    ],
    "hint": "This backlog aligns work at the program level.",
    "answerDescription": "The Program Backlog in SAFe contains prioritized features and enablers for Agile Release Trains to execute."
  },
  {
    "id": "agile_1424",
    "question": "What is the purpose of the Solution Train in SAFe?",
    "options": [
      { "id": "option_1", "text": "To manage a single Agile team", "isCorrect": false },
      { "id": "option_2", "text": "To optimize backlog grooming", "isCorrect": false },
      { "id": "option_3", "text": "To coordinate multiple ARTs building large solutions", "isCorrect": true },
      { "id": "option_4", "text": "To facilitate daily team meetings", "isCorrect": false }
    ],
    "hint": "This structure helps scale Agile for large systems.",
    "answerDescription": "The Solution Train in SAFe coordinates multiple ARTs working together to deliver complex, large-scale solutions."
  },
  {
    "id": "agile_1425",
    "question": "How does SAFe support Lean-Agile Leadership?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid command-and-control structures", "isCorrect": false },
      { "id": "option_2", "text": "By limiting decision-making to executives only", "isCorrect": false },
      { "id": "option_3", "text": "By fostering a culture of empowerment, learning, and innovation", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging decentralized decision-making", "isCorrect": false }
    ],
    "hint": "Leaders play a crucial role in enabling Agile transformations.",
    "answerDescription": "Lean-Agile Leadership in SAFe encourages continuous learning, empowerment, and innovation to drive organizational agility."
  },
  {
    "id": "agile_1426",
    "question": "What is the primary function of SAFeâ€™s Architectural Runway?",
    "options": [
      { "id": "option_1", "text": "To delay technical debt resolution", "isCorrect": false },
      { "id": "option_2", "text": "To increase project timelines", "isCorrect": false },
      { "id": "option_3", "text": "To enable the rapid development of future business features", "isCorrect": true },
      { "id": "option_4", "text": "To replace Agile principles with a rigid framework", "isCorrect": false }
    ],
    "hint": "This concept ensures the system can support evolving needs.",
    "answerDescription": "SAFeâ€™s Architectural Runway provides the technical foundation required to develop and implement future business capabilities quickly."
  },
  {
    "id": "agile_1427",
    "question": "What is a key responsibility of the Release Train Engineer (RTE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Facilitating Agile Release Train (ART) events", "isCorrect": true },
      { "id": "option_2", "text": "Assigning individual tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Managing financial budgets", "isCorrect": false },
      { "id": "option_4", "text": "Writing user stories for Agile teams", "isCorrect": false }
    ],
    "hint": "The RTE ensures the ART functions smoothly.",
    "answerDescription": "The RTE facilitates ART events and supports teams in delivering value efficiently."
  },
  {
    "id": "agile_1428",
    "question": "Which event in SAFe provides teams an opportunity for continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Inspect & Adapt (I&A) Workshop", "isCorrect": true },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "System Demo", "isCorrect": false }
    ],
    "hint": "This event is held at the end of each Program Increment.",
    "answerDescription": "The Inspect & Adapt (I&A) Workshop allows teams to reflect and improve continuously."
  },
  {
    "id": "agile_1429",
    "question": "What is the primary function of Lean Portfolio Management (LPM) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Aligning strategy with execution", "isCorrect": true },
      { "id": "option_2", "text": "Managing daily Scrum activities", "isCorrect": false },
      { "id": "option_3", "text": "Defining user stories for developers", "isCorrect": false },
      { "id": "option_4", "text": "Tracking individual team velocity", "isCorrect": false }
    ],
    "hint": "This function ensures that work aligns with business goals.",
    "answerDescription": "LPM in SAFe aligns strategic objectives with Agile execution through funding and governance."
  },
  {
    "id": "agile_1430",
    "question": "Which SAFe principle emphasizes applying a systems view?",
    "options": [
      { "id": "option_1", "text": "Take an economic view", "isCorrect": true },
      { "id": "option_2", "text": "Base milestones on objective evaluation", "isCorrect": false },
      { "id": "option_3", "text": "Organize around value", "isCorrect": false },
      { "id": "option_4", "text": "Unlock intrinsic motivation", "isCorrect": false }
    ],
    "hint": "This principle ensures decision-making considers the whole system.",
    "answerDescription": "SAFe promotes taking an economic view to optimize overall value delivery."
  },
  {
    "id": "agile_1431",
    "question": "What is the primary purpose of an Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "Deliver value through multiple Agile teams", "isCorrect": true },
      { "id": "option_2", "text": "Replace traditional project management", "isCorrect": false },
      { "id": "option_3", "text": "Ensure teams work independently", "isCorrect": false },
      { "id": "option_4", "text": "Define detailed project schedules", "isCorrect": false }
    ],
    "hint": "An ART is composed of multiple Agile teams working towards common objectives.",
    "answerDescription": "Agile Release Trains (ARTs) help deliver value efficiently through cross-functional Agile teams."
  },
  {
    "id": "agile_1432",
    "question": "What is one characteristic of SAFe's Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "It enables frequent and reliable releases", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "It only supports annual releases", "isCorrect": false },
      { "id": "option_4", "text": "It reduces collaboration among teams", "isCorrect": false }
    ],
    "hint": "This pipeline supports rapid and consistent delivery of value.",
    "answerDescription": "SAFeâ€™s Continuous Delivery Pipeline enables teams to deliver high-quality solutions frequently and reliably."
  },
  {
    "id": "agile_1433",
    "question": "What is the purpose of the Portfolio Kanban in SAFe?",
    "options": [
      { "id": "option_1", "text": "Visualizing and managing strategic initiatives", "isCorrect": true },
      { "id": "option_2", "text": "Tracking individual team performance", "isCorrect": false },
      { "id": "option_3", "text": "Replacing backlog prioritization", "isCorrect": false },
      { "id": "option_4", "text": "Assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "This tool helps prioritize and manage high-level initiatives.",
    "answerDescription": "The Portfolio Kanban system in SAFe helps manage strategic initiatives by visualizing and optimizing work-in-progress."
  },
  {
    "id": "agile_1434",
    "question": "Which SAFe role is primarily responsible for defining and prioritizing the Program Backlog?",
    "options": [
      { "id": "option_1", "text": "Product Manager", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "System Architect", "isCorrect": false },
      { "id": "option_4", "text": "Business Owner", "isCorrect": false }
    ],
    "hint": "This role focuses on value delivery at the program level.",
    "answerDescription": "The Product Manager in SAFe is responsible for defining, refining, and prioritizing the Program Backlog."
  },
  {
    "id": "agile_1435",
    "question": "How does SAFe promote Built-In Quality?",
    "options": [
      { "id": "option_1", "text": "By emphasizing test automation and continuous integration", "isCorrect": true },
      { "id": "option_2", "text": "By reducing testing efforts", "isCorrect": false },
      { "id": "option_3", "text": "By delaying defect resolution", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on final-stage reviews", "isCorrect": false }
    ],
    "hint": "This approach ensures quality is maintained throughout the development process.",
    "answerDescription": "Built-In Quality in SAFe ensures that testing and continuous integration are prioritized to maintain high standards."
  },
  {
    "id": "agile_1436",
    "question": "What is the purpose of SAFeâ€™s Customer Centricity principle?",
    "options": [
      { "id": "option_1", "text": "To focus on delivering value that meets customer needs", "isCorrect": true },
      { "id": "option_2", "text": "To reduce team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To emphasize cost-cutting measures", "isCorrect": false },
      { "id": "option_4", "text": "To limit feedback from users", "isCorrect": false }
    ],
    "hint": "This principle ensures that solutions align with user needs.",
    "answerDescription": "Customer Centricity in SAFe emphasizes understanding and delivering value that aligns with customer needs."
},
{
    "id": "agile_1437",
    "question": "What is the role of a System Architect in SAFe?",
    "options": [
      { "id": "option_1", "text": "Coaching Agile Teams", "isCorrect": false },
      { "id": "option_2", "text": "Defining the architectural vision and technical strategy", "isCorrect": true },
      { "id": "option_3", "text": "Facilitating Agile ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "Managing financial budgets", "isCorrect": false }
    ],
    "hint": "This role focuses on system-wide technical decisions.",
    "answerDescription": "The System Architect defines the architectural vision and guides technical decisions across Agile teams."
  },
  {
    "id": "agile_1438",
    "question": "Which SAFe configuration is best suited for enterprises requiring portfolio-level coordination?",
    "options": [
      { "id": "option_1", "text": "Essential SAFe", "isCorrect": false },
      { "id": "option_2", "text": "Portfolio SAFe", "isCorrect": true },
      { "id": "option_3", "text": "Large Solution SAFe", "isCorrect": false },
      { "id": "option_4", "text": "Full SAFe", "isCorrect": false }
    ],
    "hint": "This configuration includes Lean Portfolio Management.",
    "answerDescription": "Portfolio SAFe enables strategic alignment and governance at the portfolio level."
  },
  {
    "id": "agile_1439",
    "question": "What is the primary purpose of the SAFe House of Lean?",
    "options": [
      { "id": "option_1", "text": "To define Agile team roles", "isCorrect": false },
      { "id": "option_2", "text": "To provide a foundation for Lean-Agile thinking", "isCorrect": true },
      { "id": "option_3", "text": "To establish a new project management framework", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict compliance procedures", "isCorrect": false }
    ],
    "hint": "This model helps in decision-making for Lean-Agile enterprises.",
    "answerDescription": "The SAFe House of Lean is a mental model that guides Lean-Agile decision-making and behaviors."
  },
  {
    "id": "agile_1440",
    "question": "What is a primary benefit of decentralized decision-making in SAFe?",
    "options": [
      { "id": "option_1", "text": "Increased reliance on top management", "isCorrect": false },
      { "id": "option_2", "text": "Faster decision-making at the team level", "isCorrect": true },
      { "id": "option_3", "text": "More rigid approval processes", "isCorrect": false },
      { "id": "option_4", "text": "Reduced team autonomy", "isCorrect": false }
    ],
    "hint": "This approach empowers teams to make decisions quickly.",
    "answerDescription": "Decentralized decision-making in SAFe enables teams to respond quickly without waiting for approvals."
  },
  {
    "id": "agile_1441",
    "question": "Which SAFe role is responsible for aligning business goals with Agile Release Train (ART) execution?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Business Owner", "isCorrect": true },
      { "id": "option_3", "text": "Release Train Engineer", "isCorrect": false },
      { "id": "option_4", "text": "Product Owner", "isCorrect": false }
    ],
    "hint": "This role ensures that Agile teams deliver strategic business value.",
    "answerDescription": "Business Owners in SAFe provide direction and ensure that ART execution aligns with business strategy."
  },
  {
    "id": "agile_1442",
    "question": "What is the purpose of WSJF (Weighted Shortest Job First) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To prioritize work based on cost", "isCorrect": false },
      { "id": "option_2", "text": "To sequence jobs based on value and urgency", "isCorrect": true },
      { "id": "option_3", "text": "To assign work randomly", "isCorrect": false },
      { "id": "option_4", "text": "To delay lower-priority work indefinitely", "isCorrect": false }
    ],
    "hint": "This method balances job value and speed of delivery.",
    "answerDescription": "WSJF helps prioritize work based on the cost of delay and job duration."
  },
  {
    "id": "agile_1443",
    "question": "What is a key characteristic of Agile Product Delivery in SAFe?",
    "options": [
      { "id": "option_1", "text": "Releasing products only after full development", "isCorrect": false },
      { "id": "option_2", "text": "Delivering value incrementally and frequently", "isCorrect": true },
      { "id": "option_3", "text": "Minimizing customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Following strict sequential processes", "isCorrect": false }
    ],
    "hint": "This approach ensures continuous value delivery to customers.",
    "answerDescription": "Agile Product Delivery in SAFe focuses on frequent, incremental releases to maximize value."
  },
  {
    "id": "agile_1444",
    "question": "Which event in SAFe ensures alignment across all Agile teams in a Program Increment?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "PI Planning", "isCorrect": true },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Daily Stand-up", "isCorrect": false }
    ],
    "hint": "This event is held at the beginning of each PI.",
    "answerDescription": "PI Planning aligns Agile teams on objectives and dependencies for the upcoming Program Increment."
  },
  {
    "id": "agile_1445",
    "question": "What is a primary responsibility of the Lean-Agile Center of Excellence (LACE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Defining user stories", "isCorrect": false },
      { "id": "option_2", "text": "Driving Agile transformation within an organization", "isCorrect": true },
      { "id": "option_3", "text": "Managing financial reports", "isCorrect": false },
      { "id": "option_4", "text": "Writing test cases for Agile teams", "isCorrect": false }
    ],
    "hint": "This group champions Lean-Agile practices across the enterprise.",
    "answerDescription": "LACE plays a key role in driving and sustaining Agile transformation across an organization."
  },
  {
    "id": "agile_1446",
    "question": "How does SAFe enable faster decision-making at the team level?",
    "options": [
      { "id": "option_1", "text": "By requiring approvals from senior executives", "isCorrect": false },
      { "id": "option_2", "text": "By decentralizing control and empowering teams", "isCorrect": true },
      { "id": "option_3", "text": "By limiting team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing strict hierarchical structures", "isCorrect": false }
    ],
    "hint": "This principle gives teams the freedom to make decisions locally.",
    "answerDescription": "SAFe enables decentralized decision-making, allowing teams to act quickly and efficiently."
},
{
    "id": "agile_1447",
    "question": "Which SAFe core competency focuses on applying Lean and Agile principles to portfolio management?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_3", "text": "Lean Portfolio Management", "isCorrect": true },
      { "id": "option_4", "text": "Organizational Agility", "isCorrect": false }
    ],
    "hint": "This competency aligns business strategy with execution.",
    "answerDescription": "Lean Portfolio Management helps organizations apply Agile and Lean thinking to financial and investment decision-making."
  },
  {
    "id": "agile_1448",
    "question": "What is the primary purpose of SAFeâ€™s Value Stream concept?",
    "options": [
      { "id": "option_1", "text": "To define the companyâ€™s mission statement", "isCorrect": false },
      { "id": "option_2", "text": "To optimize the delivery of value to customers", "isCorrect": false },
      { "id": "option_3", "text": "To align Agile Release Trains with business objectives", "isCorrect": true },
      { "id": "option_4", "text": "To create project management guidelines", "isCorrect": false }
    ],
    "hint": "It ensures that teams focus on delivering value efficiently.",
    "answerDescription": "Value Streams in SAFe define the flow of value from ideation to delivery, ensuring teams work towards customer-centric goals."
  },
  {
    "id": "agile_1449",
    "question": "Which role in SAFe is primarily responsible for facilitating Agile Release Train (ART) execution?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Business Owner", "isCorrect": false },
      { "id": "option_3", "text": "Release Train Engineer (RTE)", "isCorrect": true },
      { "id": "option_4", "text": "Product Manager", "isCorrect": false }
    ],
    "hint": "This role is often considered the 'Chief Scrum Master' of an ART.",
    "answerDescription": "The Release Train Engineer (RTE) helps coordinate teams and ensures the ART is aligned with business goals."
  },
  {
    "id": "agile_1450",
    "question": "What is the main goal of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To eliminate all manual processes", "isCorrect": false },
      { "id": "option_2", "text": "To automate financial reporting", "isCorrect": false },
      { "id": "option_3", "text": "To enable faster, more reliable software releases", "isCorrect": true },
      { "id": "option_4", "text": "To reduce team autonomy", "isCorrect": false }
    ],
    "hint": "This pipeline focuses on delivering value continuously.",
    "answerDescription": "SAFeâ€™s Continuous Delivery Pipeline allows organizations to deliver software quickly and reliably through automation and Agile processes."
  },
  {
    "id": "agile_1451",
    "question": "What is the purpose of SAFeâ€™s Inspect and Adapt (I&A) event?",
    "options": [
      { "id": "option_1", "text": "To review financial reports", "isCorrect": false },
      { "id": "option_2", "text": "To define a new product strategy", "isCorrect": false },
      { "id": "option_3", "text": "To assess ART performance and improve continuously", "isCorrect": true },
      { "id": "option_4", "text": "To finalize all backlog items", "isCorrect": false }
    ],
    "hint": "This event helps teams improve based on real-world feedback.",
    "answerDescription": "The Inspect and Adapt event in SAFe allows Agile teams to review results, identify improvement areas, and make necessary changes."
  },
  {
    "id": "agile_1452",
    "question": "Which key SAFe principle encourages limiting work in progress (WIP)?",
    "options": [
      { "id": "option_1", "text": "Applying systems thinking", "isCorrect": false },
      { "id": "option_2", "text": "Decentralized decision-making", "isCorrect": false },
      { "id": "option_3", "text": "Visualizing and managing work in progress", "isCorrect": true },
      { "id": "option_4", "text": "Aligning business and development", "isCorrect": false }
    ],
    "hint": "This principle ensures teams maintain a steady flow of work.",
    "answerDescription": "Limiting WIP improves workflow efficiency and prevents bottlenecks in Agile processes."
  },
  {
    "id": "agile_1453",
    "question": "What is the role of an Epic Owner in SAFe?",
    "options": [
      { "id": "option_1", "text": "Managing daily Scrum meetings", "isCorrect": false },
      { "id": "option_2", "text": "Defining team-level user stories", "isCorrect": false },
      { "id": "option_3", "text": "Driving the implementation of strategic initiatives", "isCorrect": true },
      { "id": "option_4", "text": "Handling test automation", "isCorrect": false }
    ],
    "hint": "This role focuses on guiding large-scale business initiatives.",
    "answerDescription": "Epic Owners in SAFe are responsible for overseeing Epics and ensuring their alignment with business strategy."
  },
  {
    "id": "agile_1454",
    "question": "Which key artifact in SAFe helps align teams on a shared vision and roadmap?",
    "options": [
      { "id": "option_1", "text": "Sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Feature prioritization matrix", "isCorrect": false },
      { "id": "option_3", "text": "Program backlog", "isCorrect": true },
      { "id": "option_4", "text": "Daily task list", "isCorrect": false }
    ],
    "hint": "This backlog contains features for the Agile Release Train.",
    "answerDescription": "The Program Backlog in SAFe holds prioritized features that guide Agile teams and ensure alignment."
  },
  {
    "id": "agile_1455",
    "question": "Which SAFe event enables synchronization and alignment across multiple Agile teams?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_2", "text": "Feature Grooming", "isCorrect": false },
      { "id": "option_3", "text": "PI Planning", "isCorrect": true },
      { "id": "option_4", "text": "Daily Stand-up", "isCorrect": false }
    ],
    "hint": "This event is conducted at the start of each Program Increment.",
    "answerDescription": "PI Planning ensures all teams on an Agile Release Train (ART) align on shared goals and dependencies."
  },
  {
    "id": "agile_1456",
    "question": "What is the primary focus of the Continuous Exploration phase in SAFe?",
    "options": [
      { "id": "option_1", "text": "Ensuring all work is completed sequentially", "isCorrect": false },
      { "id": "option_2", "text": "Automating test cases", "isCorrect": false },
      { "id": "option_3", "text": "Exploring customer needs and defining solutions", "isCorrect": true },
      { "id": "option_4", "text": "Finalizing all architectural decisions", "isCorrect": false }
    ],
    "hint": "This phase focuses on refining ideas before development begins.",
    "answerDescription": "Continuous Exploration in SAFe ensures teams understand customer needs and define solutions before implementation."
  },
  {
    "id": "agile_1457",
    "question": "What is a key responsibility of the System Architect in SAFe?",
    "options": [
      { "id": "option_1", "text": "Managing business finances", "isCorrect": false },
      { "id": "option_2", "text": "Defining user stories", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing the backlog", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring architectural alignment across teams", "isCorrect": true }
    ],
    "hint": "This role ensures system-wide technical consistency.",
    "answerDescription": "The System Architect in SAFe ensures that technical decisions align with the overall architectural vision."
  },
  {
    "id": "agile_1458",
    "question": "Which SAFe core competency focuses on organizing around value to improve business agility?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Team and Technical Agility", "isCorrect": false },
      { "id": "option_3", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_4", "text": "Organizational Agility", "isCorrect": true }
    ],
    "hint": "This competency emphasizes adaptability at an enterprise level.",
    "answerDescription": "Organizational Agility enables businesses to respond to changes efficiently by structuring teams around delivering value."
  },
  {
    "id": "agile_1459",
    "question": "What is the purpose of SAFeâ€™s Lean-Agile Leadership competency?",
    "options": [
      { "id": "option_1", "text": "To enforce strict hierarchical decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To centralize all planning decisions", "isCorrect": false },
      { "id": "option_4", "text": "To inspire and empower Agile teams", "isCorrect": true }
    ],
    "hint": "This competency promotes a growth mindset.",
    "answerDescription": "Lean-Agile Leadership in SAFe fosters a culture of continuous improvement by empowering teams and leading by example."
  },
  {
    "id": "agile_1460",
    "question": "What is the primary function of SAFeâ€™s Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "To manage company finances", "isCorrect": false },
      { "id": "option_2", "text": "To create isolated development teams", "isCorrect": false },
      { "id": "option_3", "text": "To maintain rigid project deadlines", "isCorrect": false },
      { "id": "option_4", "text": "To deliver value continuously through multiple Agile teams", "isCorrect": true }
    ],
    "hint": "This train delivers value across teams in SAFe.",
    "answerDescription": "Agile Release Trains (ARTs) in SAFe enable cross-functional teams to collaborate and deliver continuous value."
  },
  {
    "id": "agile_1461",
    "question": "Which SAFe event ensures teams align their work with business priorities?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Backlog Grooming", "isCorrect": false },
      { "id": "option_3", "text": "Iteration Planning", "isCorrect": false },
      { "id": "option_4", "text": "PI Planning", "isCorrect": true }
    ],
    "hint": "This event brings together all teams at the start of a Program Increment.",
    "answerDescription": "PI Planning in SAFe ensures alignment of Agile teams with strategic business goals."
  },
  {
    "id": "agile_1462",
    "question": "What is the primary focus of SAFeâ€™s DevOps approach?",
    "options": [
      { "id": "option_1", "text": "To create separate operations teams", "isCorrect": false },
      { "id": "option_2", "text": "To prioritize manual testing", "isCorrect": false },
      { "id": "option_3", "text": "To delay deployments for final approvals", "isCorrect": false },
      { "id": "option_4", "text": "To enable continuous integration and delivery", "isCorrect": true }
    ],
    "hint": "This approach bridges the gap between development and operations.",
    "answerDescription": "SAFeâ€™s DevOps approach ensures faster, more reliable software releases through automation and collaboration."
  },
  {
    "id": "agile_1463",
    "question": "What is one key outcome of SAFeâ€™s Lean Budgeting approach?",
    "options": [
      { "id": "option_1", "text": "Increased approval cycles for every feature", "isCorrect": false },
      { "id": "option_2", "text": "Strict financial control over Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "More rigid annual budget planning", "isCorrect": false },
      { "id": "option_4", "text": "Funding value streams instead of projects", "isCorrect": true }
    ],
    "hint": "This approach shifts focus from individual projects to broader value delivery.",
    "answerDescription": "Lean Budgeting in SAFe funds value streams to improve agility and reduce bureaucratic overhead."
  },
  {
    "id": "agile_1464",
    "question": "Which key SAFe concept helps identify delays and bottlenecks in the system?",
    "options": [
      { "id": "option_1", "text": "Timeboxing", "isCorrect": false },
      { "id": "option_2", "text": "Customer Journey Mapping", "isCorrect": false },
      { "id": "option_3", "text": "Role-Based Access Control", "isCorrect": false },
      { "id": "option_4", "text": "Value Stream Mapping", "isCorrect": true }
    ],
    "hint": "This concept visualizes the entire workflow from start to finish.",
    "answerDescription": "Value Stream Mapping in SAFe helps identify inefficiencies and areas for process improvement."
  },
  {
    "id": "agile_1465",
    "question": "What is the primary benefit of applying SAFeâ€™s Built-In Quality principle?",
    "options": [
      { "id": "option_1", "text": "Faster feature delivery at the cost of stability", "isCorrect": false },
      { "id": "option_2", "text": "Reduced collaboration between teams", "isCorrect": false },
      { "id": "option_3", "text": "Increased project documentation requirements", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring high-quality standards at every development stage", "isCorrect": true }
    ],
    "hint": "This principle emphasizes quality throughout the development lifecycle.",
    "answerDescription": "Built-In Quality in SAFe ensures teams focus on maintaining high-quality standards from the beginning rather than fixing issues later."
  },
  {
    "id": "agile_1466",
    "question": "What is the purpose of SAFeâ€™s Iteration Retrospective?",
    "options": [
      { "id": "option_1", "text": "To review quarterly business strategy", "isCorrect": false },
      { "id": "option_2", "text": "To define new financial targets", "isCorrect": false },
      { "id": "option_3", "text": "To finalize all backlog items for the next release", "isCorrect": false },
      { "id": "option_4", "text": "To reflect on the past iteration and improve", "isCorrect": true }
    ],
    "hint": "This event focuses on continuous team improvement.",
    "answerDescription": "Iteration Retrospectives in SAFe provide teams an opportunity to review their work and identify areas for improvement."
},
{
    "id": "agile_1467",
    "question": "What is the primary usage of the SAFe House of Lean?",
    "options": [
      { "id": "option_1", "text": "To establish a foundation for Lean-Agile thinking", "isCorrect": true },
      { "id": "option_2", "text": "To create a rigid structure for Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To enforce strict rules for team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "To define hierarchical decision-making processes", "isCorrect": false }
    ],
    "hint": "This concept provides guiding principles for SAFe implementation.",
    "answerDescription": "The SAFe House of Lean establishes core principles like flow, innovation, and respect for people."
  },
  {
    "id": "agile_1468",
    "question": "What is one key role of the Release Train Engineer (RTE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Facilitating Agile Release Train (ART) events", "isCorrect": true },
      { "id": "option_2", "text": "Defining business strategy", "isCorrect": false },
      { "id": "option_3", "text": "Owning the product backlog", "isCorrect": false },
      { "id": "option_4", "text": "Developing software features", "isCorrect": false }
    ],
    "hint": "This role is often referred to as the 'Chief Scrum Master' of the ART.",
    "answerDescription": "The RTE is responsible for coordinating Agile Release Train activities and facilitating PI Planning."
  },
  {
    "id": "agile_1469",
    "question": "What is the primary goal of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To enable frequent and reliable value delivery", "isCorrect": true },
      { "id": "option_2", "text": "To delay releases until all features are completed", "isCorrect": false },
      { "id": "option_3", "text": "To replace Agile iterations", "isCorrect": false },
      { "id": "option_4", "text": "To remove the need for testing", "isCorrect": false }
    ],
    "hint": "This pipeline ensures smooth and automated delivery of value.",
    "answerDescription": "The Continuous Delivery Pipeline in SAFe consists of continuous exploration, integration, and deployment to deliver value efficiently."
  },
  {
    "id": "agile_1470",
    "question": "What is the primary responsibility of the Product Management role in SAFe?",
    "options": [
      { "id": "option_1", "text": "Defining and prioritizing the program backlog", "isCorrect": true },
      { "id": "option_2", "text": "Managing team-level sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "Coordinating daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "Overseeing financial reporting", "isCorrect": false }
    ],
    "hint": "This role focuses on prioritizing value at the program level.",
    "answerDescription": "Product Management in SAFe ensures that the most valuable features and initiatives are prioritized in the program backlog."
  },
  {
    "id": "agile_1471",
    "question": "What is the function of a Value Stream in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define and deliver end-to-end business value", "isCorrect": true },
      { "id": "option_2", "text": "To manage team-level backlog items", "isCorrect": false },
      { "id": "option_3", "text": "To track individual employee performance", "isCorrect": false },
      { "id": "option_4", "text": "To create long-term waterfall project plans", "isCorrect": false }
    ],
    "hint": "This concept represents the series of steps to deliver value.",
    "answerDescription": "Value Streams in SAFe connect business strategy with execution by defining and optimizing value delivery."
  },
  {
    "id": "agile_1472",
    "question": "What is the main purpose of the Inspect & Adapt event in SAFe?",
    "options": [
      { "id": "option_1", "text": "To improve processes and outcomes", "isCorrect": true },
      { "id": "option_2", "text": "To allocate budgets for the next PI", "isCorrect": false },
      { "id": "option_3", "text": "To finalize all features before development", "isCorrect": false },
      { "id": "option_4", "text": "To conduct individual employee evaluations", "isCorrect": false }
    ],
    "hint": "This event focuses on continuous improvement.",
    "answerDescription": "The Inspect & Adapt event allows teams to assess progress, identify issues, and implement improvements."
  },
  {
    "id": "agile_1473",
    "question": "What is one characteristic of SAFeâ€™s Lean-Agile mindset?",
    "options": [
      { "id": "option_1", "text": "Embracing customer-centric thinking", "isCorrect": true },
      { "id": "option_2", "text": "Strictly following predetermined plans", "isCorrect": false },
      { "id": "option_3", "text": "Delaying decisions to maximize certainty", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing team autonomy", "isCorrect": false }
    ],
    "hint": "This mindset prioritizes adaptability and value delivery.",
    "answerDescription": "A Lean-Agile mindset in SAFe emphasizes customer focus, innovation, and continuous learning."
  },
  {
    "id": "agile_1474",
    "question": "What is one key benefit of decentralized decision-making in SAFe?",
    "options": [
      { "id": "option_1", "text": "Faster decision-making at lower levels", "isCorrect": true },
      { "id": "option_2", "text": "More control at the executive level", "isCorrect": false },
      { "id": "option_3", "text": "Increased reliance on top-down approval", "isCorrect": false },
      { "id": "option_4", "text": "Slower response to market changes", "isCorrect": false }
    ],
    "hint": "This approach improves agility by enabling teams to make decisions quickly.",
    "answerDescription": "Decentralized decision-making in SAFe allows teams to respond faster and make informed decisions closer to where work is being done."
  },
  {
    "id": "agile_1475",
    "question": "What is a characteristic of Agile teams in SAFe?",
    "options": [
      { "id": "option_1", "text": "They are self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_2", "text": "They follow a command-and-control structure", "isCorrect": false },
      { "id": "option_3", "text": "They work in isolation from other teams", "isCorrect": false },
      { "id": "option_4", "text": "They only focus on short-term goals", "isCorrect": false }
    ],
    "hint": "These teams work collaboratively to deliver value.",
    "answerDescription": "Agile teams in SAFe are self-organizing and cross-functional, enabling them to deliver high-quality work efficiently."
  },
  {
    "id": "agile_1476",
    "question": "What is the role of a Portfolio Kanban in SAFe?",
    "options": [
      { "id": "option_1", "text": "To visualize and manage strategic initiatives", "isCorrect": true },
      { "id": "option_2", "text": "To replace Agile Release Trains", "isCorrect": false },
      { "id": "option_3", "text": "To define project budgets", "isCorrect": false },
      { "id": "option_4", "text": "To centralize all team backlogs", "isCorrect": false }
    ],
    "hint": "This Kanban system operates at the highest level of SAFe.",
    "answerDescription": "The Portfolio Kanban in SAFe helps prioritize and manage large-scale business initiatives at the portfolio level."
  },
  {
    "id": "agile_1477",
    "question": "What is the primary benefit of applying SAFe in an enterprise?",
    "options": [
      { "id": "option_1", "text": "Increased reliance on command-and-control leadership", "isCorrect": false },
      { "id": "option_2", "text": "Alignment across teams and continuous value delivery", "isCorrect": true },
      { "id": "option_3", "text": "Longer planning cycles and rigid processes", "isCorrect": false },
      { "id": "option_4", "text": "Separation of teams and functions", "isCorrect": false }
    ],
    "hint": "SAFe aims to improve collaboration and efficiency across the organization.",
    "answerDescription": "SAFe enhances alignment, transparency, and the ability to deliver value at scale."
  },
  {
    "id": "agile_1478",
    "question": "What is the primary purpose of PI Planning in SAFe?",
    "options": [
      { "id": "option_1", "text": "To review past financial performance", "isCorrect": false },
      { "id": "option_2", "text": "To align teams on objectives and dependencies", "isCorrect": true },
      { "id": "option_3", "text": "To create detailed project schedules for a year", "isCorrect": false },
      { "id": "option_4", "text": "To assign tasks to individual developers", "isCorrect": false }
    ],
    "hint": "This event ensures that Agile Release Trains (ARTs) are coordinated for the next Program Increment.",
    "answerDescription": "PI Planning helps teams align on goals, dependencies, and deliverables for the upcoming Program Increment."
  },
  {
    "id": "agile_1479",
    "question": "What does SAFeâ€™s 'Lean Portfolio Management' focus on?",
    "options": [
      { "id": "option_1", "text": "Managing individual team sprints", "isCorrect": false },
      { "id": "option_2", "text": "Aligning strategy with execution", "isCorrect": true },
      { "id": "option_3", "text": "Eliminating Agile principles", "isCorrect": false },
      { "id": "option_4", "text": "Centralizing all decision-making", "isCorrect": false }
    ],
    "hint": "This concept ensures that business strategy translates into execution effectively.",
    "answerDescription": "Lean Portfolio Management aligns strategic objectives with Agile execution to maximize value delivery."
  },
  {
    "id": "agile_1480",
    "question": "Which principle of SAFe emphasizes reducing batch sizes and managing queue lengths?",
    "options": [
      { "id": "option_1", "text": "Relentless Improvement", "isCorrect": false },
      { "id": "option_2", "text": "Flow Optimization", "isCorrect": true },
      { "id": "option_3", "text": "Command-and-Control Management", "isCorrect": false },
      { "id": "option_4", "text": "Rigid Phase Gate Processes", "isCorrect": false }
    ],
    "hint": "This principle is key to reducing delays and improving efficiency.",
    "answerDescription": "Flow Optimization in SAFe focuses on reducing batch sizes and limiting work in progress to enhance value delivery."
  },
  {
    "id": "agile_1481",
    "question": "What is the key purpose of the Architectural Runway in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define detailed team-level technical tasks", "isCorrect": false },
      { "id": "option_2", "text": "To enable the continuous flow of value through technical readiness", "isCorrect": true },
      { "id": "option_3", "text": "To create inflexible long-term technology plans", "isCorrect": false },
      { "id": "option_4", "text": "To replace Agile development practices", "isCorrect": false }
    ],
    "hint": "This concept supports Agile teams by ensuring technical feasibility.",
    "answerDescription": "The Architectural Runway provides the necessary infrastructure and technical capability to support future business initiatives."
  },
  {
    "id": "agile_1482",
    "question": "What is a characteristic of SAFeâ€™s Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "A collection of independent teams with no coordination", "isCorrect": false },
      { "id": "option_2", "text": "A team of Agile teams that work together to deliver value", "isCorrect": true },
      { "id": "option_3", "text": "A single team that replaces all others", "isCorrect": false },
      { "id": "option_4", "text": "A centralized team that makes all development decisions", "isCorrect": false }
    ],
    "hint": "ARTs align multiple Agile teams to deliver value in a synchronized manner.",
    "answerDescription": "The Agile Release Train (ART) is a group of Agile teams that work together to deliver solutions aligned with business priorities."
  },
  {
    "id": "agile_1483",
    "question": "Which SAFe event provides an opportunity for teams to reflect and improve?",
    "options": [
      { "id": "option_1", "text": "Iteration Planning", "isCorrect": false },
      { "id": "option_2", "text": "Inspect & Adapt", "isCorrect": true },
      { "id": "option_3", "text": "Daily Stand-Up", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event focuses on continuous improvement at scale.",
    "answerDescription": "Inspect & Adapt is a regular SAFe event that allows teams to evaluate progress and implement improvements."
  },
  {
    "id": "agile_1484",
    "question": "What is the primary function of the System Architect in SAFe?",
    "options": [
      { "id": "option_1", "text": "Managing financial resources for the enterprise", "isCorrect": false },
      { "id": "option_2", "text": "Defining and communicating the technical vision and architecture", "isCorrect": true },
      { "id": "option_3", "text": "Overseeing marketing and customer outreach", "isCorrect": false },
      { "id": "option_4", "text": "Assigning development tasks to teams", "isCorrect": false }
    ],
    "hint": "This role ensures technical alignment and system integrity across teams.",
    "answerDescription": "The System Architect in SAFe is responsible for defining and guiding the technical architecture across Agile Release Trains."
  },
  {
    "id": "agile_1485",
    "question": "Which SAFe competency focuses on the ability to respond to changes and deliver value continuously?",
    "options": [
      { "id": "option_1", "text": "Lean-Agile Leadership", "isCorrect": false },
      { "id": "option_2", "text": "Agile Product Delivery", "isCorrect": true },
      { "id": "option_3", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_4", "text": "Organizational Agility", "isCorrect": false }
    ],
    "hint": "This competency ensures teams can adapt quickly and release value efficiently.",
    "answerDescription": "Agile Product Delivery in SAFe enables organizations to adapt to changing needs and deliver value consistently."
  },
  {
    "id": "agile_1486",
    "question": "What is one key characteristic of SAFeâ€™s Lean Budgeting approach?",
    "options": [
      { "id": "option_1", "text": "Allocating fixed annual budgets to each project", "isCorrect": false },
      { "id": "option_2", "text": "Funding value streams rather than individual projects", "isCorrect": true },
      { "id": "option_3", "text": "Requiring detailed upfront financial forecasting", "isCorrect": false },
      { "id": "option_4", "text": "Centralizing all financial decisions", "isCorrect": false }
    ],
    "hint": "This approach supports Agile principles by enabling flexible funding models.",
    "answerDescription": "Lean Budgeting in SAFe focuses on funding value streams to optimize flexibility and decision-making."
},
{
    "id": "agile_1487",
    "question": "What is the primary goal of SAFe's Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To delay releases until all features are complete", "isCorrect": false },
      { "id": "option_2", "text": "To minimize automation in software delivery", "isCorrect": false },
      { "id": "option_3", "text": "To enable frequent, high-quality releases", "isCorrect": true },
      { "id": "option_4", "text": "To focus only on deployment, ignoring testing", "isCorrect": false }
    ],
    "hint": "This pipeline supports the fast and reliable delivery of value.",
    "answerDescription": "The Continuous Delivery Pipeline in SAFe enables frequent, high-quality releases through automation and streamlined workflows."
  },
  {
    "id": "agile_1488",
    "question": "Which SAFe principle focuses on decentralized decision-making?",
    "options": [
      { "id": "option_1", "text": "Applying a Fixed Mindset", "isCorrect": false },
      { "id": "option_2", "text": "Centralized Control", "isCorrect": false },
      { "id": "option_3", "text": "Empowering teams with local decision-making", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing team autonomy", "isCorrect": false }
    ],
    "hint": "This principle promotes faster, more effective decision-making.",
    "answerDescription": "SAFe encourages decentralized decision-making to empower teams, enabling faster and more adaptive responses to change."
  },
  {
    "id": "agile_1489",
    "question": "What is a key responsibility of the Release Train Engineer (RTE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_2", "text": "Managing enterprise-level financial portfolios", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating ART events and ensuring execution", "isCorrect": true },
      { "id": "option_4", "text": "Acting as a technical architect for all teams", "isCorrect": false }
    ],
    "hint": "This role is key to Agile Release Train coordination.",
    "answerDescription": "The RTE is responsible for facilitating ART events, ensuring alignment, and removing impediments to delivery."
  },
  {
    "id": "agile_1490",
    "question": "Which SAFe framework level provides strategic direction and lean governance?",
    "options": [
      { "id": "option_1", "text": "Team Level", "isCorrect": false },
      { "id": "option_2", "text": "Program Level", "isCorrect": false },
      { "id": "option_3", "text": "Portfolio Level", "isCorrect": true },
      { "id": "option_4", "text": "Iteration Level", "isCorrect": false }
    ],
    "hint": "This level aligns business objectives with execution.",
    "answerDescription": "The Portfolio Level in SAFe provides strategic direction, funding allocation, and lean governance across value streams."
  },
  {
    "id": "agile_1491",
    "question": "What is the function of an Agile Release Train (ART) sync meeting?",
    "options": [
      { "id": "option_1", "text": "To assign work directly to developers", "isCorrect": false },
      { "id": "option_2", "text": "To review and approve budgets for each iteration", "isCorrect": false },
      { "id": "option_3", "text": "To align teams, track progress, and resolve issues", "isCorrect": true },
      { "id": "option_4", "text": "To finalize annual planning documents", "isCorrect": false }
    ],
    "hint": "This meeting helps coordinate multiple teams in an ART.",
    "answerDescription": "The ART sync ensures alignment among Agile teams, tracks progress, and resolves dependencies within the ART."
  },
  {
    "id": "agile_1492",
    "question": "How does SAFe recommend handling large solution development?",
    "options": [
      { "id": "option_1", "text": "By using a single, monolithic team", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on the team level", "isCorrect": false },
      { "id": "option_3", "text": "By implementing the Large Solution SAFe configuration", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding Agile principles", "isCorrect": false }
    ],
    "hint": "SAFe provides a specific configuration for complex solutions.",
    "answerDescription": "Large Solution SAFe provides structure for developing complex solutions that require multiple ARTs and coordination mechanisms."
  },
  {
    "id": "agile_1493",
    "question": "What is a key benefit of using SAFeâ€™s Solution Train?",
    "options": [
      { "id": "option_1", "text": "It centralizes all decisions at the executive level", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for Agile Release Trains", "isCorrect": false },
      { "id": "option_3", "text": "It aligns multiple Agile Release Trains working on a large solution", "isCorrect": true },
      { "id": "option_4", "text": "It replaces SAFe's team-level practices", "isCorrect": false }
    ],
    "hint": "This concept is useful for large-scale development efforts.",
    "answerDescription": "A Solution Train coordinates multiple ARTs to deliver large and complex solutions efficiently."
  },
  {
    "id": "agile_1494",
    "question": "Which of the following is a SAFe Core Value?",
    "options": [
      { "id": "option_1", "text": "Rigid Process Control", "isCorrect": false },
      { "id": "option_2", "text": "Command and Control Leadership", "isCorrect": false },
      { "id": "option_3", "text": "Alignment", "isCorrect": true },
      { "id": "option_4", "text": "Fixed Long-Term Planning", "isCorrect": false }
    ],
    "hint": "SAFe emphasizes shared goals across teams.",
    "answerDescription": "Alignment is a core value in SAFe, ensuring all teams work toward common objectives and business goals."
  },
  {
    "id": "agile_1495",
    "question": "What is the main objective of SAFeâ€™s Inspect & Adapt event?",
    "options": [
      { "id": "option_1", "text": "To finalize long-term project plans", "isCorrect": false },
      { "id": "option_2", "text": "To enforce rigid compliance rules", "isCorrect": false },
      { "id": "option_3", "text": "To analyze results and drive continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "To assign individual developer tasks", "isCorrect": false }
    ],
    "hint": "This event helps teams reflect on their performance and adjust accordingly.",
    "answerDescription": "Inspect & Adapt allows teams to assess their progress, identify areas for improvement, and implement corrective actions."
  },
 {
    "id": "agile_1496",
    "question": "How does SAFe promote continuous learning and improvement?",
    "options": [
      { "id": "option_1", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict compliance with outdated methods", "isCorrect": false },
      { "id": "option_3", "text": "By fostering a culture of relentless improvement", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating feedback loops", "isCorrect": false }
    ],
    "hint": "This is a key principle that ensures adaptability in SAFe.",
    "answerDescription": "SAFe promotes continuous learning through relentless improvement, encouraging teams to experiment and optimize processes."
},
{
    "id": "agile_1497",
    "question": "What is the primary purpose of SAFe's Lean-Agile mindset?",
    "options": [
      { "id": "option_1", "text": "To promote command-and-control management", "isCorrect": false },
      { "id": "option_2", "text": "To enforce rigid software development processes", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate iterative delivery models", "isCorrect": false },
      { "id": "option_4", "text": "To encourage adaptability, customer focus, and continuous learning", "isCorrect": true }
    ],
    "hint": "This mindset helps organizations embrace agility and innovation.",
    "answerDescription": "SAFeâ€™s Lean-Agile mindset fosters adaptability, customer centricity, and continuous learning to drive business agility."
  },
  {
    "id": "agile_1498",
    "question": "Which role in SAFe is primarily responsible for setting the vision for an Agile Release Train?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Release Train Engineer", "isCorrect": false },
      { "id": "option_3", "text": "Team Coach", "isCorrect": false },
      { "id": "option_4", "text": "Product Management", "isCorrect": true }
    ],
    "hint": "This role aligns ART efforts with business needs and customer value.",
    "answerDescription": "Product Management defines and communicates the vision for an Agile Release Train, ensuring alignment with business objectives."
  },
  {
    "id": "agile_1499",
    "question": "What is a key characteristic of a SAFe Agile Team?",
    "options": [
      { "id": "option_1", "text": "Rigidly follows a predefined plan without changes", "isCorrect": false },
      { "id": "option_2", "text": "Focuses solely on technical work without business context", "isCorrect": false },
      { "id": "option_3", "text": "Operates independently without collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Cross-functional and self-organizing", "isCorrect": true }
    ],
    "hint": "These teams have diverse skills and autonomy in decision-making.",
    "answerDescription": "A SAFe Agile Team is cross-functional, self-organizing, and capable of delivering value independently within an Agile Release Train."
  },
  {
    "id": "agile_1500",
    "question": "Which SAFe concept ensures alignment between business strategy and execution?",
    "options": [
      { "id": "option_1", "text": "Iteration Planning", "isCorrect": false },
      { "id": "option_2", "text": "Team Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Events", "isCorrect": false },
      { "id": "option_4", "text": "Strategic Themes", "isCorrect": true }
    ],
    "hint": "These themes provide long-term guidance for portfolios.",
    "answerDescription": "Strategic Themes in SAFe connect business strategy with execution by guiding portfolio-level decision-making."
  },
  {
    "id": "agile_1501",
    "question": "What is the function of Weighted Shortest Job First (WSJF) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To prioritize tasks based on complexity alone", "isCorrect": false },
      { "id": "option_2", "text": "To select the highest-cost projects first", "isCorrect": false },
      { "id": "option_3", "text": "To ignore risk and focus only on benefits", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize work based on cost of delay and job duration", "isCorrect": true }
    ],
    "hint": "This prioritization method helps optimize value delivery.",
    "answerDescription": "WSJF helps teams prioritize work by considering both cost of delay and job duration, ensuring optimal value delivery."
  },
  {
    "id": "agile_1502",
    "question": "How does SAFe define Business Agility?",
    "options": [
      { "id": "option_1", "text": "A focus on long-term, fixed planning cycles", "isCorrect": false },
      { "id": "option_2", "text": "Strict adherence to hierarchical decision-making", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing customer involvement in product development", "isCorrect": false },
      { "id": "option_4", "text": "The ability to quickly adapt and deliver innovative solutions", "isCorrect": true }
    ],
    "hint": "It involves responding swiftly to market and customer needs.",
    "answerDescription": "Business Agility in SAFe refers to an organization's ability to rapidly respond to changes and deliver innovative solutions."
  },
  {
    "id": "agile_1503",
    "question": "What is the primary purpose of the SAFe Program Increment (PI) Planning event?",
    "options": [
      { "id": "option_1", "text": "To create a detailed, unchangeable project plan", "isCorrect": false },
      { "id": "option_2", "text": "To allocate specific tasks to individual developers", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on financial budgeting for the project", "isCorrect": false },
      { "id": "option_4", "text": "To align teams on goals and commit to objectives", "isCorrect": true }
    ],
    "hint": "This event brings teams together to establish a shared plan.",
    "answerDescription": "PI Planning ensures alignment among Agile teams by setting clear goals and fostering collaboration across an Agile Release Train."
  },
  {
    "id": "agile_1504",
    "question": "Which SAFe role is responsible for ensuring Lean Portfolio Management aligns with business strategy?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "System Architect", "isCorrect": false },
      { "id": "option_4", "text": "Lean Portfolio Manager", "isCorrect": true }
    ],
    "hint": "This role oversees portfolio execution and strategy alignment.",
    "answerDescription": "The Lean Portfolio Manager ensures that portfolio-level decisions align with business strategy and organizational goals."
  },
  {
    "id": "agile_1505",
    "question": "How we can define a Value Stream in SAFe ?",
    "options": [
      { "id": "option_1", "text": "A sequence of independent, unrelated activities", "isCorrect": false },
      { "id": "option_2", "text": "A fixed-length iteration cycle", "isCorrect": false },
      { "id": "option_3", "text": "A set of non-collaborative teams working separately", "isCorrect": false },
      { "id": "option_4", "text": "The sequence of steps used to deliver value to the customer", "isCorrect": true }
    ],
    "hint": "It represents how value flows from concept to customer.",
    "answerDescription": "A Value Stream in SAFe includes the steps from idea generation to delivering customer value."
  },
  {
    "id": "agile_1506",
    "question": "What is a key objective of SAFeâ€™s DevOps approach?",
    "options": [
      { "id": "option_1", "text": "To create barriers between development and operations", "isCorrect": false },
      { "id": "option_2", "text": "To limit automation in deployment processes", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on development without considering delivery", "isCorrect": false },
      { "id": "option_4", "text": "To enable continuous integration and delivery", "isCorrect": true }
    ],
    "hint": "It ensures faster, reliable software releases.",
    "answerDescription": "SAFeâ€™s DevOps approach integrates development and operations to streamline deployment and improve delivery speed."
  },

  {
    "id": "agile_1522",
    "question": "What is the primary purpose of PI (Program Increment) Planning in SAFe?",
    "options": [
      { "id": "option_1", "text": "To create a detailed project roadmap", "isCorrect": false },
      { "id": "option_2", "text": "To assign individual tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To finalize product features for the entire year", "isCorrect": false },
      { "id": "option_4", "text": "To align teams on a shared vision and objectives", "isCorrect": true }
    ],
    "hint": "This event ensures that Agile teams have a common understanding of goals and priorities.",
    "answerDescription": "PI Planning brings teams together to synchronize on objectives, dependencies, and deliverables for the next increment."
  },
  {
    "id": "agile_1523",
    "question": "Which role in SAFe is primarily responsible for guiding Agile Release Trains (ARTs) to deliver value?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Business Owner", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Release Train Engineer (RTE)", "isCorrect": true }
    ],
    "hint": "This role acts as the servant leader for the Agile Release Train.",
    "answerDescription": "The Release Train Engineer (RTE) facilitates ART events and helps teams deliver value efficiently."
  },
  {
    "id": "agile_1524",
    "question": "What is a key benefit of implementing Lean Portfolio Management (LPM) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Fixed annual budgeting for Agile teams", "isCorrect": false },
      { "id": "option_2", "text": "Strict project-based funding", "isCorrect": false },
      { "id": "option_3", "text": "Limited flexibility in prioritization", "isCorrect": false },
      { "id": "option_4", "text": "Adaptive funding and strategic alignment", "isCorrect": true }
    ],
    "hint": "This approach allows organizations to dynamically allocate resources based on value delivery.",
    "answerDescription": "Lean Portfolio Management enables enterprises to adapt funding and align work with strategic goals."
  },
  {
    "id": "agile_1525",
    "question": "In SAFe, what is the main purpose of the Inspect and Adapt (I&A) event?",
    "options": [
      { "id": "option_1", "text": "To review financial performance", "isCorrect": false },
      { "id": "option_2", "text": "To create a project status report", "isCorrect": false },
      { "id": "option_3", "text": "To reassign team members", "isCorrect": false },
      { "id": "option_4", "text": "To improve processes based on feedback", "isCorrect": true }
    ],
    "hint": "This event focuses on continuous improvement and addressing challenges.",
    "answerDescription": "The Inspect and Adapt event helps teams analyze performance and implement actionable improvements."
  },
  {
    "id": "agile_1526",
    "question": "What is the role of the Portfolio Kanban in SAFe?",
    "options": [
      { "id": "option_1", "text": "To assign work to individual teams", "isCorrect": false },
      { "id": "option_2", "text": "To track personal tasks of executives", "isCorrect": false },
      { "id": "option_3", "text": "To document completed projects", "isCorrect": false },
      { "id": "option_4", "text": "To visualize and manage portfolio-level initiatives", "isCorrect": true }
    ],
    "hint": "This tool helps maintain a flow of high-level business priorities.",
    "answerDescription": "Portfolio Kanban provides a structured way to manage work at the portfolio level, ensuring alignment with business objectives."
  },
  {
    "id": "agile_1527",
    "question": "Which of the following best describes the purpose of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To ensure all testing is manual", "isCorrect": false },
      { "id": "option_2", "text": "To deliver work only at the end of a project", "isCorrect": false },
      { "id": "option_3", "text": "To prevent frequent software releases", "isCorrect": false },
      { "id": "option_4", "text": "To enable fast, automated, and reliable releases", "isCorrect": true }
    ],
    "hint": "This concept emphasizes automation and deployment efficiency.",
    "answerDescription": "The Continuous Delivery Pipeline ensures that new features are tested, integrated, and released quickly and reliably."
  },
  {
    "id": "agile_1528",
    "question": "In SAFe, what is a characteristic of an Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "Operates on a fixed budget without changes", "isCorrect": false },
      { "id": "option_2", "text": "Consists of a single team working independently", "isCorrect": false },
      { "id": "option_3", "text": "Follows a rigid project management approach", "isCorrect": false },
      { "id": "option_4", "text": "Aligns multiple Agile teams to deliver value", "isCorrect": true }
    ],
    "hint": "It involves collaboration among multiple Agile teams.",
    "answerDescription": "An ART is a long-lived team of Agile teams that plans, commits, and delivers solutions together."
  },
  {
    "id": "agile_1529",
    "question": "What is a key responsibility of Business Owners in SAFe?",
    "options": [
      { "id": "option_1", "text": "Managing daily team activities", "isCorrect": false },
      { "id": "option_2", "text": "Developing code for the product", "isCorrect": false },
      { "id": "option_3", "text": "Writing detailed user stories", "isCorrect": false },
      { "id": "option_4", "text": "Providing strategic direction and prioritization", "isCorrect": true }
    ],
    "hint": "They help align teams with enterprise goals.",
    "answerDescription": "Business Owners in SAFe ensure teams work on the most valuable initiatives aligned with business strategy."
  },
  {
    "id": "agile_1530",
    "question": "What is the primary purpose of SAFeâ€™s Core Values?",
    "options": [
      { "id": "option_1", "text": "To define the technical architecture", "isCorrect": false },
      { "id": "option_2", "text": "To dictate specific programming languages", "isCorrect": false },
      { "id": "option_3", "text": "To enforce rigid organizational structures", "isCorrect": false },
      { "id": "option_4", "text": "To guide behavior and decision-making in SAFe", "isCorrect": true }
    ],
    "hint": "These values support the framework's principles and mindset.",
    "answerDescription": "SAFeâ€™s Core Values promote alignment, built-in quality, transparency, and program execution."
  },
  {
    "id": "agile_1531",
    "question": "What is one key benefit of SAFeâ€™s DevOps approach?",
    "options": [
      { "id": "option_1", "text": "Slower feedback loops", "isCorrect": false },
      { "id": "option_2", "text": "Infrequent software releases", "isCorrect": false },
      { "id": "option_3", "text": "Lack of automation in deployments", "isCorrect": false },
      { "id": "option_4", "text": "Faster and more reliable value delivery", "isCorrect": true }
    ],
    "hint": "This approach integrates development and operations for continuous improvement.",
    "answerDescription": "SAFeâ€™s DevOps ensures that organizations can deliver high-quality software quickly and efficiently."
  },
  {
    "id": "agile_1532",
    "question": "What is the primary goal of SAFeâ€™s Lean-Agile mindset?",
    "options": [
      { "id": "option_1", "text": "To foster innovation, flexibility, and customer-centric development", "isCorrect": true },
      { "id": "option_2", "text": "To enforce strict project deadlines and hierarchy", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate all risks in software development", "isCorrect": false },
      { "id": "option_4", "text": "To rely solely on documentation for decision-making", "isCorrect": false }
    ],
    "hint": "It promotes adaptability and continuous learning.",
    "answerDescription": "The Lean-Agile mindset in SAFe emphasizes flexibility, customer focus, and value-driven development."
  },
  {
    "id": "agile_1533",
    "question": "Which principle of SAFe emphasizes delivering incremental value frequently?",
    "options": [
      { "id": "option_1", "text": "Take an economic view", "isCorrect": true },
      { "id": "option_2", "text": "Centralize decision-making", "isCorrect": false },
      { "id": "option_3", "text": "Ensure all work is pre-planned for the year", "isCorrect": false },
      { "id": "option_4", "text": "Avoid customer feedback during development", "isCorrect": false }
    ],
    "hint": "This principle ensures that development prioritizes value creation over rigid processes.",
    "answerDescription": "Taking an economic view in SAFe means prioritizing value delivery while balancing risks and costs."
  },
  {
    "id": "agile_1534",
    "question": "What is the key function of SAFeâ€™s Solution Train?",
    "options": [
      { "id": "option_1", "text": "To align multiple Agile Release Trains (ARTs) in large-scale development", "isCorrect": true },
      { "id": "option_2", "text": "To manage daily team stand-up meetings", "isCorrect": false },
      { "id": "option_3", "text": "To create project budgets and cost estimates", "isCorrect": false },
      { "id": "option_4", "text": "To enforce rigid software development rules", "isCorrect": false }
    ],
    "hint": "It facilitates coordination across multiple Agile Release Trains.",
    "answerDescription": "The Solution Train ensures that large-scale Agile development remains aligned and efficient."
  },
  {
    "id": "agile_1535",
    "question": "Which artifact in SAFe helps manage and prioritize large-scale backlogs?",
    "options": [
      { "id": "option_1", "text": "Portfolio Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Daily Task Board", "isCorrect": false },
      { "id": "option_3", "text": "Meeting Agenda", "isCorrect": false },
      { "id": "option_4", "text": "Personal Kanban", "isCorrect": false }
    ],
    "hint": "This backlog exists at the highest level of SAFe and prioritizes business initiatives.",
    "answerDescription": "The Portfolio Backlog captures large-scale initiatives and prioritizes them based on business value."
  },
  {
    "id": "agile_1536",
    "question": "What is a key characteristic of SAFeâ€™s Participatory Budgeting?",
    "options": [
      { "id": "option_1", "text": "It involves stakeholders in funding decisions based on strategic priorities", "isCorrect": true },
      { "id": "option_2", "text": "It allocates all budget decisions to a single executive", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for budgeting in Agile", "isCorrect": false },
      { "id": "option_4", "text": "It requires all teams to have the same budget regardless of needs", "isCorrect": false }
    ],
    "hint": "This approach ensures that funding aligns with value-driven decision-making.",
    "answerDescription": "Participatory Budgeting in SAFe enables collaborative decision-making for investment allocation."
  },
  {
    "id": "agile_1537",
    "question": "Which role in SAFe is responsible for defining and prioritizing features at the ART level?",
    "options": [
      { "id": "option_1", "text": "Product Management", "isCorrect": true },
      { "id": "option_2", "text": "System Architect", "isCorrect": false },
      { "id": "option_3", "text": "Agile Coach", "isCorrect": false },
      { "id": "option_4", "text": "Scrum Master", "isCorrect": false }
    ],
    "hint": "This role works closely with stakeholders to ensure feature alignment with business goals.",
    "answerDescription": "Product Management in SAFe ensures that ARTs work on the most valuable features."
  },
  {
    "id": "agile_1538",
    "question": "What is one primary outcome of SAFeâ€™s Portfolio Vision?",
    "options": [
      { "id": "option_1", "text": "Clear direction for portfolio investments", "isCorrect": true },
      { "id": "option_2", "text": "A static list of fixed projects", "isCorrect": false },
      { "id": "option_3", "text": "Complete elimination of risk", "isCorrect": false },
      { "id": "option_4", "text": "A rigid, unchangeable plan", "isCorrect": false }
    ],
    "hint": "This vision aligns strategic goals with execution.",
    "answerDescription": "The Portfolio Vision in SAFe helps organizations align investments with long-term strategic goals."
  },
  {
    "id": "agile_1539",
    "question": "What is a key benefit of SAFeâ€™s decentralized decision-making approach?",
    "options": [
      { "id": "option_1", "text": "Faster and more effective decisions at all levels", "isCorrect": true },
      { "id": "option_2", "text": "Increased bureaucracy and approval delays", "isCorrect": false },
      { "id": "option_3", "text": "A strict hierarchy for project approvals", "isCorrect": false },
      { "id": "option_4", "text": "Elimination of team autonomy", "isCorrect": false }
    ],
    "hint": "This approach allows teams to respond quickly to changes.",
    "answerDescription": "Decentralized decision-making in SAFe improves responsiveness and empowers teams."
  },
  {
    "id": "agile_1540",
    "question": "How does SAFe support continuous learning and growth?",
    "options": [
      { "id": "option_1", "text": "By encouraging ongoing training, coaching, and feedback loops", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing a fixed skill set for all employees", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating all forms of experimentation", "isCorrect": false },
      { "id": "option_4", "text": "By requiring all teams to follow the same process without iteration", "isCorrect": false }
    ],
    "hint": "SAFe promotes continuous learning through innovation and skill-building.",
    "answerDescription": "SAFe encourages training, mentorship, and feedback-driven improvements for sustainable growth."
  },
  {
    "id": "agile_1541",
    "question": "What is the purpose of SAFeâ€™s Weighted Shortest Job First (WSJF) prioritization technique?",
    "options": [
      { "id": "option_1", "text": "To determine which work items deliver the most value soonest", "isCorrect": true },
      { "id": "option_2", "text": "To prioritize tasks based only on cost", "isCorrect": false },
      { "id": "option_3", "text": "To randomly select features for development", "isCorrect": false },
      { "id": "option_4", "text": "To delay high-value work until all planning is complete", "isCorrect": false }
    ],
    "hint": "This technique balances value, urgency, and effort.",
    "answerDescription": "WSJF helps prioritize work based on value delivery, time sensitivity, and complexity."
  },
  {
    "id": "agile_1542",
    "question": "What is the primary objective of SAFeâ€™s Program Increment (PI) Planning?",
    "options": [
      { "id": "option_1", "text": "To create long-term project roadmaps", "isCorrect": false },
      { "id": "option_2", "text": "To align teams on objectives and synchronize work across ARTs", "isCorrect": true },
      { "id": "option_3", "text": "To approve project budgets", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate dependencies between teams", "isCorrect": false }
    ],
    "hint": "This event ensures teams are aligned on business priorities.",
    "answerDescription": "PI Planning is a key SAFe event that aligns teams on common goals and synchronizes work across Agile Release Trains."
  },
  {
    "id": "agile_1543",
    "question": "Which SAFe artifact represents the high-level strategic themes guiding portfolio decisions?",
    "options": [
      { "id": "option_1", "text": "Feature Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Strategic Themes", "isCorrect": true },
      { "id": "option_3", "text": "Solution Intent", "isCorrect": false },
      { "id": "option_4", "text": "Iteration Goals", "isCorrect": false }
    ],
    "hint": "These themes align execution with business strategy.",
    "answerDescription": "Strategic Themes in SAFe define business objectives that guide portfolio-level decision-making and investments."
  },
  {
    "id": "agile_1544",
    "question": "What is the role of the Release Train Engineer (RTE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To manage product development", "isCorrect": false },
      { "id": "option_2", "text": "To facilitate ART execution and remove impediments", "isCorrect": true },
      { "id": "option_3", "text": "To act as the Scrum Master for all teams", "isCorrect": false },
      { "id": "option_4", "text": "To oversee marketing strategies", "isCorrect": false }
    ],
    "hint": "This role is often described as the 'chief Scrum Master' for the ART.",
    "answerDescription": "The RTE facilitates Agile Release Train execution, ensuring smooth collaboration and delivery of value."
  },
  {
    "id": "agile_1545",
    "question": "How does SAFe define the concept of â€˜Flowâ€™ in Lean Portfolio Management?",
    "options": [
      { "id": "option_1", "text": "As a set of sequential approval processes", "isCorrect": false },
      { "id": "option_2", "text": "As the continuous and smooth movement of work across the system", "isCorrect": true },
      { "id": "option_3", "text": "As the process of assigning fixed workloads to teams", "isCorrect": false },
      { "id": "option_4", "text": "As the final stage of a project lifecycle", "isCorrect": false }
    ],
    "hint": "It focuses on reducing bottlenecks and improving efficiency.",
    "answerDescription": "SAFe promotes flow by ensuring work moves continuously through the system with minimal delays."
  },
  {
    "id": "agile_1546",
    "question": "What is the function of SAFeâ€™s Architectural Runway?",
    "options": [
      { "id": "option_1", "text": "To develop architecture independently of business needs", "isCorrect": false },
      { "id": "option_2", "text": "To enable faster development by providing necessary infrastructure", "isCorrect": true },
      { "id": "option_3", "text": "To delay technical decisions until later in development", "isCorrect": false },
      { "id": "option_4", "text": "To document historical system architecture", "isCorrect": false }
    ],
    "hint": "It helps teams build features efficiently by ensuring technical readiness.",
    "answerDescription": "The Architectural Runway provides a foundation for development, ensuring teams can build and deliver features without technical bottlenecks."
  },
  {
    "id": "agile_1547",
    "question": "What is a primary responsibility of Business Owners in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define the technical architecture of solutions", "isCorrect": false },
      { "id": "option_2", "text": "To provide guidance on business priorities and value delivery", "isCorrect": true },
      { "id": "option_3", "text": "To write user stories and manage backlogs", "isCorrect": false },
      { "id": "option_4", "text": "To lead Scrum ceremonies for Agile teams", "isCorrect": false }
    ],
    "hint": "They ensure that Agile Release Trains align with business goals.",
    "answerDescription": "Business Owners in SAFe provide strategic direction and ensure that development aligns with business objectives."
  },
  {
    "id": "agile_1548",
    "question": "Which SAFe role is responsible for defining and communicating the Solution Vision?",
    "options": [
      { "id": "option_1", "text": "Product Manager", "isCorrect": false },
      { "id": "option_2", "text": "Solution Manager", "isCorrect": true },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "System Architect", "isCorrect": false }
    ],
    "hint": "This role ensures alignment across multiple Agile Release Trains.",
    "answerDescription": "The Solution Manager is responsible for defining and maintaining the vision for large-scale SAFe solutions."
  },
  {
    "id": "agile_1549",
    "question": "How does SAFe recommend managing dependencies between Agile teams?",
    "options": [
      { "id": "option_1", "text": "By waiting until the last moment to resolve them", "isCorrect": false },
      { "id": "option_2", "text": "By proactively identifying and addressing them during PI Planning", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding collaboration between teams", "isCorrect": false },
      { "id": "option_4", "text": "By using a single team to handle all dependencies", "isCorrect": false }
    ],
    "hint": "Dependencies should be addressed early in the planning process.",
    "answerDescription": "SAFe recommends identifying dependencies during PI Planning to ensure smooth execution across Agile teams."
  },
  {
    "id": "agile_1550",
    "question": "What is the purpose of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To deliver software only at the end of a project", "isCorrect": false },
      { "id": "option_2", "text": "To enable frequent, reliable, and automated software releases", "isCorrect": true },
      { "id": "option_3", "text": "To replace all manual testing processes", "isCorrect": false },
      { "id": "option_4", "text": "To slow down releases in favor of documentation", "isCorrect": false }
    ],
    "hint": "It supports automated and efficient value delivery.",
    "answerDescription": "The Continuous Delivery Pipeline in SAFe ensures software can be released frequently and reliably through automation and testing."
  },
  {
    "id": "agile_1551",
    "question": "Which SAFe principle promotes aligning development with measurable business outcomes?",
    "options": [
      { "id": "option_1", "text": "Decentralized decision-making", "isCorrect": false },
      { "id": "option_2", "text": "Aligning strategy with execution", "isCorrect": true },
      { "id": "option_3", "text": "Working in isolation", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing documentation over execution", "isCorrect": false }
    ],
    "hint": "This principle ensures development efforts contribute to strategic goals.",
    "answerDescription": "Aligning strategy with execution in SAFe helps organizations ensure that development activities deliver measurable business value."
  },
  {
    "id": "agile_1552",
    "question": "What is the primary goal of the SAFe Lean-Agile Mindset?",
    "options": [
      { "id": "option_1", "text": "To enforce rigid project management structures", "isCorrect": false },
      { "id": "option_2", "text": "To focus on short-term financial performance", "isCorrect": false },
      { "id": "option_3", "text": "To promote Agile values and Lean thinking for continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate team autonomy", "isCorrect": false }
    ],
    "hint": "This mindset is centered around Agile principles and Lean thinking.",
    "answerDescription": "The SAFe Lean-Agile Mindset encourages organizations to adopt Agile values and Lean principles for continuous learning and value delivery."
  },
  {
    "id": "agile_1553",
    "question": "Which SAFe competency focuses on optimizing the flow of value across the enterprise?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Team and Technical Agility", "isCorrect": false },
      { "id": "option_3", "text": "Lean Portfolio Management", "isCorrect": true },
      { "id": "option_4", "text": "Enterprise Solution Delivery", "isCorrect": false }
    ],
    "hint": "This competency aligns business strategy with execution.",
    "answerDescription": "Lean Portfolio Management in SAFe helps ensure value streams are optimized and aligned with enterprise goals."
  },
  {
    "id": "agile_1554",
    "question": "How does SAFe define the purpose of Innovation and Planning (IP) Iterations?",
    "options": [
      { "id": "option_1", "text": "To extend deadlines for unfinished work", "isCorrect": false },
      { "id": "option_2", "text": "To allocate time for product launches", "isCorrect": false },
      { "id": "option_3", "text": "To support innovation, planning, and system improvements", "isCorrect": true },
      { "id": "option_4", "text": "To replace PI Planning events", "isCorrect": false }
    ],
    "hint": "These iterations help teams focus on continuous improvement and planning.",
    "answerDescription": "Innovation and Planning Iterations in SAFe allow teams to innovate, plan for the next Program Increment, and conduct system improvements."
  },
  {
    "id": "agile_1555",
    "question": "What is a key benefit of applying SAFeâ€™s Principle of Decentralized Decision-Making?",
    "options": [
      { "id": "option_1", "text": "It reduces alignment across teams", "isCorrect": false },
      { "id": "option_2", "text": "It increases dependency on management for approvals", "isCorrect": false },
      { "id": "option_3", "text": "It enables faster and more informed decision-making at all levels", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for a governance framework", "isCorrect": false }
    ],
    "hint": "Empowering teams leads to faster and better decision-making.",
    "answerDescription": "SAFe encourages decentralized decision-making to speed up execution and empower teams to make informed choices."
  },
  {
    "id": "agile_1556",
    "question": "Which SAFe concept ensures that work is broken down into manageable pieces that can be delivered incrementally?",
    "options": [
      { "id": "option_1", "text": "Big Upfront Design", "isCorrect": false },
      { "id": "option_2", "text": "Waterfall Planning", "isCorrect": false },
      { "id": "option_3", "text": "Incremental Development", "isCorrect": true },
      { "id": "option_4", "text": "Annual Release Cycles", "isCorrect": false }
    ],
    "hint": "This approach enables frequent delivery and feedback.",
    "answerDescription": "Incremental Development in SAFe allows teams to build and release small, functional parts of a system iteratively."
  },
  {
    "id": "agile_1557",
    "question": "What is the usage of SAFeâ€™s Weighted Shortest Job First (WSJF) prioritization technique?",
    "options": [
      { "id": "option_1", "text": "To prioritize tasks based on manager preference", "isCorrect": false },
      { "id": "option_2", "text": "To sort work items based on complexity alone", "isCorrect": false },
      { "id": "option_3", "text": "To maximize value by delivering the most impactful work first", "isCorrect": true },
      { "id": "option_4", "text": "To assign equal priority to all backlog items", "isCorrect": false }
    ],
    "hint": "This method optimizes the sequence of work to maximize value delivery.",
    "answerDescription": "WSJF prioritizes work based on cost of delay and job size, ensuring high-value items are addressed first."
  },
  {
    "id": "agile_1558",
    "question": "Which SAFe role is primarily responsible for ensuring the alignment of Agile Release Train (ART) teams with business goals?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Release Train Engineer (RTE)", "isCorrect": false },
      { "id": "option_3", "text": "Product Manager", "isCorrect": true },
      { "id": "option_4", "text": "System Architect", "isCorrect": false }
    ],
    "hint": "This role focuses on defining and prioritizing Features to meet business objectives.",
    "answerDescription": "The Product Manager in SAFe ensures that teams deliver solutions that align with business goals and customer needs."
  },
  {
    "id": "agile_1559",
    "question": "Which event in SAFe ensures alignment across multiple Agile Release Trains (ARTs) working on a large solution?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_2", "text": "Iteration Planning", "isCorrect": false },
      { "id": "option_3", "text": "Solution Train PI Planning", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This planning event synchronizes multiple Agile Release Trains.",
    "answerDescription": "Solution Train PI Planning ensures that large-scale solutions are aligned and dependencies across ARTs are managed effectively."
  },
  {
    "id": "agile_1560",
    "question": "How does SAFe recommend measuring the success of an Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "By tracking the number of completed sprints", "isCorrect": false },
      { "id": "option_2", "text": "By focusing on output rather than customer value", "isCorrect": false },
      { "id": "option_3", "text": "By evaluating value delivery and business outcomes", "isCorrect": true },
      { "id": "option_4", "text": "By the size of the development team", "isCorrect": false }
    ],
    "hint": "Success is measured based on delivered value, not just activities completed.",
    "answerDescription": "SAFe evaluates ART performance based on value delivery and how well business outcomes are achieved."
  },
  {
    "id": "agile_1561",
    "question": "Which SAFe competency focuses on fostering a learning organization and continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Lean Portfolio Management", "isCorrect": false },
      { "id": "option_3", "text": "Continuous Learning Culture", "isCorrect": true },
      { "id": "option_4", "text": "DevOps and Release on Demand", "isCorrect": false }
    ],
    "hint": "This competency emphasizes knowledge sharing and relentless improvement.",
    "answerDescription": "The Continuous Learning Culture competency in SAFe fosters a mindset of growth, adaptability, and ongoing improvement."
  },
  {
    "id": "agile_1562",
    "question": "Which SAFe event is essential for synchronizing alignment and planning at the Program level?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "PI Planning", "isCorrect": true }
    ],
    "hint": "This event ensures teams are aligned on objectives for the upcoming Program Increment.",
    "answerDescription": "PI Planning is a key SAFe event that aligns Agile Release Train (ART) teams on a shared mission and objectives."
  },
  {
    "id": "agile_1563",
    "question": "What is the primary purpose of a SAFe Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "To manage individual project deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To replace traditional project management offices", "isCorrect": false },
      { "id": "option_3", "text": "To create a hierarchy of Agile teams", "isCorrect": false },
      { "id": "option_4", "text": "To align teams around delivering value continuously", "isCorrect": true }
    ],
    "hint": "ARTs are designed to deliver continuous value in SAFe.",
    "answerDescription": "An Agile Release Train (ART) consists of multiple Agile teams working together to deliver value in a synchronized and incremental manner."
  },
  {
    "id": "agile_1564",
    "question": "In SAFe, who is responsible for managing dependencies and risks across teams in an Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Business Owner", "isCorrect": false },
      { "id": "option_4", "text": "Release Train Engineer (RTE)", "isCorrect": true }
    ],
    "hint": "This role is often referred to as the 'Chief Scrum Master' in SAFe.",
    "answerDescription": "The Release Train Engineer (RTE) is responsible for facilitating ART events, managing dependencies, and ensuring alignment across teams."
  },
  {
    "id": "agile_1565",
    "question": "Which principle of SAFe emphasizes making work visible and reducing batch sizes?",
    "options": [
      { "id": "option_1", "text": "Decentralized Decision-Making", "isCorrect": false },
      { "id": "option_2", "text": "Aligning Around Value", "isCorrect": false },
      { "id": "option_3", "text": "Customer Centricity", "isCorrect": false },
      { "id": "option_4", "text": "Flow-Based Lean Thinking", "isCorrect": true }
    ],
    "hint": "This principle optimizes workflow efficiency.",
    "answerDescription": "Flow-Based Lean Thinking in SAFe ensures work is visible, batch sizes are reduced, and delays are minimized to enhance productivity."
  },
  {
    "id": "agile_1566",
    "question": "What is the key purpose of SAFeâ€™s DevOps and Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To enforce a strict release schedule", "isCorrect": false },
      { "id": "option_2", "text": "To separate development and operations teams", "isCorrect": false },
      { "id": "option_3", "text": "To ensure software is tested only at the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "To enable frequent, high-quality releases with automation", "isCorrect": true }
    ],
    "hint": "This approach aims for continuous integration and deployment.",
    "answerDescription": "SAFeâ€™s DevOps and Continuous Delivery Pipeline focuses on automating testing, integration, and deployment for faster, more reliable releases."
  },
  {
    "id": "agile_1567",
    "question": "Which SAFe configuration is designed for organizations with highly complex systems requiring multiple Agile Release Trains (ARTs)?",
    "options": [
      { "id": "option_1", "text": "Essential SAFe", "isCorrect": false },
      { "id": "option_2", "text": "Large Solution SAFe", "isCorrect": false },
      { "id": "option_3", "text": "Portfolio SAFe", "isCorrect": false },
      { "id": "option_4", "text": "Full SAFe", "isCorrect": true }
    ],
    "hint": "This is the most comprehensive SAFe configuration.",
    "answerDescription": "Full SAFe integrates all SAFe levels, including team, program, large solution, and portfolio, to manage large-scale enterprises."
  },
  {
    "id": "agile_1568",
    "question": "What is the primary role of Lean Portfolio Management in SAFe?",
    "options": [
      { "id": "option_1", "text": "To track individual team performance", "isCorrect": false },
      { "id": "option_2", "text": "To manage Agile Release Train (ART) operations", "isCorrect": false },
      { "id": "option_3", "text": "To ensure strict budgeting control", "isCorrect": false },
      { "id": "option_4", "text": "To align strategy with execution through funding and governance", "isCorrect": true }
    ],
    "hint": "This competency ensures business strategy is effectively executed.",
    "answerDescription": "Lean Portfolio Management in SAFe aligns funding, governance, and strategy execution across value streams."
  },
  {
    "id": "agile_1569",
    "question": "In SAFe, what is the purpose of enablers in a backlog?",
    "options": [
      { "id": "option_1", "text": "To document historical project decisions", "isCorrect": false },
      { "id": "option_2", "text": "To track unassigned work items", "isCorrect": false },
      { "id": "option_3", "text": "To manage unrelated side projects", "isCorrect": false },
      { "id": "option_4", "text": "To support technical infrastructure, exploration, and architectural work", "isCorrect": true }
    ],
    "hint": "These backlog items support system evolution.",
    "answerDescription": "Enablers in SAFe ensure that architectural and technical work needed for future capabilities is planned and addressed."
  },
  {
    "id": "agile_1570",
    "question": "Which SAFe competency focuses on developing leadership skills that support Lean-Agile transformations?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_3", "text": "Organizational Agility", "isCorrect": false },
      { "id": "option_4", "text": "Lean-Agile Leadership", "isCorrect": true }
    ],
    "hint": "This competency emphasizes a leadership mindset shift.",
    "answerDescription": "Lean-Agile Leadership in SAFe fosters a culture of continuous improvement, coaching, and transformation."
  },
  {
    "id": "agile_1571",
    "question": "Which artifact in SAFe is used to align teams on their objectives for the upcoming Program Increment?",
    "options": [
      { "id": "option_1", "text": "Team Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Goals", "isCorrect": false },
      { "id": "option_3", "text": "Epic Roadmap", "isCorrect": false },
      { "id": "option_4", "text": "PI Objectives", "isCorrect": true }
    ],
    "hint": "This artifact summarizes team and ART commitments.",
    "answerDescription": "PI Objectives in SAFe ensure alignment between teams and stakeholders on planned outcomes for a Program Increment."
  },
  {
    "id": "agile_1572",
    "question": "What is the primary focus of SAFeâ€™s Customer Centricity principle?",
    "options": [
      { "id": "option_1", "text": "Delivering products that maximize customer value", "isCorrect": true },
      { "id": "option_2", "text": "Reducing development costs", "isCorrect": false },
      { "id": "option_3", "text": "Increasing feature count in each release", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring strict adherence to requirements", "isCorrect": false }
    ],
    "hint": "This principle emphasizes value delivery over feature quantity.",
    "answerDescription": "Customer Centricity in SAFe ensures that teams prioritize customer needs and deliver high-value solutions."
  },
  {
    "id": "agile_1573",
    "question": "Which role in SAFe is responsible for defining and prioritizing the features in the Program Backlog?",
    "options": [
      { "id": "option_1", "text": "Product Manager", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Release Train Engineer (RTE)", "isCorrect": false },
      { "id": "option_4", "text": "System Architect", "isCorrect": false }
    ],
    "hint": "This role works closely with stakeholders to define value-driven features.",
    "answerDescription": "The Product Manager in SAFe defines and prioritizes features in the Program Backlog to ensure alignment with business goals."
  },
  {
    "id": "agile_1574",
    "question": "What is the key advantage of using Weighted Shortest Job First (WSJF) in SAFe?",
    "options": [
      { "id": "option_1", "text": "Maximizes economic benefit by prioritizing high-value work", "isCorrect": true },
      { "id": "option_2", "text": "Ensures every team member has equal tasks", "isCorrect": false },
      { "id": "option_3", "text": "Minimizes dependencies between teams", "isCorrect": false },
      { "id": "option_4", "text": "Allows teams to bypass backlog refinement", "isCorrect": false }
    ],
    "hint": "This method balances urgency and value for prioritization.",
    "answerDescription": "WSJF prioritizes work based on economic impact by considering cost of delay and job duration."
  },
  {
    "id": "agile_1575",
    "question": "Which SAFe principle supports decentralized decision-making?",
    "options": [
      { "id": "option_1", "text": "Unlock the intrinsic motivation of knowledge workers", "isCorrect": true },
      { "id": "option_2", "text": "Apply cadence and synchronize with cross-domain planning", "isCorrect": false },
      { "id": "option_3", "text": "Base milestones on objective evaluation of working systems", "isCorrect": false },
      { "id": "option_4", "text": "Optimize the whole", "isCorrect": false }
    ],
    "hint": "This principle encourages team empowerment and autonomy.",
    "answerDescription": "By unlocking intrinsic motivation, SAFe enables teams to make decentralized decisions, fostering innovation and accountability."
  },
  {
    "id": "agile_1576",
    "question": "What is the primary purpose of SAFeâ€™s Innovation and Planning (IP) Iteration?",
    "options": [
      { "id": "option_1", "text": "Provides time for innovation, planning, and learning", "isCorrect": true },
      { "id": "option_2", "text": "Reduces the number of PI Objectives", "isCorrect": false },
      { "id": "option_3", "text": "Extends the regular iteration length", "isCorrect": false },
      { "id": "option_4", "text": "Only focuses on technical debt resolution", "isCorrect": false }
    ],
    "hint": "This iteration is used for strategic activities between PIs.",
    "answerDescription": "The IP Iteration allows teams to innovate, plan, reflect, and improve before the next Program Increment."
  },
  {
    "id": "agile_1577",
    "question": "What is the main function of the Lean Business Case in SAFe?",
    "options": [
      { "id": "option_1", "text": "Provides a lightweight, structured approach to evaluating initiatives", "isCorrect": true },
      { "id": "option_2", "text": "Tracks team velocity and burndown charts", "isCorrect": false },
      { "id": "option_3", "text": "Details task-level requirements for developers", "isCorrect": false },
      { "id": "option_4", "text": "Defines user stories for Agile teams", "isCorrect": false }
    ],
    "hint": "This tool helps assess potential investments and funding decisions.",
    "answerDescription": "A Lean Business Case in SAFe helps evaluate initiatives by assessing cost, value, risk, and success criteria."
  },
  {
    "id": "agile_1578",
    "question": "What is the primary benefit of Value Stream Mapping in SAFe?",
    "options": [
      { "id": "option_1", "text": "Identifies bottlenecks and optimizes flow of value", "isCorrect": true },
      { "id": "option_2", "text": "Replaces PI Planning sessions", "isCorrect": false },
      { "id": "option_3", "text": "Removes the need for Agile Release Trains (ARTs)", "isCorrect": false },
      { "id": "option_4", "text": "Eliminates the need for budgeting", "isCorrect": false }
    ],
    "hint": "This practice enhances efficiency by visualizing value delivery processes.",
    "answerDescription": "Value Stream Mapping in SAFe helps organizations identify inefficiencies and optimize the flow of value across teams."
  },
  {
    "id": "agile_1579",
    "question": "Which SAFe portfolio-level role is responsible for guiding Lean-Agile transformation?",
    "options": [
      { "id": "option_1", "text": "Lean Portfolio Management (LPM)", "isCorrect": true },
      { "id": "option_2", "text": "Epic Owner", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "System Architect", "isCorrect": false }
    ],
    "hint": "This role is responsible for strategic alignment and execution.",
    "answerDescription": "Lean Portfolio Management (LPM) ensures strategy execution by aligning funding, governance, and business agility efforts."
  },
  {
    "id": "agile_1580",
    "question": "Which aspect of SAFeâ€™s Continuous Delivery Pipeline focuses on validating solutions before full deployment?",
    "options": [
      { "id": "option_1", "text": "Continuous Exploration", "isCorrect": true },
      { "id": "option_2", "text": "Continuous Integration", "isCorrect": false },
      { "id": "option_3", "text": "Continuous Deployment", "isCorrect": false },
      { "id": "option_4", "text": "Release on Demand", "isCorrect": false }
    ],
    "hint": "This phase helps identify the right solutions before development starts.",
    "answerDescription": "Continuous Exploration ensures that teams research, prototype, and validate ideas before committing to full development."
  },
  {
    "id": "agile_1581",
    "question": "In SAFe, what is the purpose of the Roadmap at the Program level?",
    "options": [
      { "id": "option_1", "text": "Provides a high-level schedule of planned releases and milestones", "isCorrect": true },
      { "id": "option_2", "text": "Manages daily team tasks", "isCorrect": false },
      { "id": "option_3", "text": "Eliminates the need for backlog grooming", "isCorrect": false },
      { "id": "option_4", "text": "Tracks developer workload distribution", "isCorrect": false }
    ],
    "hint": "This artifact ensures visibility into future work at a strategic level.",
    "answerDescription": "A SAFe Roadmap provides a long-term perspective on release planning and major milestones for an Agile Release Train (ART)."
  },
 {
    "id": "agile_1582",
    "question": "What is a key benefit of implementing SAFe in large organizations?",
    "options": [
      { "id": "option_1", "text": "Increased project isolation", "isCorrect": false },
      { "id": "option_2", "text": "Improved alignment and collaboration", "isCorrect": true },
      { "id": "option_3", "text": "Reduced communication across teams", "isCorrect": false },
      { "id": "option_4", "text": "Fixed scope and requirements", "isCorrect": false }
    ],
    "hint": "SAFe fosters better coordination and teamwork across multiple teams.",
    "answerDescription": "SAFe helps organizations align teams, enhance communication, and improve collaboration at scale."
  },
  {
    "id": "agile_1583",
    "question": "Which SAFe principle emphasizes delivering value in small increments?",
    "options": [
      { "id": "option_1", "text": "Developing complex solutions in one go", "isCorrect": false },
      { "id": "option_2", "text": "Applying cadence and synchronization", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "Delaying integration until the end", "isCorrect": false }
    ],
    "hint": "Regular iterations help improve product development in SAFe.",
    "answerDescription": "Cadence and synchronization ensure teams deliver value incrementally and adapt based on feedback."
  },
  {
    "id": "agile_1584",
    "question": "What is the purpose of an Agile Release Train (ART) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To plan traditional project phases", "isCorrect": false },
      { "id": "option_2", "text": "To align teams on a shared vision and cadence", "isCorrect": true },
      { "id": "option_3", "text": "To work independently without dependencies", "isCorrect": false },
      { "id": "option_4", "text": "To focus only on short-term goals", "isCorrect": false }
    ],
    "hint": "ARTs provide structure for multiple Agile teams to collaborate effectively.",
    "answerDescription": "Agile Release Trains synchronize teams around a shared mission, ensuring smooth execution and delivery."
  },
  {
    "id": "agile_1585",
    "question": "Which role in SAFe is responsible for ensuring alignment between business and development?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Management", "isCorrect": true },
      { "id": "option_3", "text": "Agile Coach", "isCorrect": false },
      { "id": "option_4", "text": "Development Team", "isCorrect": false }
    ],
    "hint": "This role defines features and priorities in SAFe.",
    "answerDescription": "Product Management ensures teams work on high-value features that align with business needs."
  },
  {
    "id": "agile_1586",
    "question": "Why is PI Planning important in SAFe?",
    "options": [
      { "id": "option_1", "text": "To create a rigid roadmap for the entire year", "isCorrect": false },
      { "id": "option_2", "text": "To align teams and plan for the upcoming increment", "isCorrect": true },
      { "id": "option_3", "text": "To finalize all features upfront", "isCorrect": false },
      { "id": "option_4", "text": "To restrict changes during development", "isCorrect": false }
    ],
    "hint": "PI Planning helps teams coordinate their efforts effectively.",
    "answerDescription": "SAFe's PI Planning ensures teams have a shared vision and plan for the next iteration cycle."
  },
  {
    "id": "agile_1587",
    "question": "How does SAFe promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By fixing processes and avoiding changes", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging inspect-and-adapt sessions", "isCorrect": true },
      { "id": "option_3", "text": "By limiting retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing strict documentation", "isCorrect": false }
    ],
    "hint": "Frequent feedback loops drive better outcomes.",
    "answerDescription": "Inspect-and-adapt sessions allow teams to learn from past experiences and refine their processes."
  },
  {
    "id": "agile_1588",
    "question": "What is a key responsibility of a SAFe Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Defining business strategies", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating team collaboration and removing impediments", "isCorrect": true },
      { "id": "option_3", "text": "Developing technical features", "isCorrect": false },
      { "id": "option_4", "text": "Approving budgets", "isCorrect": false }
    ],
    "hint": "This role supports Agile teams in executing their work smoothly.",
    "answerDescription": "A SAFe Scrum Master ensures teams follow Agile principles and resolve obstacles to progress."
  },
  {
    "id": "agile_1589",
    "question": "Which SAFe core value focuses on customer-centric product delivery?",
    "options": [
      { "id": "option_1", "text": "Transparency", "isCorrect": false },
      { "id": "option_2", "text": "Built-in Quality", "isCorrect": true },
      { "id": "option_3", "text": "Fixed Scope", "isCorrect": false },
      { "id": "option_4", "text": "Command and Control", "isCorrect": false }
    ],
    "hint": "Ensuring high standards of work is critical in SAFe.",
    "answerDescription": "Built-in Quality ensures that products meet high standards and are continuously improved to maximize customer satisfaction."
  },
  {
    "id": "agile_1590",
    "question": "What does SAFe emphasize to improve decision-making across teams?",
    "options": [
      { "id": "option_1", "text": "Strict hierarchical control", "isCorrect": false },
      { "id": "option_2", "text": "Decentralized decision-making", "isCorrect": true },
      { "id": "option_3", "text": "Delaying critical choices", "isCorrect": false },
      { "id": "option_4", "text": "Centralized approvals only", "isCorrect": false }
    ],
    "hint": "Giving teams autonomy helps speed up progress.",
    "answerDescription": "Decentralized decision-making empowers teams to act quickly and adapt to changes efficiently."
  },
  {
    "id": "agile_1591",
    "question": "How does SAFe ensure teams stay aligned on business objectives?",
    "options": [
      { "id": "option_1", "text": "By limiting team communication", "isCorrect": false },
      { "id": "option_2", "text": "By using Lean Portfolio Management", "isCorrect": true },
      { "id": "option_3", "text": "By assigning fixed tasks to teams", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding customer involvement", "isCorrect": false }
    ],
    "hint": "This approach balances business strategy with execution.",
    "answerDescription": "Lean Portfolio Management ensures teams work towards common objectives while maintaining flexibility."
  },

  {
    "id": "agile_1592",
    "question": "Which of the following is a key benefit of Lean-Agile Leadership in SAFe?",
    "options": [
      { "id": "option_1", "text": "Encouraging rigid processes", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing team autonomy", "isCorrect": false },
      { "id": "option_3", "text": "Empowering teams to make decisions", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding continuous improvement", "isCorrect": false }
    ],
    "hint": "Lean-Agile Leadership promotes decentralized control.",
    "answerDescription": "SAFe encourages leaders to empower teams, fostering a culture of trust, autonomy, and innovation."
  },
  {
    "id": "agile_1593",
    "question": "What is the primary focus of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "Delivering features once per year", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing automation in workflows", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring fast and reliable value delivery", "isCorrect": true },
      { "id": "option_4", "text": "Keeping testing and deployment separate", "isCorrect": false }
    ],
    "hint": "The pipeline ensures continuous value flow to customers.",
    "answerDescription": "SAFeâ€™s Continuous Delivery Pipeline enables frequent releases, automation, and seamless integration."
  },
  {
    "id": "agile_1594",
    "question": "In SAFe, what is the main purpose of Lean Portfolio Management?",
    "options": [
      { "id": "option_1", "text": "To enforce rigid budget allocation", "isCorrect": false },
      { "id": "option_2", "text": "To minimize stakeholder engagement", "isCorrect": false },
      { "id": "option_3", "text": "To align strategy with execution", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate team autonomy", "isCorrect": false }
    ],
    "hint": "It connects business strategy with Agile execution.",
    "answerDescription": "Lean Portfolio Management ensures funding and priorities align with enterprise objectives."
  },
  {
    "id": "agile_1595",
    "question": "Which event in SAFe allows Agile Release Trains to synchronize their work?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_3", "text": "PI Planning", "isCorrect": true },
      { "id": "option_4", "text": "Retrospectives", "isCorrect": false }
    ],
    "hint": "This is a large-scale event that occurs every Program Increment.",
    "answerDescription": "PI Planning ensures teams align their goals, dependencies, and deliverables for the next iteration."
  },
  {
    "id": "agile_1596",
    "question": "What role does the System Architect play in SAFe?",
    "options": [
      { "id": "option_1", "text": "Developing individual user stories", "isCorrect": false },
      { "id": "option_2", "text": "Managing budgets and finances", "isCorrect": false },
      { "id": "option_3", "text": "Defining the overall system architecture", "isCorrect": true },
      { "id": "option_4", "text": "Handling customer support requests", "isCorrect": false }
    ],
    "hint": "This role focuses on technical design and scalability.",
    "answerDescription": "The System Architect ensures the system is scalable, maintainable, and aligned with enterprise needs."
  },
  {
    "id": "agile_1597",
    "question": "How does SAFe handle large-scale Agile team coordination?",
    "options": [
      { "id": "option_1", "text": "By using a traditional command-and-control model", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding cross-team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By implementing Agile Release Trains (ARTs)", "isCorrect": true },
      { "id": "option_4", "text": "By limiting Agile to small teams only", "isCorrect": false }
    ],
    "hint": "ARTs synchronize multiple teams towards common objectives.",
    "answerDescription": "Agile Release Trains (ARTs) help teams collaborate, align, and deliver value at scale."
  },
  {
    "id": "agile_1598",
    "question": "What is the primary goal of SAFeâ€™s DevOps approach?",
    "options": [
      { "id": "option_1", "text": "To separate development and operations", "isCorrect": false },
      { "id": "option_2", "text": "To reduce automation in deployments", "isCorrect": false },
      { "id": "option_3", "text": "To enable continuous integration and delivery", "isCorrect": true },
      { "id": "option_4", "text": "To focus only on feature development", "isCorrect": false }
    ],
    "hint": "DevOps aims to streamline software delivery.",
    "answerDescription": "SAFeâ€™s DevOps practices enhance collaboration, automation, and fast, reliable software releases."
  },
  {
    "id": "agile_1599",
    "question": "Which SAFe competency focuses on fostering innovation within teams?",
    "options": [
      { "id": "option_1", "text": "Business Agility", "isCorrect": false },
      { "id": "option_2", "text": "Team and Technical Agility", "isCorrect": false },
      { "id": "option_3", "text": "Continuous Learning Culture", "isCorrect": true },
      { "id": "option_4", "text": "Lean Governance", "isCorrect": false }
    ],
    "hint": "This competency emphasizes a mindset of improvement and innovation.",
    "answerDescription": "A Continuous Learning Culture drives innovation by encouraging teams to experiment and grow."
  },
  {
    "id": "agile_1600",
    "question": "How does SAFe help organizations achieve Business Agility?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid processes", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating Agile principles", "isCorrect": false },
      { "id": "option_3", "text": "By promoting flexibility and customer focus", "isCorrect": true },
      { "id": "option_4", "text": "By limiting feedback loops", "isCorrect": false }
    ],
    "hint": "Business Agility requires responsiveness to change.",
    "answerDescription": "SAFe enhances Business Agility by ensuring teams can quickly respond to market demands."
  },
  {
    "id": "agile_1601",
    "question": "Which SAFe principle helps teams manage changing requirements effectively?",
    "options": [
      { "id": "option_1", "text": "Fixed requirements planning", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding iteration-based work", "isCorrect": false },
      { "id": "option_3", "text": "Applying a Lean-Agile mindset", "isCorrect": true },
      { "id": "option_4", "text": "Delaying adaptation until project completion", "isCorrect": false }
    ],
    "hint": "Being adaptive is a core SAFe principle.",
    "answerDescription": "A Lean-Agile mindset allows teams to respond to evolving requirements effectively and efficiently."
  },
  {
    "id": "agile_1602",
    "question": "What is the purpose of SAFeâ€™s Innovation and Planning (IP) Iteration?",
    "options": [
      { "id": "option_1", "text": "To extend project deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To reduce Agile Release Train collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To allow for innovation, learning, and program-level planning", "isCorrect": true },
      { "id": "option_4", "text": "To replace daily stand-ups", "isCorrect": false }
    ],
    "hint": "This iteration is used for planning, learning, and continuous improvement.",
    "answerDescription": "The IP Iteration provides teams time for innovation, knowledge sharing, and program planning to enhance SAFe adoption."
  },
  {
    "id": "agile_1603",
    "question": "In SAFe, what is the function of the Release Train Engineer (RTE)?",
    "options": [
      { "id": "option_1", "text": "To act as the business owner of all initiatives", "isCorrect": false },
      { "id": "option_2", "text": "To replace Scrum Masters in Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To facilitate and coach Agile Release Trains", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks to developers", "isCorrect": false }
    ],
    "hint": "This role ensures smooth execution of Agile Release Trains.",
    "answerDescription": "The RTE acts as a servant leader, guiding the ART to ensure alignment, synchronization, and efficiency in execution."
  },
  {
    "id": "agile_1604",
    "question": "How does SAFe address cross-team dependencies within an Agile Release Train?",
    "options": [
      { "id": "option_1", "text": "By discouraging collaboration between teams", "isCorrect": false },
      { "id": "option_2", "text": "By assigning dependencies only to senior managers", "isCorrect": false },
      { "id": "option_3", "text": "By using a Program Board to visualize dependencies", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding dependencies altogether", "isCorrect": false }
    ],
    "hint": "This tool is used during PI Planning to track interdependencies.",
    "answerDescription": "The Program Board helps teams visualize dependencies and coordinate work effectively across an Agile Release Train."
  },
  {
    "id": "agile_1605",
    "question": "Which principle of SAFe emphasizes short feedback loops and learning cycles?",
    "options": [
      { "id": "option_1", "text": "Fixed long-term planning", "isCorrect": false },
      { "id": "option_2", "text": "Centralized decision-making", "isCorrect": false },
      { "id": "option_3", "text": "Applying fast learning cycles", "isCorrect": true },
      { "id": "option_4", "text": "Strict process adherence", "isCorrect": false }
    ],
    "hint": "This principle enables teams to adapt to change quickly.",
    "answerDescription": "Fast learning cycles help teams incorporate feedback rapidly, allowing continuous improvement and innovation."
  },
  {
    "id": "agile_1606",
    "question": "What is a primary characteristic of SAFeâ€™s Lean Budgets?",
    "options": [
      { "id": "option_1", "text": "Traditional project-based funding", "isCorrect": false },
      { "id": "option_2", "text": "Fixed yearly budget allocations", "isCorrect": false },
      { "id": "option_3", "text": "Funding value streams instead of projects", "isCorrect": true },
      { "id": "option_4", "text": "Detailed cost control at every level", "isCorrect": false }
    ],
    "hint": "Lean Budgets focus on funding continuous value delivery.",
    "answerDescription": "SAFeâ€™s Lean Budgets shift from project-based funding to a value stream-based approach, ensuring flexibility and agility."
  },
  {
    "id": "agile_1607",
    "question": "What is the purpose of SAFeâ€™s Architectural Runway?",
    "options": [
      { "id": "option_1", "text": "To document all technical details upfront", "isCorrect": false },
      { "id": "option_2", "text": "To prevent future system changes", "isCorrect": false },
      { "id": "option_3", "text": "To provide the necessary technical foundation for future development", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for refactoring", "isCorrect": false }
    ],
    "hint": "This concept ensures technology can support evolving business needs.",
    "answerDescription": "The Architectural Runway consists of technical components and practices that enable continuous development without technical debt."
  },
  {
    "id": "agile_1608",
    "question": "Which SAFe event promotes relentless improvement?",
    "options": [
      { "id": "option_1", "text": "PI Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_3", "text": "Inspect and Adapt (I&A) Workshop", "isCorrect": true },
      { "id": "option_4", "text": "Iteration Review", "isCorrect": false }
    ],
    "hint": "This event takes place at the end of each Program Increment.",
    "answerDescription": "The Inspect and Adapt Workshop enables teams to review results, identify improvements, and enhance overall effectiveness."
  },
  {
    "id": "agile_1609",
    "question": "What is one key benefit of decentralized decision-making in SAFe?",
    "options": [
      { "id": "option_1", "text": "Slower response times to market changes", "isCorrect": false },
      { "id": "option_2", "text": "Increased reliance on top-down management", "isCorrect": false },
      { "id": "option_3", "text": "Faster and more informed decisions at the right level", "isCorrect": true },
      { "id": "option_4", "text": "Minimized autonomy for teams", "isCorrect": false }
    ],
    "hint": "This approach allows teams to act quickly in response to changing needs.",
    "answerDescription": "Decentralized decision-making empowers teams, reducing delays and improving responsiveness to business needs."
  },
  {
    "id": "agile_1610",
    "question": "What is the purpose of Weighted Shortest Job First (WSJF) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To prioritize work based on personal preference", "isCorrect": false },
      { "id": "option_2", "text": "To complete the largest jobs first", "isCorrect": false },
      { "id": "option_3", "text": "To sequence work for the maximum economic benefit", "isCorrect": true },
      { "id": "option_4", "text": "To avoid prioritization altogether", "isCorrect": false }
    ],
    "hint": "This method balances urgency and value delivery.",
    "answerDescription": "WSJF prioritizes work based on cost of delay and job size, ensuring high-value items are delivered first."
  },
  {
    "id": "agile_1611",
    "question": "How does SAFeâ€™s Portfolio Kanban system support Lean Portfolio Management?",
    "options": [
      { "id": "option_1", "text": "By ensuring that all projects are approved by a central authority", "isCorrect": false },
      { "id": "option_2", "text": "By limiting visibility into work progress", "isCorrect": false },
      { "id": "option_3", "text": "By visualizing and managing the flow of portfolio-level work", "isCorrect": true },
      { "id": "option_4", "text": "By removing the need for prioritization", "isCorrect": false }
    ],
    "hint": "It helps manage work at the portfolio level.",
    "answerDescription": "The Portfolio Kanban system enables SAFe organizations to track, prioritize, and optimize high-level work items efficiently."
  },  {
    "id": "agile_1612",
    "question": "What is the primary goal of SAFe's Lean-Agile Leadership?",
    "options": [
      { "id": "option_1", "text": "To impose strict hierarchical structures", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the autonomy of Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To focus only on financial goals", "isCorrect": false },
      { "id": "option_4", "text": "To inspire and empower teams towards agility", "isCorrect": true }
    ],
    "hint": "Lean-Agile Leadership focuses on fostering a culture of continuous improvement.",
    "answerDescription": "SAFe's Lean-Agile Leadership ensures leaders promote agility by guiding, coaching, and empowering teams."
  },
  {
    "id": "agile_1613",
    "question": "Which SAFe artifact helps visualize, limit, and manage work in progress?",
    "options": [
      { "id": "option_1", "text": "Program Increment Objectives", "isCorrect": false },
      { "id": "option_2", "text": "SAFe Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Scrum Board", "isCorrect": false },
      { "id": "option_4", "text": "Kanban Board", "isCorrect": true }
    ],
    "hint": "This tool is commonly used in Lean-Agile environments.",
    "answerDescription": "The Kanban Board helps SAFe teams visualize work, manage flow, and limit work in progress to improve efficiency."
  },
  {
    "id": "agile_1614",
    "question": "What is a major advantage of organizing teams around value in SAFe?",
    "options": [
      { "id": "option_1", "text": "It increases silos between teams", "isCorrect": false },
      { "id": "option_2", "text": "It slows down decision-making", "isCorrect": false },
      { "id": "option_3", "text": "It discourages collaboration across teams", "isCorrect": false },
      { "id": "option_4", "text": "It ensures better alignment with business goals", "isCorrect": true }
    ],
    "hint": "SAFe focuses on delivering value effectively.",
    "answerDescription": "Organizing teams around value enables faster delivery, improved collaboration, and alignment with business outcomes."
  },
  {
    "id": "agile_1615",
    "question": "What is the role of a Release Train Engineer (RTE) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define business strategies", "isCorrect": false },
      { "id": "option_2", "text": "To approve product budgets", "isCorrect": false },
      { "id": "option_3", "text": "To develop software features", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate Agile Release Train (ART) execution", "isCorrect": true }
    ],
    "hint": "This role is similar to a large-scale Scrum Master.",
    "answerDescription": "The Release Train Engineer (RTE) ensures the Agile Release Train (ART) runs smoothly by facilitating coordination and execution."
  },
  {
    "id": "agile_1616",
    "question": "How does SAFe ensure teams adapt to change quickly?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict long-term plans", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback loops", "isCorrect": false },
      { "id": "option_3", "text": "By reducing collaboration between teams", "isCorrect": false },
      { "id": "option_4", "text": "By promoting iterative development and continuous feedback", "isCorrect": true }
    ],
    "hint": "SAFe supports agility through continuous learning.",
    "answerDescription": "SAFe enables teams to embrace change by implementing short iterations, continuous improvement, and feedback mechanisms."
  },
  {
    "id": "agile_1617",
    "question": "What is the purpose of SAFe's Architectural Runway?",
    "options": [
      { "id": "option_1", "text": "To define static architectural designs", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for continuous delivery", "isCorrect": false },
      { "id": "option_3", "text": "To increase technical debt", "isCorrect": false },
      { "id": "option_4", "text": "To enable future development by maintaining a scalable architecture", "isCorrect": true }
    ],
    "hint": "It provides a foundation for incremental feature development.",
    "answerDescription": "SAFe's Architectural Runway ensures that technical infrastructure supports ongoing Agile development and innovation."
  },
  {
    "id": "agile_1618",
    "question": "What is the key characteristic of SAFe's Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "Fixed release schedules", "isCorrect": false },
      { "id": "option_2", "text": "Manual deployment processes", "isCorrect": false },
      { "id": "option_3", "text": "Delayed integration of features", "isCorrect": false },
      { "id": "option_4", "text": "Automated testing and deployment", "isCorrect": true }
    ],
    "hint": "It enables frequent and reliable releases.",
    "answerDescription": "SAFe's Continuous Delivery Pipeline relies on automation to ensure quick, high-quality software delivery."
  },
  {
    "id": "agile_1619",
    "question": "What is an essential practice of SAFe's Lean Portfolio Management?",
    "options": [
      { "id": "option_1", "text": "Allocating resources based on yearly fixed budgets", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on short-term projects", "isCorrect": false },
      { "id": "option_3", "text": "Restricting teams from making independent decisions", "isCorrect": false },
      { "id": "option_4", "text": "Aligning investments with strategic objectives", "isCorrect": true }
    ],
    "hint": "It connects strategy with execution.",
    "answerDescription": "Lean Portfolio Management ensures resources are allocated dynamically to maximize business outcomes."
  },
  {
    "id": "agile_1620",
    "question": "Why does SAFe emphasize built-in quality?",
    "options": [
      { "id": "option_1", "text": "To minimize development time", "isCorrect": false },
      { "id": "option_2", "text": "To reduce customer feedback cycles", "isCorrect": false },
      { "id": "option_3", "text": "To avoid iterative improvements", "isCorrect": false },
      { "id": "option_4", "text": "To ensure high-quality products at every stage", "isCorrect": true }
    ],
    "hint": "Quality is integral to every phase in SAFe.",
    "answerDescription": "SAFe incorporates quality assurance throughout the development process, reducing defects and improving user satisfaction."
  },
  {
    "id": "agile_1621",
    "question": "What is a benefit of decentralized decision-making in SAFe?",
    "options": [
      { "id": "option_1", "text": "Slower response to market changes", "isCorrect": false },
      { "id": "option_2", "text": "Increased dependency on upper management", "isCorrect": false },
      { "id": "option_3", "text": "Limited innovation within teams", "isCorrect": false },
      { "id": "option_4", "text": "Faster and more adaptive decision-making", "isCorrect": true }
    ],
    "hint": "Empowering teams speeds up execution.",
    "answerDescription": "SAFe promotes decentralized decision-making to allow teams to respond quickly to changes and improve innovation."
  },
  {
    "id": "agile_1622",
    "question": "What is the primary purpose of SAFe's Agile Release Train (ART)?",
    "options": [
      { "id": "option_1", "text": "To align teams to a common business and technical mission", "isCorrect": true },
      { "id": "option_2", "text": "To eliminate the need for Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "To work independently without coordination", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict hierarchical controls", "isCorrect": false }
    ],
    "hint": "ART ensures teams collaborate toward shared objectives.",
    "answerDescription": "The Agile Release Train (ART) is a team of teams that aligns efforts to deliver value through SAFe principles."
  },
  {
    "id": "agile_1623",
    "question": "Why does SAFe recommend using PI Planning?",
    "options": [
      { "id": "option_1", "text": "To ensure alignment and synchronization across Agile teams", "isCorrect": true },
      { "id": "option_2", "text": "To replace iteration planning", "isCorrect": false },
      { "id": "option_3", "text": "To centralize all decision-making to leadership", "isCorrect": false },
      { "id": "option_4", "text": "To avoid frequent collaboration", "isCorrect": false }
    ],
    "hint": "PI Planning is an essential SAFe event for collaboration.",
    "answerDescription": "Program Increment (PI) Planning enables teams to align, identify dependencies, and define objectives for a common vision."
  },
  {
    "id": "agile_1624",
    "question": "What is a key benefit of using SAFeâ€™s Lean-Agile Mindset?",
    "options": [
      { "id": "option_1", "text": "It fosters a culture of continuous learning and improvement", "isCorrect": true },
      { "id": "option_2", "text": "It promotes rigid project execution", "isCorrect": false },
      { "id": "option_3", "text": "It discourages feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "It limits team autonomy", "isCorrect": false }
    ],
    "hint": "Lean-Agile Mindset focuses on adaptability and learning.",
    "answerDescription": "SAFeâ€™s Lean-Agile Mindset encourages continuous learning, flexibility, and value-driven delivery."
  },
  {
    "id": "agile_1625",
    "question": "why SAFe is define as Business Agility?",
    "options": [
      { "id": "option_1", "text": "The ability to quickly respond to market changes with innovative solutions", "isCorrect": true },
      { "id": "option_2", "text": "The ability to delay changes for long-term planning", "isCorrect": false },
      { "id": "option_3", "text": "The ability to limit Agile adoption to development teams", "isCorrect": false },
      { "id": "option_4", "text": "The ability to focus only on operational stability", "isCorrect": false }
    ],
    "hint": "Business Agility helps organizations stay competitive in a dynamic environment.",
    "answerDescription": "SAFeâ€™s Business Agility enables organizations to adapt, innovate, and deliver customer-centric value efficiently."
  },
  {
    "id": "agile_1626",
    "question": "What is the primary responsibility of a Product Owner in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define and prioritize the Team Backlog", "isCorrect": true },
      { "id": "option_2", "text": "To manage business finances", "isCorrect": false },
      { "id": "option_3", "text": "To oversee the entire Agile Release Train (ART)", "isCorrect": false },
      { "id": "option_4", "text": "To approve organizational policies", "isCorrect": false }
    ],
    "hint": "The Product Owner ensures backlog items align with business value.",
    "answerDescription": "In SAFe, a Product Owner collaborates with teams to define and prioritize backlog items based on customer needs."
  },
  {
    "id": "agile_1627",
    "question": "Which principle of SAFe emphasizes delivering value in the shortest sustainable lead time?",
    "options": [
      { "id": "option_1", "text": "Principle of Flow Efficiency", "isCorrect": true },
      { "id": "option_2", "text": "Principle of Long-Term Planning", "isCorrect": false },
      { "id": "option_3", "text": "Principle of Command and Control", "isCorrect": false },
      { "id": "option_4", "text": "Principle of Siloed Execution", "isCorrect": false }
    ],
    "hint": "This principle ensures timely and continuous delivery of value.",
    "answerDescription": "Flow Efficiency focuses on reducing delays, improving throughput, and delivering value at a sustainable pace."
  },
  {
    "id": "agile_1628",
    "question": "What does the SAFe Core Value of 'Alignment' emphasize?",
    "options": [
      { "id": "option_1", "text": "Ensuring teams and leadership work toward shared objectives", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing strict top-down control", "isCorrect": false },
      { "id": "option_3", "text": "Isolating teams from business goals", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding collaboration between teams", "isCorrect": false }
    ],
    "hint": "Alignment helps create a shared vision across teams and leadership.",
    "answerDescription": "SAFeâ€™s alignment ensures that teams work toward common objectives, reducing miscommunication and increasing efficiency."
  },
  {
    "id": "agile_1629",
    "question": "What is the  key role of a System Architect in SAFe?",
    "options": [
      { "id": "option_1", "text": "To define the overall technical architecture and design", "isCorrect": true },
      { "id": "option_2", "text": "To manage Agile Release Train schedules", "isCorrect": false },
      { "id": "option_3", "text": "To approve budgets for Agile teams", "isCorrect": false },
      { "id": "option_4", "text": "To act as a Scrum Master for multiple teams", "isCorrect": false }
    ],
    "hint": "The System Architect ensures scalable and sustainable technical solutions.",
    "answerDescription": "In SAFe, a System Architect designs and maintains the technical foundation for Agile teams to deliver value effectively."
  },
  {
    "id": "agile_1630",
    "question": "How does SAFe support continuous learning within organizations?",
    "options": [
      { "id": "option_1", "text": "By promoting Communities of Practice and Innovation Days", "isCorrect": true },
      { "id": "option_2", "text": "By limiting knowledge-sharing initiatives", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging experimentation and adaptation", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing rigid learning structures", "isCorrect": false }
    ],
    "hint": "Continuous learning is a key component of SAFeâ€™s success.",
    "answerDescription": "SAFe encourages continuous improvement through Communities of Practice, knowledge-sharing, and innovation-driven events."
  },
  {
    "id": "agile_1631",
    "question": "What does the Weighted Shortest Job First (WSJF) in SAFe?",
    "options": [
      { "id": "option_1", "text": "To prioritize work based on cost of delay and job size", "isCorrect": true },
      { "id": "option_2", "text": "To assign tasks randomly across teams", "isCorrect": false },
      { "id": "option_3", "text": "To enforce strict task orders without flexibility", "isCorrect": false },
      { "id": "option_4", "text": "To limit the number of new features developed", "isCorrect": false }
    ],
    "hint": "WSJF helps prioritize the most valuable work items.",
    "answerDescription": "Weighted Shortest Job First (WSJF) ensures that high-value tasks with minimal effort receive priority in SAFe."
  },
  {
    "id": "agile_1632",
    "question": "Which SAFe competency focuses on aligning development with business goals?",
    "options": [
      { "id": "option_1", "text": "Agile Product Delivery", "isCorrect": false },
      { "id": "option_2", "text": "Lean Portfolio Management", "isCorrect": true },
      { "id": "option_3", "text": "Enterprise Solution Delivery", "isCorrect": false },
      { "id": "option_4", "text": "Continuous Learning Culture", "isCorrect": false }
    ],
    "hint": "This competency ensures strategic alignment and funding allocation.",
    "answerDescription": "Lean Portfolio Management connects business strategy to execution, ensuring alignment with company objectives."
  },
  {
    "id": "agile_1633",
    "question": "What is the goal of SAFeâ€™s Continuous Delivery Pipeline?",
    "options": [
      { "id": "option_1", "text": "To deploy all features at the end of a release cycle", "isCorrect": false },
      { "id": "option_2", "text": "To enable frequent, reliable releases of value", "isCorrect": true },
      { "id": "option_3", "text": "To limit the number of integrations", "isCorrect": false },
      { "id": "option_4", "text": "To avoid automation in testing", "isCorrect": false }
    ],
    "hint": "It supports the principle of delivering small, incremental changes.",
    "answerDescription": "The Continuous Delivery Pipeline helps teams deliver new features and fixes frequently while maintaining high quality."
  },
  {
    "id": "agile_1634",
    "question": "Which role in SAFe ensures features are defined and prioritized based on business value?",
    "options": [
      { "id": "option_1", "text": "System Architect", "isCorrect": false },
      { "id": "option_2", "text": "Product Management", "isCorrect": true },
      { "id": "option_3", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Agile Coach", "isCorrect": false }
    ],
    "hint": "This role works closely with customers and stakeholders to maximize value.",
    "answerDescription": "Product Management is responsible for defining the product vision, prioritizing features, and ensuring alignment with business goals."
  },
  {
    "id": "agile_1635",
    "question": "What is the primary purpose of SAFeâ€™s Portfolio Kanban?",
    "options": [
      { "id": "option_1", "text": "To track individual developer tasks", "isCorrect": false },
      { "id": "option_2", "text": "To visualize and manage the flow of portfolio-level work", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate dependencies between teams", "isCorrect": false },
      { "id": "option_4", "text": "To restrict teams from modifying priorities", "isCorrect": false }
    ],
    "hint": "It provides a big-picture view of work at the portfolio level.",
    "answerDescription": "The Portfolio Kanban helps organizations manage strategic initiatives and ensure proper prioritization."
  },
  {
    "id": "agile_1636",
    "question": "Which key event in SAFe ensures alignment across multiple Agile teams?",
    "options": [
      { "id": "option_1", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_2", "text": "PI Planning", "isCorrect": true },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": false }
    ],
    "hint": "This event occurs at the beginning of each Program Increment.",
    "answerDescription": "PI Planning ensures teams are aligned on objectives and dependencies before starting work on a new increment."
  },
  {
    "id": "agile_1637",
    "question": "What does SAFe emphasize to enable fast feedback and learning cycles?",
    "options": [
      { "id": "option_1", "text": "Fixed release schedules", "isCorrect": false },
      { "id": "option_2", "text": "Short iterations with continuous integration", "isCorrect": true },
      { "id": "option_3", "text": "Annual reviews", "isCorrect": false },
      { "id": "option_4", "text": "Waterfall planning methods", "isCorrect": false }
    ],
    "hint": "It involves delivering small, testable increments frequently.",
    "answerDescription": "Short iterations and continuous integration allow teams to adapt quickly based on feedback and changing requirements."
  },
  {
    "id": "agile_1638",
    "question": "Which practice in SAFe promotes decentralized decision-making?",
    "options": [
      { "id": "option_1", "text": "Top-down management control", "isCorrect": false },
      { "id": "option_2", "text": "Empowering Agile teams to make decisions", "isCorrect": true },
      { "id": "option_3", "text": "Requiring executive approval for all decisions", "isCorrect": false },
      { "id": "option_4", "text": "Strict hierarchical structures", "isCorrect": false }
    ],
    "hint": "Autonomy at the team level speeds up decision-making.",
    "answerDescription": "Decentralized decision-making enables teams to act independently while staying aligned with business objectives."
  },
  {
    "id": "agile_1639",
    "question": "What is the primary focus of SAFeâ€™s Agile Product Delivery competency?",
    "options": [
      { "id": "option_1", "text": "Delivering large batches of features at once", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring customer-centric, continuous value delivery", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding customer involvement in development", "isCorrect": false },
      { "id": "option_4", "text": "Strict adherence to predefined requirements", "isCorrect": false }
    ],
    "hint": "Customer needs drive the development approach in SAFe.",
    "answerDescription": "Agile Product Delivery ensures teams deliver value in a way that meets customer expectations and adapts to feedback."
  },
  {
    "id": "agile_1640",
    "question": "How does SAFe support adaptability in enterprise-level Agile development?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid rules and fixed processes", "isCorrect": false },
      { "id": "option_2", "text": "By fostering a mindset of continuous learning and change", "isCorrect": true },
      { "id": "option_3", "text": "By discouraging experimentation", "isCorrect": false },
      { "id": "option_4", "text": "By requiring all decisions to go through a central authority", "isCorrect": false }
    ],
    "hint": "SAFe emphasizes learning and iteration over rigid structures.",
    "answerDescription": "Continuous learning and a willingness to adapt help organizations remain competitive and responsive to market needs."
  },
  {
    "id": "agile_1641",
    "question": "Which element of SAFe ensures teams align on a shared vision and roadmap?",
    "options": [
      { "id": "option_1", "text": "Team-level retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Lean Portfolio Management", "isCorrect": true },
      { "id": "option_3", "text": "Randomized planning approaches", "isCorrect": false },
      { "id": "option_4", "text": "Isolated development practices", "isCorrect": false }
    ],
    "hint": "This practice helps balance strategy and execution across the enterprise.",
    "answerDescription": "Lean Portfolio Management aligns teams with long-term business objectives while allowing flexibility in execution."
  },
  {
    "id": "agile_1642",
    "question": "What is the primary responsibility of a Scrum Master in Agile?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring Scrum is understood and enacted", "isCorrect": true },
      { "id": "option_3", "text": "Defining the product backlog", "isCorrect": false },
      { "id": "option_4", "text": "Acting as the project manager", "isCorrect": false }
    ],
    "hint": "The Scrum Master serves as a coach and facilitator for the team.",
    "answerDescription": "The Scrum Master ensures that Scrum principles are followed, removes impediments, and fosters an Agile mindset within the team."
  },

  {
    "id": "agile_1643",
    "question": "How does a Scrum Master help remove impediments for the Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By micromanaging the team", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating solutions and escalating issues when necessary", "isCorrect": true },
      { "id": "option_3", "text": "By directly implementing technical solutions", "isCorrect": false },
      { "id": "option_4", "text": "By assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports the team by addressing obstacles that hinder progress.",
    "answerDescription": "The Scrum Master assists the team in resolving impediments by facilitating discussions, providing guidance, and escalating issues if needed."
  },
  {
    "id": "agile_1644",
    "question": "Which key responsibility of a Scrum Master promotes continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Defining the product roadmap", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Sprint Retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "Assigning story points to backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Monitoring team attendance", "isCorrect": false }
    ],
    "hint": "This event focuses on reflection and identifying improvements.",
    "answerDescription": "The Scrum Master ensures Sprint Retrospectives are conducted effectively to help the team continuously improve its processes."
  },
  {
    "id": "agile_1645",
    "question": "Why is servant leadership important for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "It allows them to dictate team activities", "isCorrect": false },
      { "id": "option_2", "text": "It fosters team empowerment and collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It enables them to make all project decisions", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for communication", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports the team by guiding rather than commanding.",
    "answerDescription": "Servant leadership allows the Scrum Master to empower and support the team rather than exerting control over its activities."
  },
  {
    "id": "agile_1646",
    "question": "What is one of the primary ways a Scrum Master ensures a team follows Scrum principles?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict rules for development", "isCorrect": false },
      { "id": "option_2", "text": "By coaching the team on Agile and Scrum practices", "isCorrect": true },
      { "id": "option_3", "text": "By directly managing individual team members", "isCorrect": false },
      { "id": "option_4", "text": "By assigning user stories to developers", "isCorrect": false }
    ],
    "hint": "A Scrum Master educates and guides the team in Agile methodologies.",
    "answerDescription": "The Scrum Master helps the team understand and apply Scrum principles by acting as a coach and mentor."
  },
  {
    "id": "agile_1647",
    "question": "How does a Scrum Master foster collaboration within the team?",
    "options": [
      { "id": "option_1", "text": "By conducting performance evaluations", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging open communication and transparency", "isCorrect": true },
      { "id": "option_3", "text": "By assigning daily tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "By limiting interactions to formal meetings only", "isCorrect": false }
    ],
    "hint": "A Scrum Master helps create an environment where team members freely share ideas.",
    "answerDescription": "Open communication and transparency enable better teamwork and problem-solving, which are key responsibilities of a Scrum Master."
  },
  {
    "id": "agile_1648",
    "question": "Which action best supports a Scrum Master in managing stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "Providing detailed individual performance reports", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating clear and regular communication with stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "Dictating product backlog priorities", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding discussions about team challenges", "isCorrect": false }
    ],
    "hint": "Keeping stakeholders informed helps manage their expectations effectively.",
    "answerDescription": "Regular updates and transparent discussions with stakeholders help align expectations and foster trust in the Agile process."
  },
  {
    "id": "agile_1649",
    "question": "How should a Scrum Master handle conflicts within the team?",
    "options": [
      { "id": "option_1", "text": "By ignoring minor disagreements", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating open discussions to resolve issues", "isCorrect": true },
      { "id": "option_3", "text": "By imposing their own solutions", "isCorrect": false },
      { "id": "option_4", "text": "By escalating all conflicts to senior management", "isCorrect": false }
    ],
    "hint": "A Scrum Master acts as a neutral facilitator to help resolve conflicts constructively.",
    "answerDescription": "Encouraging open discussions helps teams resolve conflicts collaboratively, strengthening team dynamics."
  },
  {
    "id": "agile_1650",
    "question": "What is the Scrum Masterâ€™s role in Daily Stand-ups?",
    "options": [
      { "id": "option_1", "text": "Leading the meeting and assigning tasks", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the meeting stays focused and productive", "isCorrect": true },
      { "id": "option_3", "text": "Providing direct solutions to all team challenges", "isCorrect": false },
      { "id": "option_4", "text": "Making key technical decisions", "isCorrect": false }
    ],
    "hint": "The Scrum Master facilitates but does not dominate the Stand-up.",
    "answerDescription": "A Scrum Master helps the team keep Stand-ups effective by ensuring focus and removing blockers when necessary."
  },
  {
    "id": "agile_1651",
    "question": "Which technique can a Scrum Master use to help a team improve its workflow?",
    "options": [
      { "id": "option_1", "text": "Mandating strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Using empirical data to optimize processes", "isCorrect": true },
      { "id": "option_3", "text": "Reducing collaboration to increase efficiency", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding process changes during a Sprint", "isCorrect": false }
    ],
    "hint": "Scrum relies on continuous improvement based on observations and data.",
    "answerDescription": "By leveraging empirical data, the Scrum Master helps the team identify areas of improvement and enhance workflow efficiency."
  },
  {
    "id": "agile_1652",
    "question": "What is the Scrum Masterâ€™s role in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Defining the Sprint Goal alone", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating discussions and ensuring focus", "isCorrect": true },
      { "id": "option_3", "text": "Assigning backlog items to team members", "isCorrect": false },
      { "id": "option_4", "text": "Deciding which tasks should be prioritized", "isCorrect": false }
    ],
    "hint": "A Scrum Master helps create a productive planning session without dictating tasks.",
    "answerDescription": "By facilitating Sprint Planning, the Scrum Master ensures a clear Sprint Goal and effective collaboration without imposing decisions."
  },
  {
    "id": "agile_1653",
    "question": "What is a key way a Scrum Master supports an Agile teamâ€™s self-organization?",
    "options": [
      { "id": "option_1", "text": "By dictating how tasks should be completed", "isCorrect": false },
      { "id": "option_2", "text": "By assigning work to individual team members", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging autonomy and collaboration", "isCorrect": true },
      { "id": "option_4", "text": "By imposing strict rules on daily operations", "isCorrect": false }
    ],
    "hint": "Scrum teams are self-organizing and make their own decisions.",
    "answerDescription": "A Scrum Master fosters an environment where teams take ownership of their work and collaborate to achieve goals."
  },
  {
    "id": "agile_1654",
    "question": "Which practice does a Scrum Master encourage to ensure a team continuously improves?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to initial plans", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding feedback from stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Regularly conducting Sprint Retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "Eliminating team discussions to save time", "isCorrect": false }
    ],
    "hint": "This Scrum event is focused on learning from past experiences.",
    "answerDescription": "Sprint Retrospectives help teams reflect on their processes and identify ways to improve efficiency and collaboration."
  },
  {
    "id": "agile_1655",
    "question": "How does a Scrum Master promote an Agile mindset within an organization?",
    "options": [
      { "id": "option_1", "text": "By enforcing top-down management practices", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging iterative improvements", "isCorrect": false },
      { "id": "option_3", "text": "By coaching teams and leadership on Agile principles", "isCorrect": true },
      { "id": "option_4", "text": "By preventing changes to existing processes", "isCorrect": false }
    ],
    "hint": "A Scrum Master educates and advocates for Agile values.",
    "answerDescription": "By coaching teams and leadership, a Scrum Master ensures Agile principles are understood and effectively applied across the organization."
  },
  {
    "id": "agile_1656",
    "question": "Which role does a Scrum Master play in fostering psychological safety within a team?",
    "options": [
      { "id": "option_1", "text": "By punishing team members for mistakes", "isCorrect": false },
      { "id": "option_2", "text": "By limiting open discussions to prevent conflicts", "isCorrect": false },
      { "id": "option_3", "text": "By creating a safe space for experimentation and learning", "isCorrect": true },
      { "id": "option_4", "text": "By discouraging new ideas that might disrupt workflow", "isCorrect": false }
    ],
    "hint": "Agile teams thrive when members feel safe to express ideas and take risks.",
    "answerDescription": "A Scrum Master ensures that team members feel comfortable sharing their thoughts and learning from mistakes, fostering innovation."
  },
  {
    "id": "agile_1657",
    "question": "How can a Scrum Master best support a Product Owner?",
    "options": [
      { "id": "option_1", "text": "By defining the Product Backlog items", "isCorrect": false },
      { "id": "option_2", "text": "By deciding which features to prioritize", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating collaboration between the Product Owner and the team", "isCorrect": true },
      { "id": "option_4", "text": "By taking over stakeholder communication", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures smooth collaboration between the team and the Product Owner.",
    "answerDescription": "A Scrum Master helps bridge communication gaps and ensures that backlog refinement and prioritization run smoothly."
  },
  {
    "id": "agile_1658",
    "question": "Which leadership style best describes a Scrum Master's approach?",
    "options": [
      { "id": "option_1", "text": "Command and control leadership", "isCorrect": false },
      { "id": "option_2", "text": "Hierarchical authority-based leadership", "isCorrect": false },
      { "id": "option_3", "text": "Servant leadership", "isCorrect": true },
      { "id": "option_4", "text": "Directive micromanagement", "isCorrect": false }
    ],
    "hint": "A Scrum Master leads by serving and enabling the team.",
    "answerDescription": "Servant leadership focuses on empowering and supporting the team rather than exerting control over them."
  },
  {
    "id": "agile_1659",
    "question": "What is the primary benefit of a Scrum Master removing impediments for a team?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for team discussions", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "It allows the team to focus on delivering value", "isCorrect": true },
      { "id": "option_4", "text": "It ensures the Scrum Master controls all decisions", "isCorrect": false }
    ],
    "hint": "Impediments slow down progress, and a Scrum Master helps resolve them.",
    "answerDescription": "By removing impediments, the Scrum Master helps the team work efficiently and focus on delivering high-quality work."
  },
  {
    "id": "agile_1660",
    "question": "Why is facilitation an important skill for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "To dictate team decisions", "isCorrect": false },
      { "id": "option_2", "text": "To avoid difficult conversations", "isCorrect": false },
      { "id": "option_3", "text": "To guide discussions and encourage collaboration", "isCorrect": true },
      { "id": "option_4", "text": "To assign specific roles within the team", "isCorrect": false }
    ],
    "hint": "A Scrum Master ensures meetings and discussions are productive.",
    "answerDescription": "Facilitation helps a Scrum Master create an open, engaging, and collaborative environment where teams can make decisions effectively."
  },
  {
    "id": "agile_1661",
    "question": "How does a Scrum Master contribute to building a high-performing team?",
    "options": [
      { "id": "option_1", "text": "By enforcing rigid deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing individual performance over teamwork", "isCorrect": false },
      { "id": "option_3", "text": "By fostering trust, collaboration, and accountability", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding direct interactions with the team", "isCorrect": false }
    ],
    "hint": "High-performing teams thrive on mutual respect and collaboration.",
    "answerDescription": "A Scrum Master helps build trust and accountability, which are essential for creating a high-performing Agile team."
  },
  {
    "id": "agile_1662",
    "question": "What should a Scrum Master do when a team struggles with completing work within a Sprint?",
    "options": [
      { "id": "option_1", "text": "Increase the Sprint length to fit all work", "isCorrect": false },
      { "id": "option_2", "text": "Assign additional work to balance the load", "isCorrect": false },
      { "id": "option_3", "text": "Encourage the team to inspect and adapt its approach", "isCorrect": true },
      { "id": "option_4", "text": "Reduce collaboration to increase efficiency", "isCorrect": false }
    ],
    "hint": "Scrum relies on continuous learning and improvement.",
    "answerDescription": "A Scrum Master encourages teams to analyze challenges and make necessary adjustments to improve Sprint planning and execution."
  },  {
    "id": "agile_1663",
    "question": "What is one of the primary responsibilities of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Defining the product backlog", "isCorrect": false },
      { "id": "option_3", "text": "Managing project deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true }
    ],
    "hint": "A Scrum Master's role is to support the team by ensuring smooth Scrum implementation.",
    "answerDescription": "A Scrum Master facilitates key Scrum ceremonies and removes obstacles to help the team work efficiently."
  },
  {
    "id": "agile_1664",
    "question": "How does a Scrum Master support team collaboration?",
    "options": [
      { "id": "option_1", "text": "By ensuring all discussions are kept to a minimum", "isCorrect": false },
      { "id": "option_2", "text": "By assigning individual tasks without team input", "isCorrect": false },
      { "id": "option_3", "text": "By preventing external stakeholders from engaging with the team", "isCorrect": false },
      { "id": "option_4", "text": "By fostering open communication and facilitating teamwork", "isCorrect": true }
    ],
    "hint": "Collaboration thrives in an open and communicative environment.",
    "answerDescription": "A Scrum Master ensures that Agile teams communicate effectively and collaborate to solve problems together."
  },
  {
    "id": "agile_1665",
    "question": "Which key Scrum event is facilitated by a Scrum Master to help the team inspect and adapt?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": true }
    ],
    "hint": "This event helps teams reflect on their process and improve continuously.",
    "answerDescription": "The Sprint Retrospective allows the team to analyze what went well and what can be improved for future Sprints."
  },
  {
    "id": "agile_1666",
    "question": "What approach should a Scrum Master take to resolve conflicts within the team?",
    "options": [
      { "id": "option_1", "text": "Impose strict rules and make final decisions", "isCorrect": false },
      { "id": "option_2", "text": "Encourage team members to ignore the conflict", "isCorrect": false },
      { "id": "option_3", "text": "Remove team members involved in conflicts", "isCorrect": false },
      { "id": "option_4", "text": "Act as a facilitator to help the team resolve conflicts collaboratively", "isCorrect": true }
    ],
    "hint": "A Scrum Master supports the team in finding solutions, rather than dictating outcomes.",
    "answerDescription": "By facilitating discussions, a Scrum Master helps teams address conflicts constructively and maintain a healthy working environment."
  },
  {
    "id": "agile_1667",
    "question": "Why is coaching an important skill for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "To directly manage the teamâ€™s tasks", "isCorrect": false },
      { "id": "option_2", "text": "To ensure that all decisions are made by the Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "To control the development process", "isCorrect": false },
      { "id": "option_4", "text": "To help teams and stakeholders embrace Agile principles", "isCorrect": true }
    ],
    "hint": "A Scrum Master helps teams grow by guiding them in Agile values.",
    "answerDescription": "Coaching allows a Scrum Master to educate and empower teams to follow Agile methodologies effectively."
  },
  {
    "id": "agile_1668",
    "question": "What is a Scrum Masterâ€™s role in relation to the Product Owner?",
    "options": [
      { "id": "option_1", "text": "To define the product vision", "isCorrect": false },
      { "id": "option_2", "text": "To approve feature requests", "isCorrect": false },
      { "id": "option_3", "text": "To dictate sprint goals", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate communication between the Product Owner and team", "isCorrect": true }
    ],
    "hint": "A Scrum Master ensures smooth collaboration between all roles in Scrum.",
    "answerDescription": "A Scrum Master helps the Product Owner and team work effectively by improving communication and collaboration."
  },
  {
    "id": "agile_1669",
    "question": "Which aspect of Agile does a Scrum Master help reinforce within a team?",
    "options": [
      { "id": "option_1", "text": "Command-and-control leadership", "isCorrect": false },
      { "id": "option_2", "text": "Fixed and detailed upfront planning", "isCorrect": false },
      { "id": "option_3", "text": "Rigid hierarchy and individual work", "isCorrect": false },
      { "id": "option_4", "text": "Empiricism and iterative learning", "isCorrect": true }
    ],
    "hint": "Agile teams rely on learning from experience and adapting.",
    "answerDescription": "A Scrum Master ensures that teams follow an empirical approach, adapting based on feedback and continuous learning."
  },
  {
    "id": "agile_1670",
    "question": "How can a Scrum Master help the team maintain focus on the Sprint Goal?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to individuals", "isCorrect": false },
      { "id": "option_2", "text": "By allowing frequent scope changes", "isCorrect": false },
      { "id": "option_3", "text": "By reducing discussions during the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By shielding the team from distractions and unnecessary interruptions", "isCorrect": true }
    ],
    "hint": "A Scrum Master protects the team from external disruptions.",
    "answerDescription": "By managing external requests and facilitating clear priorities, a Scrum Master helps keep the team focused on delivering the Sprint Goal."
  },
  {
    "id": "agile_1671",
    "question": "What should a Scrum Master do when a team faces external pressure to increase velocity?",
    "options": [
      { "id": "option_1", "text": "Push the team to work overtime", "isCorrect": false },
      { "id": "option_2", "text": "Add more developers to the team immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the pressure and proceed as usual", "isCorrect": false },
      { "id": "option_4", "text": "Educate stakeholders on sustainable development practices", "isCorrect": true }
    ],
    "hint": "Agile values emphasize sustainable work without burnout.",
    "answerDescription": "A Scrum Master educates stakeholders on sustainable practices, ensuring quality and long-term efficiency rather than short-term speed gains."
  },
  {
    "id": "agile_1672",
    "question": "How does a Scrum Master contribute to building an Agile culture in an organization?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict rules on Agile implementation", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on the development team", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding interactions with upper management", "isCorrect": false },
      { "id": "option_4", "text": "By promoting Agile values across all levels of the organization", "isCorrect": true }
    ],
    "hint": "A Scrum Master acts as an Agile ambassador within the company.",
    "answerDescription": "By educating teams and leadership, a Scrum Master helps create a culture that embraces Agile values and practices."
  },  {
    "id": "agile_1673",
    "question": "What is a Scrum Masterâ€™s primary role in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Facilitating the Scrum process and removing impediments", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks and monitoring productivity", "isCorrect": false },
      { "id": "option_3", "text": "Making product decisions and defining backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Managing budgets and timelines for the project", "isCorrect": false }
    ],
    "hint": "A Scrum Master is responsible for ensuring the Scrum framework is followed effectively.",
    "answerDescription": "The Scrum Master helps the team follow Agile practices, facilitates events, and removes obstacles that hinder progress."
  },
  {
    "id": "agile_1674",
    "question": "How does a Scrum Master help in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By facilitating discussions and ensuring team alignment", "isCorrect": true },
      { "id": "option_2", "text": "By deciding which backlog items the team will work on", "isCorrect": false },
      { "id": "option_3", "text": "By setting deadlines for each task in the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By approving the Sprint backlog without team input", "isCorrect": false }
    ],
    "hint": "A Scrum Master ensures a smooth and collaborative planning process.",
    "answerDescription": "The Scrum Master facilitates Sprint Planning by guiding discussions and ensuring the team selects work based on capacity and priority."
  },
  {
    "id": "agile_1675",
    "question": "Which skill is crucial for a Scrum Master to effectively remove team impediments?",
    "options": [
      { "id": "option_1", "text": "Strong problem-solving and facilitation skills", "isCorrect": true },
      { "id": "option_2", "text": "The ability to assign tasks efficiently", "isCorrect": false },
      { "id": "option_3", "text": "The power to make product-related decisions", "isCorrect": false },
      { "id": "option_4", "text": "Experience in writing code and testing software", "isCorrect": false }
    ],
    "hint": "A Scrum Master must be able to identify and resolve obstacles quickly.",
    "answerDescription": "Problem-solving and facilitation help a Scrum Master address challenges and support the team in delivering value."
  },
  {
    "id": "agile_1676",
    "question": "Why is servant leadership an important trait for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "It focuses on empowering the team rather than commanding them", "isCorrect": true },
      { "id": "option_2", "text": "It allows the Scrum Master to control team decisions", "isCorrect": false },
      { "id": "option_3", "text": "It helps the Scrum Master define the Sprint Goal", "isCorrect": false },
      { "id": "option_4", "text": "It enables the Scrum Master to act as the final authority", "isCorrect": false }
    ],
    "hint": "A Scrum Master leads by serving the team rather than directing them.",
    "answerDescription": "Servant leadership ensures that the Scrum Master focuses on enabling the team to work effectively without imposing control."
  },
  {
    "id": "agile_1677",
    "question": "How can a Scrum Master help a team new to Agile methodologies?",
    "options": [
      { "id": "option_1", "text": "By coaching them on Agile principles and best practices", "isCorrect": true },
      { "id": "option_2", "text": "By directly managing their workload", "isCorrect": false },
      { "id": "option_3", "text": "By setting strict rules for how Agile should be implemented", "isCorrect": false },
      { "id": "option_4", "text": "By assigning team members specific tasks", "isCorrect": false }
    ],
    "hint": "A Scrum Master helps teams understand and adopt Agile practices.",
    "answerDescription": "Coaching ensures that teams gradually adopt Agile values, leading to improved collaboration and efficiency."
  },
  {
    "id": "agile_1678",
    "question": "What is one way a Scrum Master supports continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By facilitating retrospectives to identify improvements", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing a rigid workflow that cannot be changed", "isCorrect": false },
      { "id": "option_3", "text": "By limiting feedback to only the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "By increasing the number of tasks per Sprint", "isCorrect": false }
    ],
    "hint": "This Scrum event focuses on identifying areas for team growth.",
    "answerDescription": "Retrospectives allow teams to reflect on their work and continuously improve processes."
  },
  {
    "id": "agile_1679",
    "question": "What should a Scrum Master do when a team struggles with self-organization?",
    "options": [
      { "id": "option_1", "text": "Guide the team in decision-making without enforcing control", "isCorrect": true },
      { "id": "option_2", "text": "Assign work to team members directly", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the issue and let the team resolve it alone", "isCorrect": false },
      { "id": "option_4", "text": "Take full control of Sprint execution", "isCorrect": false }
    ],
    "hint": "The goal is to help the team become self-sufficient without losing agility.",
    "answerDescription": "A Scrum Master supports self-organization by encouraging collaboration and helping teams develop their decision-making skills."
  },
  {
    "id": "agile_1680",
    "question": "Why is stakeholder collaboration important in Agile, and how can a Scrum Master facilitate it?",
    "options": [
      { "id": "option_1", "text": "By ensuring stakeholders provide feedback frequently", "isCorrect": true },
      { "id": "option_2", "text": "By limiting communication to avoid interruptions", "isCorrect": false },
      { "id": "option_3", "text": "By requiring stakeholders to approve all work items", "isCorrect": false },
      { "id": "option_4", "text": "By keeping stakeholders out of Sprint discussions", "isCorrect": false }
    ],
    "hint": "Frequent stakeholder feedback helps teams deliver the right value.",
    "answerDescription": "The Scrum Master ensures that stakeholders provide input regularly, aligning product development with business needs."
  },
  {
    "id": "agile_1681",
    "question": "What should a Scrum Master do when a team member frequently misses Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Have a one-on-one conversation to understand the issue", "isCorrect": true },
      { "id": "option_2", "text": "Publicly reprimand the team member", "isCorrect": false },
      { "id": "option_3", "text": "Remove the team member from the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "Ignore the issue and proceed as usual", "isCorrect": false }
    ],
    "hint": "Understanding the root cause is key to resolving the issue.",
    "answerDescription": "A Scrum Master should discuss the situation with the team member privately and find a solution that supports participation."
  },
  {
    "id": "agile_1682",
    "question": "What is a Scrum Masterâ€™s role in ensuring a Definition of Done is followed?",
    "options": [
      { "id": "option_1", "text": "Facilitating discussions to align the team on quality standards", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing the Definition of Done without team input", "isCorrect": false },
      { "id": "option_3", "text": "Deciding what constitutes â€˜doneâ€™ for each item", "isCorrect": false },
      { "id": "option_4", "text": "Skipping Definition of Done discussions to save time", "isCorrect": false }
    ],
    "hint": "A Definition of Done ensures quality and consistency.",
    "answerDescription": "A Scrum Master helps the team define and adhere to clear quality standards, ensuring work meets expectations."
  },
  {
    "id": "agile_1683",
    "question": "What is the Scrum Master's role in managing conflicts within the team?",
    "options": [
      { "id": "option_1", "text": "Ignore the conflicts and let the team resolve them independently", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions to resolve conflicts in a constructive manner", "isCorrect": true },
      { "id": "option_3", "text": "Impose decisions to quickly resolve disagreements", "isCorrect": false },
      { "id": "option_4", "text": "Escalate all conflicts to senior management", "isCorrect": false }
    ],
    "hint": "A Scrum Master acts as a facilitator, not an enforcer.",
    "answerDescription": "The Scrum Master helps the team address conflicts by fostering open discussions and guiding them toward solutions."
  },
  {
    "id": "agile_1684",
    "question": "How does a Scrum Master contribute to team motivation?",
    "options": [
      { "id": "option_1", "text": "By offering financial incentives for completing tasks", "isCorrect": false },
      { "id": "option_2", "text": "By fostering a collaborative and supportive team environment", "isCorrect": true },
      { "id": "option_3", "text": "By setting strict deadlines and tracking individual performance", "isCorrect": false },
      { "id": "option_4", "text": "By limiting discussions to avoid distractions", "isCorrect": false }
    ],
    "hint": "Motivation comes from a positive work environment, not strict controls.",
    "answerDescription": "The Scrum Master helps build a team culture that supports autonomy, mastery, and purpose, leading to higher motivation."
  },
  {
    "id": "agile_1685",
    "question": "What should a Scrum Master do when stakeholders frequently disrupt the teamâ€™s workflow?",
    "options": [
      { "id": "option_1", "text": "Allow stakeholders to provide input at any time", "isCorrect": false },
      { "id": "option_2", "text": "Work with stakeholders to establish proper communication channels", "isCorrect": true },
      { "id": "option_3", "text": "Exclude stakeholders from team discussions", "isCorrect": false },
      { "id": "option_4", "text": "Instruct the team to ignore stakeholder requests", "isCorrect": false }
    ],
    "hint": "Managing stakeholder involvement is key to maintaining workflow efficiency.",
    "answerDescription": "A Scrum Master ensures that stakeholders collaborate effectively with the team through structured communication and feedback loops."
  },
  {
    "id": "agile_1686",
    "question": "Why is coaching an important responsibility of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Because the Scrum Master needs to give technical guidance", "isCorrect": false },
      { "id": "option_2", "text": "Because coaching helps the team embrace Agile values and self-improvement", "isCorrect": true },
      { "id": "option_3", "text": "Because it allows the Scrum Master to control the teamâ€™s processes", "isCorrect": false },
      { "id": "option_4", "text": "Because coaching ensures that the Scrum Master remains in charge", "isCorrect": false }
    ],
    "hint": "A Scrum Master's coaching role focuses on Agile adoption and growth.",
    "answerDescription": "Through coaching, the Scrum Master helps the team continuously learn and adopt Agile principles to improve efficiency."
  },
  {
    "id": "agile_1687",
    "question": "How can a Scrum Master help ensure Sprint Goals are met?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines for each team member", "isCorrect": false },
      { "id": "option_2", "text": "By removing impediments and facilitating effective collaboration", "isCorrect": true },
      { "id": "option_3", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "By making last-minute changes to scope", "isCorrect": false }
    ],
    "hint": "The Scrum Master should enable the team to work efficiently, not control them.",
    "answerDescription": "A Scrum Master supports the team in achieving Sprint Goals by resolving blockers and ensuring smooth collaboration."
  },
  {
    "id": "agile_1688",
    "question": "What is the Scrum Master's responsibility in Daily Standups?",
    "options": [
      { "id": "option_1", "text": "To track individual performance and report to management", "isCorrect": false },
      { "id": "option_2", "text": "To facilitate the discussion and ensure focus on key updates", "isCorrect": true },
      { "id": "option_3", "text": "To lead the meeting and provide status updates", "isCorrect": false },
      { "id": "option_4", "text": "To dictate the team's next steps", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures standups remain focused and productive.",
    "answerDescription": "By facilitating standups, the Scrum Master helps the team identify blockers, sync progress, and plan the day's work."
  },
  {
    "id": "agile_1689",
    "question": "Which action by a Scrum Master supports team self-management?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to each team member", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging team members to make their own decisions", "isCorrect": true },
      { "id": "option_3", "text": "Defining all technical solutions for the team", "isCorrect": false },
      { "id": "option_4", "text": "Directly controlling how work is executed", "isCorrect": false }
    ],
    "hint": "Agile teams should be empowered to manage themselves.",
    "answerDescription": "A Scrum Master fosters self-management by guiding the team toward independent decision-making and problem-solving."
  },
  {
    "id": "agile_1690",
    "question": "What should a Scrum Master do when a team is consistently failing to meet Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "Impose stricter deadlines and oversight", "isCorrect": false },
      { "id": "option_2", "text": "Work with the team to identify root causes and improve planning", "isCorrect": true },
      { "id": "option_3", "text": "Assign fewer tasks to the team to avoid failure", "isCorrect": false },
      { "id": "option_4", "text": "Replace team members who struggle to complete tasks", "isCorrect": false }
    ],
    "hint": "Continuous improvement helps teams address recurring issues.",
    "answerDescription": "A Scrum Master should facilitate discussions that identify problems and refine Sprint planning for better commitments."
  },
  {
    "id": "agile_1691",
    "question": "How should a Scrum Master handle resistance to Agile adoption?",
    "options": [
      { "id": "option_1", "text": "By enforcing Agile principles without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "By educating and coaching teams on the benefits of Agile", "isCorrect": true },
      { "id": "option_3", "text": "By discouraging feedback to avoid conflict", "isCorrect": false },
      { "id": "option_4", "text": "By allowing teams to ignore Agile practices entirely", "isCorrect": false }
    ],
    "hint": "Education and coaching help teams embrace Agile practices.",
    "answerDescription": "A Scrum Master should guide teams through Agile adoption by addressing concerns, demonstrating benefits, and providing support."
  },
  {
    "id": "agile_1692",
    "question": "What is a key responsibility of the Scrum Master in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Defining the Sprint Goal for the team", "isCorrect": false },
      { "id": "option_2", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating the discussion to ensure a clear Sprint Goal and commitment", "isCorrect": true },
      { "id": "option_4", "text": "Approving the final Sprint backlog", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports, rather than dictates, the planning process.",
    "answerDescription": "The Scrum Master helps guide discussions, ensuring the team aligns on the Sprint Goal and backlog items."
  },
  {
    "id": "agile_1693",
    "question": "How does a Scrum Master support continuous improvement within the team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to Agile rules", "isCorrect": false },
      { "id": "option_2", "text": "By providing performance scores for each member", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating retrospectives and encouraging process improvements", "isCorrect": true },
      { "id": "option_4", "text": "By reducing the number of team meetings", "isCorrect": false }
    ],
    "hint": "Retrospectives play a key role in iterative improvements.",
    "answerDescription": "Scrum Masters drive continuous improvement by fostering open discussions and implementing actionable feedback."
  },
  {
    "id": "agile_1694",
    "question": "What should a Scrum Master do when a team member dominates discussions during meetings?",
    "options": [
      { "id": "option_1", "text": "Allow it, as long as they contribute valuable insights", "isCorrect": false },
      { "id": "option_2", "text": "Ask the person to remain silent in future discussions", "isCorrect": false },
      { "id": "option_3", "text": "Encourage balanced participation from all team members", "isCorrect": true },
      { "id": "option_4", "text": "Let the Product Owner handle the situation", "isCorrect": false }
    ],
    "hint": "Inclusivity is key in Agile meetings.",
    "answerDescription": "A Scrum Master ensures all voices are heard by facilitating discussions that include every team member."
  },
  {
    "id": "agile_1695",
    "question": "What role does a Scrum Master play in removing impediments?",
    "options": [
      { "id": "option_1", "text": "Directly solving all technical challenges", "isCorrect": false },
      { "id": "option_2", "text": "Assigning issues to the Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "Helping the team identify and resolve roadblocks", "isCorrect": true },
      { "id": "option_4", "text": "Leaving the team to handle issues independently", "isCorrect": false }
    ],
    "hint": "The Scrum Master facilitates problem-solving but doesnâ€™t take control.",
    "answerDescription": "A Scrum Master ensures the team remains productive by addressing obstacles collaboratively."
  },
  {
    "id": "agile_1696",
    "question": "How should a Scrum Master handle external pressure to increase team velocity?",
    "options": [
      { "id": "option_1", "text": "Encourage the team to work overtime", "isCorrect": false },
      { "id": "option_2", "text": "Agree to the pressure and push for faster work", "isCorrect": false },
      { "id": "option_3", "text": "Protect the teamâ€™s sustainable pace while focusing on efficiency", "isCorrect": true },
      { "id": "option_4", "text": "Reduce retrospective meetings to save time", "isCorrect": false }
    ],
    "hint": "Scrum Masters ensure sustainable development over time.",
    "answerDescription": "The Scrum Master safeguards the teamâ€™s well-being while optimizing work processes."
  },
  {
    "id": "agile_1697",
    "question": "What should a Scrum Master do when a team member resists Agile practices?",
    "options": [
      { "id": "option_1", "text": "Ignore the resistance and let the team handle it", "isCorrect": false },
      { "id": "option_2", "text": "Replace the team member with someone more adaptable", "isCorrect": false },
      { "id": "option_3", "text": "Coach the team member on Agile values and benefits", "isCorrect": true },
      { "id": "option_4", "text": "Remove Agile practices to accommodate them", "isCorrect": false }
    ],
    "hint": "Coaching can help bridge knowledge gaps and build alignment.",
    "answerDescription": "A Scrum Master educates team members on Agile principles to foster adoption and engagement."
  },
  {
    "id": "agile_1698",
    "question": "What is one way a Scrum Master can foster collaboration in a distributed team?",
    "options": [
      { "id": "option_1", "text": "Reduce meetings to avoid time zone conflicts", "isCorrect": false },
      { "id": "option_2", "text": "Encourage team members to work independently without interaction", "isCorrect": false },
      { "id": "option_3", "text": "Use virtual tools and structured communication practices", "isCorrect": true },
      { "id": "option_4", "text": "Rely solely on emails for updates", "isCorrect": false }
    ],
    "hint": "Technology enables effective remote Agile collaboration.",
    "answerDescription": "The Scrum Master ensures collaboration through digital tools and structured communication frameworks."
  },
  {
    "id": "agile_1699",
    "question": "How can a Scrum Master ensure a Product Owner effectively interacts with the team?",
    "options": [
      { "id": "option_1", "text": "Allow the Product Owner to give orders to developers", "isCorrect": false },
      { "id": "option_2", "text": "Limit the Product Ownerâ€™s involvement in team discussions", "isCorrect": false },
      { "id": "option_3", "text": "Encourage ongoing collaboration and backlog refinement", "isCorrect": true },
      { "id": "option_4", "text": "Only invite the Product Owner to Sprint Reviews", "isCorrect": false }
    ],
    "hint": "The Product Owner should work closely with the team throughout the process.",
    "answerDescription": "A Scrum Master facilitates collaboration between the Product Owner and development team for smooth backlog management."
  },
  {
    "id": "agile_1700",
    "question": "What should a Scrum Master do when the team frequently misses Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "Extend Sprint durations to allow more work", "isCorrect": false },
      { "id": "option_2", "text": "Assign work based on individual capacity", "isCorrect": false },
      { "id": "option_3", "text": "Analyze root causes and help improve planning and execution", "isCorrect": true },
      { "id": "option_4", "text": "Ignore it, as long as the team is working hard", "isCorrect": false }
    ],
    "hint": "Retrospectives help identify process improvements.",
    "answerDescription": "A Scrum Master helps teams reflect on missed goals and adjust their approach to improve future Sprints."
  },
  {
    "id": "agile_1701",
    "question": "What is a key way a Scrum Master promotes transparency in Agile teams?",
    "options": [
      { "id": "option_1", "text": "By keeping team discussions confidential", "isCorrect": false },
      { "id": "option_2", "text": "By limiting feedback to Sprint Reviews", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging open discussions and visibility into work progress", "isCorrect": true },
      { "id": "option_4", "text": "By centralizing decision-making to reduce noise", "isCorrect": false }
    ],
    "hint": "Transparency helps teams collaborate effectively.",
    "answerDescription": "A Scrum Master fosters transparency by ensuring continuous communication and visibility into team progress."
  },
  {
    "id": "agile_1702",
    "question": "What is one of the key ways a Scrum Master serves the Development Team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "By setting deadlines for each Sprint", "isCorrect": false },
      { "id": "option_3", "text": "By controlling the backlog prioritization", "isCorrect": false },
      { "id": "option_4", "text": "By coaching the team in self-organization and cross-functionality", "isCorrect": true }
    ],
    "hint": "The Scrum Master does not manage but facilitates team autonomy.",
    "answerDescription": "The Scrum Master empowers the team to become self-sufficient and improve collaboration."
  },
  {
    "id": "agile_1703",
    "question": "Which technique should a Scrum Master use to encourage team collaboration?",
    "options": [
      { "id": "option_1", "text": "Assign individual tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Reduce the frequency of team meetings", "isCorrect": false },
      { "id": "option_3", "text": "Have the Product Owner direct all discussions", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate open communication and collective decision-making", "isCorrect": true }
    ],
    "hint": "Scrum thrives on teamwork and shared decision-making.",
    "answerDescription": "The Scrum Master fosters an environment of collaboration by enabling open discussions and shared problem-solving."
  },
  {
    "id": "agile_1704",
    "question": "How does a Scrum Master support the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By deciding which items should be included in the backlog", "isCorrect": false },
      { "id": "option_2", "text": "By preventing changes to the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring that backlog items are detailed enough for execution", "isCorrect": false },
      { "id": "option_4", "text": "By facilitating backlog refinement sessions and communication with stakeholders", "isCorrect": true }
    ],
    "hint": "A Scrum Master does not control the backlog but ensures clarity and refinement.",
    "answerDescription": "The Scrum Master helps the Product Owner maintain a well-defined backlog and effective stakeholder communication."
  },
  {
    "id": "agile_1705",
    "question": "What should a Scrum Master do when a team consistently completes work far ahead of Sprint deadlines?",
    "options": [
      { "id": "option_1", "text": "Increase the Sprint length to allow for more work", "isCorrect": false },
      { "id": "option_2", "text": "Reduce the number of team members", "isCorrect": false },
      { "id": "option_3", "text": "Ask the Product Owner to immediately add new backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Encourage the team to improve Sprint planning and take on more valuable work", "isCorrect": true }
    ],
    "hint": "Sprint goals should be challenging but realistic.",
    "answerDescription": "A Scrum Master helps the team optimize their Sprint planning for better utilization and value delivery."
  },
  {
    "id": "agile_1706",
    "question": "What is a common anti-pattern in Daily Standups that a Scrum Master should address?",
    "options": [
      { "id": "option_1", "text": "Team members updating only the Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Discussing Sprint Retrospective outcomes", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding discussion of blockers", "isCorrect": false },
      { "id": "option_4", "text": "Turning the Standup into a status report instead of a collaboration meeting", "isCorrect": true }
    ],
    "hint": "The Standup is meant to be a team discussion, not a managerâ€™s update session.",
    "answerDescription": "Scrum Masters ensure that Standups remain focused on team collaboration rather than reporting to a leader."
  },
  {
    "id": "agile_1707",
    "question": "How can a Scrum Master help a team that struggles with meeting Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "By pushing the team to work harder", "isCorrect": false },
      { "id": "option_2", "text": "By extending Sprint durations", "isCorrect": false },
      { "id": "option_3", "text": "By reducing the scope of the backlog items", "isCorrect": false },
      { "id": "option_4", "text": "By facilitating better Sprint planning and prioritization", "isCorrect": true }
    ],
    "hint": "Commitments should be realistic and achievable.",
    "answerDescription": "The Scrum Master ensures teams make achievable commitments through effective planning and backlog refinement."
  },
  {
    "id": "agile_1708",
    "question": "Which action should a Scrum Master take when conflicts arise within the Agile team?",
    "options": [
      { "id": "option_1", "text": "Ignore conflicts, allowing the team to self-resolve", "isCorrect": false },
      { "id": "option_2", "text": "Make unilateral decisions to resolve the conflict", "isCorrect": false },
      { "id": "option_3", "text": "Report conflicts to senior management immediately", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate open discussions to help the team resolve conflicts collaboratively", "isCorrect": true }
    ],
    "hint": "Healthy conflict resolution is key to team success.",
    "answerDescription": "A Scrum Master acts as a facilitator to help teams resolve conflicts constructively."
  },
  {
    "id": "agile_1709",
    "question": "What should a Scrum Master do if a team continuously avoids retrospective discussions?",
    "options": [
      { "id": "option_1", "text": "Eliminate retrospectives to save time", "isCorrect": false },
      { "id": "option_2", "text": "Replace retrospectives with informal discussions", "isCorrect": false },
      { "id": "option_3", "text": "Allow retrospectives only when major issues arise", "isCorrect": false },
      { "id": "option_4", "text": "Encourage psychological safety and structure retrospectives effectively", "isCorrect": true }
    ],
    "hint": "Retrospectives work best in an environment of trust.",
    "answerDescription": "A Scrum Master ensures retrospectives remain valuable by fostering a safe space for discussion and improvement."
  },
  {
    "id": "agile_1710",
    "question": "Which approach should a Scrum Master take to ensure high stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "Limit stakeholder interaction to Sprint Reviews", "isCorrect": false },
      { "id": "option_2", "text": "Allow only the Product Owner to interact with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Reduce transparency to avoid unnecessary feedback", "isCorrect": false },
      { "id": "option_4", "text": "Encourage regular collaboration between stakeholders and the team", "isCorrect": true }
    ],
    "hint": "Scrum encourages ongoing stakeholder involvement.",
    "answerDescription": "The Scrum Master ensures continuous engagement with stakeholders for feedback and alignment."
  },
  {
    "id": "agile_1711",
    "question": "What should a Scrum Master do when an Agile team resists changes in workflow?",
    "options": [
      { "id": "option_1", "text": "Enforce changes immediately, regardless of team concerns", "isCorrect": false },
      { "id": "option_2", "text": "Ignore resistance and proceed with the implementation", "isCorrect": false },
      { "id": "option_3", "text": "Allow the team to reject change completely", "isCorrect": false },
      { "id": "option_4", "text": "Guide the team through the benefits and iterative adoption of changes", "isCorrect": true }
    ],
    "hint": "Change should be managed through collaboration and understanding.",
    "answerDescription": "A Scrum Master helps teams adapt by gradually introducing change and ensuring alignment."
  }, {
    "id": "agile_1712",
    "question": "What is the Scrum Master's primary responsibility in a Sprint Planning meeting?",
    "options": [
      { "id": "option_1", "text": "Facilitating the meeting and ensuring the team understands the goal", "isCorrect": true },
      { "id": "option_2", "text": "Directing the Product Owner to prioritize tasks", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_4", "text": "Deciding the Sprint goal on behalf of the team", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures that the team collaborates effectively and understands the objectives.",
    "answerDescription": "The Scrum Master facilitates Sprint Planning, ensuring everyone is aligned and understands the Sprint goal."
  },
  {
    "id": "agile_1713",
    "question": "What action should a Scrum Master take if a team member is consistently late for Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Ignore the situation, as it will resolve on its own", "isCorrect": false },
      { "id": "option_2", "text": "Report the individual to management immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ask the individual to leave the team", "isCorrect": false },
      { "id": "option_4", "text": "Discuss the issue with the team member to understand the reasons and offer support", "isCorrect": true }
    ],
    "hint": "Scrum Masters promote open communication and a supportive environment.",
    "answerDescription": "A Scrum Master addresses punctuality issues by having one-on-one discussions to uncover challenges and find solutions."
  },
  {
    "id": "agile_1714",
    "question": "What role does the Scrum Master play when the team faces a technical challenge?",
    "options": [
      { "id": "option_1", "text": "Provide a solution directly to the team", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the issue, as the team should handle it themselves", "isCorrect": false },
      { "id": "option_3", "text": "Report the issue to higher management for resolution", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions to help the team explore and solve the challenge collaboratively", "isCorrect": true }
    ],
    "hint": "The Scrum Master facilitates problem-solving, not solving the problem directly.",
    "answerDescription": "The Scrum Master helps the team explore solutions by guiding them through problem-solving discussions."
  },
  {
    "id": "agile_1715",
    "question": "Which of the following is a key aspect of a Scrum Master's role during Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Evaluating the teamâ€™s performance and providing feedback", "isCorrect": false },
      { "id": "option_2", "text": "Making decisions for the team based on the retrospective outcomes", "isCorrect": false },
      { "id": "option_3", "text": "Keeping the retrospective to only focus on process improvement", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating open and honest discussions for continuous improvement", "isCorrect": true }
    ],
    "hint": "The Scrum Master encourages self-reflection and improvement without imposing solutions.",
    "answerDescription": "The Scrum Master ensures that retrospectives remain a safe space for the team to discuss and improve their processes."
  },
  {
    "id": "agile_1716",
    "question": "When should a Scrum Master step in to protect the team from external interference?",
    "options": [
      { "id": "option_1", "text": "When the team requests help", "isCorrect": false },
      { "id": "option_2", "text": "When the Product Owner demands that specific tasks be assigned", "isCorrect": false },
      { "id": "option_3", "text": "When there is an external distraction or interference that disrupts the team's focus", "isCorrect": true },
      { "id": "option_4", "text": "When the Scrum Master notices that the team is not working fast enough", "isCorrect": false }
    ],
    "hint": "The Scrum Master protects the team from outside distractions to maintain focus on their goals.",
    "answerDescription": "The Scrum Master ensures the team can focus on their work by protecting them from external disruptions and interference."
  },
  {
    "id": "agile_1717",
    "question": "What is the Scrum Master's responsibility in fostering a culture of continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Directly implementing process changes as needed", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring that improvements are made only at the end of each Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging team members to avoid discussing challenges", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating regular reflections on team performance and guiding improvement efforts", "isCorrect": true }
    ],
    "hint": "Continuous improvement is a key aspect of Scrum methodology.",
    "answerDescription": "The Scrum Master facilitates ongoing improvements by promoting regular reflections and enabling the team to make incremental changes."
  },
  {
    "id": "agile_1718",
    "question": "What should a Scrum Master do when team members are not communicating effectively during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue and let the team figure it out", "isCorrect": false },
      { "id": "option_2", "text": "Force the team to communicate more frequently", "isCorrect": false },
      { "id": "option_3", "text": "Introduce new tools for communication and track team discussions", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions and encourage open communication within the team", "isCorrect": true }
    ],
    "hint": "Effective communication is essential for team success in Scrum.",
    "answerDescription": "The Scrum Master encourages open and honest communication to ensure the team collaborates effectively."
  },
  {
    "id": "agile_1719",
    "question": "What is one of the Scrum Masterâ€™s responsibilities during Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "Approve the work done by the team", "isCorrect": false },
      { "id": "option_2", "text": "Make final decisions about what is demonstrated to stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Provide the presentation for the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate the meeting and ensure that all team members and stakeholders are engaged", "isCorrect": true }
    ],
    "hint": "The Scrum Master ensures that the Sprint Review is collaborative and valuable for all participants.",
    "answerDescription": "The Scrum Master facilitates the Sprint Review, ensuring engagement and that the meeting runs smoothly."
  },
  {
    "id": "agile_1720",
    "question": "How can a Scrum Master ensure that Scrum processes are being followed correctly?",
    "options": [
      { "id": "option_1", "text": "By closely monitoring each team memberâ€™s activity", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict rules and procedures without flexibility", "isCorrect": false },
      { "id": "option_3", "text": "By holding regular audits to check if Scrum is being adhered to", "isCorrect": false },
      { "id": "option_4", "text": "By coaching the team and helping them understand and apply Scrum principles", "isCorrect": true }
    ],
    "hint": "The Scrum Master acts as a coach, not as an enforcer of rules.",
    "answerDescription": "The Scrum Master coaches the team, helping them understand and apply Scrum practices to achieve better results."
  },
  {
    "id": "agile_1721",
    "question": "What should a Scrum Master do if they notice a lack of trust within the Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue, as it will resolve itself over time", "isCorrect": false },
      { "id": "option_2", "text": "Publicly reprimand team members to restore trust", "isCorrect": false },
      { "id": "option_3", "text": "Ask the Product Owner to intervene and resolve the issue", "isCorrect": false },
      { "id": "option_4", "text": "Foster an environment of psychological safety and address the issue through team-building activities", "isCorrect": true }
    ],
    "hint": "Trust is the foundation of effective teamwork.",
    "answerDescription": "The Scrum Master facilitates trust-building by promoting psychological safety and addressing issues openly."
  },
  
  {
    "id": "agile_1722",
    "question": "How does a Scrum Master support team self-organization?",
    "options": [
      { "id": "option_1", "text": "By making key decisions for the team", "isCorrect": false },
      { "id": "option_2", "text": "By fostering an environment where the team can take ownership of their work", "isCorrect": true },
      { "id": "option_3", "text": "By assigning tasks to team members", "isCorrect": false },
      { "id": "option_4", "text": "By closely monitoring individual performance", "isCorrect": false }
    ],
    "hint": "Self-organization requires trust and empowerment rather than control.",
    "answerDescription": "The Scrum Master ensures the team is empowered to make decisions and take responsibility for their work."
  },
  {
    "id": "agile_1723",
    "question": "What should a Scrum Master do if a Product Owner is unavailable for the team?",
    "options": [
      { "id": "option_1", "text": "Take over the Product Owner's responsibilities", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions to ensure the team has the required clarity and escalate the issue if necessary", "isCorrect": true },
      { "id": "option_3", "text": "Ask the team to proceed without the Product Owner's input", "isCorrect": false },
      { "id": "option_4", "text": "Cancel the Sprint until the Product Owner is available", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures collaboration between the Product Owner and the team.",
    "answerDescription": "The Scrum Master helps ensure that the team gets the necessary guidance from the Product Owner by facilitating discussions or escalating the issue."
  },
  {
    "id": "agile_1724",
    "question": "How does a Scrum Master help a team that struggles to complete work in a Sprint?",
    "options": [
      { "id": "option_1", "text": "By increasing the Sprint length", "isCorrect": false },
      { "id": "option_2", "text": "By helping the team analyze and improve their estimation and planning process", "isCorrect": true },
      { "id": "option_3", "text": "By reducing the amount of work committed without discussion", "isCorrect": false },
      { "id": "option_4", "text": "By assigning additional resources mid-Sprint", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports the team in improving their estimation and planning.",
    "answerDescription": "A Scrum Master helps teams improve their Sprint success by refining their estimation and planning practices."
  },
  {
    "id": "agile_1725",
    "question": "What is the Scrum Masterâ€™s role when conflict arises within the Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Take sides and resolve the conflict by making a decision", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate open discussions to help the team resolve the conflict themselves", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the conflict, assuming it will resolve on its own", "isCorrect": false },
      { "id": "option_4", "text": "Escalate the issue to senior management immediately", "isCorrect": false }
    ],
    "hint": "The Scrum Master encourages constructive conflict resolution through facilitation.",
    "answerDescription": "A Scrum Master helps the team resolve conflicts by facilitating open and productive discussions."
  },
  {
    "id": "agile_1726",
    "question": "How can a Scrum Master support a team that is new to Agile?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to Scrum rules", "isCorrect": false },
      { "id": "option_2", "text": "By coaching the team and gradually helping them understand Agile principles", "isCorrect": true },
      { "id": "option_3", "text": "By making all Agile-related decisions for the team", "isCorrect": false },
      { "id": "option_4", "text": "By assigning experienced developers to make key process decisions", "isCorrect": false }
    ],
    "hint": "Guidance and coaching are more effective than strict enforcement.",
    "answerDescription": "A Scrum Master supports new teams by gradually introducing Agile practices and coaching them on self-organization."
  },
  {
    "id": "agile_1727",
    "question": "What should a Scrum Master do when external stakeholders frequently disrupt the team's work?",
    "options": [
      { "id": "option_1", "text": "Encourage the team to handle stakeholder requests as they come", "isCorrect": false },
      { "id": "option_2", "text": "Educate stakeholders on Scrum and help set proper boundaries", "isCorrect": true },
      { "id": "option_3", "text": "Ask the team to work extra hours to accommodate stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Increase the Sprint length to allow for stakeholder interruptions", "isCorrect": false }
    ],
    "hint": "Stakeholder management is a key responsibility of the Scrum Master.",
    "answerDescription": "A Scrum Master ensures that stakeholders respect Scrum processes by educating them and maintaining clear boundaries."
  },
  {
    "id": "agile_1728",
    "question": "What is a Scrum Master's role in ensuring the effectiveness of Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Lead the meeting and make decisions for the team", "isCorrect": false },
      { "id": "option_2", "text": "Encourage team members to share updates concisely and focus on collaboration", "isCorrect": true },
      { "id": "option_3", "text": "Remove impediments during the meeting itself", "isCorrect": false },
      { "id": "option_4", "text": "Extend the meeting time if needed", "isCorrect": false }
    ],
    "hint": "Standups should be short, focused, and encourage team collaboration.",
    "answerDescription": "The Scrum Master ensures Daily Standups remain efficient by encouraging concise and focused updates."
  },
  {
    "id": "agile_1729",
    "question": "What should a Scrum Master do if a team member is resistant to Agile practices?",
    "options": [
      { "id": "option_1", "text": "Force the team member to comply with Scrum rules", "isCorrect": false },
      { "id": "option_2", "text": "Have a one-on-one conversation to understand their concerns and provide guidance", "isCorrect": true },
      { "id": "option_3", "text": "Exclude the team member from important discussions", "isCorrect": false },
      { "id": "option_4", "text": "Ask management to remove the team member from the project", "isCorrect": false }
    ],
    "hint": "Understanding and addressing resistance is more effective than forcing compliance.",
    "answerDescription": "The Scrum Master helps team members adapt to Agile by addressing concerns and providing guidance."
  },
  {
    "id": "agile_1730",
    "question": "How does a Scrum Master ensure continuous learning within the team?",
    "options": [
      { "id": "option_1", "text": "By mandating formal training sessions every Sprint", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging knowledge sharing and retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "By assigning learning topics to team members", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing certification requirements", "isCorrect": false }
    ],
    "hint": "Learning happens through collaboration and reflection.",
    "answerDescription": "A Scrum Master fosters continuous learning by encouraging team knowledge-sharing and retrospectives."
  },

  {
    "id": "agile_1731",
    "question": "What is one of the primary responsibilities of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to individual team members", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true },
      { "id": "option_3", "text": "Acting as the project manager for the team", "isCorrect": false },
      { "id": "option_4", "text": "Enforcing strict adherence to Scrum rules", "isCorrect": false }
    ],
    "hint": "A Scrum Master's role is to help the team follow Agile principles and stay efficient.",
    "answerDescription": "A Scrum Master ensures that Scrum events are productive and helps the team remove blockers to progress."
  },
  {
    "id": "agile_1732",
    "question": "How can a Scrum Master help a team improve velocity?",
    "options": [
      { "id": "option_1", "text": "By assigning more work to high-performing team members", "isCorrect": false },
      { "id": "option_2", "text": "By helping the team identify process inefficiencies and improve collaboration", "isCorrect": true },
      { "id": "option_3", "text": "By extending Sprint durations", "isCorrect": false },
      { "id": "option_4", "text": "By setting strict performance targets for individuals", "isCorrect": false }
    ],
    "hint": "Velocity improves when teams work efficiently, not by adding more work.",
    "answerDescription": "A Scrum Master supports the team in identifying inefficiencies and improving their Agile processes for better velocity."
  },
  {
    "id": "agile_1733",
    "question": "What should a Scrum Master do if a team consistently fails to meet its Sprint goals?",
    "options": [
      { "id": "option_1", "text": "Reduce the number of Sprint Retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Help the team analyze the root causes and adapt their approach", "isCorrect": true },
      { "id": "option_3", "text": "Increase the number of tasks assigned to team members", "isCorrect": false },
      { "id": "option_4", "text": "Ignore the issue and allow the team to self-correct", "isCorrect": false }
    ],
    "hint": "Continuous improvement is key to Agile success.",
    "answerDescription": "A Scrum Master helps the team reflect on challenges and make adjustments to improve future Sprint outcomes."
  },
  {
    "id": "agile_1734",
    "question": "What is the best way a Scrum Master can help a new team adapt to Scrum?",
    "options": [
      { "id": "option_1", "text": "By micromanaging team members to ensure they follow Scrum practices", "isCorrect": false },
      { "id": "option_2", "text": "By providing coaching, facilitating discussions, and leading by example", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict compliance with Scrum ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "By assigning Agile roles to different team members", "isCorrect": false }
    ],
    "hint": "Agile teams learn best through guidance and facilitation rather than enforcement.",
    "answerDescription": "A Scrum Master helps new teams by offering coaching, supporting discussions, and demonstrating Agile principles."
  },
  {
    "id": "agile_1735",
    "question": "How does a Scrum Master contribute to stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "By preventing stakeholders from communicating directly with the team", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring transparency and facilitating discussions between the team and stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "By acting as a gatekeeper for all team decisions", "isCorrect": false },
      { "id": "option_4", "text": "By approving stakeholder requests without consulting the team", "isCorrect": false }
    ],
    "hint": "Transparency and collaboration are essential for Agile success.",
    "answerDescription": "A Scrum Master fosters open communication between stakeholders and the team to ensure alignment and visibility."
  },
  {
    "id": "agile_1736",
    "question": "What should a Scrum Master do if a team struggles with time management during Sprints?",
    "options": [
      { "id": "option_1", "text": "Increase the Sprint duration to allow more time", "isCorrect": false },
      { "id": "option_2", "text": "Help the team improve their planning and prioritization skills", "isCorrect": true },
      { "id": "option_3", "text": "Assign a project manager to oversee the team's work", "isCorrect": false },
      { "id": "option_4", "text": "Reduce the number of Agile ceremonies", "isCorrect": false }
    ],
    "hint": "Effective Sprint planning and prioritization lead to better time management.",
    "answerDescription": "A Scrum Master assists the team in optimizing their Sprint planning and prioritization to enhance time management."
  },
  {
    "id": "agile_1737",
    "question": "What role does a Scrum Master play in Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "To evaluate individual team members' performances", "isCorrect": false },
      { "id": "option_2", "text": "To facilitate discussions that help the team improve processes", "isCorrect": true },
      { "id": "option_3", "text": "To dictate what changes the team should make", "isCorrect": false },
      { "id": "option_4", "text": "To create a fixed improvement plan for all future Sprints", "isCorrect": false }
    ],
    "hint": "Retrospectives are about continuous team improvement, not individual evaluation.",
    "answerDescription": "A Scrum Master guides the team in reflective discussions to identify areas for process improvement."
  },
  {
    "id": "agile_1738",
    "question": "How does a Scrum Master handle resistance to change in an Agile team?",
    "options": [
      { "id": "option_1", "text": "By forcing team members to follow Agile practices", "isCorrect": false },
      { "id": "option_2", "text": "By addressing concerns, encouraging feedback, and fostering a culture of adaptation", "isCorrect": true },
      { "id": "option_3", "text": "By escalating the issue to senior management immediately", "isCorrect": false },
      { "id": "option_4", "text": "By replacing resistant team members with new hires", "isCorrect": false }
    ],
    "hint": "Addressing concerns and encouraging feedback helps teams embrace change.",
    "answerDescription": "A Scrum Master helps teams navigate change by fostering open discussions and continuous improvement."
  },
  {
    "id": "agile_1739",
    "question": "What is a key sign that a Scrum Master is effectively serving a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master makes most of the decisions for the team", "isCorrect": false },
      { "id": "option_2", "text": "The team is self-organizing and improving continuously", "isCorrect": true },
      { "id": "option_3", "text": "The Scrum Master is involved in every technical discussion", "isCorrect": false },
      { "id": "option_4", "text": "The team strictly follows all Scrum ceremonies without deviation", "isCorrect": false }
    ],
    "hint": "A Scrum Master empowers the team rather than controls it.",
    "answerDescription": "A successful Scrum Master enables the team to self-organize, improve continuously, and work efficiently."
  },  {
    "id": "agile_1741",
    "question": "What is a key characteristic of an effective Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Micromanaging the development team", "isCorrect": false },
      { "id": "option_2", "text": "Making unilateral decisions for the team", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating collaboration and self-organization", "isCorrect": true },
      { "id": "option_4", "text": "Enforcing strict compliance with Scrum rules", "isCorrect": false }
    ],
    "hint": "An effective Scrum Master supports team autonomy rather than controlling it.",
    "answerDescription": "A good Scrum Master fosters team collaboration and self-organization, ensuring Agile principles are followed effectively."
  },
  {
    "id": "agile_1742",
    "question": "How should a Scrum Master handle conflicts within a team?",
    "options": [
      { "id": "option_1", "text": "By avoiding involvement and letting the team resolve it themselves", "isCorrect": false },
      { "id": "option_2", "text": "By taking sides to ensure faster resolution", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating open discussions to find a collaborative solution", "isCorrect": true },
      { "id": "option_4", "text": "By escalating all conflicts to senior management", "isCorrect": false }
    ],
    "hint": "Encouraging open dialogue is key to conflict resolution in Agile teams.",
    "answerDescription": "A Scrum Master helps teams address conflicts by facilitating open discussions that lead to collaborative solutions."
  },
  {
    "id": "agile_1743",
    "question": "What is the Scrum Master's role in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Setting deadlines for completion", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating the discussion and ensuring the team commits to realistic goals", "isCorrect": true },
      { "id": "option_4", "text": "Dictating which backlog items should be selected", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports, but does not dictate, Sprint Planning decisions.",
    "answerDescription": "A Scrum Master helps the team set achievable Sprint goals while ensuring a productive planning session."
  },
  {
    "id": "agile_1744",
    "question": "What should a Scrum Master do if a Product Owner frequently changes Sprint Backlog items?",
    "options": [
      { "id": "option_1", "text": "Allow the changes to be made freely to increase adaptability", "isCorrect": false },
      { "id": "option_2", "text": "Encourage the development team to reject the changes", "isCorrect": false },
      { "id": "option_3", "text": "Educate the Product Owner on the importance of Sprint commitment", "isCorrect": true },
      { "id": "option_4", "text": "Extend the Sprint to accommodate changes", "isCorrect": false }
    ],
    "hint": "Sprints should have stability to enable focus and progress.",
    "answerDescription": "A Scrum Master helps the Product Owner understand the need for a stable Sprint Backlog to ensure effective execution."
  },
  {
    "id": "agile_1745",
    "question": "What is an effective way for a Scrum Master to encourage continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By setting strict rules on how the team should work", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding discussions on failures and only focusing on successes", "isCorrect": false },
      { "id": "option_3", "text": "By fostering a culture of learning and regularly conducting retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "By imposing Agile practices without team input", "isCorrect": false }
    ],
    "hint": "Continuous improvement comes from learning and reflection.",
    "answerDescription": "A Scrum Master supports the team in identifying lessons and areas for growth through retrospectives and open dialogue."
  },
  {
    "id": "agile_1746",
    "question": "What is a Scrum Masterâ€™s responsibility regarding team motivation?",
    "options": [
      { "id": "option_1", "text": "To provide monetary incentives for better performance", "isCorrect": false },
      { "id": "option_2", "text": "To implement strict deadlines to drive urgency", "isCorrect": false },
      { "id": "option_3", "text": "To foster a safe, collaborative, and empowering environment", "isCorrect": true },
      { "id": "option_4", "text": "To measure individual team member performance and rank them", "isCorrect": false }
    ],
    "hint": "Motivation in Agile teams comes from a positive and empowered work environment.",
    "answerDescription": "A Scrum Master creates an environment where team members feel valued, engaged, and empowered to perform at their best."
  },
  {
    "id": "agile_1747",
    "question": "How should a Scrum Master handle a team that resists Agile practices?",
    "options": [
      { "id": "option_1", "text": "By enforcing Agile principles strictly", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring resistance and letting the team work their way", "isCorrect": false },
      { "id": "option_3", "text": "By educating the team on Agile benefits and leading by example", "isCorrect": true },
      { "id": "option_4", "text": "By replacing resistant team members", "isCorrect": false }
    ],
    "hint": "Understanding and guidance help teams embrace Agile.",
    "answerDescription": "A Scrum Master should guide the team, demonstrate Agile benefits, and gradually help them adopt Agile practices."
  },
  {
    "id": "agile_1748",
    "question": "What is an appropriate action for a Scrum Master when an external stakeholder disrupts a Sprint?",
    "options": [
      { "id": "option_1", "text": "Allow changes to be made immediately to accommodate the stakeholder", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the stakeholderâ€™s concerns and focus only on the team", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate communication between the team and stakeholder while protecting the Sprint goal", "isCorrect": true },
      { "id": "option_4", "text": "Escalate the issue immediately to senior leadership", "isCorrect": false }
    ],
    "hint": "A Scrum Master acts as a bridge between stakeholders and the team.",
    "answerDescription": "A Scrum Master balances stakeholder needs and team focus by ensuring productive communication without disrupting the Sprint."
  },
  {
    "id": "agile_1749",
    "question": "Which of the following is NOT a responsibility of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum ceremonies", "isCorrect": false },
      { "id": "option_2", "text": "Helping the team remove impediments", "isCorrect": false },
      { "id": "option_3", "text": "Directly managing team members' daily tasks", "isCorrect": true },
      { "id": "option_4", "text": "Coaching the team on Agile best practices", "isCorrect": false }
    ],
    "hint": "A Scrum Master is a facilitator, not a manager.",
    "answerDescription": "A Scrum Master does not directly manage tasks but instead empowers the team to self-organize and solve problems."
  }, 
  {
    "id": "agile_1750",
    "question": "What is a crucial way a Scrum Master supports the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By making all prioritization decisions on their behalf", "isCorrect": false },
      { "id": "option_2", "text": "By helping refine and maintain the Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "By ensuring the team works on the highest-priority items only", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing strict deadlines for backlog grooming", "isCorrect": false }
    ],
    "hint": "Scrum Masters support backlog refinement, but donâ€™t own it.",
    "answerDescription": "A Scrum Master assists the Product Owner by facilitating backlog refinement and ensuring clarity in requirements."
  },
  {
    "id": "agile_1751",
    "question": "What is the primary role of a Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Managing the teamâ€™s workload", "isCorrect": false },
      { "id": "option_2", "text": "Defining project requirements", "isCorrect": false },
      { "id": "option_3", "text": "Approving team decisions", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating Scrum processes and removing impediments", "isCorrect": true }
    ],
    "hint": "A Scrum Master is not a project manager but a facilitator.",
    "answerDescription": "The Scrum Master ensures that the team follows Scrum principles and removes any obstacles hindering progress."
  },
  {
    "id": "agile_1752",
    "question": "How does a Scrum Master help in fostering self-organization within a team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to each team member", "isCorrect": false },
      { "id": "option_2", "text": "By micromanaging team progress", "isCorrect": false },
      { "id": "option_3", "text": "By making key decisions on behalf of the team", "isCorrect": false },
      { "id": "option_4", "text": "By creating an environment where the team takes ownership of their work", "isCorrect": true }
    ],
    "hint": "Scrum promotes self-organizing teams that make their own decisions.",
    "answerDescription": "A Scrum Master supports the team by enabling them to take responsibility for their work and decisions."
  },
  {
    "id": "agile_1753",
    "question": "Which key activity is a Scrum Master responsible for during a Daily Standup?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks for the day", "isCorrect": false },
      { "id": "option_2", "text": "Providing solutions to all team problems", "isCorrect": false },
      { "id": "option_3", "text": "Leading the discussion and giving status updates", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating and ensuring the meeting remains focused", "isCorrect": true }
    ],
    "hint": "The Scrum Master does not dictate the meeting but ensures it remains effective.",
    "answerDescription": "The Scrum Masterâ€™s role in Daily Standups is to facilitate discussions while keeping the team focused on their Sprint goals."
  },
  {
    "id": "agile_1754",
    "question": "What should a Scrum Master do if the team frequently misses Sprint goals?",
    "options": [
      { "id": "option_1", "text": "Increase the number of planned tasks", "isCorrect": false },
      { "id": "option_2", "text": "Reduce Sprint length to accelerate deliveries", "isCorrect": false },
      { "id": "option_3", "text": "Encourage the team to work overtime", "isCorrect": false },
      { "id": "option_4", "text": "Analyze root causes and improve Sprint planning", "isCorrect": true }
    ],
    "hint": "Consistently missing Sprint goals indicates planning or execution issues.",
    "answerDescription": "A Scrum Master should identify challenges affecting Sprint goals and refine planning processes to improve team performance."
  },
  {
    "id": "agile_1755",
    "question": "Why is it important for a Scrum Master to shield the team from external disruptions?",
    "options": [
      { "id": "option_1", "text": "To ensure the team has no stakeholder interaction", "isCorrect": false },
      { "id": "option_2", "text": "To keep management decisions hidden from the team", "isCorrect": false },
      { "id": "option_3", "text": "To prevent any form of feedback from external sources", "isCorrect": false },
      { "id": "option_4", "text": "To allow the team to focus on Sprint goals without unnecessary interruptions", "isCorrect": true }
    ],
    "hint": "A focused team delivers better results.",
    "answerDescription": "By shielding the team from external distractions, the Scrum Master enables them to maintain focus on Sprint commitments."
  },
  {
    "id": "agile_1756",
    "question": "What action should a Scrum Master take when a team member consistently struggles with tasks?",
    "options": [
      { "id": "option_1", "text": "Assign simpler tasks to the team member", "isCorrect": false },
      { "id": "option_2", "text": "Ask the manager to replace the team member", "isCorrect": false },
      { "id": "option_3", "text": "Criticize the team member in front of the team", "isCorrect": false },
      { "id": "option_4", "text": "Encourage knowledge sharing and provide coaching support", "isCorrect": true }
    ],
    "hint": "Agile encourages collaboration and continuous improvement.",
    "answerDescription": "A Scrum Master should promote mentorship and knowledge-sharing to help team members improve and succeed."
  },
  {
    "id": "agile_1757",
    "question": "Which statement best describes the Scrum Masterâ€™s responsibility in Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "To evaluate individual performance of team members", "isCorrect": false },
      { "id": "option_2", "text": "To finalize future Sprint tasks", "isCorrect": false },
      { "id": "option_3", "text": "To dictate the improvements the team must implement", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate discussions and guide continuous improvement", "isCorrect": true }
    ],
    "hint": "A Retrospective is about team reflection and improvement.",
    "answerDescription": "The Scrum Master ensures that the team identifies improvements and applies them in upcoming Sprints."
  },
  {
    "id": "agile_1758",
    "question": "How does a Scrum Master contribute to Agile adoption in an organization?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to Scrum rules", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring Agile teams work independently without interactions", "isCorrect": false },
      { "id": "option_3", "text": "By dictating all Agile-related decisions", "isCorrect": false },
      { "id": "option_4", "text": "By coaching teams and stakeholders on Agile values and practices", "isCorrect": true }
    ],
    "hint": "A Scrum Master acts as an Agile coach and guide.",
    "answerDescription": "A Scrum Master helps spread Agile awareness by training teams and stakeholders on its principles and practices."
  },
  {
    "id": "agile_1759",
    "question": "What should a Scrum Master do if a team frequently extends Sprints to complete work?",
    "options": [
      { "id": "option_1", "text": "Increase Sprint duration to accommodate more work", "isCorrect": false },
      { "id": "option_2", "text": "Reduce the number of user stories committed per Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Encourage the team to work faster", "isCorrect": false },
      { "id": "option_4", "text": "Investigate root causes and improve estimation techniques", "isCorrect": true }
    ],
    "hint": "Effective planning and estimation prevent Sprint extensions.",
    "answerDescription": "A Scrum Master should help teams refine their estimation and commitment strategies to meet Sprint timelines effectively."
  },
  {
    "id": "agile_1760",
    "question": "What should a Scrum Master do if a team is skipping Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Ignore it since the team is delivering work", "isCorrect": false },
      { "id": "option_2", "text": "Replace the Retrospective with a status meeting", "isCorrect": false },
      { "id": "option_3", "text": "Allow the team to decide whether Retrospectives are needed", "isCorrect": false },
      { "id": "option_4", "text": "Emphasize the value of reflection and improvement in Agile", "isCorrect": true }
    ],
    "hint": "Continuous improvement is key in Scrum.",
    "answerDescription": "A Scrum Master should ensure the team understands the importance of Retrospectives in driving Agile improvements."
  },
  {
    "id": "agile_1761",
    "question": "Which of the following is a key responsibility of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Setting project deadlines for the team", "isCorrect": false },
      { "id": "option_4", "text": "Approving Sprint deliverables", "isCorrect": false }
    ],
    "hint": "A Scrum Master is a servant leader, not a project manager.",
    "answerDescription": "The Scrum Master supports the team by facilitating Scrum events and ensuring obstacles are addressed to maintain productivity."
  },
  {
    "id": "agile_1762",
    "question": "How does a Scrum Master help ensure a team's continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Encouraging the team to regularly inspect and adapt their processes", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing strict adherence to pre-defined workflows", "isCorrect": false },
      { "id": "option_3", "text": "Introducing new processes without consulting the team", "isCorrect": false },
      { "id": "option_4", "text": "Measuring individual performance for process improvements", "isCorrect": false }
    ],
    "hint": "Scrum encourages continuous learning and adaptation.",
    "answerDescription": "A Scrum Master fosters continuous improvement by guiding teams to reflect on their work and refine their processes accordingly."
  },
  {
    "id": "agile_1763",
    "question": "What should a Scrum Master do if a team member frequently dominates discussions?",
    "options": [
      { "id": "option_1", "text": "Encourage balanced participation from all team members", "isCorrect": true },
      { "id": "option_2", "text": "Allow the most experienced team member to take the lead", "isCorrect": false },
      { "id": "option_3", "text": "Ask quieter team members to contribute outside of meetings", "isCorrect": false },
      { "id": "option_4", "text": "Ignore the issue if the discussions are productive", "isCorrect": false }
    ],
    "hint": "A Scrum Master ensures collaboration and equal participation.",
    "answerDescription": "By promoting inclusive discussions, the Scrum Master ensures that all team members contribute to decision-making."
  },
  {
    "id": "agile_1764",
    "question": "Why is a Scrum Master's role critical in resolving team conflicts?",
    "options": [
      { "id": "option_1", "text": "To facilitate open communication and mediate conflicts", "isCorrect": true },
      { "id": "option_2", "text": "To dictate the best resolution for the team", "isCorrect": false },
      { "id": "option_3", "text": "To escalate all conflicts to senior management", "isCorrect": false },
      { "id": "option_4", "text": "To assign blame and ensure accountability", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports a healthy team environment.",
    "answerDescription": "By guiding teams in conflict resolution, the Scrum Master fosters collaboration and a positive work culture."
  },
  {
    "id": "agile_1765",
    "question": "What is one way a Scrum Master helps manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "Ensuring transparency through regular communication", "isCorrect": true },
      { "id": "option_2", "text": "Guaranteeing that all stakeholder demands are met", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing stakeholder involvement in team processes", "isCorrect": false },
      { "id": "option_4", "text": "Delaying bad news to maintain positive perception", "isCorrect": false }
    ],
    "hint": "Transparency is a key Agile principle.",
    "answerDescription": "A Scrum Master ensures stakeholders remain informed and engaged by providing regular updates and insights into the team's progress."
  },
  {
    "id": "agile_1766",
    "question": "Which technique can a Scrum Master use to improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "Facilitating team-building activities and open discussions", "isCorrect": true },
      { "id": "option_2", "text": "Encouraging competition among team members", "isCorrect": false },
      { "id": "option_3", "text": "Separating team members to work individually", "isCorrect": false },
      { "id": "option_4", "text": "Setting strict rules for communication", "isCorrect": false }
    ],
    "hint": "Scrum Masters foster teamwork and collaboration.",
    "answerDescription": "By organizing team-building exercises and fostering open dialogue, the Scrum Master enhances trust and cooperation within the team."
  },
  {
    "id": "agile_1767",
    "question": "What is the primary way a Scrum Master supports an Agile transformation?",
    "options": [
      { "id": "option_1", "text": "Coaching teams and leadership on Agile principles", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing a strict Agile framework without flexibility", "isCorrect": false },
      { "id": "option_3", "text": "Introducing Agile only at the team level", "isCorrect": false },
      { "id": "option_4", "text": "Replacing all existing processes with Agile methodologies", "isCorrect": false }
    ],
    "hint": "Agile transformation requires education and adaptation.",
    "answerDescription": "A Scrum Master plays a crucial role in guiding teams and leadership through the transition to Agile ways of working."
  },
  {
    "id": "agile_1768",
    "question": "What should a Scrum Master do if a team resists Agile practices?",
    "options": [
      { "id": "option_1", "text": "Understand their concerns and educate them on Agile benefits", "isCorrect": true },
      { "id": "option_2", "text": "Force the team to adopt Agile immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the resistance and let the team work in their own way", "isCorrect": false },
      { "id": "option_4", "text": "Report the team to senior management for intervention", "isCorrect": false }
    ],
    "hint": "Agile adoption requires gradual change and support.",
    "answerDescription": "A Scrum Master helps teams transition by addressing concerns and demonstrating the value of Agile practices."
  },
  {
    "id": "agile_1769",
    "question": "How does a Scrum Master contribute to a teamâ€™s long-term success?",
    "options": [
      { "id": "option_1", "text": "Encouraging continuous learning and improvement", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring the team sticks to a fixed process forever", "isCorrect": false },
      { "id": "option_3", "text": "Making all decisions on behalf of the team", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on short-term project goals", "isCorrect": false }
    ],
    "hint": "Sustainable growth in Agile teams comes from continuous learning.",
    "answerDescription": "A Scrum Master fosters a culture of learning, adaptation, and innovation to ensure long-term team success."
  },
  {
    "id": "agile_1770",
    "question": "What is an effective way for a Scrum Master to support team motivation?",
    "options": [
      { "id": "option_1", "text": "Recognizing achievements and encouraging collaboration", "isCorrect": true },
      { "id": "option_2", "text": "Offering monetary incentives for faster work", "isCorrect": false },
      { "id": "option_3", "text": "Pressuring the team to meet deadlines at any cost", "isCorrect": false },
      { "id": "option_4", "text": "Holding individual members accountable for failures", "isCorrect": false }
    ],
    "hint": "Motivation in Agile comes from recognition and teamwork.",
    "answerDescription": "A Scrum Master keeps the team motivated by celebrating successes, fostering collaboration, and maintaining a positive work environment."
  },
  {
    "id": "agile_1771",
    "question": "What is the main role of a Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Defining the team's tasks and deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Scrum processes and removing impediments", "isCorrect": true },
      { "id": "option_3", "text": "Approving all Sprint Backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work to team members", "isCorrect": false }
    ],
    "hint": "The Scrum Master focuses on enabling the team rather than managing them.",
    "answerDescription": "A Scrum Master helps the team by facilitating Scrum ceremonies and eliminating blockers that hinder progress."
  },
  {
    "id": "agile_1772",
    "question": "How does a Scrum Master promote a culture of continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to Agile practices", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating retrospectives and encouraging adaptation", "isCorrect": true },
      { "id": "option_3", "text": "By limiting changes to processes once they are established", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring the team only focuses on meeting deadlines", "isCorrect": false }
    ],
    "hint": "Agile is about learning and improving based on feedback.",
    "answerDescription": "Scrum Masters facilitate retrospectives to help teams identify areas for growth and implement improvements iteratively."
  },
  {
    "id": "agile_1773",
    "question": "What is an important characteristic of an effective Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Being authoritative in all team decisions", "isCorrect": false },
      { "id": "option_2", "text": "Being a servant leader who empowers the team", "isCorrect": true },
      { "id": "option_3", "text": "Directly managing individual performance", "isCorrect": false },
      { "id": "option_4", "text": "Acting as the final decision-maker in team discussions", "isCorrect": false }
    ],
    "hint": "A Scrum Master leads by support rather than control.",
    "answerDescription": "A Scrum Master serves the team by removing obstacles and fostering a collaborative, self-organizing work environment."
  },
  {
    "id": "agile_1774",
    "question": "How can a Scrum Master support a new Agile team?",
    "options": [
      { "id": "option_1", "text": "By setting strict performance goals from the beginning", "isCorrect": false },
      { "id": "option_2", "text": "By coaching them on Agile principles and fostering collaboration", "isCorrect": true },
      { "id": "option_3", "text": "By minimizing stakeholder interactions", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing pre-defined team roles", "isCorrect": false }
    ],
    "hint": "Scrum Masters help teams adapt to Agile methodologies.",
    "answerDescription": "By providing guidance and ensuring alignment with Agile values, a Scrum Master helps teams navigate the transition to Agile."
  },
  {
    "id": "agile_1775",
    "question": "What should a Scrum Master do when a team member frequently misses daily standups?",
    "options": [
      { "id": "option_1", "text": "Report them to senior management immediately", "isCorrect": false },
      { "id": "option_2", "text": "Have a conversation to understand the reasons and provide support", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the issue if work is being completed on time", "isCorrect": false },
      { "id": "option_4", "text": "Impose penalties for non-attendance", "isCorrect": false }
    ],
    "hint": "A Scrum Master fosters communication rather than enforcing rules.",
    "answerDescription": "Addressing attendance issues through open dialogue helps maintain team alignment and productivity."
  },
  {
    "id": "agile_1776",
    "question": "How does a Scrum Master help manage technical debt in a team?",
    "options": [
      { "id": "option_1", "text": "By encouraging shortcuts to meet deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By promoting refactoring and sustainable development practices", "isCorrect": true },
      { "id": "option_3", "text": "By limiting discussions on technical debt during Sprints", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on delivering features without considering code quality", "isCorrect": false }
    ],
    "hint": "Sustainable development is a core Agile value.",
    "answerDescription": "A Scrum Master supports teams in balancing new feature development with continuous improvements to maintain quality."
  },
  {
    "id": "agile_1777",
    "question": "What should a Scrum Master do if a team is struggling with Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "Hold the team accountable without making changes", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions to adjust velocity and expectations", "isCorrect": true },
      { "id": "option_3", "text": "Reduce transparency to stakeholders to avoid pressure", "isCorrect": false },
      { "id": "option_4", "text": "Increase the Sprint length to accommodate unfinished work", "isCorrect": false }
    ],
    "hint": "Inspect and adapt is a key principle in Scrum.",
    "answerDescription": "By helping the team assess their capacity realistically, a Scrum Master ensures achievable Sprint goals."
  },
  {
    "id": "agile_1778",
    "question": "What is an effective way for a Scrum Master to handle external interruptions to a Sprint?",
    "options": [
      { "id": "option_1", "text": "Allow all urgent tasks to be included in the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Shield the team and help manage scope creep effectively", "isCorrect": true },
      { "id": "option_3", "text": "Ignore external requests and focus only on the planned work", "isCorrect": false },
      { "id": "option_4", "text": "Cancel the Sprint and replan when necessary", "isCorrect": false }
    ],
    "hint": "Scrum Masters help maintain focus and prevent disruptions.",
    "answerDescription": "By managing external pressures and communicating effectively, the Scrum Master ensures that teams remain productive."
  },
  {
    "id": "agile_1779",
    "question": "What should a Scrum Master do when team members are hesitant to provide feedback?",
    "options": [
      { "id": "option_1", "text": "Let the team work without retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Create a safe space for open and constructive discussions", "isCorrect": true },
      { "id": "option_3", "text": "Assign mandatory feedback sessions", "isCorrect": false },
      { "id": "option_4", "text": "Encourage anonymous reporting only", "isCorrect": false }
    ],
    "hint": "Psychological safety is key for team growth.",
    "answerDescription": "A Scrum Master ensures that feedback culture is built on trust, making it easier for teams to share insights openly."
  },
  {
    "id": "agile_1780",
    "question": "What is a Scrum Master's role in ensuring Agile adoption in an organization?",
    "options": [
      { "id": "option_1", "text": "Enforcing Agile practices without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on team-level Agile execution", "isCorrect": false },
      { "id": "option_3", "text": "Coaching teams and leadership on Agile values", "isCorrect": true },
      { "id": "option_4", "text": "Implementing a one-size-fits-all Agile approach", "isCorrect": false }
    ],
    "hint": "Scrum Masters act as Agile coaches beyond the team level.",
    "answerDescription": "By coaching teams and leadership, a Scrum Master helps organizations embrace Agile principles effectively."
  },
  {
    "id": "agile_1781",
    "question": "What is a primary responsibility of the Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Managing individual performance within the team", "isCorrect": false },
      { "id": "option_2", "text": "Defining project timelines and milestones", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true },
      { "id": "option_4", "text": "Prioritizing the Product Backlog", "isCorrect": false }
    ],
    "hint": "The Scrum Master serves the team by ensuring smooth processes.",
    "answerDescription": "A Scrum Master enables Agile teams by facilitating Scrum ceremonies and eliminating blockers that hinder progress."
  },
  {
    "id": "agile_1782",
    "question": "Which action should a Scrum Master take to foster self-organization in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Setting strict rules for collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging the team to take ownership of decisions", "isCorrect": true },
      { "id": "option_4", "text": "Micromanaging work completion", "isCorrect": false }
    ],
    "hint": "Scrum Masters empower teams rather than directing them.",
    "answerDescription": "A Scrum Master supports the team in self-organizing by creating an environment that fosters collaboration and accountability."
  },
  {
    "id": "agile_1783",
    "question": "How does a Scrum Master help a team achieve continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By setting fixed processes that must be followed", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on velocity metrics", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating retrospectives and driving improvements", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing rigid Sprint planning approaches", "isCorrect": false }
    ],
    "hint": "Scrum Masters guide teams in learning and evolving their practices.",
    "answerDescription": "Through retrospectives and continuous feedback loops, a Scrum Master helps teams refine their processes for better outcomes."
  },
  {
    "id": "agile_1784",
    "question": "What is an effective way for a Scrum Master to remove obstacles for a team?",
    "options": [
      { "id": "option_1", "text": "By escalating every issue to senior management", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring minor challenges to maintain focus", "isCorrect": false },
      { "id": "option_3", "text": "By working with the team to address impediments proactively", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing strict process rules", "isCorrect": false }
    ],
    "hint": "Scrum Masters actively engage with teams to resolve challenges.",
    "answerDescription": "A Scrum Master collaborates with the team and organization to address barriers that hinder productivity."
  },
  {
    "id": "agile_1785",
    "question": "How should a Scrum Master handle conflicts within a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By making authoritative decisions to resolve issues", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding involvement and letting the team handle it alone", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating open discussions and guiding resolution", "isCorrect": true },
      { "id": "option_4", "text": "By assigning blame to individuals causing the conflict", "isCorrect": false }
    ],
    "hint": "Scrum Masters act as facilitators, not decision-makers, in conflicts.",
    "answerDescription": "A Scrum Master encourages constructive discussions to help the team resolve conflicts and improve collaboration."
  },
  {
    "id": "agile_1786",
    "question": "What is a key way a Scrum Master supports the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By taking over backlog prioritization responsibilities", "isCorrect": false },
      { "id": "option_2", "text": "By approving product features before release", "isCorrect": false },
      { "id": "option_3", "text": "By helping facilitate backlog refinement sessions", "isCorrect": true },
      { "id": "option_4", "text": "By enforcing deadlines for the development team", "isCorrect": false }
    ],
    "hint": "Scrum Masters help ensure the backlog is well-maintained.",
    "answerDescription": "A Scrum Master collaborates with the Product Owner to ensure clarity in backlog items and priorities."
  },
  {
    "id": "agile_1787",
    "question": "How does a Scrum Master help a team during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By deciding which user stories should be selected", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_3", "text": "By guiding discussions and ensuring realistic commitments", "isCorrect": true },
      { "id": "option_4", "text": "By setting fixed deadlines for each task", "isCorrect": false }
    ],
    "hint": "The Scrum Master helps teams define achievable Sprint goals.",
    "answerDescription": "A Scrum Master facilitates Sprint Planning by ensuring the team selects work that aligns with their capacity and goals."
  },
  {
    "id": "agile_1788",
    "question": "What should a Scrum Master do when an Agile team struggles with excessive meetings?",
    "options": [
      { "id": "option_1", "text": "Increase the number of mandatory meetings", "isCorrect": false },
      { "id": "option_2", "text": "Eliminate all meetings except Sprint Reviews", "isCorrect": false },
      { "id": "option_3", "text": "Optimize meeting structures to maximize efficiency", "isCorrect": true },
      { "id": "option_4", "text": "Ignore the issue if team members are attending", "isCorrect": false }
    ],
    "hint": "Scrum Masters ensure meetings are effective, not excessive.",
    "answerDescription": "A Scrum Master streamlines meetings to focus on value-driven discussions that support Agile principles."
  },
  {
    "id": "agile_1789",
    "question": "How does a Scrum Master help manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By committing the team to all requests without discussion", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring stakeholders have no input on team decisions", "isCorrect": false },
      { "id": "option_3", "text": "By fostering transparency and clear communication", "isCorrect": true },
      { "id": "option_4", "text": "By allowing changes mid-Sprint without consultation", "isCorrect": false }
    ],
    "hint": "Scrum Masters ensure alignment between teams and stakeholders.",
    "answerDescription": "A Scrum Master promotes transparency and collaboration, ensuring stakeholder expectations align with team capabilities."
  },
  {
    "id": "agile_1790",
    "question": "What is one way a Scrum Master supports Agile transformation in an organization?",
    "options": [
      { "id": "option_1", "text": "Enforcing Agile practices without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on individual team progress", "isCorrect": false },
      { "id": "option_3", "text": "Ignoring organizational constraints", "isCorrect": false },
      { "id": "option_4", "text": "Coaching teams and leadership on Agile principles", "isCorrect": true }
    ],
    "hint": "Scrum Masters play a key role in fostering Agile mindsets.",
    "answerDescription": "A Scrum Master supports Agile transformation by guiding teams and leadership toward Agile values and practices."
  },
  {
    "id": "agile_1791",
    "question": "Which practice should a Scrum Master encourage to improve team collaboration?",
    "options": [
      { "id": "option_1", "text": "Limiting team discussions to Sprint Reviews only", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding direct communication to minimize conflicts", "isCorrect": false },
      { "id": "option_3", "text": "Assigning individual tasks without team input", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating open and transparent team discussions", "isCorrect": true }
    ],
    "hint": "Effective collaboration requires clear and open communication.",
    "answerDescription": "A Scrum Master encourages open discussions to improve team synergy and address challenges collaboratively."
  },
  {
    "id": "agile_1792",
    "question": "What is an essential aspect of a Scrum Masterâ€™s role in Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Eliminating the need for Daily Standups if work is progressing", "isCorrect": false },
      { "id": "option_2", "text": "Assigning tasks to each team member during the meeting", "isCorrect": false },
      { "id": "option_3", "text": "Making detailed reports based on each Standup", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring the team stays focused on progress and impediments", "isCorrect": true }
    ],
    "hint": "Daily Standups are meant for short and effective team updates.",
    "answerDescription": "A Scrum Master ensures that Daily Standups help teams communicate effectively and resolve impediments efficiently."
  },
  {
    "id": "agile_1793",
    "question": "How can a Scrum Master help an Agile team stay committed to Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "By allowing frequent changes to Sprint Backlog items", "isCorrect": false },
      { "id": "option_2", "text": "By reducing team autonomy in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging stakeholder feedback during the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By reinforcing focus and protecting the team from distractions", "isCorrect": true }
    ],
    "hint": "A Scrum Master shields the team from unnecessary disruptions.",
    "answerDescription": "By minimizing external interruptions, a Scrum Master helps the team stay committed to achieving Sprint Goals."
  },
  {
    "id": "agile_1794",
    "question": "Which of the following is a key responsibility of a Scrum Master in Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Assigning blame for mistakes made during the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring retrospectives are skipped if work was completed", "isCorrect": false },
      { "id": "option_3", "text": "Dictating specific improvements to be made", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating open discussions and encouraging team-driven improvements", "isCorrect": true }
    ],
    "hint": "Retrospectives are meant to be team-driven reflections.",
    "answerDescription": "A Scrum Master facilitates retrospectives to help teams identify opportunities for continuous improvement."
  },
  {
    "id": "agile_1795",
    "question": "What should a Scrum Master do when a team member consistently misses Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue as long as work is being completed", "isCorrect": false },
      { "id": "option_2", "text": "Publicly call out the team member during meetings", "isCorrect": false },
      { "id": "option_3", "text": "Demand written justifications for each absence", "isCorrect": false },
      { "id": "option_4", "text": "Have a one-on-one discussion to understand and resolve the issue", "isCorrect": true }
    ],
    "hint": "Scrum Masters help address concerns through collaboration.",
    "answerDescription": "By understanding the root cause, a Scrum Master can help team members stay engaged in the Agile process."
  },
  {
    "id": "agile_1796",
    "question": "How should a Scrum Master handle a team struggling to meet Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "By imposing stricter work deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By assigning extra work to speed up completion", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging discussions about workload challenges", "isCorrect": false },
      { "id": "option_4", "text": "By facilitating discussions on realistic workload adjustments", "isCorrect": true }
    ],
    "hint": "Scrum Masters help teams adjust commitments based on learning.",
    "answerDescription": "A Scrum Master helps teams evaluate their capacity and refine their Sprint commitments accordingly."
  },
  {
    "id": "agile_1797",
    "question": "What is an effective way a Scrum Master can support continuous learning within a team?",
    "options": [
      { "id": "option_1", "text": "By restricting access to training resources", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging team members from experimenting with new techniques", "isCorrect": false },
      { "id": "option_3", "text": "By preventing knowledge-sharing to avoid disruptions", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging knowledge-sharing and learning opportunities", "isCorrect": true }
    ],
    "hint": "A learning culture is key to Agile success.",
    "answerDescription": "A Scrum Master supports continuous improvement by fostering an environment of learning and knowledge-sharing."
  },
  {
    "id": "agile_1798",
    "question": "How should a Scrum Master handle stakeholder requests that conflict with team priorities?",
    "options": [
      { "id": "option_1", "text": "By immediately implementing stakeholder requests", "isCorrect": false },
      { "id": "option_2", "text": "By rejecting all external input to protect the team", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing stakeholder demands over the Sprint Goal", "isCorrect": false },
      { "id": "option_4", "text": "By collaborating with the Product Owner to assess and align priorities", "isCorrect": true }
    ],
    "hint": "Scrum Masters support the balance between stakeholder needs and team goals.",
    "answerDescription": "By working with the Product Owner, a Scrum Master helps ensure external requests align with team priorities."
  },
  {
    "id": "agile_1799",
    "question": "What should a Scrum Master do if a team is not following Scrum principles effectively?",
    "options": [
      { "id": "option_1", "text": "Enforce compliance with strict rules", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the deviations and let the team continue", "isCorrect": false },
      { "id": "option_3", "text": "Publicly criticize team members for mistakes", "isCorrect": false },
      { "id": "option_4", "text": "Coach the team on Agile values and best practices", "isCorrect": true }
    ],
    "hint": "Scrum Masters guide teams rather than enforce rules.",
    "answerDescription": "A Scrum Master fosters Agile maturity by coaching teams to embrace Scrum principles effectively."
  },

  {
    "id": "agile_1800",
    "question": "Which key responsibility does a Scrum Master have during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Deciding which backlog items must be included", "isCorrect": false },
      { "id": "option_2", "text": "Assigning tasks to individual team members", "isCorrect": false },
      { "id": "option_3", "text": "Finalizing the Sprint Goal alone", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating discussions to help the team set Sprint Goals", "isCorrect": true }
    ],
    "hint": "Scrum Masters guide, not dictate, Sprint Planning discussions.",
    "answerDescription": "A Scrum Master helps the team collaborate effectively to define achievable Sprint Goals."
  },
  {
    "id": "agile_1801",
    "question": "How can a Scrum Master support a new Agile team in adopting Scrum?",
    "options": [
      { "id": "option_1", "text": "Enforcing strict adherence to all Scrum rules immediately", "isCorrect": false },
      { "id": "option_2", "text": "Letting the team figure out Scrum practices on their own", "isCorrect": false },
      { "id": "option_3", "text": "Discouraging retrospectives in the first few sprints", "isCorrect": false },
      { "id": "option_4", "text": "Providing guidance, coaching, and fostering Agile values", "isCorrect": true }
    ],
    "hint": "A Scrum Master enables teams to learn Scrum principles effectively.",
    "answerDescription": "Supporting teams through coaching and gradual adoption of Scrum ensures long-term success."
  },
  {
    "id": "agile_1802",
    "question": "What is an important way a Scrum Master contributes to Agile team performance?",
    "options": [
      { "id": "option_1", "text": "By controlling team decisions to ensure efficiency", "isCorrect": false },
      { "id": "option_2", "text": "By assigning work to individual developers", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By removing impediments that block team progress", "isCorrect": true }
    ],
    "hint": "Scrum Masters serve as facilitators for high-performing teams.",
    "answerDescription": "A key responsibility of the Scrum Master is to remove obstacles so the team can deliver value efficiently."
  },
  {
    "id": "agile_1803",
    "question": "Why should a Scrum Master promote self-organization in a team?",
    "options": [
      { "id": "option_1", "text": "To eliminate the need for leadership involvement", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the number of Scrum events", "isCorrect": false },
      { "id": "option_3", "text": "To ensure tasks are completed faster", "isCorrect": false },
      { "id": "option_4", "text": "To empower teams to take ownership of their work", "isCorrect": true }
    ],
    "hint": "Scrum teams thrive on autonomy and accountability.",
    "answerDescription": "Self-organization allows teams to make decisions, adapt, and work collaboratively with minimal external control."
  },
  {
    "id": "agile_1804",
    "question": "How should a Scrum Master handle conflicts between team members?",
    "options": [
      { "id": "option_1", "text": "By avoiding involvement in interpersonal issues", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict conflict resolution rules", "isCorrect": false },
      { "id": "option_3", "text": "By removing team members who disagree frequently", "isCorrect": false },
      { "id": "option_4", "text": "By facilitating open discussions to find a resolution", "isCorrect": true }
    ],
    "hint": "Scrum Masters foster healthy team dynamics.",
    "answerDescription": "Encouraging constructive discussions helps teams resolve conflicts in a collaborative way."
  },
  {
    "id": "agile_1805",
    "question": "What should a Scrum Master do if a Product Owner frequently changes Sprint Backlog items?",
    "options": [
      { "id": "option_1", "text": "Accept the changes to maintain stakeholder satisfaction", "isCorrect": false },
      { "id": "option_2", "text": "Encourage the team to adjust scope immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the changes to avoid disrupting the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "Discuss the impact with the Product Owner to maintain Sprint focus", "isCorrect": true }
    ],
    "hint": "The Scrum Master ensures sprint stability and team productivity.",
    "answerDescription": "Facilitating discussions with the Product Owner helps balance stakeholder needs with Sprint commitments."
  },
  {
    "id": "agile_1806",
    "question": "What is one way a Scrum Master can support the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By defining the product vision independently", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing backlog items instead of the Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "By approving work before it is delivered", "isCorrect": false },
      { "id": "option_4", "text": "By helping facilitate stakeholder communication", "isCorrect": true }
    ],
    "hint": "The Scrum Master enables collaboration between stakeholders and teams.",
    "answerDescription": "Supporting the Product Owner in stakeholder discussions ensures better alignment of product priorities."
  },
  {
    "id": "agile_1807",
    "question": "What is the best approach for a Scrum Master to measure team success?",
    "options": [
      { "id": "option_1", "text": "By tracking the number of hours each team member works", "isCorrect": false },
      { "id": "option_2", "text": "By comparing the team's velocity with other teams", "isCorrect": false },
      { "id": "option_3", "text": "By assessing the number of tasks completed per Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By evaluating team collaboration, adaptability, and value delivery", "isCorrect": true }
    ],
    "hint": "Success is about delivering value, not just completing tasks.",
    "answerDescription": "Scrum success is measured by the team's ability to collaborate effectively and deliver meaningful outcomes."
  },
  {
    "id": "agile_1808",
    "question": "What action should a Scrum Master take if the team does not engage in Sprint Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Emphasize the importance of continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "Cancel retrospectives if the team is not interested", "isCorrect": false },
      { "id": "option_3", "text": "Replace retrospectives with individual feedback sessions", "isCorrect": false },
      { "id": "option_4", "text": "Reduce the number of retrospectives held", "isCorrect": false }
    ],
    "hint": "Retrospectives drive team learning and adaptation.",
    "answerDescription": "Encouraging retrospectives helps the team continuously improve their processes and collaboration."
  },
  {
    "id": "agile_1809",
    "question": "What should a Scrum Master do if leadership is pressuring the team to deliver more than their capacity?",
    "options": [
      { "id": "option_1", "text": "Agree to the demands to maintain leadership satisfaction", "isCorrect": false },
      { "id": "option_2", "text": "Push the team to work overtime to meet expectations", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the concern and let the team handle the pressure", "isCorrect": false },
      { "id": "option_4", "text": "Advocate for sustainable work practices and realistic expectations", "isCorrect": true }
    ],
    "hint": "Sustainable development is a key Agile principle.",
    "answerDescription": "A Scrum Master ensures work remains sustainable by setting realistic expectations with leadership."
  },  {
    "id": "agile_1810",
    "question": "What is one of the primary roles of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true },
      { "id": "option_2", "text": "Defining project requirements and deadlines", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Approving final product releases", "isCorrect": false }
    ],
    "hint": "The Scrum Master focuses on enabling the team's success.",
    "answerDescription": "A Scrum Master helps teams follow Scrum practices, facilitates meetings, and removes blockers."
  },
  {
    "id": "agile_1811",
    "question": "How does a Scrum Master help an Agile team improve continuously?",
    "options": [
      { "id": "option_1", "text": "By facilitating Sprint Retrospectives for reflection and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "By creating a strict set of unchangeable rules", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring team members work overtime to improve output", "isCorrect": false },
      { "id": "option_4", "text": "By limiting stakeholder interactions with the team", "isCorrect": false }
    ],
    "hint": "Scrum promotes continuous improvement through team reflection.",
    "answerDescription": "A Scrum Master helps teams analyze their work and adapt processes for better efficiency."
  },
  {
    "id": "agile_1812",
    "question": "What should a Scrum Master do when a team member struggles with a task?",
    "options": [
      { "id": "option_1", "text": "Encourage team collaboration to find solutions", "isCorrect": true },
      { "id": "option_2", "text": "Assign the task to another team member", "isCorrect": false },
      { "id": "option_3", "text": "Solve the issue personally", "isCorrect": false },
      { "id": "option_4", "text": "Ignore the problem until the Sprint ends", "isCorrect": false }
    ],
    "hint": "Scrum values collaboration over individual effort.",
    "answerDescription": "A Scrum Master promotes teamwork by encouraging members to support each other in problem-solving."
  },
  {
    "id": "agile_1813",
    "question": "What is a key practice a Scrum Master should encourage in Daily Scrums?",
    "options": [
      { "id": "option_1", "text": "Team members sharing progress and impediments", "isCorrect": true },
      { "id": "option_2", "text": "Long discussions about individual tasks", "isCorrect": false },
      { "id": "option_3", "text": "Detailed reporting to management", "isCorrect": false },
      { "id": "option_4", "text": "Skipping updates if there are no major issues", "isCorrect": false }
    ],
    "hint": "The Daily Scrum focuses on alignment and transparency.",
    "answerDescription": "Scrum Masters ensure Daily Scrums remain efficient by keeping discussions focused on progress and impediments."
  },
 {
    "id": "agile_1814",
    "question": "What is an effective way for a Scrum Master to address a lack of stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "Facilitate communication between the team and stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "Reduce stakeholder interactions to avoid disruptions", "isCorrect": false },
      { "id": "option_3", "text": "Limit transparency on project progress", "isCorrect": false },
      { "id": "option_4", "text": "Exclude stakeholders from Sprint Reviews", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration is crucial in Agile development.",
    "answerDescription": "A Scrum Master ensures open communication so stakeholders stay engaged and aligned with the team."
  },
  {
    "id": "agile_1815",
    "question": "How should a Scrum Master respond if the Development Team consistently misses Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "Encourage the team to inspect and adapt in retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "Increase the number of Daily Scrum meetings", "isCorrect": false },
      { "id": "option_3", "text": "Extend Sprints to accommodate unfinished work", "isCorrect": false },
      { "id": "option_4", "text": "Reassign tasks to external contractors", "isCorrect": false }
    ],
    "hint": "Agile teams improve by reflecting on their performance and making adjustments.",
    "answerDescription": "Retrospectives allow teams to analyze missed goals and improve their processes."
  },
  {
    "id": "agile_1816",
    "question": "What should a Scrum Master do when external pressure disrupts Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "Shield the team by negotiating with stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "Ignore the pressure and let the team handle it", "isCorrect": false },
      { "id": "option_3", "text": "Force the team to accept additional work", "isCorrect": false },
      { "id": "option_4", "text": "Cancel the Sprint and restart planning", "isCorrect": false }
    ],
    "hint": "The Scrum Master protects the teamâ€™s ability to deliver.",
    "answerDescription": "Negotiating with stakeholders ensures that the team can work within sustainable limits."
  },
  {
    "id": "agile_1817",
    "question": "How can a Scrum Master help a team handle unexpected mid-Sprint changes?",
    "options": [
      { "id": "option_1", "text": "Encourage the team to assess impact and adapt as needed", "isCorrect": true },
      { "id": "option_2", "text": "Immediately halt the Sprint and plan a new one", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the changes and focus only on the original plan", "isCorrect": false },
      { "id": "option_4", "text": "Force the team to complete all new requests", "isCorrect": false }
    ],
    "hint": "Scrum encourages adaptability while maintaining focus.",
    "answerDescription": "Helping teams assess and adapt ensures they manage changes effectively while delivering value."
  },
  {
    "id": "agile_1818",
    "question": "What is a key responsibility of a Scrum Master in Agile development?",
    "options": [
      { "id": "option_1", "text": "Coaching the team on Agile practices", "isCorrect": true },
      { "id": "option_2", "text": "Managing the team's workload", "isCorrect": false },
      { "id": "option_3", "text": "Approving deliverables", "isCorrect": false },
      { "id": "option_4", "text": "Assigning tasks to team members", "isCorrect": false }
    ],
    "hint": "A Scrum Master facilitates Agile adoption within the team.",
    "answerDescription": "Scrum Masters support teams by coaching them on Agile values and best practices."
  },
  {
    "id": "agile_1819",
    "question": "How does a Scrum Master promote self-organization in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By encouraging team members to make their own decisions", "isCorrect": true },
      { "id": "option_2", "text": "By assigning specific tasks to each team member", "isCorrect": false },
      { "id": "option_3", "text": "By closely monitoring and controlling team activities", "isCorrect": false },
      { "id": "option_4", "text": "By setting strict performance metrics", "isCorrect": false }
    ],
    "hint": "Scrum promotes autonomy and collaboration within teams.",
    "answerDescription": "A Scrum Master fosters self-organization by enabling the team to take ownership of their work."
  },
  {
    "id": "agile_1820",
    "question": "What should a Scrum Master do if a team member frequently interrupts Daily Scrum meetings?",
    "options": [
      { "id": "option_1", "text": "Facilitate guidelines to ensure effective communication", "isCorrect": true },
      { "id": "option_2", "text": "Remove the team member from future meetings", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the interruptions and continue the meeting", "isCorrect": false },
      { "id": "option_4", "text": "Replace the Daily Scrum with written updates", "isCorrect": false }
    ],
    "hint": "Scrum Masters should help teams maintain effective collaboration.",
    "answerDescription": "Encouraging respectful communication ensures productive and efficient Daily Scrums."
  },
  {
    "id": "agile_1821",
    "question": "Which action by a Scrum Master supports continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Facilitating regular Sprint Retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "Defining the team's improvement plan", "isCorrect": false },
      { "id": "option_3", "text": "Evaluating individual team members' performance", "isCorrect": false },
      { "id": "option_4", "text": "Setting fixed Sprint objectives", "isCorrect": false }
    ],
    "hint": "Scrum teams reflect and adapt through structured discussions.",
    "answerDescription": "Sprint Retrospectives help teams analyze their work and make continuous improvements."
  },
  {
    "id": "agile_1822",
    "question": "How does a Scrum Master help remove impediments for a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By identifying and addressing blockers impacting progress", "isCorrect": true },
      { "id": "option_2", "text": "By assigning work to individual team members", "isCorrect": false },
      { "id": "option_3", "text": "By defining technical solutions", "isCorrect": false },
      { "id": "option_4", "text": "By setting team objectives", "isCorrect": false }
    ],
    "hint": "Scrum Masters ensure smooth workflow by eliminating obstacles.",
    "answerDescription": "By proactively resolving impediments, Scrum Masters help teams maintain efficiency."
  },
  {
    "id": "agile_1823",
    "question": "What is a primary way a Scrum Master fosters team collaboration?",
    "options": [
      { "id": "option_1", "text": "Encouraging open communication and trust", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring that only senior members contribute ideas", "isCorrect": false },
      { "id": "option_3", "text": "Controlling how team discussions take place", "isCorrect": false },
      { "id": "option_4", "text": "Setting strict rules for discussions", "isCorrect": false }
    ],
    "hint": "Effective teamwork relies on open and honest interaction.",
    "answerDescription": "By fostering transparency and trust, Scrum Masters create an environment for productive collaboration."
  },
  {
    "id": "agile_1824",
    "question": "What should a Scrum Master do if team members avoid discussing challenges during Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Create a safe space for open discussions", "isCorrect": true },
      { "id": "option_2", "text": "Skip retrospectives if the team is reluctant", "isCorrect": false },
      { "id": "option_3", "text": "Encourage only the Product Owner to provide feedback", "isCorrect": false },
      { "id": "option_4", "text": "Enforce strict reporting on all issues", "isCorrect": false }
    ],
    "hint": "Psychological safety enables teams to reflect and grow.",
    "answerDescription": "A safe and open environment encourages constructive feedback and improvements."
  },
  {
    "id": "agile_1825",
    "question": "How can a Scrum Master support an organizationâ€™s Agile transformation?",
    "options": [
      { "id": "option_1", "text": "By coaching teams and leadership on Agile principles", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict Agile adoption rules", "isCorrect": false },
      { "id": "option_3", "text": "By requiring teams to work in the same way", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding involvement in organizational change", "isCorrect": false }
    ],
    "hint": "Scrum Masters act as change agents for Agile adoption.",
    "answerDescription": "Coaching teams and leadership ensures a smooth transition to Agile practices."
  },
  {
    "id": "agile_1826",
    "question": "Why should a Scrum Master promote cross-functionality within a team?",
    "options": [
      { "id": "option_1", "text": "To enhance collaboration and flexibility in delivering value", "isCorrect": true },
      { "id": "option_2", "text": "To create specialized teams for different project phases", "isCorrect": false },
      { "id": "option_3", "text": "To ensure that only experienced members handle tasks", "isCorrect": false },
      { "id": "option_4", "text": "To increase dependency on external experts", "isCorrect": false }
    ],
    "hint": "Cross-functional teams have all the necessary skills to deliver value.",
    "answerDescription": "Encouraging cross-functionality allows teams to be more adaptable and efficient."
  },
  {
    "id": "agile_1827",
    "question": "What should a Scrum Master do if a team consistently struggles to complete Sprint Backlog items?",
    "options": [
      { "id": "option_1", "text": "Facilitate discussions to identify the root cause", "isCorrect": true },
      { "id": "option_2", "text": "Reduce the number of team members working on tasks", "isCorrect": false },
      { "id": "option_3", "text": "Extend Sprint durations to allow more time", "isCorrect": false },
      { "id": "option_4", "text": "Reassign work to external consultants", "isCorrect": false }
    ],
    "hint": "The Scrum Master should help the team identify challenges and improve processes.",
    "answerDescription": "Analyzing obstacles helps the team adapt and enhance their delivery capabilities."
  },
  {
    "id": "agile_1828",
    "question": "What is the primary role of a Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Defining the product roadmap", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Scrum processes and removing impediments", "isCorrect": true },
      { "id": "option_3", "text": "Managing individual team member performance", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work to team members", "isCorrect": false }
    ],
    "hint": "The Scrum Master acts as a servant leader for the team.",
    "answerDescription": "A Scrum Master facilitates Agile practices and ensures the team can work effectively."
  },
  {
    "id": "agile_1829",
    "question": "How does a Scrum Master help a team improve efficiency?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By fostering collaboration and removing obstacles", "isCorrect": true },
      { "id": "option_3", "text": "By micromanaging tasks", "isCorrect": false },
      { "id": "option_4", "text": "By defining technical solutions", "isCorrect": false }
    ],
    "hint": "Scrum Masters enable teams to focus on delivering value.",
    "answerDescription": "Encouraging teamwork and addressing impediments helps teams work more efficiently."
  },
  {
    "id": "agile_1830",
    "question": "Which activity best describes how a Scrum Master serves the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By dictating backlog priorities", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring the Product Backlog is well-organized and refined", "isCorrect": true },
      { "id": "option_3", "text": "By assigning backlog items to developers", "isCorrect": false },
      { "id": "option_4", "text": "By approving Sprint Goals", "isCorrect": false }
    ],
    "hint": "Scrum Masters help Product Owners maintain backlog clarity.",
    "answerDescription": "A well-maintained backlog ensures that development work aligns with business objectives."
  },
  {
    "id": "agile_1831",
    "question": "What should a Scrum Master do if a team is struggling to collaborate effectively?",
    "options": [
      { "id": "option_1", "text": "Impose strict communication rules", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate open discussions and team-building activities", "isCorrect": true },
      { "id": "option_3", "text": "Reduce the number of meetings", "isCorrect": false },
      { "id": "option_4", "text": "Limit direct communication between members", "isCorrect": false }
    ],
    "hint": "Team dynamics improve through trust and collaboration.",
    "answerDescription": "Encouraging open communication fosters teamwork and improves collaboration."
  },
  {
    "id": "agile_1832",
    "question": "How does a Scrum Master ensure continuous learning within a team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict learning schedules", "isCorrect": false },
      { "id": "option_2", "text": "By promoting knowledge sharing and regular retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "By selecting individual team members for training", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging experimentation", "isCorrect": false }
    ],
    "hint": "Learning happens through reflection and shared experiences.",
    "answerDescription": "Retrospectives and knowledge sharing drive continuous improvement."
  },
  {
    "id": "agile_1833",
    "question": "What should a Scrum Master do when an external stakeholder disrupts a Sprint?",
    "options": [
      { "id": "option_1", "text": "Allow the stakeholder to make changes mid-Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Shield the team and address changes in the next Sprint", "isCorrect": true },
      { "id": "option_3", "text": "Immediately stop the Sprint to adjust priorities", "isCorrect": false },
      { "id": "option_4", "text": "Let the team handle the changes individually", "isCorrect": false }
    ],
    "hint": "Sprint commitments should be protected.",
    "answerDescription": "A Scrum Master ensures that external disruptions do not affect the ongoing Sprint."
  },
  {
    "id": "agile_1834",
    "question": "Which action by a Scrum Master supports Agile adoption in an organization?",
    "options": [
      { "id": "option_1", "text": "Mandating Agile compliance for all teams", "isCorrect": false },
      { "id": "option_2", "text": "Coaching teams and leadership on Agile principles", "isCorrect": true },
      { "id": "option_3", "text": "Creating a fixed Agile framework for all teams", "isCorrect": false },
      { "id": "option_4", "text": "Restricting Agile practices to development teams only", "isCorrect": false }
    ],
    "hint": "Agile transformation requires guidance and support.",
    "answerDescription": "A Scrum Master drives Agile adoption by coaching teams and leadership."
  },
  {
    "id": "agile_1835",
    "question": "What is one way a Scrum Master helps a team maintain focus during a Sprint?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict working hours", "isCorrect": false },
      { "id": "option_2", "text": "By protecting the team from external distractions", "isCorrect": true },
      { "id": "option_3", "text": "By limiting the number of Daily Scrum meetings", "isCorrect": false },
      { "id": "option_4", "text": "By requiring overtime work when needed", "isCorrect": false }
    ],
    "hint": "Scrum Masters help teams stay on track.",
    "answerDescription": "Minimizing distractions allows teams to focus on Sprint Goals."
  },
  {
    "id": "agile_1836",
    "question": "Which strategy can a Scrum Master use to improve team accountability?",
    "options": [
      { "id": "option_1", "text": "Assigning individual work packages", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging collective ownership of deliverables", "isCorrect": true },
      { "id": "option_3", "text": "Monitoring team members closely", "isCorrect": false },
      { "id": "option_4", "text": "Implementing a performance ranking system", "isCorrect": false }
    ],
    "hint": "Accountability improves when teams take ownership together.",
    "answerDescription": "Collective ownership fosters responsibility and accountability."
  },
  {
    "id": "agile_1837",
    "question": "How can a Scrum Master help a team dealing with conflicting priorities?",
    "options": [
      { "id": "option_1", "text": "By letting the team decide on their own", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating discussions to align on priorities", "isCorrect": true },
      { "id": "option_3", "text": "By asking the Product Owner to remove conflicting tasks", "isCorrect": false },
      { "id": "option_4", "text": "By deferring all conflicts to senior management", "isCorrect": false }
    ],
    "hint": "Alignment is key to managing conflicting work demands.",
    "answerDescription": "Facilitating discussions ensures that the team can resolve priority conflicts effectively."
  },  {
    "id": "agile_1838",
    "question": "What is the main responsibility of a Scrum Master in a Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Defining the Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating the discussion without controlling it", "isCorrect": true },
      { "id": "option_4", "text": "Ensuring only developers speak", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures the event stays focused and productive.",
    "answerDescription": "A Scrum Master facilitates Daily Scrum meetings, helping the team stay on track without directing them."
  },
  {
    "id": "agile_1839",
    "question": "How should a Scrum Master handle resistance to Agile adoption within a team?",
    "options": [
      { "id": "option_1", "text": "By enforcing Agile rules strictly", "isCorrect": false },
      { "id": "option_2", "text": "By replacing resistant team members", "isCorrect": false },
      { "id": "option_3", "text": "By coaching and addressing concerns through open dialogue", "isCorrect": true },
      { "id": "option_4", "text": "By escalating the issue to senior management", "isCorrect": false }
    ],
    "hint": "Resistance is best addressed through support and education.",
    "answerDescription": "Coaching and communication help teams gradually adopt Agile principles effectively."
  },
  {
    "id": "agile_1840",
    "question": "Which action by a Scrum Master fosters self-organization in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Assigning specific tasks to each member", "isCorrect": false },
      { "id": "option_2", "text": "Monitoring individual performance closely", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging team members to decide how they accomplish work", "isCorrect": true },
      { "id": "option_4", "text": "Setting strict work methodologies", "isCorrect": false }
    ],
    "hint": "Self-organization involves empowering teams to manage their own work.",
    "answerDescription": "Scrum Masters support self-organization by allowing the team to determine how they work best."
  },
  {
    "id": "agile_1841",
    "question": "What should a Scrum Master do when a team consistently misses Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "Increase daily check-ins", "isCorrect": false },
      { "id": "option_2", "text": "Extend the Sprint length", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate a retrospective to identify improvement areas", "isCorrect": true },
      { "id": "option_4", "text": "Reduce the team's workload drastically", "isCorrect": false }
    ],
    "hint": "Reflection helps identify the root cause of the issue.",
    "answerDescription": "A retrospective allows the team to analyze their challenges and find solutions."
  },
  {
    "id": "agile_1842",
    "question": "What Scrum Master will do in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Defining the work that the team must complete", "isCorrect": false },
      { "id": "option_2", "text": "Approving the Sprint backlog", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring the team understands the Sprint Goal and backlog items", "isCorrect": true },
      { "id": "option_4", "text": "Setting the estimated effort for each task", "isCorrect": false }
    ],
    "hint": "Sprint Planning involves collaboration and alignment.",
    "answerDescription": "A Scrum Master ensures that the team is aligned on objectives without dictating work."
  },
  {
    "id": "agile_1843",
    "question": "Which skill is most critical for a Scrum Master to resolve team conflicts?",
    "options": [
      { "id": "option_1", "text": "Strong technical expertise", "isCorrect": false },
      { "id": "option_2", "text": "Ability to enforce strict rules", "isCorrect": false },
      { "id": "option_3", "text": "Effective facilitation and mediation skills", "isCorrect": true },
      { "id": "option_4", "text": "Knowledge of Agile tools", "isCorrect": false }
    ],
    "hint": "Handling conflicts requires strong interpersonal skills.",
    "answerDescription": "A Scrum Master must mediate disputes and facilitate team discussions to maintain collaboration."
  },
  {
    "id": "agile_1844",
    "question": "What is the primary purpose of a Sprint Retrospective?",
    "options": [
      { "id": "option_1", "text": "To review and approve the next Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "To celebrate team achievements", "isCorrect": false },
      { "id": "option_3", "text": "To reflect on the previous Sprint and identify improvements", "isCorrect": true },
      { "id": "option_4", "text": "To evaluate individual performance", "isCorrect": false }
    ],
    "hint": "The retrospective focuses on learning and continuous improvement.",
    "answerDescription": "A Sprint Retrospective allows the team to assess their processes and make adjustments."
  },
  {
    "id": "agile_1845",
    "question": "What should a Scrum Master do if a team member frequently dominates discussions?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue to avoid conflict", "isCorrect": false },
      { "id": "option_2", "text": "Ask the team member to refrain from contributing", "isCorrect": false },
      { "id": "option_3", "text": "Encourage balanced participation by facilitating the discussion", "isCorrect": true },
      { "id": "option_4", "text": "Assign speaking turns to all team members", "isCorrect": false }
    ],
    "hint": "All voices should be heard in a team discussion.",
    "answerDescription": "A Scrum Master should guide discussions to ensure inclusivity and effective collaboration."
  },
  {
    "id": "agile_1846",
    "question": "Which approach should a Scrum Master take to improve stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Limit stakeholder involvement to Sprint Reviews", "isCorrect": false },
      { "id": "option_2", "text": "Allow stakeholders to dictate team priorities", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate regular communication between stakeholders and the team", "isCorrect": true },
      { "id": "option_4", "text": "Reduce the number of interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "Stakeholder engagement is key to Agile success.",
    "answerDescription": "Regular interactions with stakeholders ensure alignment and feedback-driven improvements."
  },
  {
    "id": "agile_1847",
    "question": "What should a Scrum Master do if a team struggles with estimation in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assign estimates based on previous Sprints", "isCorrect": false },
      { "id": "option_2", "text": "Encourage the team to skip estimation and adjust later", "isCorrect": false },
      { "id": "option_3", "text": "Introduce estimation techniques like Planning Poker", "isCorrect": true },
      { "id": "option_4", "text": "Allow only the most experienced members to estimate", "isCorrect": false }
    ],
    "hint": "There are Agile techniques to improve estimation.",
    "answerDescription": "Techniques like Planning Poker help teams estimate work collaboratively and effectively."
  },
  {
    "id": "agile_1848",
    "question": "What is the key responsibility of a Scrum Master during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Defining the Sprint Goal", "isCorrect": false },
      { "id": "option_2", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring the Product Owner completes backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "Removing impediments that hinder the teamâ€™s progress", "isCorrect": true }
    ],
    "hint": "A Scrum Master's role is to facilitate and support the team, not control them.",
    "answerDescription": "Scrum Masters help teams by eliminating obstacles that may slow down progress during a Sprint."
  },
  {
    "id": "agile_1849",
    "question": "How does a Scrum Master help ensure continuous improvement in a team?",
    "options": [
      { "id": "option_1", "text": "By conducting performance evaluations", "isCorrect": false },
      { "id": "option_2", "text": "By defining the team's work methods", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict adherence to Agile rules", "isCorrect": false },
      { "id": "option_4", "text": "By facilitating Sprint Retrospectives and implementing feedback", "isCorrect": true }
    ],
    "hint": "Reflection and iteration are key to Agile improvement.",
    "answerDescription": "Sprint Retrospectives help teams identify areas for growth and implement actionable improvements."
  },
  {
    "id": "agile_1850",
    "question": "What should a Scrum Master do if a team member is struggling with a task?",
    "options": [
      { "id": "option_1", "text": "Take over the task to ensure it's completed on time", "isCorrect": false },
      { "id": "option_2", "text": "Escalate the issue to senior management", "isCorrect": false },
      { "id": "option_3", "text": "Ignore it and let the team self-organize", "isCorrect": false },
      { "id": "option_4", "text": "Encourage collaboration and guide the team in resolving the issue", "isCorrect": true }
    ],
    "hint": "Scrum Masters should empower teams rather than directly intervening.",
    "answerDescription": "By fostering collaboration, the Scrum Master enables the team to find solutions together."
  },
  {
    "id": "agile_1851",
    "question": "How can a Scrum Master help a team that is frequently missing Sprint deadlines?",
    "options": [
      { "id": "option_1", "text": "By setting strict deadlines for individual tasks", "isCorrect": false },
      { "id": "option_2", "text": "By extending the Sprint length", "isCorrect": false },
      { "id": "option_3", "text": "By assigning tasks to the fastest developers", "isCorrect": false },
      { "id": "option_4", "text": "By helping the team identify and address bottlenecks in the process", "isCorrect": true }
    ],
    "hint": "The Scrum Master's role is to facilitate process improvements, not enforce deadlines.",
    "answerDescription": "Identifying process inefficiencies allows the team to adjust their workflow and improve delivery."
  },
  {
    "id": "agile_1852",
    "question": "Which action best demonstrates servant leadership by a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Directing the team on how to complete their tasks", "isCorrect": false },
      { "id": "option_2", "text": "Making project decisions on behalf of the team", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring all meetings are run efficiently", "isCorrect": false },
      { "id": "option_4", "text": "Supporting the team by removing obstacles and fostering collaboration", "isCorrect": true }
    ],
    "hint": "Servant leadership focuses on enabling the team rather than controlling them.",
    "answerDescription": "A Scrum Master acts as a servant leader by creating an environment where the team can succeed."
  },
  {
    "id": "agile_1853",
    "question": "What is one way a Scrum Master helps a team adopt Agile values?",
    "options": [
      { "id": "option_1", "text": "By mandating Agile practices without discussion", "isCorrect": false },
      { "id": "option_2", "text": "By focusing on processes over people", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging change in workflows", "isCorrect": false },
      { "id": "option_4", "text": "By coaching the team and reinforcing Agile principles", "isCorrect": true }
    ],
    "hint": "A Scrum Master encourages Agile adoption through guidance, not enforcement.",
    "answerDescription": "Scrum Masters help teams internalize Agile values by coaching and providing ongoing support."
  },
  {
    "id": "agile_1854",
    "question": "What should a Scrum Master do when stakeholders interfere with the Development Team's work?",
    "options": [
      { "id": "option_1", "text": "Allow stakeholders to directly assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Instruct the team to prioritize stakeholder requests over the Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Escalate the issue to upper management immediately", "isCorrect": false },
      { "id": "option_4", "text": "Educate stakeholders on Agile principles and the importance of team autonomy", "isCorrect": true }
    ],
    "hint": "Scrum Masters act as Agile advocates, ensuring proper process adherence.",
    "answerDescription": "By educating stakeholders, a Scrum Master helps maintain the integrity of Agile processes."
  },
  {
    "id": "agile_1855",
    "question": "How can a Scrum Master promote a culture of accountability in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By tracking and reporting individual team member performance", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks to the most skilled developers", "isCorrect": false },
      { "id": "option_3", "text": "By setting strict deadlines and monitoring adherence", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging team ownership of commitments and outcomes", "isCorrect": true }
    ],
    "hint": "Accountability in Agile comes from the team, not external enforcement.",
    "answerDescription": "When teams take ownership of their commitments, they are more engaged and accountable."
  },
  {
    "id": "agile_1856",
    "question": "What is the role of a Scrum Master in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To present the work completed during the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To evaluate and approve the team's work", "isCorrect": false },
      { "id": "option_3", "text": "To define the upcoming Sprint goals", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate collaboration between the team and stakeholders", "isCorrect": true }
    ],
    "hint": "A Scrum Master's role is to ensure effective communication between the team and stakeholders.",
    "answerDescription": "In a Sprint Review, the Scrum Master helps create a productive environment for feedback."
  },
  {
    "id": "agile_1857",
    "question": "Which behavior should a Scrum Master encourage to maintain a healthy Agile team dynamic?",
    "options": [
      { "id": "option_1", "text": "Encouraging team members to work independently with minimal collaboration", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing discussions to focus on productivity", "isCorrect": false },
      { "id": "option_3", "text": "Allowing only the Product Owner to communicate with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Promoting open communication and psychological safety", "isCorrect": true }
    ],
    "hint": "A safe and open environment fosters better teamwork and innovation.",
    "answerDescription": "Psychological safety enables team members to express ideas and concerns without fear of judgment."
  },
  {
    "id": "agile_1858",
    "question": "What is one of the primary responsibilities of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events and ensuring Agile principles are followed", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "Deciding the Product Backlog priorities", "isCorrect": false },
      { "id": "option_4", "text": "Acting as the project manager for the team", "isCorrect": false }
    ],
    "hint": "A Scrum Master serves the team by fostering Agile best practices.",
    "answerDescription": "The Scrum Master ensures that Scrum events are conducted effectively and that Agile principles are upheld."
  },
  {
    "id": "agile_1859",
    "question": "How does a Scrum Master support a self-organizing team?",
    "options": [
      { "id": "option_1", "text": "By encouraging team autonomy and removing roadblocks", "isCorrect": true },
      { "id": "option_2", "text": "By closely monitoring each team memberâ€™s work", "isCorrect": false },
      { "id": "option_3", "text": "By making key technical decisions on behalf of the team", "isCorrect": false },
      { "id": "option_4", "text": "By assigning tasks based on individual strengths", "isCorrect": false }
    ],
    "hint": "Self-organization thrives when the team has the freedom to manage their own work.",
    "answerDescription": "A Scrum Master promotes self-organization by fostering team autonomy and resolving obstacles."
  },
  {
    "id": "agile_1860",
    "question": "What should a Scrum Master do when team members are hesitant to participate in Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Create a safe environment where team members feel comfortable sharing feedback", "isCorrect": true },
      { "id": "option_2", "text": "Skip Retrospectives to save time", "isCorrect": false },
      { "id": "option_3", "text": "Have only the senior developers contribute", "isCorrect": false },
      { "id": "option_4", "text": "Force every member to speak up", "isCorrect": false }
    ],
    "hint": "Psychological safety is key to effective Retrospectives.",
    "answerDescription": "A Scrum Master should foster a culture of trust where everyone feels safe sharing ideas."
  },
  {
    "id": "agile_1861",
    "question": "Why should a Scrum Master encourage cross-functional team collaboration?",
    "options": [
      { "id": "option_1", "text": "To ensure the team can deliver complete increments of work", "isCorrect": true },
      { "id": "option_2", "text": "To increase the workload of team members", "isCorrect": false },
      { "id": "option_3", "text": "To prevent specialization within the team", "isCorrect": false },
      { "id": "option_4", "text": "To distribute work based on hierarchy", "isCorrect": false }
    ],
    "hint": "Cross-functional teams are crucial for delivering end-to-end solutions.",
    "answerDescription": "Encouraging cross-functional collaboration ensures that the team can complete work without external dependencies."
  },
  {
    "id": "agile_1862",
    "question": "What is the best way for a Scrum Master to address conflict within a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Facilitate open discussions and encourage constructive resolution", "isCorrect": true },
      { "id": "option_2", "text": "Report the issue to upper management immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the conflict and let the team resolve it independently", "isCorrect": false },
      { "id": "option_4", "text": "Remove the team members involved in the conflict", "isCorrect": false }
    ],
    "hint": "Healthy conflict resolution strengthens team collaboration.",
    "answerDescription": "A Scrum Master should foster open discussions to ensure conflicts are addressed constructively."
  },
  {
    "id": "agile_1863",
    "question": "Which approach should a Scrum Master take when a team is resistant to adopting Agile practices?",
    "options": [
      { "id": "option_1", "text": "Educate and coach the team on the benefits of Agile", "isCorrect": true },
      { "id": "option_2", "text": "Mandate Agile compliance without explanation", "isCorrect": false },
      { "id": "option_3", "text": "Punish non-compliance with Agile methodologies", "isCorrect": false },
      { "id": "option_4", "text": "Let the team continue working in their traditional way", "isCorrect": false }
    ],
    "hint": "Agile adoption is most effective through education and support.",
    "answerDescription": "A Scrum Master should guide and support the team in understanding Agile principles."
  },
  {
    "id": "agile_1864",
    "question": "What is one way a Scrum Master can measure team performance?",
    "options": [
      { "id": "option_1", "text": "By tracking the team's ability to deliver working software each Sprint", "isCorrect": true },
      { "id": "option_2", "text": "By measuring individual productivity levels", "isCorrect": false },
      { "id": "option_3", "text": "By counting the number of hours worked per team member", "isCorrect": false },
      { "id": "option_4", "text": "By setting fixed deadlines for each task", "isCorrect": false }
    ],
    "hint": "Agile performance is best measured by outcomes rather than effort.",
    "answerDescription": "A Scrum Master's role is to help the team consistently deliver valuable software."
  },
  {
    "id": "agile_1865",
    "question": "How does a Scrum Master contribute to team motivation?",
    "options": [
      { "id": "option_1", "text": "By fostering a positive, collaborative work environment", "isCorrect": true },
      { "id": "option_2", "text": "By rewarding the top performers only", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict rules and deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring that the team competes against each other", "isCorrect": false }
    ],
    "hint": "A supportive environment enhances team morale.",
    "answerDescription": "The Scrum Master helps maintain motivation by promoting collaboration and recognition."
  },
  {
    "id": "agile_1866",
    "question": "Why is it important for a Scrum Master to shield the Development Team from external distractions?",
    "options": [
      { "id": "option_1", "text": "To allow the team to focus on delivering value without interruptions", "isCorrect": true },
      { "id": "option_2", "text": "To prevent the team from interacting with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the Product Owner makes all decisions alone", "isCorrect": false },
      { "id": "option_4", "text": "To limit the amount of work assigned to the team", "isCorrect": false }
    ],
    "hint": "Uninterrupted focus is essential for high-quality software delivery.",
    "answerDescription": "A Scrum Master helps maintain team productivity by minimizing external disruptions."
  },
  {
    "id": "agile_1867",
    "question": "What is one way a Scrum Master helps improve the effectiveness of Daily Standups?",
    "options": [
      { "id": "option_1", "text": "By ensuring the team remains focused on progress and blockers", "isCorrect": true },
      { "id": "option_2", "text": "By using Standups for detailed planning discussions", "isCorrect": false },
      { "id": "option_3", "text": "By allowing stakeholders to lead the discussion", "isCorrect": false },
      { "id": "option_4", "text": "By making Standups optional for the team", "isCorrect": false }
    ],
    "hint": "Standups should be short and focused on key updates.",
    "answerDescription": "A Scrum Master ensures Standups remain effective by keeping discussions relevant and time-bound."
  },
  {
    "id": "agile_1868",
    "question": "What is the role of a Scrum Master in relation to the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Defining the Product Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Helping the Product Owner understand Agile practices", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Overruling the Product Ownerâ€™s decisions", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports all roles in Agile adoption.",
    "answerDescription": "The Scrum Master helps the Product Owner by guiding them on Agile best practices and ensuring effective collaboration."
  },
  {
    "id": "agile_1869",
    "question": "How can a Scrum Master help a team that is struggling with estimation?",
    "options": [
      { "id": "option_1", "text": "By estimating tasks for the team", "isCorrect": false },
      { "id": "option_2", "text": "By coaching the team on techniques like Planning Poker", "isCorrect": true },
      { "id": "option_3", "text": "By setting time limits for estimates", "isCorrect": false },
      { "id": "option_4", "text": "By removing the estimation process entirely", "isCorrect": false }
    ],
    "hint": "Estimation techniques help teams assess workload effectively.",
    "answerDescription": "A Scrum Master should coach teams on estimation practices, such as Planning Poker, to improve accuracy and confidence."
  },
  {
    "id": "agile_1870",
    "question": "What is one key way a Scrum Master supports team empowerment?",
    "options": [
      { "id": "option_1", "text": "By approving all decisions before implementation", "isCorrect": false },
      { "id": "option_2", "text": "By fostering an environment of trust and autonomy", "isCorrect": true },
      { "id": "option_3", "text": "By assigning work based on seniority", "isCorrect": false },
      { "id": "option_4", "text": "By dictating team priorities", "isCorrect": false }
    ],
    "hint": "Empowerment requires trust and self-organization.",
    "answerDescription": "A Scrum Master helps teams become self-sufficient by promoting trust, autonomy, and ownership of their work."
  },
  {
    "id": "agile_1871",
    "question": "How can a Scrum Master encourage continuous improvement in a team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict rules for development", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating meaningful Sprint Retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "By assigning extra work to underperforming members", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring no process changes over time", "isCorrect": false }
    ],
    "hint": "Retrospectives provide valuable insights for continuous improvement.",
    "answerDescription": "Scrum Masters use Retrospectives to identify areas for improvement and foster a culture of learning and adaptation."
  },
  {
    "id": "agile_1872",
    "question": "Why is servant leadership an important quality for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Because the Scrum Master should control all team decisions", "isCorrect": false },
      { "id": "option_2", "text": "Because a Scrum Master prioritizes the needs of the team", "isCorrect": true },
      { "id": "option_3", "text": "Because servant leaders act as traditional managers", "isCorrect": false },
      { "id": "option_4", "text": "Because the Scrum Master should be the most experienced team member", "isCorrect": false }
    ],
    "hint": "A Scrum Master leads by supporting rather than commanding.",
    "answerDescription": "Servant leadership helps Scrum Masters remove impediments, support team growth, and empower collaboration."
  },
  {
    "id": "agile_1873",
    "question": "What is a key reason for a Scrum Master to promote psychological safety within a team?",
    "options": [
      { "id": "option_1", "text": "To ensure team members do not challenge authority", "isCorrect": false },
      { "id": "option_2", "text": "To encourage open communication and innovation", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for Retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict adherence to processes", "isCorrect": false }
    ],
    "hint": "Psychological safety fosters creativity and problem-solving.",
    "answerDescription": "A psychologically safe environment allows team members to share ideas and concerns freely, leading to better collaboration."
  },
  {
    "id": "agile_1874",
    "question": "How should a Scrum Master handle external pressure to add work mid-Sprint?",
    "options": [
      { "id": "option_1", "text": "By immediately adding the new work to the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "By protecting the Sprint Goal and deferring new work to future Sprints", "isCorrect": true },
      { "id": "option_3", "text": "By forcing the team to work overtime to accommodate changes", "isCorrect": false },
      { "id": "option_4", "text": "By removing lower-priority tasks without consulting the team", "isCorrect": false }
    ],
    "hint": "Scrum promotes a stable Sprint scope.",
    "answerDescription": "A Scrum Master should shield the team from mid-Sprint changes and ensure work aligns with the Sprint Goal."
  },
  {
    "id": "agile_1875",
    "question": "What action should a Scrum Master take if team members frequently miss Standup meetings?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue if progress is still being made", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions on the importance and timing of Standups", "isCorrect": true },
      { "id": "option_3", "text": "Enforce penalties for missing Standups", "isCorrect": false },
      { "id": "option_4", "text": "Cancel Standups altogether", "isCorrect": false }
    ],
    "hint": "Engagement in Standups improves team communication.",
    "answerDescription": "A Scrum Master should ensure Standups are valuable and well-timed to encourage participation."
  },
  {
    "id": "agile_1876",
    "question": "Which scenario best demonstrates a Scrum Master fostering team ownership?",
    "options": [
      { "id": "option_1", "text": "Assigning specific tasks to individual members", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging the team to define their own Sprint commitments", "isCorrect": true },
      { "id": "option_3", "text": "Making final decisions on technical solutions", "isCorrect": false },
      { "id": "option_4", "text": "Approving every pull request personally", "isCorrect": false }
    ],
    "hint": "Team ownership leads to higher engagement and accountability.",
    "answerDescription": "By allowing the team to set their own commitments, a Scrum Master empowers them to take responsibility for delivery."
  },
  {
    "id": "agile_1877",
    "question": "What is a Scrum Masterâ€™s role in scaling Agile across multiple teams?",
    "options": [
      { "id": "option_1", "text": "Ensuring each team follows the same strict process", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating collaboration and alignment between teams", "isCorrect": true },
      { "id": "option_3", "text": "Acting as a project manager for all teams", "isCorrect": false },
      { "id": "option_4", "text": "Making backlog prioritization decisions across teams", "isCorrect": false }
    ],
    "hint": "Scrum Masters help coordinate teams while maintaining agility.",
    "answerDescription": "A Scrum Master supports scaled Agile by ensuring cross-team communication and collaboration remain effective."
  },

  {
    "id": "agile_1878",
    "question": "What is one of the key responsibilities of a Scrum Master during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Finalizing the Product Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Removing impediments that block progress", "isCorrect": true },
      { "id": "option_4", "text": "Managing the budget for the Sprint", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures the team can work smoothly without obstacles.",
    "answerDescription": "A Scrum Master helps remove blockers so the team can focus on delivering value during the Sprint."
  },
  {
    "id": "agile_1879",
    "question": "How does a Scrum Master support a Development Team in an Agile environment?",
    "options": [
      { "id": "option_1", "text": "By assigning work based on team member strengths", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict daily targets", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating self-organization and collaboration", "isCorrect": true },
      { "id": "option_4", "text": "By reviewing all code before deployment", "isCorrect": false }
    ],
    "hint": "Agile teams should be self-organizing and collaborative.",
    "answerDescription": "Scrum Masters help teams foster self-organization, allowing them to work effectively without micromanagement."
  },
  {
    "id": "agile_1880",
    "question": "What should a Scrum Master do when a team member continuously disrupts meetings?",
    "options": [
      { "id": "option_1", "text": "Ignore the behavior if the team is still productive", "isCorrect": false },
      { "id": "option_2", "text": "Remove the team member from meetings permanently", "isCorrect": false },
      { "id": "option_3", "text": "Have a private discussion to understand and resolve the issue", "isCorrect": true },
      { "id": "option_4", "text": "Report the team member to senior management", "isCorrect": false }
    ],
    "hint": "Addressing conflicts privately can lead to better team cohesion.",
    "answerDescription": "A Scrum Master should address disruptions by discussing concerns with the individual and guiding them toward better collaboration."
  },
  {
    "id": "agile_1881",
    "question": "Why is it important for a Scrum Master to ensure the team follows Agile principles?",
    "options": [
      { "id": "option_1", "text": "To increase the number of features delivered per Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To maintain strict documentation requirements", "isCorrect": false },
      { "id": "option_3", "text": "To promote flexibility, adaptability, and continuous improvement", "isCorrect": true },
      { "id": "option_4", "text": "To enforce a hierarchical structure in the team", "isCorrect": false }
    ],
    "hint": "Agile focuses on adaptability and iterative improvements.",
    "answerDescription": "By ensuring adherence to Agile principles, Scrum Masters help teams remain flexible, collaborative, and continuously improving."
  },
  {
    "id": "agile_1882",
    "question": "What is an effective way for a Scrum Master to handle team conflicts?",
    "options": [
      { "id": "option_1", "text": "By taking sides and supporting the more experienced team members", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding involvement and letting the team resolve conflicts independently", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating open discussions to resolve conflicts constructively", "isCorrect": true },
      { "id": "option_4", "text": "By reporting conflicts to upper management immediately", "isCorrect": false }
    ],
    "hint": "Healthy conflict resolution strengthens team collaboration.",
    "answerDescription": "A Scrum Master should encourage open and respectful discussions to address conflicts and maintain a productive work environment."
  },
  {
    "id": "agile_1883",
    "question": "Which of the following best describes the role of a Scrum Master in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Finalizing the tasks that will be included in the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Approving the Sprint Backlog before execution", "isCorrect": false },
      { "id": "option_3", "text": "Facilitating discussions to ensure a clear Sprint Goal is defined", "isCorrect": true },
      { "id": "option_4", "text": "Determining the team's capacity for the Sprint", "isCorrect": false }
    ],
    "hint": "Sprint Planning involves collaborative goal-setting.",
    "answerDescription": "A Scrum Master helps the team align on the Sprint Goal and ensures that discussions lead to a well-defined plan."
  },
  {
    "id": "agile_1884", 
    "question":"What is a crucial way a Scrum Master fosters a culture of innovation within a team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to traditional workflows", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging experimentation to avoid failure", "isCorrect": false },
      { "id": "option_3", "text": "By encouraging the team to take risks and experiment", "isCorrect": true },
      { "id": "option_4", "text": "By ensuring that only senior members make key decisions", "isCorrect": false }
    ],
    "hint": "Innovation requires a culture that supports experimentation.",
    "answerDescription": "Scrum Masters should create an environment where teams feel safe to innovate and explore new ideas."
  },
  {
    "id": "agile_1885",
    "question": "How can a Scrum Master ensure Sprint Reviews are valuable?",
    "options": [
      { "id": "option_1", "text": "By ensuring the team only presents completed work", "isCorrect": false },
      { "id": "option_2", "text": "By preventing stakeholders from providing feedback", "isCorrect": false },
      { "id": "option_3", "text": "By fostering open discussions between stakeholders and the team", "isCorrect": true },
      { "id": "option_4", "text": "By limiting reviews to internal team members only", "isCorrect": false }
    ],
    "hint": "Sprint Reviews should promote transparency and collaboration.",
    "answerDescription": "A Scrum Master should facilitate meaningful Sprint Reviews by encouraging stakeholder engagement and team discussions."
  },
  {
    "id": "agile_1886",
    "question": "Which approach should a Scrum Master take to improve team motivation?",
    "options": [
      { "id": "option_1", "text": "By setting rigid deadlines for every task", "isCorrect": false },
      { "id": "option_2", "text": "By monitoring individual performance closely", "isCorrect": false },
      { "id": "option_3", "text": "By recognizing achievements and fostering a collaborative culture", "isCorrect": true },
      { "id": "option_4", "text": "By pushing the team to work longer hours", "isCorrect": false }
    ],
    "hint": "Motivation improves when team members feel valued.",
    "answerDescription": "A Scrum Master should recognize efforts, encourage teamwork, and create a positive work environment to keep teams motivated."
  },
  {
    "id": "agile_1887",
    "question": "What is a key benefit of a Scrum Master facilitating cross-team collaboration?",
    "options": [
      { "id": "option_1", "text": "It ensures that all teams follow the same strict schedule", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for communication between teams", "isCorrect": false },
      { "id": "option_3", "text": "It promotes knowledge sharing and alignment", "isCorrect": true },
      { "id": "option_4", "text": "It allows the Scrum Master to make decisions for all teams", "isCorrect": false }
    ],
    "hint": "Collaboration between teams enhances efficiency and knowledge exchange.",
    "answerDescription": "Scrum Masters help teams align goals and share insights, leading to better coordination and innovation."
  },
  {
    "id": "agile_1888",
    "question": "What is the primary role of a Scrum Master in an Agile team?",
    "options": [
      { "id": "option_1", "text": "To define the project scope", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To act as a project manager", "isCorrect": false },
      { "id": "option_4", "text": "To facilitate the Scrum process and remove impediments", "isCorrect": true }
    ],
    "hint": "A Scrum Master focuses on enabling the team rather than managing it.",
    "answerDescription": "The Scrum Master ensures the team follows Agile principles and removes obstacles that hinder progress."
  },
  {
    "id": "agile_1889",
    "question": "How does a Scrum Master help improve team performance?",
    "options": [
      { "id": "option_1", "text": "By assigning work based on skill levels", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict daily deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By dictating technical solutions", "isCorrect": false },
      { "id": "option_4", "text": "By coaching the team in Agile best practices", "isCorrect": true }
    ],
    "hint": "The Scrum Master guides the team rather than controlling them.",
    "answerDescription": "A Scrum Master helps the team improve by providing coaching and ensuring Agile principles are followed."
  },
  {
    "id": "agile_1890",
    "question": "What should a Scrum Master do when a team is struggling to meet Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint deadline", "isCorrect": false },
      { "id": "option_2", "text": "Assign additional work to the team", "isCorrect": false },
      { "id": "option_3", "text": "Increase daily stand-up duration", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions to identify bottlenecks and solutions", "isCorrect": true }
    ],
    "hint": "Scrum Masters help teams identify and resolve obstacles.",
    "answerDescription": "Rather than adjusting deadlines, a Scrum Master should work with the team to identify issues and find ways to improve."
  },
  {
    "id": "agile_1891",
    "question": "What action should a Scrum Master take if a Product Owner frequently changes backlog priorities?",
    "options": [
      { "id": "option_1", "text": "Allow the changes without question", "isCorrect": false },
      { "id": "option_2", "text": "Enforce a strict priority list without changes", "isCorrect": false },
      { "id": "option_3", "text": "Escalate the issue to senior management immediately", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate communication between the team and the Product Owner", "isCorrect": true }
    ],
    "hint": "A Scrum Master's role includes fostering collaboration between roles.",
    "answerDescription": "A Scrum Master should ensure clear communication between the Product Owner and the team to manage changing priorities effectively."
  },
  {
    "id": "agile_1892",
    "question": "How should a Scrum Master handle a team member who is resistant to Agile practices?",
    "options": [
      { "id": "option_1", "text": "Force them to follow Agile processes", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the issue to avoid conflict", "isCorrect": false },
      { "id": "option_3", "text": "Replace the team member", "isCorrect": false },
      { "id": "option_4", "text": "Coach them on Agile principles and their benefits", "isCorrect": true }
    ],
    "hint": "Education and coaching are key to Agile adoption.",
    "answerDescription": "Rather than forcing compliance, a Scrum Master should help team members understand Agile principles and their value."
  },
  {
    "id": "agile_1893",
    "question": "What is a Scrum Masterâ€™s role in Daily Stand-up meetings?",
    "options": [
      { "id": "option_1", "text": "To provide individual performance reviews", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks for the day", "isCorrect": false },
      { "id": "option_3", "text": "To track the teamâ€™s efficiency", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the team stays focused and removes blockers", "isCorrect": true }
    ],
    "hint": "Stand-ups should be team-driven, not controlled by the Scrum Master.",
    "answerDescription": "A Scrum Master ensures that Stand-ups remain effective and helps remove obstacles affecting the teamâ€™s progress."
  },
  {
    "id": "agile_1894",
    "question": "Which behavior best demonstrates an effective Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Micromanaging the teamâ€™s work", "isCorrect": false },
      { "id": "option_2", "text": "Assigning work to team members", "isCorrect": false },
      { "id": "option_3", "text": "Directly making product decisions", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating team discussions and Agile adoption", "isCorrect": true }
    ],
    "hint": "A Scrum Master should empower the team rather than control it.",
    "answerDescription": "An effective Scrum Master acts as a facilitator, helping the team become self-organized and efficient."
  },
  {
    "id": "agile_1895",
    "question": "What should a Scrum Master do when the team consistently fails to deliver Sprint goals?",
    "options": [
      { "id": "option_1", "text": "Increase the teamâ€™s workload", "isCorrect": false },
      { "id": "option_2", "text": "Extend the Sprint duration", "isCorrect": false },
      { "id": "option_3", "text": "Reduce stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "Analyze the root cause and facilitate improvements", "isCorrect": true }
    ],
    "hint": "Scrum Masters should help teams continuously improve their processes.",
    "answerDescription": "Rather than imposing changes, a Scrum Master should work with the team to identify and address root causes of performance issues."
  },
  {
    "id": "agile_1896",
    "question": "How can a Scrum Master ensure that a Retrospective meeting is effective?",
    "options": [
      { "id": "option_1", "text": "By focusing only on team achievements", "isCorrect": false },
      { "id": "option_2", "text": "By letting management lead the discussion", "isCorrect": false },
      { "id": "option_3", "text": "By preventing team members from discussing failures", "isCorrect": false },
      { "id": "option_4", "text": "By fostering open and constructive discussions for improvement", "isCorrect": true }
    ],
    "hint": "Retrospectives should help the team grow and improve.",
    "answerDescription": "A Scrum Master ensures Retrospectives are productive by encouraging open discussion and focusing on continuous improvement."
  },
  {
    "id": "agile_1897",
    "question": "Why Scrum Master should have servant leadership as an important trait ?",
    "options": [
      { "id": "option_1", "text": "Because the Scrum Master should make all team decisions", "isCorrect": false },
      { "id": "option_2", "text": "Because it helps enforce Agile rules strictly", "isCorrect": false },
      { "id": "option_3", "text": "Because it ensures the team works faster", "isCorrect": false },
      { "id": "option_4", "text": "Because it focuses on empowering and supporting the team", "isCorrect": true }
    ],
    "hint": "A good Scrum Master enables the team rather than controlling it.",
    "answerDescription": "Servant leadership means the Scrum Master supports and empowers the team rather than managing them in a traditional sense."
  },
  {
    "id": "agile_1898",
    "question": "What is a key responsibility of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Facilitating Scrum events and removing impediments", "isCorrect": true },
      { "id": "option_2", "text": "Assigning work to developers", "isCorrect": false },
      { "id": "option_3", "text": "Managing the team's workload", "isCorrect": false },
      { "id": "option_4", "text": "Approving project budgets", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports the team rather than managing tasks.",
    "answerDescription": "A Scrum Master ensures that Scrum principles are followed and helps the team overcome challenges."
  },
  {
    "id": "agile_1899",
    "question": "What does a Scrum Master do to support a self-organizing team?",
    "options": [
      { "id": "option_1", "text": "Encourages team autonomy and collaboration", "isCorrect": true },
      { "id": "option_2", "text": "Defines each team memberâ€™s tasks", "isCorrect": false },
      { "id": "option_3", "text": "Reports individual performance to management", "isCorrect": false },
      { "id": "option_4", "text": "Controls the backlog prioritization", "isCorrect": false }
    ],
    "hint": "Self-organizing teams rely on guidance, not control.",
    "answerDescription": "A Scrum Master fosters an environment where teams can make decisions and collaborate effectively."
  },
  {
    "id": "agile_1900",
    "question": "Why is removing impediments important in Scrum?",
    "options": [
      { "id": "option_1", "text": "It allows the team to maintain steady progress", "isCorrect": true },
      { "id": "option_2", "text": "It ensures that the Product Owner has full control", "isCorrect": false },
      { "id": "option_3", "text": "It replaces the need for Sprint Reviews", "isCorrect": false },
      { "id": "option_4", "text": "It helps track individual contributions", "isCorrect": false }
    ],
    "hint": "Scrum aims for continuous progress and improvement.",
    "answerDescription": "Removing obstacles helps the team work efficiently and deliver consistent value."
  },
  {
    "id": "agile_1901",
    "question": "How does a Scrum Master contribute to continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By fostering a culture of feedback and learning", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By increasing the number of Sprints", "isCorrect": false },
      { "id": "option_4", "text": "By reducing team discussions", "isCorrect": false }
    ],
    "hint": "Scrum is built on a foundation of continuous improvement.",
    "answerDescription": "A Scrum Master helps teams reflect on their work and improve through Retrospectives and feedback."
  },
  {
    "id": "agile_1902",
    "question": "What role does a Scrum Master play in conflict resolution?",
    "options": [
      { "id": "option_1", "text": "Acts as a neutral facilitator to encourage open discussions", "isCorrect": true },
      { "id": "option_2", "text": "Enforces the majority opinion", "isCorrect": false },
      { "id": "option_3", "text": "Escalates all conflicts to management", "isCorrect": false },
      { "id": "option_4", "text": "Avoids involvement in team conflicts", "isCorrect": false }
    ],
    "hint": "Scrum Masters should help teams resolve conflicts constructively.",
    "answerDescription": "By facilitating communication, a Scrum Master ensures that conflicts lead to positive outcomes and team growth."
  },
  {
    "id": "agile_1903",
    "question": "Why should a Scrum Master encourage transparency within a team?",
    "options": [
      { "id": "option_1", "text": "To build trust and improve collaboration", "isCorrect": true },
      { "id": "option_2", "text": "To monitor individual performance", "isCorrect": false },
      { "id": "option_3", "text": "To allow management to micromanage tasks", "isCorrect": false },
      { "id": "option_4", "text": "To strictly enforce deadlines", "isCorrect": false }
    ],
    "hint": "Transparency is key to effective teamwork and problem-solving.",
    "answerDescription": "Transparency enables teams to address challenges openly and improve their workflows."
  },
  {
    "id": "agile_1904",
    "question": "How can a Scrum Master help a new Agile team adapt to Scrum?",
    "options": [
      { "id": "option_1", "text": "By coaching them on Agile principles and best practices", "isCorrect": true },
      { "id": "option_2", "text": "By assigning tasks to team members", "isCorrect": false },
      { "id": "option_3", "text": "By setting strict rules for team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding any intervention", "isCorrect": false }
    ],
    "hint": "Education is a core responsibility of a Scrum Master.",
    "answerDescription": "A Scrum Master ensures teams understand Agile principles and gradually adapt to new ways of working."
  },
  {
    "id": "agile_1905",
    "question": "Why is the servant leadership approach effective for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "It focuses on empowering the team rather than controlling them", "isCorrect": true },
      { "id": "option_2", "text": "It allows the Scrum Master to dictate solutions", "isCorrect": false },
      { "id": "option_3", "text": "It minimizes team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "It prioritizes managerial oversight over collaboration", "isCorrect": false }
    ],
    "hint": "Scrum Masters should guide rather than dictate.",
    "answerDescription": "Servant leadership helps teams become self-sufficient and fosters collaboration."
  },
  {
    "id": "agile_1906",
    "question": "What is a primary goal of a Sprint Retrospective?",
    "options": [
      { "id": "option_1", "text": "To identify improvements for the next Sprint", "isCorrect": true },
      { "id": "option_2", "text": "To finalize the backlog items for the next Sprint", "isCorrect": false },
      { "id": "option_3", "text": "To assess individual team performance", "isCorrect": false },
      { "id": "option_4", "text": "To review the Product Ownerâ€™s decisions", "isCorrect": false }
    ],
    "hint": "Retrospectives focus on learning and improvement.",
    "answerDescription": "A Retrospective helps the team reflect on past work and improve future Sprints."
  },
  {
    "id": "agile_1907",
    "question": "How can a Scrum Master help a team struggling with excessive work-in-progress (WIP)?",
    "options": [
      { "id": "option_1", "text": "Encourages the team to limit WIP and focus on completing tasks", "isCorrect": true },
      { "id": "option_2", "text": "Increases the number of team members", "isCorrect": false },
      { "id": "option_3", "text": "Extends the Sprint duration", "isCorrect": false },
      { "id": "option_4", "text": "Allows more backlog items into the Sprint", "isCorrect": false }
    ],
    "hint": "Limiting WIP helps teams maintain focus and deliver value.",
    "answerDescription": "A Scrum Master should help teams reduce work-in-progress to improve efficiency and avoid bottlenecks."
  },
  {
    "id": "agile_1908",
    "question": "What is the primary roles of a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Managing the project budget", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring Scrum practices are followed", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Defining product requirements", "isCorrect": false }
    ],
    "hint": "A Scrum Master facilitates, rather than manages, the process.",
    "answerDescription": "The Scrum Master ensures the team follows Agile principles and Scrum processes effectively."
  },
  {
    "id": "agile_1909",
    "question": "Which activity is a Scrum Master responsible for?",
    "options": [
      { "id": "option_1", "text": "Approving feature releases", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating Sprint Retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "Setting project deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work to team members", "isCorrect": false }
    ],
    "hint": "The Scrum Master plays a key role in team reflections and improvements.",
    "answerDescription": "A Scrum Master ensures that Sprint Retrospectives are conducted effectively for continuous improvement."
  },
  {
    "id": "agile_1910",
    "question": "How does a Scrum Master assist the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By defining product vision", "isCorrect": false },
      { "id": "option_2", "text": "By helping manage the Product Backlog", "isCorrect": true },
      { "id": "option_3", "text": "By controlling team performance metrics", "isCorrect": false },
      { "id": "option_4", "text": "By setting team salaries", "isCorrect": false }
    ],
    "hint": "A Scrum Master supports the Product Owner but doesn't control the backlog.",
    "answerDescription": "The Scrum Master assists the Product Owner by ensuring that the backlog is well-structured and understood."
  },
  {
    "id": "agile_1911",
    "question": "What is an effective way for a Scrum Master to remove impediments?",
    "options": [
      { "id": "option_1", "text": "By escalating all issues to upper management", "isCorrect": false },
      { "id": "option_2", "text": "By working with the team to find solutions", "isCorrect": true },
      { "id": "option_3", "text": "By ignoring minor issues to avoid disruptions", "isCorrect": false },
      { "id": "option_4", "text": "By setting strict work processes", "isCorrect": false }
    ],
    "hint": "A Scrum Master facilitates problem-solving rather than imposing solutions.",
    "answerDescription": "Helping the team find solutions collaboratively fosters self-management and continuous improvement."
  },
  {
    "id": "agile_1912",
    "question": "Why should a Scrum Master promote self-organization?",
    "options": [
      { "id": "option_1", "text": "To eliminate the need for management", "isCorrect": false },
      { "id": "option_2", "text": "To improve team autonomy and ownership", "isCorrect": true },
      { "id": "option_3", "text": "To allow developers to work without accountability", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for planning", "isCorrect": false }
    ],
    "hint": "Scrum values team autonomy and self-management.",
    "answerDescription": "Self-organization helps teams take responsibility and improve their workflow without external control."
  },
  {
    "id": "agile_1913",
    "question": "What should a Scrum Master do if a team consistently fails to meet Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint duration", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions to identify root causes", "isCorrect": true },
      { "id": "option_3", "text": "Assign extra resources to the team", "isCorrect": false },
      { "id": "option_4", "text": "Reduce the number of backlog items", "isCorrect": false }
    ],
    "hint": "Understanding the cause of failure is the first step in improvement.",
    "answerDescription": "By facilitating discussions, a Scrum Master helps teams identify challenges and adjust their approach."
  },
  {
    "id": "agile_1914",
    "question": "How can a Scrum Master encourage a team to embrace Agile values?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict adherence to Scrum rules", "isCorrect": false },
      { "id": "option_2", "text": "By demonstrating Agile principles through facilitation", "isCorrect": true },
      { "id": "option_3", "text": "By requiring certification for all team members", "isCorrect": false },
      { "id": "option_4", "text": "By setting rigid guidelines for daily work", "isCorrect": false }
    ],
    "hint": "Agile is about mindset and adaptability rather than strict rules.",
    "answerDescription": "A Scrum Master leads by example, reinforcing Agile principles through coaching and facilitation."
  },
  {
    "id": "agile_1915",
    "question": "Why is team collaboration crucial in Scrum?",
    "options": [
      { "id": "option_1", "text": "To allow the Scrum Master to monitor individual work", "isCorrect": false },
      { "id": "option_2", "text": "To enhance communication and problem-solving", "isCorrect": true },
      { "id": "option_3", "text": "To speed up decision-making by reducing discussions", "isCorrect": false },
      { "id": "option_4", "text": "To create a more competitive work environment", "isCorrect": false }
    ],
    "hint": "Scrum relies on teamwork and open communication.",
    "answerDescription": "Effective collaboration allows teams to align goals, share knowledge, and improve productivity."
  },
  {
    "id": "agile_1916",
    "question": "How does a Scrum Master ensure effective Daily Standups?",
    "options": [
      { "id": "option_1", "text": "By making sure all team members provide status updates", "isCorrect": false },
      { "id": "option_2", "text": "By keeping discussions focused on progress and obstacles", "isCorrect": true },
      { "id": "option_3", "text": "By assigning speaking turns to each team member", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring meetings last at least 30 minutes", "isCorrect": false }
    ],
    "hint": "Standups should be short, focused, and valuable.",
    "answerDescription": "A Scrum Master ensures standups stay focused on what was done, what's next, and any obstacles."
  },
  {
    "id": "agile_1917",
    "question": "What is a common challenge for a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "Managing project budgets", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging cross-functional collaboration", "isCorrect": true },
      { "id": "option_3", "text": "Assigning work to individual developers", "isCorrect": false },
      { "id": "option_4", "text": "Controlling the prioritization of backlog items", "isCorrect": false }
    ],
    "hint": "Scrum Masters must bridge gaps between different roles and skills.",
    "answerDescription": "Fostering collaboration between different roles and functions is a key challenge for a Scrum Master."
  },
  {
    "id": "agile_1918",
    "question": "What is the primary purpose of a Scrum Master in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To act as the project manager", "isCorrect": false },
      { "id": "option_3", "text": "To facilitate the Scrum process", "isCorrect": true },
      { "id": "option_4", "text": "To create the product backlog", "isCorrect": false }
    ],
    "hint": "The Scrum Master ensures the team follows Agile principles.",
    "answerDescription": "A Scrum Master acts as a servant leader, helping the team follow Scrum processes effectively."
  },
  {
    "id": "agile_1919",
    "question": "Which key responsibility does a Scrum Master have?",
    "options": [
      { "id": "option_1", "text": "Approving sprint deliverables", "isCorrect": false },
      { "id": "option_2", "text": "Managing the product roadmap", "isCorrect": false },
      { "id": "option_3", "text": "Removing team impediments", "isCorrect": true },
      { "id": "option_4", "text": "Deciding the sprint goals", "isCorrect": false }
    ],
    "hint": "A Scrum Master's job is to support the team and remove obstacles.",
    "answerDescription": "A Scrum Master helps the team by identifying and eliminating blockers that hinder progress."
  },
  {
    "id": "agile_1920",
    "question": "What should a Scrum Master do if a team member frequently interrupts Daily Standups?",
    "options": [
      { "id": "option_1", "text": "Ignore the interruptions to maintain pace", "isCorrect": false },
      { "id": "option_2", "text": "Let the Product Owner handle the situation", "isCorrect": false },
      { "id": "option_3", "text": "Coach the team on standup etiquette", "isCorrect": true },
      { "id": "option_4", "text": "Stop the team from asking questions", "isCorrect": false }
    ],
    "hint": "The Scrum Master is responsible for fostering a productive standup.",
    "answerDescription": "By coaching the team on standup best practices, the Scrum Master ensures efficient communication."
  },
  {
    "id": "agile_1921",
    "question": "How can a Scrum Master support continuous improvement in the team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict rules on work methods", "isCorrect": false },
      { "id": "option_2", "text": "By increasing sprint length for more work", "isCorrect": false },
      { "id": "option_3", "text": "By facilitating Sprint Retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "By limiting discussions during sprints", "isCorrect": false }
    ],
    "hint": "A Scrum Master encourages team reflections to enhance performance.",
    "answerDescription": "Facilitating retrospectives helps teams identify and implement continuous improvements."
  },
  {
    "id": "agile_1922",
    "question": "Which action should a Scrum Master take when team conflicts arise?",
    "options": [
      { "id": "option_1", "text": "Assign work to reduce disagreements", "isCorrect": false },
      { "id": "option_2", "text": "Report conflicts directly to management", "isCorrect": false },
      { "id": "option_3", "text": "Encourage open discussions and resolution", "isCorrect": true },
      { "id": "option_4", "text": "Replace team members causing issues", "isCorrect": false }
    ],
    "hint": "The Scrum Master fosters collaboration and communication.",
    "answerDescription": "By promoting healthy discussions, the Scrum Master ensures conflicts are resolved constructively."
  },
  {
    "id": "agile_1923",
    "question": "How can a Scrum Master help the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By defining the product vision", "isCorrect": false },
      { "id": "option_2", "text": "By managing stakeholders directly", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring backlog refinement sessions occur", "isCorrect": true },
      { "id": "option_4", "text": "By approving sprint scope", "isCorrect": false }
    ],
    "hint": "The Scrum Master supports but does not manage the backlog.",
    "answerDescription": "The Scrum Master ensures that backlog refinement sessions happen regularly for clarity."
  },
  {
    "id": "agile_1924",
    "question": "What is the best way for a Scrum Master to track team performance?",
    "options": [
      { "id": "option_1", "text": "By monitoring individual work hours", "isCorrect": false },
      { "id": "option_2", "text": "By assigning KPIs to each member", "isCorrect": false },
      { "id": "option_3", "text": "By reviewing team velocity trends", "isCorrect": true },
      { "id": "option_4", "text": "By implementing performance ratings", "isCorrect": false }
    ],
    "hint": "Scrum focuses on team progress rather than individual performance.",
    "answerDescription": "Tracking velocity trends provides insights into how the team is improving over time."
  },
  {
    "id": "agile_1925",
    "question": "How should a Scrum Master handle a Product Owner overloading the team?",
    "options": [
      { "id": "option_1", "text": "Instruct the team to work overtime", "isCorrect": false },
      { "id": "option_2", "text": "Allow the team to pick tasks freely", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate discussions about workload balance", "isCorrect": true },
      { "id": "option_4", "text": "Ask management to intervene", "isCorrect": false }
    ],
    "hint": "A Scrum Master ensures a sustainable pace for the team.",
    "answerDescription": "Facilitating discussions helps align expectations and maintain a balanced workload."
  },
  {
    "id": "agile_1926",
    "question": "How should a Scrum Master handle a team resistant to Agile practices?",
    "options": [
      { "id": "option_1", "text": "Force them to follow Agile frameworks strictly", "isCorrect": false },
      { "id": "option_2", "text": "Report their resistance to senior management", "isCorrect": false },
      { "id": "option_3", "text": "Let them work in their preferred way", "isCorrect": false },
      { "id": "option_4", "text": "Coach them on Agile values and benefits", "isCorrect": true }
    ],
    "hint": "Adoption of Agile requires understanding and support.",
    "answerDescription": "By educating the team on Agile principles, the Scrum Master fosters acceptance and gradual adoption."
  },
  {
    "id": "agile_1927",
    "question": "What should a Scrum Master do when a stakeholder tries to add work mid-Sprint?",
    "options": [
      { "id": "option_1", "text": "Accept the change and inform the team", "isCorrect": false },
      { "id": "option_2", "text": "Allow only high-priority requests", "isCorrect": false },
      { "id": "option_3", "text": "Protect the Sprint scope and discuss in backlog refinement", "isCorrect": true },
      { "id": "option_4", "text": "Escalate to senior management", "isCorrect": false }
    ],
    "hint": "A Scrum Master ensures the team stays focused during a Sprint.",
    "answerDescription": "Sprint work should remain stable; new requests should be considered for the next backlog refinement."
  },
  {
    "id": "agile_1928",
    "question": "What is the key focus of a Scrum Master when facilitating a Sprint Planning meeting?",
    "options": [
      { "id": "option_1", "text": "Setting deadlines for each task", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the Product Owner assigns tasks", "isCorrect": false },
      { "id": "option_3", "text": "Directing the team on how to complete work", "isCorrect": false },
      { "id": "option_4", "text": "Helping the team understand and commit to the Sprint Goal", "isCorrect": true }
    ],
    "hint": "Sprint Planning ensures alignment on goals and deliverables.",
    "answerDescription": "A Scrum Master facilitates Sprint Planning by ensuring the team understands the Sprint Goal and selects work collaboratively."
  },
  {
    "id": "agile_1929",
    "question": "Which approach should a Scrum Master take to resolve an impediment affecting the development team?",
    "options": [
      { "id": "option_1", "text": "Direct the team to find their own solutions", "isCorrect": false },
      { "id": "option_2", "text": "Ignore minor impediments to keep the sprint moving", "isCorrect": false },
      { "id": "option_3", "text": "Let management decide on a solution", "isCorrect": false },
      { "id": "option_4", "text": "Actively work to remove blockers for the team", "isCorrect": true }
    ],
    "hint": "A Scrum Master is responsible for eliminating obstacles.",
    "answerDescription": "By removing impediments, a Scrum Master ensures the team remains productive and focused."
  },
  {
    "id": "agile_1930",
    "question": "How does a Scrum Master help create a high-performing team?",
    "options": [
      { "id": "option_1", "text": "By assigning individual tasks", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict work guidelines", "isCorrect": false },
      { "id": "option_3", "text": "By acting as the final decision-maker", "isCorrect": false },
      { "id": "option_4", "text": "By fostering collaboration and continuous improvement", "isCorrect": true }
    ],
    "hint": "A Scrum Master enables the team rather than directing it.",
    "answerDescription": "Encouraging teamwork and self-improvement leads to a high-performing Agile team."
  },
  {
    "id": "agile_1931",
    "question": "What should a Scrum Master do if a team member struggles with a task during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Assign the task to another team member", "isCorrect": false },
      { "id": "option_2", "text": "Ask the Product Owner to intervene", "isCorrect": false },
      { "id": "option_3", "text": "Extend the Sprint deadline", "isCorrect": false },
      { "id": "option_4", "text": "Encourage team collaboration to resolve the challenge", "isCorrect": true }
    ],
    "hint": "Scrum promotes team collaboration and shared responsibility.",
    "answerDescription": "Encouraging the team to work together helps resolve challenges without disrupting Sprint progress."
  },
  {
    "id": "agile_1932",
    "question": "Why should a Scrum Master encourage self-organization in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "To eliminate the need for a Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "To increase management oversight", "isCorrect": false },
      { "id": "option_3", "text": "To ensure tasks are assigned fairly", "isCorrect": false },
      { "id": "option_4", "text": "To empower the team to make decisions and take ownership", "isCorrect": true }
    ],
    "hint": "Agile teams should have autonomy in decision-making.",
    "answerDescription": "A self-organizing team is more engaged, productive, and adaptable to change."
  },
  {
    "id": "agile_1933",
    "question": "How can a Scrum Master measure team progress effectively?",
    "options": [
      { "id": "option_1", "text": "By tracking daily working hours", "isCorrect": false },
      { "id": "option_2", "text": "By comparing individual performance", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring each sprint has an equal number of tasks", "isCorrect": false },
      { "id": "option_4", "text": "By monitoring sprint burndown charts and velocity", "isCorrect": true }
    ],
    "hint": "Scrum teams use visual metrics to track progress.",
    "answerDescription": "Burndown charts and velocity help teams assess their efficiency over multiple sprints."
  },
  {
    "id": "agile_1934",
    "question": "What role does a Scrum Master play in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "Approving the final product", "isCorrect": false },
      { "id": "option_2", "text": "Deciding which features should be presented", "isCorrect": false },
      { "id": "option_3", "text": "Setting the agenda for the meeting", "isCorrect": false },
      { "id": "option_4", "text": "Facilitating discussions between the team and stakeholders", "isCorrect": true }
    ],
    "hint": "Sprint Reviews encourage collaboration and feedback.",
    "answerDescription": "The Scrum Master ensures that the Sprint Review is productive and fosters dialogue between the team and stakeholders."
  },
  {
    "id": "agile_1935",
    "question": "Which of the following is a way a Scrum Master fosters transparency in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "By keeping detailed performance records", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring all team discussions are documented", "isCorrect": false },
      { "id": "option_3", "text": "By keeping the Product Owner out of team discussions", "isCorrect": false },
      { "id": "option_4", "text": "By making Sprint progress visible to everyone", "isCorrect": true }
    ],
    "hint": "Transparency is a core principle in Scrum.",
    "answerDescription": "Ensuring visibility of sprint progress through tools like task boards promotes openness and accountability."
  },
  {
    "id": "agile_1936",
    "question": "What should a Scrum Master do if a team consistently fails to meet Sprint commitments?",
    "options": [
      { "id": "option_1", "text": "Increase the sprint duration", "isCorrect": false },
      { "id": "option_2", "text": "Replace underperforming team members", "isCorrect": false },
      { "id": "option_3", "text": "Reduce the number of sprint meetings", "isCorrect": false },
      { "id": "option_4", "text": "Help the team analyze root causes and improve planning", "isCorrect": true }
    ],
    "hint": "The Scrum Master supports continuous learning and improvement.",
    "answerDescription": "By helping the team reflect and adjust, the Scrum Master enables better sprint planning and execution."
  },
  {
    "id": "agile_1937",
    "question": "What is the best way for a Scrum Master to promote Agile values in an organization?",
    "options": [
      { "id": "option_1", "text": "Leading by example and coaching teams on Agile principles", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing Agile processes strictly", "isCorrect": false },
      { "id": "option_3", "text": "Focusing only on Scrum ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding discussions about Agile transformations", "isCorrect": false }
    ],
    "hint": "Agile adoption requires guidance and support.",
    "answerDescription": "By embodying Agile values and coaching teams, a Scrum Master can drive positive change."
  },
  {
    "id": "agile_1938",
    "question": "Why should a Scrum Master promote cross-functional collaboration?",
    "options": [
      { "id": "option_1", "text": "To increase competition between team members", "isCorrect": false },
      { "id": "option_2", "text": "To ensure diverse skills contribute to better solutions", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the number of specialists on the team", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict roles within the team", "isCorrect": false }
    ],
    "hint": "Agile teams benefit from diverse expertise.",
    "answerDescription": "Encouraging cross-functional teamwork enhances innovation and problem-solving."
  },
  {
    "id": "agile_1939",
    "question": "What is an effective way for a Scrum Master to measure team success?",
    "options": [
      { "id": "option_1", "text": "Tracking individual performance ratings", "isCorrect": false },
      { "id": "option_2", "text": "Monitoring team collaboration and continuous improvement", "isCorrect": true },
      { "id": "option_3", "text": "Ensuring all tasks are completed ahead of schedule", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on velocity metrics", "isCorrect": false }
    ],
    "hint": "Success in Agile is about teamwork and improvement.",
    "answerDescription": "A Scrum Master evaluates success by fostering collaboration and team growth."
  },
  {
    "id": "agile_1940",
    "question": "What is an important skill for a Scrum Master when resolving team conflicts?",
    "options": [
      { "id": "option_1", "text": "Facilitation and active listening", "isCorrect": true },
      { "id": "option_2", "text": "Giving direct orders", "isCorrect": false },
      { "id": "option_3", "text": "Escalating issues to management immediately", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding involvement in team discussions", "isCorrect": false }
    ],
    "hint": "A Scrum Master helps teams collaborate effectively.",
    "answerDescription": "Facilitation and active listening help resolve conflicts and foster a positive team environment."
  },
  {
    "id": "agile_1941",
    "question": "Why is it important for a Scrum Master to foster transparency within a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "To ensure all team members are aligned and accountable", "isCorrect": true },
      { "id": "option_2", "text": "To allow managers to track employee performance", "isCorrect": false },
      { "id": "option_3", "text": "To create a strict hierarchy within the team", "isCorrect": false },
      { "id": "option_4", "text": "To make work processes complex and detailed", "isCorrect": false }
    ],
    "hint": "Transparency leads to better decision-making.",
    "answerDescription": "By fostering transparency, the Scrum Master helps the team make informed decisions and collaborate effectively."
  },
  {
    "id": "agile_1942",
    "question": "What should a Scrum Master do if a team member is consistently struggling with their workload?",
    "options": [
      { "id": "option_1", "text": "Encourage open communication and team collaboration", "isCorrect": true },
      { "id": "option_2", "text": "Assign their tasks to another team member", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the issue and wait for improvement", "isCorrect": false },
      { "id": "option_4", "text": "Remove them from the team", "isCorrect": false }
    ],
    "hint": "Scrum promotes a supportive team culture.",
    "answerDescription": "Encouraging team support and open discussions helps address workload challenges effectively."
  },
  {
    "id": "agile_1943",
    "question": "How should a Scrum Master respond when a stakeholder demands additional features during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Explain that changes must go through backlog refinement", "isCorrect": true },
      { "id": "option_2", "text": "Immediately add the features to the current Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Instruct the team to accommodate the request without delay", "isCorrect": false },
      { "id": "option_4", "text": "Extend the Sprint deadline to include the new features", "isCorrect": false }
    ],
    "hint": "Scrum follows a structured change management approach.",
    "answerDescription": "Changes should be discussed in backlog refinement and considered for future sprints, not mid-sprint."
  },
  {
    "id": "agile_1944",
    "question": "What is a common challenge for Scrum Masters when managing cross-functional teams?",
    "options": [
      { "id": "option_1", "text": "Balancing different skill sets and communication styles", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing rigid work structures", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring only technical members contribute", "isCorrect": false },
      { "id": "option_4", "text": "Preventing collaboration between different disciplines", "isCorrect": false }
    ],
    "hint": "Cross-functional teams require adaptability and coordination.",
    "answerDescription": "A Scrum Master must ensure collaboration across different skill sets for effective teamwork."
  },
  {
    "id": "agile_1945",
    "question": "Which action by a Scrum Master best supports continuous improvement in a team?",
    "options": [
      { "id": "option_1", "text": "Facilitating regular Sprint Retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "Enforcing strict work processes", "isCorrect": false },
      { "id": "option_3", "text": "Reducing the number of meetings", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding feedback discussions", "isCorrect": false }
    ],
    "hint": "Scrum encourages learning and adaptation.",
    "answerDescription": "Sprint Retrospectives help teams reflect on their processes and continuously improve."
  },
  {
    "id": "agile_1946",
    "question": "How should a Scrum Master handle a Product Owner who frequently changes priorities during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Coach them on the importance of Sprint stability", "isCorrect": true },
      { "id": "option_2", "text": "Allow the changes to be implemented immediately", "isCorrect": false },
      { "id": "option_3", "text": "Ignore their requests until the Sprint ends", "isCorrect": false },
      { "id": "option_4", "text": "Cancel the Sprint and restart planning", "isCorrect": false }
    ],
    "hint": "A stable Sprint is key to team productivity.",
    "answerDescription": "A Scrum Master should educate the Product Owner on maintaining focus during the Sprint."
  },
  {
    "id": "agile_1947",
    "question": "Which Scrum event is crucial for team synchronization and transparency?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event happens daily and keeps teams aligned.",
    "answerDescription": "The Daily Scrum ensures team synchronization and quick identification of obstacles."
  },
  {
    "id": "agile_1948",
    "question": "What is the role of a Scrum Master in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Facilitating the discussion to help the team define the Sprint Goal", "isCorrect": true },
      { "id": "option_3", "text": "Deciding the Sprint Backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Approving the final Sprint plan", "isCorrect": false }
    ],
    "hint": "Scrum Masters support the team rather than direct them.",
    "answerDescription": "The Scrum Master facilitates discussions to help the team set clear Sprint goals."
  },
  {
    "id": "agile_1949",
    "question": "What should a Scrum Master do when a team consistently misses Sprint Goals?",
    "options": [
      { "id": "option_1", "text": "Punish the team for underperformance", "isCorrect": false },
      { "id": "option_2", "text": "Analyze and address impediments affecting the team's progress", "isCorrect": true },
      { "id": "option_3", "text": "Extend the Sprint to accommodate unfinished work", "isCorrect": false },
      { "id": "option_4", "text": "Replace team members who fail to meet expectations", "isCorrect": false }
    ],
    "hint": "A Scrum Master removes obstacles for the team.",
    "answerDescription": "By identifying and resolving blockers, the Scrum Master helps the team achieve Sprint goals."
  },
  {
    "id": "agile_1950",
    "question": "Which of the following best describes the Scrum Master's role in Daily Stand-ups?",
    "options": [
      { "id": "option_1", "text": "Leading the meeting and assigning tasks", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the team follows the stand-up format and stays focused", "isCorrect": true },
      { "id": "option_3", "text": "Providing solutions to every issue raised", "isCorrect": false },
      { "id": "option_4", "text": "Deciding which tasks should be prioritized", "isCorrect": false }
    ],
    "hint": "The Scrum Master facilitates but does not control stand-ups.",
    "answerDescription": "A Scrum Master ensures the Daily Stand-up stays effective by keeping discussions concise and relevant."
  },
  {
    "id": "agile_1951",
    "question": "How can a Scrum Master help prevent burnout in a Scrum Team?",
    "options": [
      { "id": "option_1", "text": "Encouraging team members to work overtime", "isCorrect": false },
      { "id": "option_2", "text": "Promoting a sustainable work pace and work-life balance", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding discussions about workload stress", "isCorrect": false },
      { "id": "option_4", "text": "Reducing the number of team meetings", "isCorrect": false }
    ],
    "hint": "Sustainable work practices improve long-term productivity.",
    "answerDescription": "A Scrum Master helps maintain a sustainable pace to prevent burnout and keep the team productive."
  },
  {
    "id": "agile_1952",
    "question": "What action should a Scrum Master take if team members frequently skip Retrospectives?",
    "options": [
      { "id": "option_1", "text": "Cancel Retrospectives since they are not mandatory", "isCorrect": false },
      { "id": "option_2", "text": "Highlight the value of Retrospectives and engage the team", "isCorrect": true },
      { "id": "option_3", "text": "Force the team to attend by making it compulsory", "isCorrect": false },
      { "id": "option_4", "text": "Reduce the frequency of Retrospectives", "isCorrect": false }
    ],
    "hint": "Retrospectives are key for continuous improvement.",
    "answerDescription": "By demonstrating their value, the Scrum Master encourages team participation in Retrospectives."
  },
  {
    "id": "agile_1953",
    "question": "Which approach helps a Scrum Master handle resistance to Agile adoption?",
    "options": [
      { "id": "option_1", "text": "Imposing Agile practices without explanation", "isCorrect": false },
      { "id": "option_2", "text": "Providing coaching and showing benefits through results", "isCorrect": true },
      { "id": "option_3", "text": "Ignoring those who resist Agile", "isCorrect": false },
      { "id": "option_4", "text": "Forcing strict compliance with Agile rules", "isCorrect": false }
    ],
    "hint": "Effective coaching eases Agile adoption.",
    "answerDescription": "Scrum Masters should educate and demonstrate Agile's value rather than enforcing compliance."
  },
  {
    "id": "agile_1954",
    "question": "What should a Scrum Master do if a team member lacks Agile knowledge?",
    "options": [
      { "id": "option_1", "text": "Ask the member to learn Agile independently", "isCorrect": false },
      { "id": "option_2", "text": "Exclude them from Sprint activities until they learn", "isCorrect": false },
      { "id": "option_3", "text": "Provide coaching and mentoring to help them understand Agile", "isCorrect": true },
      { "id": "option_4", "text": "Replace the team member with someone experienced", "isCorrect": false }
    ],
    "hint": "Agile is best learned through coaching and practice.",
    "answerDescription": "A Scrum Master should guide and mentor team members to enhance their Agile knowledge."
  },
  {
    "id": "agile_1955",
    "question": "Which action by a Scrum Master helps a team become more self-sufficient?",
    "options": [
      { "id": "option_1", "text": "Directing the teamâ€™s work daily", "isCorrect": false },
      { "id": "option_2", "text": "Making all important decisions for the team", "isCorrect": false },
      { "id": "option_3", "text": "Coaching the team on Agile principles and problem-solving", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing team autonomy to ensure efficiency", "isCorrect": false }
    ],
    "hint": "Scrum Masters support and guide rather than control teams.",
    "answerDescription": "By coaching the team, a Scrum Master enables them to become self-sufficient and adaptable."
  },
  {
    "id": "agile_1956",
    "question": "What is a Scrum Master's approach to handling changing priorities from stakeholders?",
    "options": [
      { "id": "option_1", "text": "Ignore stakeholder concerns and stick to the Sprint plan", "isCorrect": false },
      { "id": "option_2", "text": "Encourage frequent changes during a Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Work with the Product Owner to adjust future Sprints based on priority shifts", "isCorrect": true },
      { "id": "option_4", "text": "Immediately modify the Sprint Backlog mid-Sprint", "isCorrect": false }
    ],
    "hint": "Scrum allows for adjustments, but not mid-Sprint changes.",
    "answerDescription": "A Scrum Master ensures priority changes are handled effectively through backlog adjustments."
  },
  {
    "id": "agile_1957",
    "question": "How should a Scrum Master address conflicts within the team?",
    "options": [
      { "id": "option_1", "text": "Ignore conflicts and let the team resolve them independently", "isCorrect": false },
      { "id": "option_2", "text": "Take sides to resolve the issue quickly", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate open discussions to find collaborative solutions", "isCorrect": true },
      { "id": "option_4", "text": "Remove team members who disagree frequently", "isCorrect": false }
    ],
    "hint": "Healthy conflict resolution is essential for team growth.",
    "answerDescription": "A Scrum Master should help teams resolve conflicts constructively through open discussions."
  },
  {
    "id": "agile_1958",
    "question": "What is a Scrum Master's role in fostering a culture of trust?",
    "options": [
      { "id": "option_1", "text": "Encouraging competition among team members", "isCorrect": false },
      { "id": "option_2", "text": "Limiting open communication within the team", "isCorrect": false },
      { "id": "option_3", "text": "Promoting transparency and psychological safety", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding discussions about team conflicts", "isCorrect": false }
    ],
    "hint": "A strong Agile culture thrives on transparency and open dialogue.",
    "answerDescription": "Scrum Masters foster trust by promoting open communication and a safe environment for feedback."
  },
  {
    "id": "agile_1959",
    "question": "What is the primary responsibility of a Scrum Master during Sprint execution?",
    "options": [
      { "id": "option_1", "text": "Assigning work to team members", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring all Sprint Backlog items are completed", "isCorrect": false },
      { "id": "option_3", "text": "Removing impediments that block progress", "isCorrect": true },
      { "id": "option_4", "text": "Monitoring individual performance closely", "isCorrect": false }
    ],
    "hint": "Scrum Masters help the team focus on delivering value by removing obstacles.",
    "answerDescription": "A Scrum Master ensures the team can work smoothly by identifying and eliminating roadblocks."
  },
  {
    "id": "agile_1960",
    "question": "Which technique can a Scrum Master use to promote continuous improvement?",
    "options": [
      { "id": "option_1", "text": "Strictly enforcing fixed work processes", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding retrospective meetings", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging the team to reflect and adapt in Retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on velocity metrics", "isCorrect": false }
    ],
    "hint": "Scrum teams improve by reflecting and adapting their processes.",
    "answerDescription": "Retrospectives help teams inspect their work and continuously improve their methods."
  },
  {
    "id": "agile_1961",
    "question": "Why should a Scrum Master encourage collaboration between the Development Team and Product Owner?",
    "options": [
      { "id": "option_1", "text": "To ensure the Product Owner micromanages the team", "isCorrect": false },
      { "id": "option_2", "text": "To allow the Scrum Master to focus on administrative tasks", "isCorrect": false },
      { "id": "option_3", "text": "To ensure clear communication of product goals and priorities", "isCorrect": true },
      { "id": "option_4", "text": "To speed up the completion of Sprint tasks", "isCorrect": false }
    ],
    "hint": "Collaboration ensures shared understanding of priorities.",
    "answerDescription": "Scrum Masters foster strong communication between the Product Owner and team to align on priorities."
  },
  {
    "id": "agile_1962",
    "question": "What should a Scrum Master do if a team struggles to complete work within the Sprint?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint duration", "isCorrect": false },
      { "id": "option_2", "text": "Reduce the number of team meetings", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate discussions to identify bottlenecks and improve processes", "isCorrect": true },
      { "id": "option_4", "text": "Assign extra developers to the team mid-Sprint", "isCorrect": false }
    ],
    "hint": "Scrum Masters help teams identify areas for improvement rather than changing Sprint rules.",
    "answerDescription": "Identifying and resolving process inefficiencies helps teams improve Sprint performance."
  },  {
    "id": "agile_1963",
    "question": "What is the primary responsibility of a Product Owner in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Managing the team's daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "Overseeing the entire development process", "isCorrect": false },
      { "id": "option_3", "text": "Defining and prioritizing the product backlog", "isCorrect": true },
      { "id": "option_4", "text": "Handling technical architecture decisions", "isCorrect": false }
    ],
    "hint": "This role is crucial in ensuring that the development team builds the right product features.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing the product backlog to ensure the team delivers maximum value."
  },
  {
    "id": "agile_1964",
    "question": "Which technique is commonly used by a Product Owner to gather customer feedback?",
    "options": [
      { "id": "option_1", "text": "Sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "Pair programming", "isCorrect": false },
      { "id": "option_3", "text": "User story mapping", "isCorrect": true },
      { "id": "option_4", "text": "Code refactoring", "isCorrect": false }
    ],
    "hint": "This technique helps visualize the customer's journey through the product.",
    "answerDescription": "User story mapping helps the Product Owner understand user needs and prioritize features accordingly."
  },
  {
    "id": "agile_1965",
    "question": "Why should a Product Owner avoid adding excessive details to backlog items too early?",
    "options": [
      { "id": "option_1", "text": "To reduce documentation workload", "isCorrect": false },
      { "id": "option_2", "text": "To allow the team more flexibility", "isCorrect": false },
      { "id": "option_3", "text": "To prevent wasted effort on changing requirements", "isCorrect": true },
      { "id": "option_4", "text": "To ensure only developers understand the backlog", "isCorrect": false }
    ],
    "hint": "Agile principles emphasize adapting to change over rigid planning.",
    "answerDescription": "Adding too many details early can lead to wasted effort if requirements change frequently."
  },
  {
    "id": "agile_1966",
    "question": "What is an essential characteristic of an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Deep technical expertise", "isCorrect": false },
      { "id": "option_2", "text": "Strict adherence to initial requirements", "isCorrect": false },
      { "id": "option_3", "text": "Strong stakeholder communication skills", "isCorrect": true },
      { "id": "option_4", "text": "Micromanagement of the development team", "isCorrect": false }
    ],
    "hint": "This skill helps align business goals with team execution.",
    "answerDescription": "An effective Product Owner must communicate clearly with stakeholders to ensure that the team delivers value."
  },
  {
    "id": "agile_1967",
    "question": "How does a Product Owner ensure that the development team understands the backlog items?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By reviewing only the final product", "isCorrect": false },
      { "id": "option_3", "text": "By regularly refining backlog items with the team", "isCorrect": true },
      { "id": "option_4", "text": "By limiting the team's input on requirements", "isCorrect": false }
    ],
    "hint": "Collaboration is key to effective backlog management.",
    "answerDescription": "Regular backlog refinement sessions help the team fully understand and prepare for upcoming work."
  },
  {
    "id": "agile_1968",
    "question": "What is the Product Ownerâ€™s role during a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To approve all development decisions", "isCorrect": false },
      { "id": "option_2", "text": "To dictate the next sprintâ€™s tasks", "isCorrect": false },
      { "id": "option_3", "text": "To gather stakeholder feedback and adjust priorities", "isCorrect": true },
      { "id": "option_4", "text": "To conduct technical code reviews", "isCorrect": false }
    ],
    "hint": "This event is a great opportunity to align the team with business goals.",
    "answerDescription": "A Sprint Review allows the Product Owner to gather feedback from stakeholders and adjust priorities as needed."
  },
  {
    "id": "agile_1969",
    "question": "Why should a Product Owner prioritize backlog items based on business value?",
    "options": [
      { "id": "option_1", "text": "To maintain an equal workload for developers", "isCorrect": false },
      { "id": "option_2", "text": "To ensure features are developed in order of request", "isCorrect": false },
      { "id": "option_3", "text": "To maximize customer satisfaction and return on investment", "isCorrect": true },
      { "id": "option_4", "text": "To follow a strict chronological order of tasks", "isCorrect": false }
    ],
    "hint": "Agile development focuses on delivering value continuously.",
    "answerDescription": "Prioritizing by business value ensures the most impactful features are delivered first, maximizing ROI."
  },
  {
    "id": "agile_1970",
    "question": "Which Agile artifact is the primary responsibility of the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Increment", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact contains all the potential work for future sprints.",
    "answerDescription": "The Product Owner is responsible for managing the Product Backlog, ensuring it reflects business needs and priorities."
  },
  {
    "id": "agile_1971",
    "question": "How does a Product Owner handle changing requirements in Agile?",
    "options": [
      { "id": "option_1", "text": "By resisting changes to maintain stability", "isCorrect": false },
      { "id": "option_2", "text": "By documenting changes for the next project phase", "isCorrect": false },
      { "id": "option_3", "text": "By adapting the backlog to incorporate valuable changes", "isCorrect": true },
      { "id": "option_4", "text": "By finalizing requirements before development starts", "isCorrect": false }
    ],
    "hint": "Agile embraces flexibility and continuous improvement.",
    "answerDescription": "A Product Owner must adapt the backlog to reflect changing business needs and customer feedback."
  },
  {
    "id": "agile_1972",
    "question": "Which factor is most important when a Product Owner makes prioritization decisions?",
    "options": [
      { "id": "option_1", "text": "The personal preference of the development team", "isCorrect": false },
      { "id": "option_2", "text": "The estimated time required for implementation", "isCorrect": false },
      { "id": "option_3", "text": "The value the feature provides to the business and users", "isCorrect": true },
      { "id": "option_4", "text": "The number of stakeholders requesting the feature", "isCorrect": false }
    ],
    "hint": "Prioritization should focus on delivering the highest impact.",
    "answerDescription": "A Product Owner prioritizes backlog items based on the value they provide to both the business and its users."
  },
  {
    "id": "agile_1973",
    "question": "What is the key role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Ensuring developers follow coding standards", "isCorrect": false },
      { "id": "option_2", "text": "Managing daily team activities", "isCorrect": false },
      { "id": "option_3", "text": "Supervising sprint ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing product value by managing the backlog", "isCorrect": true }
    ],
    "hint": "This role is about ensuring the development team delivers value efficiently.",
    "answerDescription": "A Product Owner ensures that backlog prioritization aligns with business value, maximizing product success."
  },
  {
    "id": "agile_1974",
    "question": "How does a Product Owner define the success of a product?",
    "options": [
      { "id": "option_1", "text": "By the number of features released", "isCorrect": false },
      { "id": "option_2", "text": "By how closely it matches initial requirements", "isCorrect": false },
      { "id": "option_3", "text": "By the development team's feedback", "isCorrect": false },
      { "id": "option_4", "text": "By customer satisfaction and business value delivered", "isCorrect": true }
    ],
    "hint": "Customer value and business impact are crucial measures.",
    "answerDescription": "A product's success is measured by customer satisfaction and its impact on business goals."
  },
  {
    "id": "agile_1975",
    "question": "Which document is primarily maintained by the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective report", "isCorrect": false },
      { "id": "option_2", "text": "Technical architecture document", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_4", "text": "Product Backlog", "isCorrect": true }
    ],
    "hint": "This document lists all features, enhancements, and fixes planned for the product.",
    "answerDescription": "The Product Owner maintains the Product Backlog, ensuring it reflects priorities and business needs."
  },
  {
    "id": "agile_1976",
    "question": "What should a Product Owner do when stakeholders request conflicting features?",
    "options": [
      { "id": "option_1", "text": "Approve both requests to satisfy all stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Reject both to avoid conflicts", "isCorrect": false },
      { "id": "option_3", "text": "Prioritize based on team capacity", "isCorrect": false },
      { "id": "option_4", "text": "Evaluate business value and customer impact before deciding", "isCorrect": true }
    ],
    "hint": "Prioritization should align with strategic business goals.",
    "answerDescription": "The Product Owner should assess business impact and customer value to make an informed decision."
  },
  {
    "id": "agile_1977",
    "question": "Why is backlog refinement important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To avoid last-minute changes in sprints", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the Product Ownerâ€™s workload", "isCorrect": false },
      { "id": "option_3", "text": "To finalize requirements for the entire project", "isCorrect": false },
      { "id": "option_4", "text": "To ensure backlog items are well-defined and prioritized", "isCorrect": true }
    ],
    "hint": "Regularly refining backlog items helps improve clarity and prioritization.",
    "answerDescription": "Backlog refinement ensures that the team has clear, prioritized, and actionable work items."
  },
  {
    "id": "agile_1978",
    "question": "What is a major challenge a Product Owner faces in Agile?",
    "options": [
      { "id": "option_1", "text": "Writing complex technical code", "isCorrect": false },
      { "id": "option_2", "text": "Managing team performance reviews", "isCorrect": false },
      { "id": "option_3", "text": "Handling Scrum Master responsibilities", "isCorrect": false },
      { "id": "option_4", "text": "Balancing stakeholder expectations and development capacity", "isCorrect": true }
    ],
    "hint": "The Product Owner must manage expectations while ensuring feasible delivery.",
    "answerDescription": "A key challenge is balancing stakeholder demands with the development team's capabilities."
  },
  {
    "id": "agile_1979",
    "question": "Which practice helps a Product Owner create effective user stories?",
    "options": [
      { "id": "option_1", "text": "Strictly following a template without modifications", "isCorrect": false },
      { "id": "option_2", "text": "Writing stories based only on technical specifications", "isCorrect": false },
      { "id": "option_3", "text": "Focusing solely on the Product Owner's vision", "isCorrect": false },
      { "id": "option_4", "text": "Engaging stakeholders and users to refine requirements", "isCorrect": true }
    ],
    "hint": "User stories should reflect real customer needs.",
    "answerDescription": "Effective user stories are refined with stakeholder and user input to ensure relevance and clarity."
  },
  {
    "id": "agile_1980",
    "question": "How should a Product Owner handle technical debt?",
    "options": [
      { "id": "option_1", "text": "Ignore it to focus on new features", "isCorrect": false },
      { "id": "option_2", "text": "Leave it for the development team to decide", "isCorrect": false },
      { "id": "option_3", "text": "Minimize backlog prioritization of technical debt items", "isCorrect": false },
      { "id": "option_4", "text": "Balance feature development with addressing technical debt", "isCorrect": true }
    ],
    "hint": "Neglecting technical debt can slow down development in the long run.",
    "answerDescription": "A Product Owner should work with the team to address technical debt alongside feature development."
  },
  {
    "id": "agile_1981",
    "question": "What is one way a Product Owner can support the development team?",
    "options": [
      { "id": "option_1", "text": "By micromanaging daily work", "isCorrect": false },
      { "id": "option_2", "text": "By setting strict deadlines without team input", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing features based on personal preference", "isCorrect": false },
      { "id": "option_4", "text": "By providing clear priorities and vision", "isCorrect": true }
    ],
    "hint": "A well-defined vision helps the team stay aligned.",
    "answerDescription": "A Product Owner ensures success by clearly defining priorities and communicating the product vision."
  },
  {
    "id": "agile_1982",
    "question": "Why should a Product Owner be actively involved in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To control how the development team works", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the Scrum Master follows the process", "isCorrect": false },
      { "id": "option_3", "text": "To make last-minute changes to the sprint backlog", "isCorrect": false },
      { "id": "option_4", "text": "To gather feedback and adjust backlog priorities", "isCorrect": true }
    ],
    "hint": "Sprint Reviews provide opportunities for learning and adaptation.",
    "answerDescription": "Active participation in Sprint Reviews allows the Product Owner to collect valuable feedback and refine the backlog accordingly."
  },
  
  {
    "id": "agile_1983",
    "question": "Which responsibility is most crucial for a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Defining and prioritizing the Product Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring team members complete their tasks", "isCorrect": false },
      { "id": "option_3", "text": "Supervising the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Approving technical designs", "isCorrect": false }
    ],
    "hint": "This role is about maximizing value by managing priorities.",
    "answerDescription": "A Product Owner is primarily responsible for defining and prioritizing the Product Backlog to ensure value delivery."
  },
  {
    "id": "agile_1984",
    "question": "How does a Product Owner ensure alignment with business goals?",
    "options": [
      { "id": "option_1", "text": "By continuously communicating with stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "By making decisions independently", "isCorrect": false },
      { "id": "option_3", "text": "By delegating all prioritization to the development team", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on feature requests", "isCorrect": false }
    ],
    "hint": "Frequent engagement with stakeholders helps maintain strategic alignment.",
    "answerDescription": "A Product Owner should continuously communicate with stakeholders to ensure that the product aligns with business goals."
  },
  {
    "id": "agile_1985",
    "question": "What technique helps a Product Owner refine the Product Backlog effectively?",
    "options": [
      { "id": "option_1", "text": "Regular backlog grooming sessions", "isCorrect": true },
      { "id": "option_2", "text": "Only updating the backlog at sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "Allowing developers to self-organize the backlog", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring stakeholder feedback", "isCorrect": false }
    ],
    "hint": "A structured approach to backlog management improves efficiency.",
    "answerDescription": "Regular backlog grooming sessions ensure backlog items remain clear, relevant, and properly prioritized."
  },
  {
    "id": "agile_1986",
    "question": "What is one key way a Product Owner supports an Agile team?",
    "options": [
      { "id": "option_1", "text": "By providing a clear product vision", "isCorrect": true },
      { "id": "option_2", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "By handling daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring team members work overtime", "isCorrect": false }
    ],
    "hint": "A well-defined vision guides team efforts.",
    "answerDescription": "A Product Owner provides a clear product vision, ensuring the team understands the purpose and goals of their work."
  },
  {
    "id": "agile_1987",
    "question": "Why should a Product Owner engage in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To gather feedback and adjust the backlog", "isCorrect": true },
      { "id": "option_2", "text": "To approve all completed tasks", "isCorrect": false },
      { "id": "option_3", "text": "To monitor team performance", "isCorrect": false },
      { "id": "option_4", "text": "To ensure stakeholders follow Agile principles", "isCorrect": false }
    ],
    "hint": "Sprint Reviews provide an opportunity to adapt based on feedback.",
    "answerDescription": "A Product Owner engages in Sprint Reviews to collect stakeholder feedback and refine the backlog accordingly."
  },
  {
    "id": "agile_1988",
    "question": "How does a Product Owner balance feature development and technical debt?",
    "options": [
      { "id": "option_1", "text": "By prioritizing both based on business value", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding technical debt discussions", "isCorrect": false },
      { "id": "option_3", "text": "By always favoring new features", "isCorrect": false },
      { "id": "option_4", "text": "By delegating all decisions to the development team", "isCorrect": false }
    ],
    "hint": "Technical debt affects long-term product quality.",
    "answerDescription": "A Product Owner balances feature development and technical debt by prioritizing based on business impact."
  },
  {
    "id": "agile_1989",
    "question": "Which factor should a Product Owner consider most when prioritizing backlog items?",
    "options": [
      { "id": "option_1", "text": "Customer value and business impact", "isCorrect": true },
      { "id": "option_2", "text": "The personal preference of stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "The technical complexity of the feature", "isCorrect": false },
      { "id": "option_4", "text": "The number of developers available", "isCorrect": false }
    ],
    "hint": "Backlog items should deliver tangible value.",
    "answerDescription": "Customer value and business impact are the most important factors for backlog prioritization."
  },
  {
    "id": "agile_1990",
    "question": "What should a Product Owner do if a stakeholder requests an urgent new feature?",
    "options": [
      { "id": "option_1", "text": "Evaluate the request against business goals and backlog priorities", "isCorrect": true },
      { "id": "option_2", "text": "Immediately add it to the current sprint", "isCorrect": false },
      { "id": "option_3", "text": "Reject it without consideration", "isCorrect": false },
      { "id": "option_4", "text": "Delegate the decision to the development team", "isCorrect": false }
    ],
    "hint": "Urgent requests should align with strategic priorities.",
    "answerDescription": "A Product Owner evaluates the urgency and business value of a request before adjusting backlog priorities."
  },
  {
    "id": "agile_1991",
    "question": "What is the role of a Product Owner in Agile estimation sessions?",
    "options": [
      { "id": "option_1", "text": "Clarifying requirements and business priorities", "isCorrect": true },
      { "id": "option_2", "text": "Assigning story points to backlog items", "isCorrect": false },
      { "id": "option_3", "text": "Dictating how long each task should take", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring developers choose simpler solutions", "isCorrect": false }
    ],
    "hint": "A Product Owner helps ensure estimation reflects business value.",
    "answerDescription": "The Product Owner provides clarification on requirements and priorities to help the team estimate effort accurately."
  },
  {
    "id": "agile_1992",
    "question": "How can a Product Owner improve collaboration with the development team?",
    "options": [
      { "id": "option_1", "text": "By fostering open communication and shared goals", "isCorrect": true },
      { "id": "option_2", "text": "By strictly enforcing deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By limiting developer input on backlog items", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on stakeholder needs", "isCorrect": false }
    ],
    "hint": "Collaboration improves when communication is transparent.",
    "answerDescription": "Open communication and shared goals help the Product Owner and development team work effectively together."
  },
  {
    "id": "agile_1993",
    "question": "Which key skill helps a Product Owner maximize product value?",
    "options": [
      { "id": "option_1", "text": "Technical programming expertise", "isCorrect": false },
      { "id": "option_2", "text": "Strong stakeholder management", "isCorrect": true },
      { "id": "option_3", "text": "Strict deadline enforcement", "isCorrect": false },
      { "id": "option_4", "text": "Micromanagement of development tasks", "isCorrect": false }
    ],
    "hint": "Engaging with stakeholders effectively ensures alignment with business goals.",
    "answerDescription": "A Product Owner must have strong stakeholder management skills to align the product with business needs and maximize value."
  },
  {
    "id": "agile_1994",
    "question": "How should a Product Owner handle conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "Implement all requests immediately", "isCorrect": false },
      { "id": "option_2", "text": "Prioritize based on business value and product strategy", "isCorrect": true },
      { "id": "option_3", "text": "Ignore stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "Let the development team decide", "isCorrect": false }
    ],
    "hint": "Decisions should align with long-term business goals and customer value.",
    "answerDescription": "A Product Owner should resolve conflicting priorities by considering business value and strategic product goals."
  },
  {
    "id": "agile_1995",
    "question": "Which event provides a Product Owner the best opportunity to gather stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event showcases the increment and invites feedback.",
    "answerDescription": "The Sprint Review is designed for gathering stakeholder feedback on the product increment and making adjustments accordingly."
  },
  {
    "id": "agile_1996",
    "question": "What is the primary focus of a Product Owner when working with the development team?",
    "options": [
      { "id": "option_1", "text": "Monitoring team performance", "isCorrect": false },
      { "id": "option_2", "text": "Clarifying product requirements and priorities", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring adherence to Agile ceremonies", "isCorrect": false }
    ],
    "hint": "Clear communication of priorities is essential for delivering value.",
    "answerDescription": "A Product Owner should focus on ensuring the team understands the product vision, backlog items, and priorities."
  },
  {
    "id": "agile_1997",
    "question": "Why is a well-defined Product Vision important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "It helps in defining technical implementation", "isCorrect": false },
      { "id": "option_2", "text": "It aligns the team and stakeholders toward a common goal", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "It ensures faster sprint completion", "isCorrect": false }
    ],
    "hint": "A shared understanding of direction ensures focus and alignment.",
    "answerDescription": "A well-defined Product Vision aligns both the team and stakeholders toward a shared goal, guiding decision-making and prioritization."
  },
  {
    "id": "agile_1998",
    "question": "What should a Product Owner do when a development team struggles with a backlog item?",
    "options": [
      { "id": "option_1", "text": "Reassign the task to another team member", "isCorrect": false },
      { "id": "option_2", "text": "Provide clarification and necessary support", "isCorrect": true },
      { "id": "option_3", "text": "Remove the backlog item from the sprint", "isCorrect": false },
      { "id": "option_4", "text": "Extend the sprint duration", "isCorrect": false }
    ],
    "hint": "A Product Owner should facilitate, not dictate, development efforts.",
    "answerDescription": "A Product Owner should provide necessary clarifications and support when the team faces challenges with a backlog item."
  },
  {
    "id": "agile_1999",
    "question": "How can a Product Owner best ensure stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By involving stakeholders in daily stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining continuous communication and transparency", "isCorrect": true },
      { "id": "option_3", "text": "By limiting stakeholder involvement to project kickoff meetings", "isCorrect": false },
      { "id": "option_4", "text": "By only updating stakeholders after product release", "isCorrect": false }
    ],
    "hint": "Ongoing communication helps align expectations and gather feedback.",
    "answerDescription": "A Product Owner should ensure stakeholder engagement through continuous communication and transparency in the development process."
  },
  {
    "id": "agile_2000",
    "question": "What is an important quality of an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Being highly skilled in coding", "isCorrect": false },
      { "id": "option_2", "text": "Having a deep understanding of customer needs", "isCorrect": true },
      { "id": "option_3", "text": "Strictly following the Scrum Guide", "isCorrect": false },
      { "id": "option_4", "text": "Assigning individual tasks to developers", "isCorrect": false }
    ],
    "hint": "A customer-centric approach leads to better product decisions.",
    "answerDescription": "A Product Owner must have a deep understanding of customer needs to ensure that the product delivers real value."
  },
  {
    "id": "agile_2001",
    "question": "Which responsibility of a Product Owner contributes most to Agile success?",
    "options": [
      { "id": "option_1", "text": "Ensuring team members meet deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Defining and prioritizing backlog items effectively", "isCorrect": true },
      { "id": "option_3", "text": "Supervising the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Approving technical implementations", "isCorrect": false }
    ],
    "hint": "Managing backlog priorities ensures continuous value delivery.",
    "answerDescription": "A Product Owner's success in Agile depends on effectively defining and prioritizing the backlog to maximize product value."
  },
  {
    "id": "agile_2002",
    "question": "What is one common challenge faced by Product Owners in Agile environments?",
    "options": [
      { "id": "option_1", "text": "Managing technical dependencies", "isCorrect": false },
      { "id": "option_2", "text": "Handling constantly changing priorities", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Writing test cases for development", "isCorrect": false }
    ],
    "hint": "Stakeholder demands and business needs often shift rapidly.",
    "answerDescription": "A key challenge for Product Owners is handling frequently changing priorities while maintaining a clear product vision."
  },
  {
    "id": "agile_2003",
    "question": "What is a key accountability of a Product Owner in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Managing team velocity", "isCorrect": false },
      { "id": "option_2", "text": "Enforcing strict deadlines", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing product value through backlog management", "isCorrect": true },
      { "id": "option_4", "text": "Supervising daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on delivering value to the customer.",
    "answerDescription": "A Product Owner is responsible for maximizing product value by effectively managing the product backlog and priorities."
  },
  {
    "id": "agile_2004",
    "question": "How can a Product Owner ensure that backlog items are well-prepared for development?",
    "options": [
      { "id": "option_1", "text": "By defining user stories without team input", "isCorrect": false },
      { "id": "option_2", "text": "By finalizing backlog items only during Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "By refining backlog items collaboratively with the team", "isCorrect": true },
      { "id": "option_4", "text": "By setting strict deadlines for backlog completion", "isCorrect": false }
    ],
    "hint": "Collaboration helps ensure clarity and feasibility of backlog items.",
    "answerDescription": "A well-prepared backlog comes from continuous refinement with the development team to clarify scope, priorities, and feasibility."
  },
  {
    "id": "agile_2005",
    "question": "Which aspect is most critical when defining a Product Goal?",
    "options": [
      { "id": "option_1", "text": "Focusing on technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring the goal is broad and open-ended", "isCorrect": false },
      { "id": "option_3", "text": "Aligning the goal with business objectives and customer needs", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing stakeholder involvement in defining the goal", "isCorrect": false }
    ],
    "hint": "A clear Product Goal should align with both business and user value.",
    "answerDescription": "A well-defined Product Goal aligns with strategic business objectives and ensures that customer needs are met effectively."
  },
  {
    "id": "agile_2006",
    "question": "What should a Product Owner do if a development team frequently struggles with unclear backlog items?",
    "options": [
      { "id": "option_1", "text": "Increase the number of backlog items to offer more choices", "isCorrect": false },
      { "id": "option_2", "text": "Let the Scrum Master clarify all requirements", "isCorrect": false },
      { "id": "option_3", "text": "Improve backlog refinement sessions and provide more details", "isCorrect": true },
      { "id": "option_4", "text": "Allow developers to select and define their own backlog items", "isCorrect": false }
    ],
    "hint": "Frequent refinement ensures clarity and reduces development roadblocks.",
    "answerDescription": "Regular backlog refinement with the team helps clarify scope, priorities, and dependencies, improving development efficiency."
  },
  {
    "id": "agile_2007",
    "question": "Which action by a Product Owner can best support Agile transparency?",
    "options": [
      { "id": "option_1", "text": "Keeping backlog priorities confidential", "isCorrect": false },
      { "id": "option_2", "text": "Sharing updates only with management", "isCorrect": false },
      { "id": "option_3", "text": "Maintaining an open and accessible product backlog", "isCorrect": true },
      { "id": "option_4", "text": "Defining all product requirements upfront", "isCorrect": false }
    ],
    "hint": "Transparency enables alignment across teams and stakeholders.",
    "answerDescription": "An open and accessible product backlog promotes transparency, ensuring alignment with team members and stakeholders."
  },
  {
    "id": "agile_2008",
    "question": "How should a Product Owner handle new feature requests from multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Accept all requests to maintain stakeholder satisfaction", "isCorrect": false },
      { "id": "option_2", "text": "Prioritize only based on who made the request", "isCorrect": false },
      { "id": "option_3", "text": "Evaluate requests based on business value and feasibility", "isCorrect": true },
      { "id": "option_4", "text": "Ignore requests until after the current Sprint", "isCorrect": false }
    ],
    "hint": "Decisions should align with business priorities and feasibility.",
    "answerDescription": "A Product Owner should assess new feature requests based on their alignment with business goals, feasibility, and customer impact."
  },
  {
    "id": "agile_2009",
    "question": "What is one of the biggest challenges a Product Owner faces in Agile development?",
    "options": [
      { "id": "option_1", "text": "Enforcing strict control over the development team", "isCorrect": false },
      { "id": "option_2", "text": "Eliminating stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "Balancing stakeholder demands with product vision", "isCorrect": true },
      { "id": "option_4", "text": "Writing technical specifications", "isCorrect": false }
    ],
    "hint": "Product Owners must align different priorities with strategic goals.",
    "answerDescription": "One of the key challenges for a Product Owner is balancing stakeholder expectations while staying true to the product vision and strategy."
  },
  {
    "id": "agile_2010",
    "question": "Which practice helps a Product Owner make better backlog decisions?",
    "options": [
      { "id": "option_1", "text": "Ignoring stakeholder input to reduce complexity", "isCorrect": false },
      { "id": "option_2", "text": "Making backlog decisions independently", "isCorrect": false },
      { "id": "option_3", "text": "Using data-driven insights and customer feedback", "isCorrect": true },
      { "id": "option_4", "text": "Prioritizing features based on personal preference", "isCorrect": false }
    ],
    "hint": "Effective prioritization requires objective analysis and feedback.",
    "answerDescription": "Data-driven decision-making and customer feedback help a Product Owner prioritize backlog items effectively for maximum impact."
  },
  {
    "id": "agile_2011",
    "question": "What is an effective way for a Product Owner to prevent scope creep?",
    "options": [
      { "id": "option_1", "text": "Allowing all feature requests into the backlog", "isCorrect": false },
      { "id": "option_2", "text": "Refusing to change any backlog items", "isCorrect": false },
      { "id": "option_3", "text": "Defining clear acceptance criteria and priorities", "isCorrect": true },
      { "id": "option_4", "text": "Letting developers decide scope independently", "isCorrect": false }
    ],
    "hint": "Clear criteria help manage expectations and keep work focused.",
    "answerDescription": "By defining clear acceptance criteria and prioritizing backlog items effectively, a Product Owner can minimize scope creep."
  },
  {
    "id": "agile_2012",
    "question": "What is the Product Owner's role in Agile risk management?",
    "options": [
      { "id": "option_1", "text": "Leaving risk management entirely to the Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring risks until they impact development", "isCorrect": false },
      { "id": "option_3", "text": "Identifying and mitigating risks that impact product value", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on delivery timelines", "isCorrect": false }
    ],
    "hint": "A Product Owner should address risks that affect product value.",
    "answerDescription": "The Product Owner plays a key role in identifying and mitigating risks that could impact the product's success and value."
  },
  
  {
    "id": "agile_2013",
    "question": "What is a primary responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Writing code for the development team", "isCorrect": false },
      { "id": "option_2", "text": "Managing HR policies for the team", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring the Scrum Master completes all tasks", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizing the product backlog based on business value", "isCorrect": true }
    ],
    "hint": "A Product Owner is responsible for managing the backlog.",
    "answerDescription": "A Product Owner ensures that the product backlog is prioritized effectively to maximize business value."
  },
  {
    "id": "agile_2014",
    "question": "How does a Product Owner contribute to Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By selecting tasks for the development team", "isCorrect": false },
      { "id": "option_2", "text": "By dictating how many backlog items must be completed", "isCorrect": false },
      { "id": "option_3", "text": "By assigning specific roles to team members", "isCorrect": false },
      { "id": "option_4", "text": "By clarifying priorities and refining backlog items", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures backlog items are clear and prioritized.",
    "answerDescription": "During Sprint Planning, the Product Owner provides clarity on backlog priorities and ensures alignment with the team's capacity."
  },
  {
    "id": "agile_2015",
    "question": "Which technique helps a Product Owner refine and prioritize backlog items effectively?",
    "options": [
      { "id": "option_1", "text": "Ignoring stakeholder feedback", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing items based on the developer's personal preferences", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding backlog changes until Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Using value-driven prioritization methods like MoSCoW or WSJF", "isCorrect": true }
    ],
    "hint": "A structured prioritization approach ensures the highest value delivery.",
    "answerDescription": "Techniques like MoSCoW and WSJF help a Product Owner prioritize backlog items based on business value and urgency."
  },
  {
    "id": "agile_2016",
    "question": "What is a key benefit of having a well-defined Product Vision?",
    "options": [
      { "id": "option_1", "text": "Allows frequent changes to backlog without alignment", "isCorrect": false },
      { "id": "option_2", "text": "Eliminates the need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "Ensures developers work without needing business input", "isCorrect": false },
      { "id": "option_4", "text": "Provides clear direction and purpose for product development", "isCorrect": true }
    ],
    "hint": "A strong vision aligns teams and stakeholders toward common goals.",
    "answerDescription": "A well-defined Product Vision helps teams stay aligned, understand priorities, and focus on delivering meaningful value."
  },
  {
    "id": "agile_2017",
    "question": "How can a Product Owner ensure stakeholder collaboration without disruption?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication to quarterly meetings", "isCorrect": false },
      { "id": "option_2", "text": "By rejecting feedback to maintain product control", "isCorrect": false },
      { "id": "option_3", "text": "By letting stakeholders directly modify the product backlog", "isCorrect": false },
      { "id": "option_4", "text": "By scheduling structured feedback sessions and backlog reviews", "isCorrect": true }
    ],
    "hint": "Regular communication helps align expectations and priorities.",
    "answerDescription": "Product Owners should engage stakeholders through structured sessions to gather insights while maintaining backlog integrity."
  },
  {
    "id": "agile_2018",
    "question": "What is a major challenge a Product Owner faces when managing a large-scale Agile project?",
    "options": [
      { "id": "option_1", "text": "Ensuring developers work overtime", "isCorrect": false },
      { "id": "option_2", "text": "Eliminating all dependencies between teams", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_4", "text": "Aligning multiple teams and stakeholders with the product strategy", "isCorrect": true }
    ],
    "hint": "Scaling Agile requires coordination across teams and stakeholders.",
    "answerDescription": "A key challenge in large-scale Agile projects is ensuring that teams and stakeholders stay aligned with the overall product strategy."
  },
  {
    "id": "agile_2019",
    "question": "Why should a Product Owner avoid adding too many backlog items in a single Sprint?",
    "options": [
      { "id": "option_1", "text": "To ensure the team works at maximum capacity", "isCorrect": false },
      { "id": "option_2", "text": "To force developers to work more efficiently", "isCorrect": false },
      { "id": "option_3", "text": "To minimize the need for Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "To prevent overcommitment and maintain a sustainable pace", "isCorrect": true }
    ],
    "hint": "Sustainable work pace ensures consistent delivery.",
    "answerDescription": "Overloading a Sprint can lead to unfinished work and burnout; a balanced backlog ensures predictable and sustainable progress."
  },
  {
    "id": "agile_2020",
    "question": "What should a Product Owner do if a backlog item lacks clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Allow developers to define the acceptance criteria themselves", "isCorrect": false },
      { "id": "option_2", "text": "Move it directly into the next Sprint to maintain velocity", "isCorrect": false },
      { "id": "option_3", "text": "Ignore it until after development begins", "isCorrect": false },
      { "id": "option_4", "text": "Refine the backlog item collaboratively with the team", "isCorrect": true }
    ],
    "hint": "Clear acceptance criteria prevent misunderstandings during development.",
    "answerDescription": "Refining backlog items with the team ensures clarity and alignment before work begins, preventing delays and misinterpretations."
  },
  {
    "id": "agile_2021",
    "question": "Which metric can help a Product Owner track the effectiveness of backlog management?",
    "options": [
      { "id": "option_1", "text": "Developer attendance in meetings", "isCorrect": false },
      { "id": "option_2", "text": "The number of meetings scheduled per week", "isCorrect": false },
      { "id": "option_3", "text": "The total number of backlog items created", "isCorrect": false },
      { "id": "option_4", "text": "Cycle time and lead time for backlog items", "isCorrect": true }
    ],
    "hint": "Efficiency in backlog execution is measured through delivery speed.",
    "answerDescription": "Cycle time and lead time help assess how quickly backlog items move through the development process, reflecting backlog management efficiency."
  },
  {
    "id": "agile_2022",
    "question": "How does a Product Owner balance short-term deliverables with long-term product vision?",
    "options": [
      { "id": "option_1", "text": "By focusing only on immediate stakeholder demands", "isCorrect": false },
      { "id": "option_2", "text": "By constantly reprioritizing backlog items without a strategy", "isCorrect": false },
      { "id": "option_3", "text": "By eliminating long-term planning to stay flexible", "isCorrect": false },
      { "id": "option_4", "text": "By aligning backlog priorities with both short-term and long-term goals", "isCorrect": true }
    ],
    "hint": "Balancing immediate needs with long-term vision is key to Agile success.",
    "answerDescription": "A Product Owner should ensure that backlog priorities align with both immediate Sprint goals and overarching product strategy."
  },
  {
    "id": "agile_2023",
    "question": "What is the primary role of a Product Owner in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Maximizing the value of the product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Managing the daily standup meetings", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring all user stories are completed within one Sprint", "isCorrect": false }
    ],
    "hint": "A Product Owner is responsible for ensuring backlog items deliver the most value.",
    "answerDescription": "The Product Owner focuses on managing and prioritizing the backlog to ensure maximum value is delivered to stakeholders."
  },
  {
    "id": "agile_2024",
    "question": "What should a Product Owner do if a key stakeholder requests a new feature during an active Sprint?",
    "options": [
      { "id": "option_1", "text": "Evaluate and prioritize it for the next Sprint", "isCorrect": true },
      { "id": "option_2", "text": "Immediately add it to the ongoing Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Cancel the current Sprint to accommodate the change", "isCorrect": false },
      { "id": "option_4", "text": "Ignore the request until after product release", "isCorrect": false }
    ],
    "hint": "Mid-Sprint changes should be handled in a structured way.",
    "answerDescription": "New feature requests should be evaluated and added to the backlog for future prioritization rather than disrupting the current Sprint."
  },
  {
    "id": "agile_2025",
    "question": "Which artifact is the Product Owner primarily responsible for maintaining?",
    "options": [
      { "id": "option_1", "text": "Product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Sprint backlog", "isCorrect": false },
      { "id": "option_3", "text": "Burndown chart", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact contains all work items for the product.",
    "answerDescription": "The Product Owner owns and manages the Product Backlog, ensuring it is well-prioritized and refined."
  },
  {
    "id": "agile_2026",
    "question": "Why is backlog refinement important for a Product Owner in agile?",
    "options": [
      { "id": "option_1", "text": "To ensure backlog items are well-defined and prioritized", "isCorrect": true },
      { "id": "option_2", "text": "To finalize all Sprint backlog items in advance", "isCorrect": false },
      { "id": "option_3", "text": "To approve only the most expensive backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To create a backup backlog in case of emergencies", "isCorrect": false }
    ],
    "hint": "A well-refined backlog helps avoid last-minute confusion.",
    "answerDescription": "Backlog refinement ensures that work items are clear, appropriately sized, and prioritized for the team."
  },
  {
    "id": "agile_2027",
    "question": "How can a Product Owner ensure stakeholder alignment with the product vision?",
    "options": [
      { "id": "option_1", "text": "By communicating priorities regularly and incorporating feedback", "isCorrect": true },
      { "id": "option_2", "text": "By only meeting stakeholders at the projectâ€™s end", "isCorrect": false },
      { "id": "option_3", "text": "By strictly following the original roadmap without modifications", "isCorrect": false },
      { "id": "option_4", "text": "By allowing stakeholders to add backlog items directly", "isCorrect": false }
    ],
    "hint": "Consistent communication helps maintain alignment.",
    "answerDescription": "A Product Owner should engage stakeholders regularly, share priorities, and integrate their feedback into backlog decisions."
  },
  {
    "id": "agile_2028",
    "question": "What should a Product Owner focus on when defining user stories?",
    "options": [
      { "id": "option_1", "text": "Clear acceptance criteria and user value", "isCorrect": true },
      { "id": "option_2", "text": "Detailed technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "How long it will take the development team to finish", "isCorrect": false },
      { "id": "option_4", "text": "Adding as many stories as possible in one Sprint", "isCorrect": false }
    ],
    "hint": "A well-defined user story focuses on user needs and completion criteria.",
    "answerDescription": "User stories should be written with clear acceptance criteria, ensuring they provide value and are testable."
  },
  {
    "id": "agile_2029",
    "question": "What is the primary benefit of a well-maintained product backlog?",
    "options": [
      { "id": "option_1", "text": "It ensures teams focus on high-value work", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to work without a Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "It prevents any changes from being made during development", "isCorrect": false }
    ],
    "hint": "A good backlog supports focused and efficient work.",
    "answerDescription": "A well-maintained backlog helps teams work on prioritized, high-value items, improving product outcomes."
  },
  {
    "id": "agile_2030",
    "question": "Which of the following is a key responsibility of a Product Owner during a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Gathering stakeholder feedback on the Increment", "isCorrect": true },
      { "id": "option_2", "text": "Reassigning completed tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Finalizing the scope of the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "Tracking individual developer performance", "isCorrect": false }
    ],
    "hint": "Sprint Reviews are about showcasing progress and collecting feedback.",
    "answerDescription": "During Sprint Reviews, the Product Owner gathers feedback from stakeholders to improve future iterations."
  },
  {
    "id": "agile_2031",
    "question": "What is one way a Product Owner can support continuous improvement in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Encouraging feedback loops and learning", "isCorrect": true },
      { "id": "option_2", "text": "Avoiding backlog changes to maintain stability", "isCorrect": false },
      { "id": "option_3", "text": "Defining strict deadlines without flexibility", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on short-term deliverables", "isCorrect": false }
    ],
    "hint": "Continuous improvement relies on feedback and adaptability.",
    "answerDescription": "A Product Owner should foster a culture of learning and refinement by encouraging feedback and iterative improvements."
  },
  {
    "id": "agile_2032",
    "question": "What is a Product Ownerâ€™s role in technical debt management?",
    "options": [
      { "id": "option_1", "text": "Prioritizing technical debt along with feature development", "isCorrect": true },
      { "id": "option_2", "text": "Ignoring technical debt to focus on new features", "isCorrect": false },
      { "id": "option_3", "text": "Leaving technical debt decisions to developers only", "isCorrect": false },
      { "id": "option_4", "text": "Completely eliminating technical debt before development starts", "isCorrect": false }
    ],
    "hint": "Technical debt should be balanced with feature delivery.",
    "answerDescription": "A Product Owner must ensure that technical debt is addressed in the backlog alongside feature development to maintain product quality."
  },
  {
    "id": "agile_2033",
    "question": "Which key skill helps a Product Owner prioritize backlog items effectively?",
    "options": [
      { "id": "option_1", "text": "Technical programming expertise", "isCorrect": false },
      { "id": "option_2", "text": "Understanding business value and customer needs", "isCorrect": true },
      { "id": "option_3", "text": "Ensuring all items have equal priority", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "A Product Owner must align backlog items with customer and business needs.",
    "answerDescription": "Prioritization requires balancing customer value, business needs, and feasibility to maximize impact."
  },
  {
    "id": "agile_2034",
    "question": "What is one of the biggest challenges a Product Owner faces?",
    "options": [
      { "id": "option_1", "text": "Ensuring all backlog items are completed in each Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Balancing stakeholder expectations with team capacity", "isCorrect": true },
      { "id": "option_3", "text": "Writing code for developers", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding communication with stakeholders", "isCorrect": false }
    ],
    "hint": "Managing multiple stakeholder requests while maintaining focus is key.",
    "answerDescription": "A Product Owner must balance business goals, stakeholder input, and the development teamâ€™s capacity to deliver quality outcomes."
  },
  {
    "id": "agile_2035",
    "question": "How should a Product Owner respond to frequently changing business requirements?",
    "options": [
      { "id": "option_1", "text": "Lock the backlog to prevent changes", "isCorrect": false },
      { "id": "option_2", "text": "Continuously refine and reprioritize the backlog", "isCorrect": true },
      { "id": "option_3", "text": "Restart Sprint planning whenever changes arise", "isCorrect": false },
      { "id": "option_4", "text": "Ignore changes until after the release", "isCorrect": false }
    ],
    "hint": "Adaptability is a core principle of Agile.",
    "answerDescription": "The Product Owner must be flexible, adjusting priorities based on business needs while ensuring minimal disruption to ongoing work."
  },
  {
    "id": "agile_2036",
    "question": "What is an effective way for a Product Owner to collaborate with development teams?",
    "options": [
      { "id": "option_1", "text": "Giving detailed step-by-step instructions for tasks", "isCorrect": false },
      { "id": "option_2", "text": "Participating in backlog refinement and answering questions proactively", "isCorrect": true },
      { "id": "option_3", "text": "Monitoring developers' work without interaction", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding daily Scrum meetings", "isCorrect": false }
    ],
    "hint": "Collaboration improves clarity and efficiency in Agile teams.",
    "answerDescription": "A Product Owner should actively engage with the development team, ensuring backlog items are well-defined and priorities are clear."
  },
  {
    "id": "agile_2037",
    "question": "Which metric is most useful for a Product Owner to track product success?",
    "options": [
      { "id": "option_1", "text": "Number of completed user stories per Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Customer satisfaction and business impact", "isCorrect": true },
      { "id": "option_3", "text": "Number of meetings held per Sprint", "isCorrect": false },
      { "id": "option_4", "text": "Percentage of backlog items estimated", "isCorrect": false }
    ],
    "hint": "Success is measured by real-world value rather than just delivery speed.",
    "answerDescription": "The impact of a product is best assessed through customer feedback and business value rather than just development efficiency."
  },
  {
    "id": "agile_2038",
    "question": "Why should a Product Owner focus on the Minimum Viable Product (MVP)?",
    "options": [
      { "id": "option_1", "text": "To avoid releasing a complete product too early", "isCorrect": false },
      { "id": "option_2", "text": "To test key assumptions with minimal investment", "isCorrect": true },
      { "id": "option_3", "text": "To delay stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all features are implemented before launch", "isCorrect": false }
    ],
    "hint": "MVP helps validate ideas quickly with minimal effort.",
    "answerDescription": "A Minimum Viable Product allows teams to test hypotheses, gather feedback, and make informed decisions without over-investing."
  },
  {
    "id": "agile_2039",
    "question": "How does a well-defined Definition of Done (DoD) help a Product Owner?",
    "options": [
      { "id": "option_1", "text": "By increasing the number of backlog items completed per Sprint", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring quality standards and clarity for all team members", "isCorrect": true },
      { "id": "option_3", "text": "By allowing flexibility in quality expectations", "isCorrect": false },
      { "id": "option_4", "text": "By making developers solely responsible for backlog completion", "isCorrect": false }
    ],
    "hint": "A clear Definition of Done ensures consistent quality and shared expectations.",
    "answerDescription": "The Definition of Done helps maintain a high-quality standard and alignment across the team regarding completed work."
  },
  {
    "id": "agile_2040",
    "question": "What should a Product Owner do if development velocity slows down significantly?",
    "options": [
      { "id": "option_1", "text": "Push the team to complete more work", "isCorrect": false },
      { "id": "option_2", "text": "Investigate bottlenecks and adjust backlog priorities", "isCorrect": true },
      { "id": "option_3", "text": "Reduce stakeholder engagement", "isCorrect": false },
      { "id": "option_4", "text": "Extend Sprint durations", "isCorrect": false }
    ],
    "hint": "Addressing root causes rather than pushing harder is key.",
    "answerDescription": "A Product Owner should identify reasons for slowdown and adjust work accordingly, rather than pressuring the team."
  },
  {
    "id": "agile_2041",
    "question": "Which Agile event allows a Product Owner to gain direct customer feedback?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event focuses on demonstrating the Increment to stakeholders.",
    "answerDescription": "Sprint Reviews provide an opportunity for stakeholders and customers to give direct feedback on delivered work."
  },
  {
    "id": "agile_2042",
    "question": "What is an effective strategy for a Product Owner to ensure alignment between business goals and development?",
    "options": [
      { "id": "option_1", "text": "Setting fixed development plans without feedback", "isCorrect": false },
      { "id": "option_2", "text": "Regularly updating the backlog based on business needs", "isCorrect": true },
      { "id": "option_3", "text": "Minimizing interactions with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Only focusing on short-term deliverables", "isCorrect": false }
    ],
    "hint": "A dynamic backlog ensures responsiveness to business changes.",
    "answerDescription": "A Product Owner should continuously refine the backlog to reflect evolving business priorities while keeping the team aligned."
  },  {
    "id": "agile_2043",
    "question": "What is a primary responsibility of the Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing the development teamâ€™s tasks", "isCorrect": false },
      { "id": "option_2", "text": "Defining the release schedule", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing and managing the product backlog", "isCorrect": true },
      { "id": "option_4", "text": "Writing unit tests for the product", "isCorrect": false }
    ],
    "hint": "The Product Owner is responsible for ensuring that the backlog aligns with business goals.",
    "answerDescription": "The Product Owner must continuously manage and prioritize the backlog to maximize product value."
  },
  {
    "id": "agile_2044",
    "question": "Which document helps a Product Owner define the overall vision for the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "User Story Map", "isCorrect": false },
      { "id": "option_3", "text": "Product Roadmap", "isCorrect": true },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This document outlines the long-term direction of the product.",
    "answerDescription": "A Product Roadmap provides a strategic overview of product goals, helping align stakeholders and teams."
  },
  {
    "id": "agile_2045",
    "question": "How can a Product Owner ensure that backlog items provide value to customers?",
    "options": [
      { "id": "option_1", "text": "By focusing only on technical improvements", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing features requested by developers", "isCorrect": false },
      { "id": "option_3", "text": "By gathering continuous feedback from users", "isCorrect": true },
      { "id": "option_4", "text": "By setting a fixed backlog that does not change", "isCorrect": false }
    ],
    "hint": "Customer feedback helps refine and improve the backlog.",
    "answerDescription": "A Product Owner must continuously seek feedback to align the backlog with real user needs and business objectives."
  },
  {
    "id": "agile_2046",
    "question": "What is one key reason a Product Owner participates in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To manage team velocity", "isCorrect": false },
      { "id": "option_2", "text": "To plan the next Sprint in advance", "isCorrect": false },
      { "id": "option_3", "text": "To gather stakeholder and user feedback", "isCorrect": true },
      { "id": "option_4", "text": "To monitor developers' performance", "isCorrect": false }
    ],
    "hint": "Sprint Reviews help refine the backlog based on feedback.",
    "answerDescription": "By attending Sprint Reviews, a Product Owner can collect feedback and adjust priorities to enhance product value."
  },
  {
    "id": "agile_2047",
    "question": "Why should a Product Owner maintain a well-refined product backlog?",
    "options": [
      { "id": "option_1", "text": "To allow developers to work on any item they choose", "isCorrect": false },
      { "id": "option_2", "text": "To minimize changes during development", "isCorrect": false },
      { "id": "option_3", "text": "To provide clarity and direction for the development team", "isCorrect": true },
      { "id": "option_4", "text": "To avoid involving stakeholders in decision-making", "isCorrect": false }
    ],
    "hint": "A well-managed backlog improves team efficiency and alignment.",
    "answerDescription": "Refining the backlog ensures developers have clear priorities and well-defined tasks, reducing confusion and rework."
  },
  {
    "id": "agile_2048",
    "question": "How can a Product Owner help reduce technical debt?",
    "options": [
      { "id": "option_1", "text": "By focusing only on delivering new features", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding discussions about code quality", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing refactoring and maintenance tasks", "isCorrect": true },
      { "id": "option_4", "text": "By leaving technical decisions entirely to the development team", "isCorrect": false }
    ],
    "hint": "Addressing technical debt improves long-term product sustainability.",
    "answerDescription": "A Product Owner should balance feature development with necessary refactoring and maintenance to reduce long-term technical debt."
  },
  {
    "id": "agile_2049",
    "question": "Which Agile principle should a Product Owner follow to ensure a valuable product?",
    "options": [
      { "id": "option_1", "text": "Delivering all features upfront", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing internal team needs over customers", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing customer value with frequent iterations", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding customer involvement until after release", "isCorrect": false }
    ],
    "hint": "Agile emphasizes incremental delivery based on feedback.",
    "answerDescription": "The Product Owner should continuously deliver value by prioritizing features that address customer needs and business objectives."
  },
  {
    "id": "agile_2050",
    "question": "How does a Product Owner handle competing stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "By giving priority to the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_2", "text": "By implementing all requests equally", "isCorrect": false },
      { "id": "option_3", "text": "By evaluating impact and aligning priorities with business goals", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding discussions on prioritization", "isCorrect": false }
    ],
    "hint": "Decisions should be made based on value, not hierarchy.",
    "answerDescription": "A Product Owner must analyze stakeholder needs and prioritize backlog items that align best with business goals."
  },
  {
    "id": "agile_2051",
    "question": "What is an effective way for a Product Owner to communicate product vision to the team?",
    "options": [
      { "id": "option_1", "text": "By only updating the backlog", "isCorrect": false },
      { "id": "option_2", "text": "By sharing the vision document once and not revisiting it", "isCorrect": false },
      { "id": "option_3", "text": "By continuously reinforcing the vision in meetings and planning sessions", "isCorrect": true },
      { "id": "option_4", "text": "By focusing only on Sprint tasks", "isCorrect": false }
    ],
    "hint": "A clear, well-communicated vision helps align the team.",
    "answerDescription": "Regular communication of the product vision ensures that the team stays aligned and understands the long-term goals."
  },
  {
    "id": "agile_2052",
    "question": "Why is transparency important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To control all aspects of the development process", "isCorrect": false },
      { "id": "option_2", "text": "To ensure only select stakeholders have access to information", "isCorrect": false },
      { "id": "option_3", "text": "To build trust and align teams on priorities", "isCorrect": true },
      { "id": "option_4", "text": "To minimize collaboration with other teams", "isCorrect": false }
    ],
    "hint": "Trust and alignment improve Agile processes.",
    "answerDescription": "By maintaining transparency, the Product Owner fosters collaboration and ensures teams and stakeholders are aligned."
  },
  {
    "id": "agile_2053",
    "question": "What is a key role of the Product Owner during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Estimating the effort required for tasks", "isCorrect": false },
      { "id": "option_3", "text": "Defining technical solutions for the team", "isCorrect": false },
      { "id": "option_4", "text": "Clarifying backlog items and setting priorities", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures the team understands the backlog items for the Sprint.",
    "answerDescription": "During Sprint Planning, the Product Owner provides details on backlog items, ensuring the team aligns on priorities and goals."
  },
  {
    "id": "agile_2054",
    "question": "Which skill is most important for a Product Owner to effectively manage stakeholders?",
    "options": [
      { "id": "option_1", "text": "Technical expertise", "isCorrect": false },
      { "id": "option_2", "text": "Micromanagement ability", "isCorrect": false },
      { "id": "option_3", "text": "Knowledge of coding languages", "isCorrect": false },
      { "id": "option_4", "text": "Strong communication and negotiation skills", "isCorrect": true }
    ],
    "hint": "Engaging with stakeholders requires clear communication and alignment.",
    "answerDescription": "A Product Owner must communicate effectively and negotiate priorities to ensure alignment with business and customer needs."
  },
  {
    "id": "agile_2055",
    "question": "Why should a Product Owner regularly refine the product backlog?",
    "options": [
      { "id": "option_1", "text": "To add as many features as possible", "isCorrect": false },
      { "id": "option_2", "text": "To keep developers busy with work", "isCorrect": false },
      { "id": "option_3", "text": "To ensure no changes are made to Sprint plans", "isCorrect": false },
      { "id": "option_4", "text": "To maintain clarity, priority, and alignment with business goals", "isCorrect": true }
    ],
    "hint": "A well-maintained backlog keeps development focused on high-value work.",
    "answerDescription": "Regular backlog refinement ensures that the most valuable and well-defined items are ready for development."
  },
  {
    "id": "agile_2056",
    "question": "How does a Product Owner contribute to Agile team success?",
    "options": [
      { "id": "option_1", "text": "By controlling every decision in the team", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on business goals", "isCorrect": false },
      { "id": "option_3", "text": "By limiting team interactions with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By providing a clear product vision and prioritizing work effectively", "isCorrect": true }
    ],
    "hint": "A Product Owner bridges business goals with development execution.",
    "answerDescription": "A Product Owner guides the team by defining and prioritizing work based on a well-communicated product vision."
  },
  {
    "id": "agile_2057",
    "question": "Which of the following is a responsibility of the Product Owner in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Managing team performance", "isCorrect": false },
      { "id": "option_2", "text": "Handling Sprint retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "Deciding technical implementation details", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring the product backlog aligns with business needs", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures that development is focused on valuable work.",
    "answerDescription": "A Product Owner is responsible for managing the product backlog to ensure alignment with customer and business priorities."
  },
  {
    "id": "agile_2058",
    "question": "What should a Product Owner do when stakeholders request conflicting features?",
    "options": [
      { "id": "option_1", "text": "Accept all requests and add them to the backlog", "isCorrect": false },
      { "id": "option_2", "text": "Let the development team decide which to implement", "isCorrect": false },
      { "id": "option_3", "text": "Ignore lower-priority stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Evaluate the business value and prioritize accordingly", "isCorrect": true }
    ],
    "hint": "Decision-making should be based on value, not individual preferences.",
    "answerDescription": "A Product Owner must assess the impact of features and prioritize them based on customer and business value."
  },
  {
    "id": "agile_2059",
    "question": "How can a Product Owner ensure the development team understands backlog priorities?",
    "options": [
      { "id": "option_1", "text": "By updating the backlog without discussion", "isCorrect": false },
      { "id": "option_2", "text": "By keeping backlog priorities secret until Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding discussions on prioritization", "isCorrect": false },
      { "id": "option_4", "text": "By collaborating with the team and providing clear explanations", "isCorrect": true }
    ],
    "hint": "Transparency and communication improve backlog clarity.",
    "answerDescription": "A Product Owner should regularly discuss priorities with the team to ensure shared understanding and alignment."
  },
  {
    "id": "agile_2060",
    "question": "What is one way a Product Owner can improve stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback to prevent delays", "isCorrect": false },
      { "id": "option_3", "text": "By only sharing updates at the end of a project", "isCorrect": false },
      { "id": "option_4", "text": "By involving stakeholders in backlog discussions and reviews", "isCorrect": true }
    ],
    "hint": "Stakeholder involvement helps align the product with business needs.",
    "answerDescription": "Regular stakeholder engagement ensures alignment and increases the likelihood of delivering a valuable product."
  },
  {
    "id": "agile_2061",
    "question": "Why is it important for a Product Owner to understand customer needs?",
    "options": [
      { "id": "option_1", "text": "To control all aspects of product development", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on technical requirements", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all requested features are implemented", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize work that delivers the highest customer value", "isCorrect": true }
    ],
    "hint": "Customer value should drive product decisions.",
    "answerDescription": "A Product Owner must understand customer needs to ensure that backlog items deliver meaningful value."
  },
  {
    "id": "agile_2062",
    "question": "How can a Product Owner support continuous improvement in Agile teams?",
    "options": [
      { "id": "option_1", "text": "By resisting changes in backlog priorities", "isCorrect": false },
      { "id": "option_2", "text": "By setting long-term plans without iteration", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging team retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging feedback loops and adapting priorities", "isCorrect": true }
    ],
    "hint": "Continuous feedback helps teams improve and adapt.",
    "answerDescription": "A Product Owner should foster a culture of feedback and iteration to ensure the product evolves effectively."
  },
  {
    "id": "agile_2063",
    "question": "What is the primary responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Maximizing the value of the product", "isCorrect": true },
      { "id": "option_2", "text": "Managing the development team's work schedule", "isCorrect": false },
      { "id": "option_3", "text": "Handling all coding and testing tasks", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring the Scrum Master completes all backlog items", "isCorrect": false }
    ],
    "hint": "The Product Owner ensures the product delivers maximum value.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing the backlog to ensure the product provides the highest possible value."
  },
  {
    "id": "agile_2064",
    "question": "Which activity is crucial for a Product Owner to perform effectively?",
    "options": [
      { "id": "option_1", "text": "Regularly refining the product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Determining the team's daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "Assigning work to developers", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "A well-managed backlog ensures smooth development.",
    "answerDescription": "Backlog refinement helps ensure that work items are clear, prioritized, and aligned with business needs."
  },
  {
    "id": "agile_2065",
    "question": "Why is it important for a Product Owner to collaborate with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To align business objectives with product development", "isCorrect": true },
      { "id": "option_2", "text": "To control the teamâ€™s development process", "isCorrect": false },
      { "id": "option_3", "text": "To ensure stakeholders approve every Sprint", "isCorrect": false },
      { "id": "option_4", "text": "To increase documentation requirements", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration ensures business needs are met.",
    "answerDescription": "A Product Owner must engage with stakeholders to align product goals with business priorities."
  },
  {
    "id": "agile_2066",
    "question": "What is one way a Product Owner can ensure backlog items are valuable?",
    "options": [
      { "id": "option_1", "text": "By prioritizing backlog items based on business value", "isCorrect": true },
      { "id": "option_2", "text": "By including all feature requests without analysis", "isCorrect": false },
      { "id": "option_3", "text": "By allowing developers to choose priorities", "isCorrect": false },
      { "id": "option_4", "text": "By setting priorities based on personal preferences", "isCorrect": false }
    ],
    "hint": "Backlog prioritization should focus on delivering value.",
    "answerDescription": "A Product Owner ensures backlog items align with business value to optimize product impact."
  },
  {
    "id": "agile_2067",
    "question": "How can a Product Owner help the development team deliver high-quality work?",
    "options": [
      { "id": "option_1", "text": "By providing clear acceptance criteria for backlog items", "isCorrect": true },
      { "id": "option_2", "text": "By assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring no changes occur after Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "By requiring team members to follow rigid rules", "isCorrect": false }
    ],
    "hint": "Clear acceptance criteria help define success.",
    "answerDescription": "Well-defined acceptance criteria ensure backlog items meet expected standards before development begins."
  },
  {
    "id": "agile_2068",
    "question": "What should a Product Owner do if the development team has questions about a backlog item?",
    "options": [
      { "id": "option_1", "text": "Clarify requirements and provide additional details", "isCorrect": true },
      { "id": "option_2", "text": "Ignore their questions until the next Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Tell them to make assumptions", "isCorrect": false },
      { "id": "option_4", "text": "Remove the backlog item from the Sprint", "isCorrect": false }
    ],
    "hint": "Clear communication ensures effective development.",
    "answerDescription": "A Product Owner should provide clarification to ensure the team fully understands backlog items before implementation."
  },
  {
    "id": "agile_2069",
    "question": "Which action best helps a Product Owner prioritize backlog items?",
    "options": [
      { "id": "option_1", "text": "Assessing customer value and business impact", "isCorrect": true },
      { "id": "option_2", "text": "Selecting features randomly", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing the easiest tasks first", "isCorrect": false },
      { "id": "option_4", "text": "Only considering stakeholder opinions", "isCorrect": false }
    ],
    "hint": "Value-driven prioritization ensures impactful development.",
    "answerDescription": "Backlog prioritization should be based on customer value and business impact to maximize product success."
  },
  {
    "id": "agile_2070",
    "question": "How can a Product Owner support continuous improvement within an Agile team?",
    "options": [
      { "id": "option_1", "text": "By incorporating feedback into future backlog updates", "isCorrect": true },
      { "id": "option_2", "text": "By refusing changes to the backlog", "isCorrect": false },
      { "id": "option_3", "text": "By limiting retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing fixed requirements", "isCorrect": false }
    ],
    "hint": "Feedback helps refine and improve the product.",
    "answerDescription": "Continuous improvement involves adapting backlog priorities based on feedback and insights."
  },
  {
    "id": "agile_2071",
    "question": "Why should a Product Owner collaborate closely with the Scrum Master?",
    "options": [
      { "id": "option_1", "text": "To ensure the team follows Agile best practices", "isCorrect": true },
      { "id": "option_2", "text": "To delegate backlog management", "isCorrect": false },
      { "id": "option_3", "text": "To control the teamâ€™s workflow", "isCorrect": false },
      { "id": "option_4", "text": "To take over the role of the development team", "isCorrect": false }
    ],
    "hint": "A strong Scrum Master-Product Owner partnership enhances agility.",
    "answerDescription": "The Product Owner and Scrum Master collaborate to ensure Agile principles are followed effectively."
  },
  {
    "id": "agile_2072",
    "question": "What is a key benefit of defining a clear product vision for an Agile team?",
    "options": [
      { "id": "option_1", "text": "It aligns the teamâ€™s work with long-term goals", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "It allows the Product Owner to work independently", "isCorrect": false },
      { "id": "option_4", "text": "It prevents changes during development", "isCorrect": false }
    ],
    "hint": "A clear vision provides direction and focus.",
    "answerDescription": "A well-defined product vision ensures the development team works towards meaningful goals that align with business objectives."
  },
  {
    "id": "agile_2073",
    "question": "What is one of the key responsibilities of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing the development team", "isCorrect": false },
      { "id": "option_2", "text": "Defining and prioritizing the product backlog", "isCorrect": true },
      { "id": "option_3", "text": "Executing test cases", "isCorrect": false },
      { "id": "option_4", "text": "Creating project budgets", "isCorrect": false }
    ],
    "hint": "The Product Owner ensures backlog items are well-defined and prioritized.",
    "answerDescription": "The Product Owner is responsible for ensuring that the backlog is refined and aligned with business goals."
  },
  {
    "id": "agile_2074",
    "question": "How does a Product Owner invole himself to Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By explaining backlog items and their priorities", "isCorrect": true },
      { "id": "option_3", "text": "By estimating development time", "isCorrect": false },
      { "id": "option_4", "text": "By approving technical designs", "isCorrect": false }
    ],
    "hint": "The Product Owner provides clarity on what needs to be developed.",
    "answerDescription": "During Sprint Planning, the Product Owner ensures the team understands backlog items and their priorities."
  },
  {
    "id": "agile_2075",
    "question": "What is an important skill for a Product Owner to have?",
    "options": [
      { "id": "option_1", "text": "Writing complex code", "isCorrect": false },
      { "id": "option_2", "text": "Effective stakeholder communication", "isCorrect": true },
      { "id": "option_3", "text": "Monitoring team performance", "isCorrect": false },
      { "id": "option_4", "text": "Conducting software testing", "isCorrect": false }
    ],
    "hint": "A Product Owner needs to interact with stakeholders frequently.",
    "answerDescription": "Strong communication helps the Product Owner understand business needs and translate them into backlog items."
  },
  {
    "id": "agile_2076",
    "question": "Why should always a Product Owner regularly refine the product backlog?",
    "options": [
      { "id": "option_1", "text": "To ensure all backlog items remain unchanged", "isCorrect": false },
      { "id": "option_2", "text": "To keep backlog items relevant and well-defined", "isCorrect": true },
      { "id": "option_3", "text": "To micromanage the development team", "isCorrect": false },
      { "id": "option_4", "text": "To limit stakeholder involvement", "isCorrect": false }
    ],
    "hint": "A well-maintained backlog improves Agile workflow.",
    "answerDescription": "Regular backlog refinement ensures that tasks are clear, valuable, and ready for implementation."
  },
  {
    "id": "agile_2077",
    "question": "How can a Product Owner ensure alignment between business goals and product development?",
    "options": [
      { "id": "option_1", "text": "By deciding technical solutions for the team", "isCorrect": false },
      { "id": "option_2", "text": "By collaborating closely with stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "By focusing only on product features", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding changes to the roadmap", "isCorrect": false }
    ],
    "hint": "Stakeholders help shape product strategy.",
    "answerDescription": "By engaging stakeholders, a Product Owner ensures the product meets business needs and delivers value."
  },
  {
    "id": "agile_2078",
    "question": "What should a Product Owner do when new requirements emerge during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Cancel the Sprint and restart planning", "isCorrect": false },
      { "id": "option_2", "text": "Add the requirements to the product backlog for future consideration", "isCorrect": true },
      { "id": "option_3", "text": "Immediately add them to the Sprint backlog", "isCorrect": false },
      { "id": "option_4", "text": "Ignore them until the product launch", "isCorrect": false }
    ],
    "hint": "New requirements should be evaluated before being added to a Sprint.",
    "answerDescription": "Adding new requirements to the backlog ensures they are properly prioritized and do not disrupt the current Sprint."
  },
  {
    "id": "agile_2079",
    "question": "What is one benefit of a well-defined product vision for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "It provides clear direction for backlog prioritization", "isCorrect": true },
      { "id": "option_3", "text": "It allows the team to work without constraints", "isCorrect": false },
      { "id": "option_4", "text": "It ensures no changes occur during development", "isCorrect": false }
    ],
    "hint": "A product vision helps guide decision-making.",
    "answerDescription": "A strong product vision aligns backlog priorities with strategic goals, ensuring consistent development focus."
  },
  {
    "id": "agile_2080",
    "question": "How does a Product Owner support continuous improvement in an Agile team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict requirements", "isCorrect": false },
      { "id": "option_2", "text": "By incorporating user feedback into backlog refinement", "isCorrect": true },
      { "id": "option_3", "text": "By limiting retrospective meetings", "isCorrect": false },
      { "id": "option_4", "text": "By restricting changes to backlog items", "isCorrect": false }
    ],
    "hint": "Feedback helps refine the backlog for better product outcomes.",
    "answerDescription": "Incorporating feedback ensures the product evolves based on real user needs and continuous learning."
  },
  {
    "id": "agile_2081",
    "question": "Why should a Product Owner balance stakeholder expectations with team capabilities?",
    "options": [
      { "id": "option_1", "text": "To ensure all stakeholder requests are implemented immediately", "isCorrect": false },
      { "id": "option_2", "text": "To prioritize feasible work that delivers value", "isCorrect": true },
      { "id": "option_3", "text": "To prevent the development team from making decisions", "isCorrect": false },
      { "id": "option_4", "text": "To avoid adjusting priorities throughout development", "isCorrect": false }
    ],
    "hint": "A balance must be maintained to maximize value delivery.",
    "answerDescription": "The Product Owner must ensure that development efforts are focused on valuable and achievable outcomes."
  },
  {
    "id": "agile_2082",
    "question": "How does a Product Owner ensure that backlog items are well-defined?",
    "options": [
      { "id": "option_1", "text": "By adding as many tasks as possible", "isCorrect": false },
      { "id": "option_2", "text": "By writing clear user stories with acceptance criteria", "isCorrect": true },
      { "id": "option_3", "text": "By allowing the team to decide on priorities without guidance", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "User stories should provide clarity on expected outcomes.",
    "answerDescription": "Well-defined backlog items with clear acceptance criteria ensure smooth development and successful Sprint execution."
  },
  {
    "id": "agile_2083",
    "question": "Which of the following best describes the role of a Product Owner in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Managing the development team", "isCorrect": false },
      { "id": "option_2", "text": "Handling all technical decisions", "isCorrect": false },
      { "id": "option_3", "text": "Defining product requirements and prioritizing backlog items", "isCorrect": true },
      { "id": "option_4", "text": "Executing software testing", "isCorrect": false }
    ],
    "hint": "A Product Owner focuses on defining the product vision and backlog.",
    "answerDescription": "The Product Owner is responsible for ensuring that the development team works on the highest-priority tasks that align with business goals."
  },
  {
    "id": "agile_2084",
    "question": "What is one key factor that determines the effectiveness of a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Their ability to write complex code", "isCorrect": false },
      { "id": "option_2", "text": "Their control over the development team", "isCorrect": false },
      { "id": "option_3", "text": "Their ability to communicate the product vision clearly", "isCorrect": true },
      { "id": "option_4", "text": "Their focus on project budgeting", "isCorrect": false }
    ],
    "hint": "Effective communication ensures the team understands the product vision.",
    "answerDescription": "A Product Owner must articulate the product vision effectively to align stakeholders and developers toward a common goal."
  },
  {
    "id": "agile_2085",
    "question": "How does a Product Owner contribute to maximizing the value delivered by an Agile team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the number of backlog items", "isCorrect": false },
      { "id": "option_3", "text": "By continuously refining and prioritizing backlog items", "isCorrect": true },
      { "id": "option_4", "text": "By limiting collaboration with stakeholders", "isCorrect": false }
    ],
    "hint": "A well-prioritized backlog helps maximize value delivery.",
    "answerDescription": "The Product Owner ensures that the team focuses on the highest-value tasks through backlog refinement and prioritization."
  },
  {
    "id": "agile_2086",
    "question": "Which of the following is NOT a responsibility of the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Prioritizing the product backlog", "isCorrect": false },
      { "id": "option_2", "text": "Defining user stories and acceptance criteria", "isCorrect": false },
      { "id": "option_3", "text": "Directly managing the development team", "isCorrect": true },
      { "id": "option_4", "text": "Engaging with stakeholders for feedback", "isCorrect": false }
    ],
    "hint": "A Product Owner focuses on the product vision, not team management.",
    "answerDescription": "While the Product Owner defines requirements and priorities, direct team management is typically handled by a Scrum Master or team lead."
  },
  {
    "id": "agile_2087",
    "question": "What should a Product Owner do if stakeholders request changes during an ongoing Sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately add them to the Sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the requests until the next release", "isCorrect": false },
      { "id": "option_3", "text": "Consider the changes for future Sprints and update the backlog", "isCorrect": true },
      { "id": "option_4", "text": "Cancel the Sprint and start over", "isCorrect": false }
    ],
    "hint": "Changes should be evaluated before being included in a Sprint.",
    "answerDescription": "A Product Owner should assess new requests and incorporate them into the backlog for prioritization in future iterations."
  },
  {
    "id": "agile_2088",
    "question": "Why is it important for a Product Owner to engage regularly with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To increase their control over the development team", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all requests are implemented immediately", "isCorrect": false },
      { "id": "option_3", "text": "To align the product with business goals and user needs", "isCorrect": true },
      { "id": "option_4", "text": "To speed up Sprint execution", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration helps ensure the product meets business objectives.",
    "answerDescription": "Regular engagement with stakeholders allows the Product Owner to refine the backlog and align the product with user needs."
  },
  {
    "id": "agile_2089",
    "question": "How does a Product Owner help ensure smooth Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By finalizing Sprint tasks without team input", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring backlog items are clear and well-prioritized", "isCorrect": true },
      { "id": "option_4", "text": "By preventing changes to the backlog", "isCorrect": false }
    ],
    "hint": "A well-prepared backlog makes Sprint Planning more effective.",
    "answerDescription": "The Product Owner ensures the backlog is refined so that the team can focus on delivering value during the Sprint."
  },
  {
    "id": "agile_2090",
    "question": "Which document or artifact is primarily managed by the Product Owner?",
    "options": [
      { "id": "option_1", "text": "Sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Burndown chart", "isCorrect": false },
      { "id": "option_3", "text": "Product backlog", "isCorrect": true },
      { "id": "option_4", "text": "Test cases", "isCorrect": false }
    ],
    "hint": "This artifact contains prioritized user stories and features.",
    "answerDescription": "The Product Owner manages the product backlog, which outlines the prioritized features and tasks for development."
  },
  {
    "id": "agile_2091",
    "question": "What is one way a Product Owner can ensure the development team understands the requirements?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict rules for implementation", "isCorrect": false },
      { "id": "option_2", "text": "By limiting team involvement in backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "By writing clear user stories with acceptance criteria", "isCorrect": true },
      { "id": "option_4", "text": "By reviewing only completed features", "isCorrect": false }
    ],
    "hint": "Well-defined user stories help clarify expectations.",
    "answerDescription": "A Product Owner should write detailed user stories to ensure the development team fully understands the requirements."
  },
  {
    "id": "agile_2092",
    "question": "How does a Product Owner contribute to continuous improvement in Agile?",
    "options": [
      { "id": "option_1", "text": "By enforcing a fixed backlog without changes", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging feedback from the team", "isCorrect": false },
      { "id": "option_3", "text": "By gathering feedback and refining backlog items accordingly", "isCorrect": true },
      { "id": "option_4", "text": "By increasing the number of backlog items each Sprint", "isCorrect": false }
    ],
    "hint": "Feedback helps refine the backlog for better outcomes.",
    "answerDescription": "A Product Owner should incorporate user and team feedback to improve backlog items and enhance Agile processes."
  },
  
  {
    "id": "agile_2093",
    "question": "What is a key characteristic of a good Product Owner?",
    "options": [
      { "id": "option_1", "text": "Avoiding direct interactions with stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Focusing only on the technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "Delegating backlog refinement to the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Balancing business needs with development feasibility", "isCorrect": true }
    ],
    "hint": "A Product Owner ensures alignment between business goals and technical execution.",
    "answerDescription": "A strong Product Owner effectively manages both stakeholder expectations and technical feasibility."
  },
  {
    "id": "agile_2094",
    "question": "Which Agile principle is most relevant to a Product Owner's responsibility?",
    "options": [
      { "id": "option_1", "text": "Individuals and interactions over processes and tools", "isCorrect": false },
      { "id": "option_2", "text": "Customer collaboration over contract negotiation", "isCorrect": false },
      { "id": "option_3", "text": "Responding to change over following a plan", "isCorrect": false },
      { "id": "option_4", "text": "Delivering value early and continuously", "isCorrect": true }
    ],
    "hint": "A Product Owner ensures continuous delivery of value to customers.",
    "answerDescription": "The Product Owner aligns the team's work with business objectives to deliver maximum value in each iteration."
  },
  {
    "id": "agile_2095",
    "question": "How can a Product Owner ensure user feedback is incorporated effectively?",
    "options": [
      { "id": "option_1", "text": "By documenting all feedback but not acting on it", "isCorrect": false },
      { "id": "option_2", "text": "By making changes without consulting the team", "isCorrect": false },
      { "id": "option_3", "text": "By delaying changes until after the project ends", "isCorrect": false },
      { "id": "option_4", "text": "By refining backlog items based on stakeholder priorities", "isCorrect": true }
    ],
    "hint": "A refined backlog helps prioritize valuable feedback.",
    "answerDescription": "A Product Owner adjusts backlog priorities to incorporate valuable feedback while maintaining team alignment."
  },
  {
    "id": "agile_2096",
    "question": "What should a Product Owner do if there is a conflict between stakeholders on product direction?",
    "options": [
      { "id": "option_1", "text": "Ignore the conflict and let the team decide", "isCorrect": false },
      { "id": "option_2", "text": "Follow the request of the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_3", "text": "Remove all conflicting features from the backlog", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions to align on a shared product vision", "isCorrect": true }
    ],
    "hint": "Stakeholder alignment is key to a successful product.",
    "answerDescription": "A Product Owner must act as a bridge to ensure all stakeholders are aligned with a shared vision."
  },
  {
    "id": "agile_2097",
    "question": "Why should a Product Owner avoid overloading a Sprint with backlog items?",
    "options": [
      { "id": "option_1", "text": "To reduce the amount of work completed", "isCorrect": false },
      { "id": "option_2", "text": "To create extra room for last-minute changes", "isCorrect": false },
      { "id": "option_3", "text": "To ensure developers work on multiple tasks at once", "isCorrect": false },
      { "id": "option_4", "text": "To allow the team to maintain sustainable productivity", "isCorrect": true }
    ],
    "hint": "Overloading leads to burnout and decreased efficiency.",
    "answerDescription": "A balanced Sprint workload helps maintain team morale and consistent delivery."
  },
  {
    "id": "agile_2098",
    "question": "Which technique can a Product Owner use to ensure backlog items are well-defined?",
    "options": [
      { "id": "option_1", "text": "Creating items with broad and unclear goals", "isCorrect": false },
      { "id": "option_2", "text": "Skipping acceptance criteria to speed up delivery", "isCorrect": false },
      { "id": "option_3", "text": "Only defining backlog items during Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "Using INVEST principles for backlog refinement", "isCorrect": true }
    ],
    "hint": "INVEST stands for Independent, Negotiable, Valuable, Estimable, Small, and Testable.",
    "answerDescription": "The INVEST criteria help ensure that backlog items are clear, achievable, and valuable."
  },
  {
    "id": "agile_2099",
    "question": "What is a potential risk if the Product Owner fails to prioritize backlog items effectively?",
    "options": [
      { "id": "option_1", "text": "The development team will complete work too quickly", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders will have no influence on the product direction", "isCorrect": false },
      { "id": "option_3", "text": "The team will focus only on bug fixes and not features", "isCorrect": false },
      { "id": "option_4", "text": "The team may work on low-value tasks while high-value items are delayed", "isCorrect": true }
    ],
    "hint": "Prioritization ensures high-value features are delivered first.",
    "answerDescription": "Without proper prioritization, the team may spend time on low-impact tasks instead of delivering meaningful product improvements."
  },
  {
    "id": "agile_2100",
    "question": "How does a Product Owner help prevent scope creep in Agile development?",
    "options": [
      { "id": "option_1", "text": "By rejecting all new feature requests", "isCorrect": false },
      { "id": "option_2", "text": "By allowing uncontrolled backlog growth", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing customer demands over product goals", "isCorrect": false },
      { "id": "option_4", "text": "By carefully managing backlog changes and stakeholder expectations", "isCorrect": true }
    ],
    "hint": "Scope creep happens when uncontrolled changes are introduced.",
    "answerDescription": "A Product Owner prevents scope creep by balancing stakeholder requests with product goals and Agile principles."
  },
  {
    "id": "agile_2101",
    "question": "What role does the Product Owner play in release planning?",
    "options": [
      { "id": "option_1", "text": "Writing detailed test cases for the release", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring only technical features are included", "isCorrect": false },
      { "id": "option_3", "text": "Dictating exact deadlines to the development team", "isCorrect": false },
      { "id": "option_4", "text": "Defining the release goals and ensuring high-priority features are included", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures the release aligns with business needs.",
    "answerDescription": "The Product Owner collaborates with stakeholders to define release objectives and prioritize features for deployment."
  },
  {
    "id": "agile_2102",
    "question": "Which Agile artifact provides the Product Owner with a roadmap of upcoming work?",
    "options": [
      { "id": "option_1", "text": "Sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Daily Scrum report", "isCorrect": false },
      { "id": "option_3", "text": "Burndown chart", "isCorrect": false },
      { "id": "option_4", "text": "Product roadmap", "isCorrect": true }
    ],
    "hint": "This artifact provides a long-term vision for the product.",
    "answerDescription": "A product roadmap helps the Product Owner communicate future work and strategic priorities."
  },
  {
    "id": "agile_2103",
    "question": "What is the key responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Maximizing the value of the product", "isCorrect": true },
      { "id": "option_2", "text": "Managing team performance metrics", "isCorrect": false },
      { "id": "option_3", "text": "Handling day-to-day task assignments", "isCorrect": false },
      { "id": "option_4", "text": "Overseeing code quality and deployment", "isCorrect": false }
    ],
    "hint": "A Product Owner focuses on delivering maximum business value.",
    "answerDescription": "The Product Owner is responsible for ensuring that the development team delivers the highest possible value to the customer."
  },
  {
    "id": "agile_2104",
    "question": "Which meeting is the Product Owner required to attend in Scrum?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Technical Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Code Review Session", "isCorrect": false }
    ],
    "hint": "This meeting focuses on demonstrating completed work to stakeholders.",
    "answerDescription": "The Product Owner attends the Sprint Review to gather feedback and ensure alignment with business goals."
  },
  {
    "id": "agile_2105",
    "question": "How does a Product Owner prioritize backlog items?",
    "options": [
      { "id": "option_1", "text": "By assessing business value and customer impact", "isCorrect": true },
      { "id": "option_2", "text": "By selecting tasks randomly", "isCorrect": false },
      { "id": "option_3", "text": "By choosing only the easiest tasks to complete", "isCorrect": false },
      { "id": "option_4", "text": "By following a strict first-come, first-served order", "isCorrect": false }
    ],
    "hint": "The goal is to ensure the most valuable work is completed first.",
    "answerDescription": "The Product Owner evaluates business value, customer needs, and technical dependencies to prioritize backlog items."
  },
  {
    "id": "agile_2106",
    "question": "What should a Product Owner do if a new urgent requirement arises mid-Sprint?",
    "options": [
      { "id": "option_1", "text": "Discuss with the team and consider it for the next Sprint", "isCorrect": true },
      { "id": "option_2", "text": "Immediately add it to the current Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Replace an existing Sprint item without team input", "isCorrect": false },
      { "id": "option_4", "text": "Ignore it until the Sprint is completed", "isCorrect": false }
    ],
    "hint": "Changes should be managed without disrupting the team's flow.",
    "answerDescription": "Urgent requirements should be assessed and added to the backlog for consideration in the next Sprint, unless the team agrees otherwise."
  },
  {
    "id": "agile_2107",
    "question": "Why should a Product Owner work closely with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure alignment between business needs and product development", "isCorrect": true },
      { "id": "option_2", "text": "To micromanage the development team", "isCorrect": false },
      { "id": "option_3", "text": "To approve every technical decision", "isCorrect": false },
      { "id": "option_4", "text": "To reduce team autonomy", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration ensures the product meets expectations.",
    "answerDescription": "A Product Owner maintains close collaboration with stakeholders to align the product roadmap with business goals and customer needs."
  },
  {
    "id": "agile_2108",
    "question": "Which Agile artifact is the Product Owner responsible for managing?",
    "options": [
      { "id": "option_1", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_3", "text": "Burndown Chart", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact contains prioritized work items for future Sprints.",
    "answerDescription": "The Product Owner owns the Product Backlog, ensuring it is prioritized and aligned with business needs."
  },
  {
    "id": "agile_2109",
    "question": "What is a key benefit of having a dedicated Product Owner in an Agile team?",
    "options": [
      { "id": "option_1", "text": "Ensures continuous alignment between development and business goals", "isCorrect": true },
      { "id": "option_2", "text": "Removes the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "Eliminates the need for Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "Takes over all project management duties", "isCorrect": false }
    ],
    "hint": "A Product Owner ensures the team is working on valuable features.",
    "answerDescription": "By maintaining clear priorities and stakeholder communication, the Product Owner helps ensure Agile teams deliver business value."
  },
  {
    "id": "agile_2110",
    "question": "Which of the following best describes the relationship between a Product Owner and a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "The Product Owner defines 'what' needs to be built, and the Scrum Master ensures 'how' it is built", "isCorrect": true },
      { "id": "option_2", "text": "The Scrum Master dictates product requirements", "isCorrect": false },
      { "id": "option_3", "text": "The Product Owner manages technical implementations", "isCorrect": false },
      { "id": "option_4", "text": "Both roles are responsible for coding tasks", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on vision, while the Scrum Master supports the process.",
    "answerDescription": "The Product Owner ensures the right product is built, while the Scrum Master facilitates Agile practices for efficient development."
  },
  {
    "id": "agile_2111",
    "question": "How does a Product Owner contribute to Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By clarifying backlog items and setting priorities", "isCorrect": true },
      { "id": "option_2", "text": "By estimating development effort for the team", "isCorrect": false },
      { "id": "option_3", "text": "By selecting tasks for each developer", "isCorrect": false },
      { "id": "option_4", "text": "By writing unit tests for the backlog items", "isCorrect": false }
    ],
    "hint": "A Product Owner ensures backlog items are well-prepared for selection.",
    "answerDescription": "During Sprint Planning, the Product Owner explains backlog items and helps the team prioritize work for the Sprint."
  },
  {
    "id": "agile_2112",
    "question": "What is a common challenge for Product Owners in Agile?",
    "options": [
      { "id": "option_1", "text": "Balancing stakeholder demands with team capacity", "isCorrect": true },
      { "id": "option_2", "text": "Writing code and fixing bugs", "isCorrect": false },
      { "id": "option_3", "text": "Controlling the daily stand-up meetings", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding communication with the team", "isCorrect": false }
    ],
    "hint": "The challenge is ensuring high-value work is completed without overloading the team.",
    "answerDescription": "A Product Owner must manage expectations and priorities to deliver value while keeping development sustainable."
  },
  
  {
    "id": "agile_2113",
    "question": "Which of the following best describes the role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing team workflow and technical execution", "isCorrect": false },
      { "id": "option_2", "text": "Defining and prioritizing product backlog items", "isCorrect": true },
      { "id": "option_3", "text": "Supervising the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Handling only external stakeholder communication", "isCorrect": false }
    ],
    "hint": "The Product Owner's main responsibility is backlog management.",
    "answerDescription": "The Product Owner ensures the product backlog is well-defined, prioritized, and aligned with business goals."
  },
  {
    "id": "agile_2114",
    "question": "How does a Product Owner ensure that a development team delivers business value?",
    "options": [
      { "id": "option_1", "text": "By dictating how tasks should be completed", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing features based on customer and business needs", "isCorrect": true },
      { "id": "option_3", "text": "By managing team performance directly", "isCorrect": false },
      { "id": "option_4", "text": "By assigning technical tasks to developers", "isCorrect": false }
    ],
    "hint": "The Product Owner ensures that the right work is prioritized.",
    "answerDescription": "By prioritizing features based on business impact and customer feedback, the Product Owner helps maximize product value."
  },
  {
    "id": "agile_2115",
    "question": "What should a Product Owner do if a stakeholder requests an urgent feature?",
    "options": [
      { "id": "option_1", "text": "Immediately assign it to the current Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Evaluate its priority and consider it for the backlog", "isCorrect": true },
      { "id": "option_3", "text": "Ignore it until the next planning cycle", "isCorrect": false },
      { "id": "option_4", "text": "Replace an existing backlog item without discussion", "isCorrect": false }
    ],
    "hint": "New requests should be assessed before inclusion.",
    "answerDescription": "A Product Owner must evaluate the urgency and impact of a request before adding it to the backlog for prioritization."
  },
  {
    "id": "agile_2116",
    "question": "Which Agile principle is the Product Owner responsible for upholding?",
    "options": [
      { "id": "option_1", "text": "Continuous integration of technical tasks", "isCorrect": false },
      { "id": "option_2", "text": "Delivering maximum business value early and often", "isCorrect": true },
      { "id": "option_3", "text": "Managing daily Scrum meetings", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring team members adhere to company policies", "isCorrect": false }
    ],
    "hint": "Agile promotes frequent delivery of value.",
    "answerDescription": "The Product Owner ensures that development efforts are aligned with business priorities and deliver value in iterations."
  },
  {
    "id": "agile_2117",
    "question": "Why is stakeholder engagement crucial for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To delegate product backlog management", "isCorrect": false },
      { "id": "option_2", "text": "To align the product vision with business goals", "isCorrect": true },
      { "id": "option_3", "text": "To oversee code implementation", "isCorrect": false },
      { "id": "option_4", "text": "To conduct daily team performance reviews", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration ensures alignment with business needs.",
    "answerDescription": "The Product Owner works with stakeholders to ensure the product vision aligns with business and market needs."
  },
  {
    "id": "agile_2118",
    "question": "How does a Product Owner help manage technical debt in an Agile project?",
    "options": [
      { "id": "option_1", "text": "By ignoring it to focus on new features", "isCorrect": false },
      { "id": "option_2", "text": "By balancing feature development with necessary refactoring", "isCorrect": true },
      { "id": "option_3", "text": "By leaving it to the Scrum Master to handle", "isCorrect": false },
      { "id": "option_4", "text": "By reducing testing efforts", "isCorrect": false }
    ],
    "hint": "Technical debt must be managed alongside feature development.",
    "answerDescription": "A Product Owner ensures that addressing technical debt is included in backlog prioritization to maintain long-term product quality."
  },
  {
    "id": "agile_2119",
    "question": "What is one way a Product Owner can increase collaboration with the development team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_2", "text": "By involving the team in backlog refinement", "isCorrect": true },
      { "id": "option_3", "text": "By setting strict deadlines for completion", "isCorrect": false },
      { "id": "option_4", "text": "By restricting access to the product backlog", "isCorrect": false }
    ],
    "hint": "Backlog refinement is a collaborative activity.",
    "answerDescription": "A Product Owner engages the development team in backlog refinement to ensure clarity and feasibility of work items."
  },
  {
    "id": "agile_2120",
    "question": "What is a key outcome of a well-managed product backlog?",
    "options": [
      { "id": "option_1", "text": "A fixed release schedule with no changes", "isCorrect": false },
      { "id": "option_2", "text": "A clear roadmap aligned with business priorities", "isCorrect": true },
      { "id": "option_3", "text": "Increased team micromanagement", "isCorrect": false },
      { "id": "option_4", "text": "Faster deployment without review", "isCorrect": false }
    ],
    "hint": "A well-managed backlog ensures the team works on the most valuable features.",
    "answerDescription": "A clear and prioritized backlog enables the team to deliver high-value work that aligns with business objectives."
  },
  {
    "id": "agile_2121",
    "question": "Which of the following is a responsibility of the Product Owner during Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "Providing technical solutions to team issues", "isCorrect": false },
      { "id": "option_2", "text": "Gathering feedback from stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks for the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "Writing unit tests for completed features", "isCorrect": false }
    ],
    "hint": "The Sprint Review is an opportunity to inspect and adapt the product.",
    "answerDescription": "During Sprint Reviews, the Product Owner gathers feedback from stakeholders to refine the product backlog and guide future development."
  },
  {
    "id": "agile_2122",
    "question": "What is an anti-pattern for a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Prioritizing backlog items based on business value", "isCorrect": false },
      { "id": "option_2", "text": "Changing Sprint scope frequently after it starts", "isCorrect": true },
      { "id": "option_3", "text": "Communicating regularly with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Attending Sprint Planning meetings", "isCorrect": false }
    ],
    "hint": "Constant changes during a Sprint disrupt team focus and progress.",
    "answerDescription": "A Product Owner should avoid changing Sprint scope once it begins, as it disrupts team flow and predictability."
  },
  {
    "id": "agile_2123",
    "question": "What is one key responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing team performance", "isCorrect": false },
      { "id": "option_2", "text": "Handling technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing the product backlog", "isCorrect": true },
      { "id": "option_4", "text": "Leading the daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on backlog refinement and prioritization.",
    "answerDescription": "A Product Owner is responsible for maintaining and prioritizing the product backlog to ensure development aligns with business goals."
  },
  {
    "id": "agile_2124",
    "question": "How should a Product Owner handle conflicting stakeholder requests?",
    "options": [
      { "id": "option_1", "text": "Implement all requests to satisfy stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Reject requests that conflict with the current roadmap", "isCorrect": false },
      { "id": "option_3", "text": "Evaluate the business value and prioritize accordingly", "isCorrect": true },
      { "id": "option_4", "text": "Let the development team decide which request to implement", "isCorrect": false }
    ],
    "hint": "Not all requests are equalâ€”business value is the key factor.",
    "answerDescription": "A Product Owner must assess stakeholder requests based on business value and prioritize them accordingly in the backlog."
  },
  {
    "id": "agile_2125",
    "question": "What is the main benefit of a well-defined product vision for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Ensures quick feature implementation", "isCorrect": false },
      { "id": "option_2", "text": "Reduces the need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "Aligns development efforts with business goals", "isCorrect": true },
      { "id": "option_4", "text": "Minimizes stakeholder involvement", "isCorrect": false }
    ],
    "hint": "A product vision provides direction for the team and stakeholders.",
    "answerDescription": "A clear product vision helps the Product Owner guide development efforts toward delivering value that aligns with business objectives."
  },
  {
    "id": "agile_2126",
    "question": "Why is backlog refinement an important activity for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To reduce developer involvement in planning", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all backlog items are detailed and prioritized", "isCorrect": true },
      { "id": "option_3", "text": "To remove unnecessary user stories", "isCorrect": false },
      { "id": "option_4", "text": "To finalize development tasks for each sprint", "isCorrect": false }
    ],
    "hint": "Backlog refinement ensures the team works on high-priority, well-defined items.",
    "answerDescription": "A well-refined backlog helps the team understand priorities, reducing uncertainty and improving Sprint execution."
  },
  {
    "id": "agile_2127",
    "question": "Which technique can a Product Owner use to ensure stakeholder expectations are managed effectively?",
    "options": [
      { "id": "option_1", "text": "Avoiding stakeholder meetings", "isCorrect": false },
      { "id": "option_2", "text": "Setting fixed release dates", "isCorrect": false },
      { "id": "option_3", "text": "Regularly communicating product roadmap updates", "isCorrect": true },
      { "id": "option_4", "text": "Relying solely on sprint reviews for feedback", "isCorrect": false }
    ],
    "hint": "Keeping stakeholders informed helps align expectations.",
    "answerDescription": "Consistently updating stakeholders on the product roadmap helps prevent misalignment and ensures shared understanding of priorities."
  },
  {
    "id": "agile_2128",
    "question": "What is a common challenge faced by Product Owners in Agile teams?",
    "options": [
      { "id": "option_1", "text": "Lack of involvement in backlog management", "isCorrect": false },
      { "id": "option_2", "text": "Direct control over the development teamâ€™s daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "Balancing stakeholder demands and team capacity", "isCorrect": true },
      { "id": "option_4", "text": "Setting the Sprint goal for the team", "isCorrect": false }
    ],
    "hint": "A Product Owner must prioritize work effectively while managing stakeholder expectations.",
    "answerDescription": "Product Owners often face challenges in balancing business priorities with development team capacity while ensuring product value delivery."
  },
  {
    "id": "agile_2129",
    "question": "How can a Product Owner help ensure continuous product improvement?",
    "options": [
      { "id": "option_1", "text": "Freezing the product backlog once development starts", "isCorrect": false },
      { "id": "option_2", "text": "Deferring customer feedback until the final release", "isCorrect": false },
      { "id": "option_3", "text": "Regularly incorporating user feedback into the backlog", "isCorrect": true },
      { "id": "option_4", "text": "Reducing interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "User feedback is critical to iterative product development.",
    "answerDescription": "By continuously gathering and integrating user feedback, a Product Owner helps refine the product to better meet customer needs."
  },
  {
    "id": "agile_2130",
    "question": "Which skill is essential for a Product Owner to effectively manage a product backlog?",
    "options": [
      { "id": "option_1", "text": "Advanced programming knowledge", "isCorrect": false },
      { "id": "option_2", "text": "Micromanagement of developers", "isCorrect": false },
      { "id": "option_3", "text": "Strong prioritization and decision-making skills", "isCorrect": true },
      { "id": "option_4", "text": "Ability to enforce strict processes", "isCorrect": false }
    ],
    "hint": "The Product Owner must determine which features bring the most value.",
    "answerDescription": "A Product Owner needs strong prioritization and decision-making skills to manage backlog items effectively and maximize business value."
  },
  {
    "id": "agile_2131",
    "question": "What should a Product Owner consider when accepting a user story into a Sprint?",
    "options": [
      { "id": "option_1", "text": "Whether it aligns with the development teamâ€™s preferences", "isCorrect": false },
      { "id": "option_2", "text": "Whether it fits within the available Sprint capacity", "isCorrect": true },
      { "id": "option_3", "text": "Whether it requires no modifications before delivery", "isCorrect": false },
      { "id": "option_4", "text": "Whether it is the oldest item in the backlog", "isCorrect": false }
    ],
    "hint": "Sprint planning involves capacity-based commitment.",
    "answerDescription": "A Product Owner should ensure that backlog items fit within the Sprint's capacity while delivering business value."
  },
  {
    "id": "agile_2132",
    "question": "Which action should a Product Owner take when a feature does not deliver the expected value?",
    "options": [
      { "id": "option_1", "text": "Immediately remove it from the product", "isCorrect": false },
      { "id": "option_2", "text": "Analyze feedback and refine the feature", "isCorrect": true },
      { "id": "option_3", "text": "Blame the development team for poor implementation", "isCorrect": false },
      { "id": "option_4", "text": "Ignore it and focus on new features", "isCorrect": false }
    ],
    "hint": "Data-driven decisions help refine the product.",
    "answerDescription": "A Product Owner should analyze feedback and adjust the feature to better align with user needs and business goals."
  },
  {
    "id": "agile_2133",
    "question": "Which key metric should a Product Owner use to measure product success?",
    "options": [
      { "id": "option_1", "text": "Number of features developed", "isCorrect": false },
      { "id": "option_2", "text": "Sprint velocity", "isCorrect": false },
      { "id": "option_3", "text": "Team workload", "isCorrect": false },
      { "id": "option_4", "text": "Customer satisfaction and business value", "isCorrect": true }
    ],
    "hint": "Product success is measured by impact rather than effort.",
    "answerDescription": "Customer satisfaction and business value are the primary metrics for measuring a product's success."
  },
  {
    "id": "agile_2134",
    "question": "What is a common mistake Product Owners make when managing a backlog?",
    "options": [
      { "id": "option_1", "text": "Prioritizing based on stakeholder demands alone", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring team input", "isCorrect": false },
      { "id": "option_3", "text": "Not refining user stories regularly", "isCorrect": false },
      { "id": "option_4", "text": "Overloading the backlog with low-priority items", "isCorrect": true }
    ],
    "hint": "A cluttered backlog reduces efficiency.",
    "answerDescription": "A backlog should focus on high-value items rather than being filled with low-priority tasks."
  },
  {
    "id": "agile_2135",
    "question": "How can a Product Owner maximize collaboration with the development team?",
    "options": [
      { "id": "option_1", "text": "Providing detailed technical solutions", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing discussions to avoid delays", "isCorrect": false },
      { "id": "option_3", "text": "Delegating all decision-making to the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Actively engaging in sprint planning and refinement", "isCorrect": true }
    ],
    "hint": "Collaboration is key to Agile success.",
    "answerDescription": "A Product Owner should engage in discussions and planning sessions to align priorities and ensure the team understands the vision."
  },
  {
    "id": "agile_2136",
    "question": "Which technique helps a Product Owner create user-focused backlog items?",
    "options": [
      { "id": "option_1", "text": "Writing detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "Defining the architecture in advance", "isCorrect": false },
      { "id": "option_3", "text": "Focusing on internal business goals only", "isCorrect": false },
      { "id": "option_4", "text": "Using user stories with clear acceptance criteria", "isCorrect": true }
    ],
    "hint": "User stories define features from a userâ€™s perspective.",
    "answerDescription": "User stories with well-defined acceptance criteria help ensure backlog items align with customer needs."
  },
  {
    "id": "agile_2137",
    "question": "How should a Product Owner respond when a Sprint goal cannot be met?",
    "options": [
      { "id": "option_1", "text": "Cancel the Sprint and start a new one", "isCorrect": false },
      { "id": "option_2", "text": "Blame the development team for poor execution", "isCorrect": false },
      { "id": "option_3", "text": "Force the team to work overtime", "isCorrect": false },
      { "id": "option_4", "text": "Analyze blockers and adjust future planning", "isCorrect": true }
    ],
    "hint": "Agile is about learning and improving.",
    "answerDescription": "A Product Owner should assess challenges and refine future sprints rather than forcing unrealistic expectations."
  },
  {
    "id": "agile_2138",
    "question": "What is the primary goal of a Product Owner during sprint planning?",
    "options": [
      { "id": "option_1", "text": "Ensure all backlog items are included in the sprint", "isCorrect": false },
      { "id": "option_2", "text": "Dictate how the team implements each feature", "isCorrect": false },
      { "id": "option_3", "text": "Minimize stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "Ensure the team selects the highest-value work", "isCorrect": true }
    ],
    "hint": "Sprint planning is about prioritizing value.",
    "answerDescription": "A Product Ownerâ€™s role in sprint planning is to ensure the team works on the most valuable backlog items."
  },
  {
    "id": "agile_2139",
    "question": "Which practice helps a Product Owner validate if a backlog item delivers value?",
    "options": [
      { "id": "option_1", "text": "Releasing all features at once", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring feedback until the final release", "isCorrect": false },
      { "id": "option_3", "text": "Skipping sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Gathering user feedback after each iteration", "isCorrect": true }
    ],
    "hint": "Frequent feedback loops improve product success.",
    "answerDescription": "A Product Owner should continuously collect feedback to ensure features meet user needs and business goals."
  },
  {
    "id": "agile_2140",
    "question": "What should a Product Owner do if stakeholders request urgent changes mid-sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately add them to the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Ignore all requests to maintain sprint focus", "isCorrect": false },
      { "id": "option_3", "text": "Ask the Scrum Master to handle the decision", "isCorrect": false },
      { "id": "option_4", "text": "Assess urgency and discuss it with the team for prioritization", "isCorrect": true }
    ],
    "hint": "Agile teams balance flexibility and commitment.",
    "answerDescription": "A Product Owner should evaluate the requestâ€™s priority and discuss it with the team before making changes."
  },
  {
    "id": "agile_2141",
    "question": "Why should a Product Owner avoid adding excessive details to backlog items?",
    "options": [
      { "id": "option_1", "text": "It prevents developers from contributing ideas", "isCorrect": false },
      { "id": "option_2", "text": "Detailed items slow down delivery", "isCorrect": false },
      { "id": "option_3", "text": "It makes backlog refinement unnecessary", "isCorrect": false },
      { "id": "option_4", "text": "Too much detail can reduce flexibility in implementation", "isCorrect": true }
    ],
    "hint": "Backlog items should focus on value, not strict implementation details.",
    "answerDescription": "Backlog items should provide enough information for understanding but allow room for team collaboration and adaptation."
  },
  {
    "id": "agile_2142",
    "question": "How can a Product Owner help development teams remain focused on product goals?",
    "options": [
      { "id": "option_1", "text": "By restricting team discussions", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding backlog updates", "isCorrect": false },
      { "id": "option_3", "text": "By setting fixed priorities for all sprints", "isCorrect": false },
      { "id": "option_4", "text": "By reinforcing the product vision and key objectives", "isCorrect": true }
    ],
    "hint": "A clear vision helps teams stay aligned.",
    "answerDescription": "Regularly communicating the product vision ensures teams remain focused on delivering value-driven outcomes."
  },
  {
    "id": "agile_2143",
    "question": "What is a key responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Defining and prioritizing the product backlog", "isCorrect": true },
      { "id": "option_2", "text": "Managing the development teamâ€™s workload", "isCorrect": false },
      { "id": "option_3", "text": "Supervising the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Creating technical implementation plans", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on backlog refinement and prioritization.",
    "answerDescription": "The Product Owner is responsible for defining the backlog, ensuring alignment with business goals, and prioritizing items for development."
  },
  {
    "id": "agile_2144",
    "question": "How can a Product Owner foster collaboration between developers and stakeholders?",
    "options": [
      { "id": "option_1", "text": "By facilitating regular communication and feedback sessions", "isCorrect": true },
      { "id": "option_2", "text": "By keeping stakeholders and developers separate", "isCorrect": false },
      { "id": "option_3", "text": "By restricting stakeholder involvement until project completion", "isCorrect": false },
      { "id": "option_4", "text": "By making all decisions without input from the team", "isCorrect": false }
    ],
    "hint": "Agile thrives on collaboration and transparency.",
    "answerDescription": "The Product Owner fosters collaboration by maintaining open communication between developers and stakeholders."
  },
   {
    "id": "agile_2145",
    "question": "Which event allows the Product Owner to review and adjust priorities?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event involves stakeholders and helps refine the backlog.",
    "answerDescription": "During the Sprint Review, the Product Owner gathers feedback from stakeholders and adjusts backlog priorities accordingly."
  },
  {
    "id": "agile_2146",
    "question": "What should a Product Owner consider when prioritizing the backlog?",
    "options": [
      { "id": "option_1", "text": "Customer value and business impact", "isCorrect": true },
      { "id": "option_2", "text": "The seniority of the requesting stakeholder", "isCorrect": false },
      { "id": "option_3", "text": "Personal preferences", "isCorrect": false },
      { "id": "option_4", "text": "Team velocity alone", "isCorrect": false }
    ],
    "hint": "The focus should be on delivering maximum value.",
    "answerDescription": "Prioritization should be based on customer value, business goals, and strategic alignment rather than personal biases or hierarchy."
  },
  {
    "id": "agile_2147",
    "question": "How does a Product Owner ensure continuous value delivery?",
    "options": [
      { "id": "option_1", "text": "Regularly refining the backlog", "isCorrect": true },
      { "id": "option_2", "text": "Only updating the backlog at the start of each sprint", "isCorrect": false },
      { "id": "option_3", "text": "Making the Scrum Master responsible for backlog changes", "isCorrect": false },
      { "id": "option_4", "text": "Focusing solely on feature development", "isCorrect": false }
    ],
    "hint": "Backlog management is an ongoing process.",
    "answerDescription": "By continuously refining the backlog, the Product Owner ensures that the most valuable items are always ready for development."
  },
  {
    "id": "agile_2148",
    "question": "Which skill is most critical for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Decision-making based on business value", "isCorrect": true },
      { "id": "option_2", "text": "Writing extensive documentation", "isCorrect": false },
      { "id": "option_3", "text": "Enforcing strict deadlines", "isCorrect": false },
      { "id": "option_4", "text": "Directly managing developers", "isCorrect": false }
    ],
    "hint": "A Product Owner must focus on making choices that impact business success.",
    "answerDescription": "Strong decision-making skills help the Product Owner prioritize work that delivers maximum value."
  },
  {
    "id": "agile_2149",
    "question": "How does a Product Owner help reduce risks in Agile development?",
    "options": [
      { "id": "option_1", "text": "By validating assumptions with stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "By ensuring that only high-priority tasks are completed", "isCorrect": false },
      { "id": "option_3", "text": "By making all decisions without consulting the team", "isCorrect": false },
      { "id": "option_4", "text": "By extending sprint lengths for better planning", "isCorrect": false }
    ],
    "hint": "Risk mitigation involves continuous feedback.",
    "answerDescription": "Validating assumptions with stakeholders ensures alignment and helps mitigate potential risks early in the development process."
  },
  {
    "id": "agile_2150",
    "question": "What is a primary challenge a Product Owner faces in Agile?",
    "options": [
      { "id": "option_1", "text": "Balancing stakeholder expectations and team capacity", "isCorrect": true },
      { "id": "option_2", "text": "Handling technical implementation decisions", "isCorrect": false },
      { "id": "option_3", "text": "Managing HR and payroll tasks", "isCorrect": false },
      { "id": "option_4", "text": "Defining the Scrum framework", "isCorrect": false }
    ],
    "hint": "The Product Owner must consider both business and development perspectives.",
    "answerDescription": "The challenge lies in balancing business demands with realistic development timelines to maximize product value."
  },
  {
    "id": "agile_2151",
    "question": "Which Agile principle is most relevant to the Product Owner role?",
    "options": [
      { "id": "option_1", "text": "Delivering value early and continuously", "isCorrect": true },
      { "id": "option_2", "text": "Following a fixed, rigid plan", "isCorrect": false },
      { "id": "option_3", "text": "Relying on documentation over collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizing technical implementation over business goals", "isCorrect": false }
    ],
    "hint": "Agile promotes continuous improvement and flexibility.",
    "answerDescription": "A Product Owner must ensure that value is delivered early and continuously by aligning work with business priorities."
  },
  {
    "id": "agile_2152",
    "question": "What is the impact of an ineffective Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Delays in decision-making and reduced product value", "isCorrect": true },
      { "id": "option_2", "text": "Faster development cycles", "isCorrect": false },
      { "id": "option_3", "text": "Improved team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "Less need for backlog refinement", "isCorrect": false }
    ],
    "hint": "The Product Owner directly influences backlog clarity and priorities.",
    "answerDescription": "An ineffective Product Owner leads to unclear priorities, slower decision-making, and ultimately, reduced value delivery."
  },
  {
    "id": "agile_2153",
    "question": "What is a key attribute of an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Strictly following a fixed plan", "isCorrect": false },
      { "id": "option_2", "text": "Strong communication and decision-making skills", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding stakeholder input", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on development tasks", "isCorrect": false }
    ],
    "hint": "A Product Owner must work closely with teams and stakeholders.",
    "answerDescription": "Strong communication and decision-making help the Product Owner balance stakeholder needs and development priorities."
  },
  {
    "id": "agile_2154",
    "question": "How does a Product Owner ensure alignment with business goals?",
    "options": [
      { "id": "option_1", "text": "Ignoring changes to requirements", "isCorrect": false },
      { "id": "option_2", "text": "Regularly engaging with stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "Micromanaging development tasks", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on sprint planning", "isCorrect": false }
    ],
    "hint": "Collaboration with stakeholders is crucial for alignment.",
    "answerDescription": "Engaging with stakeholders ensures that business objectives are met and product value is maximized."
  },
  {
    "id": "agile_2155",
    "question": "What should a Product Owner do to refine the product backlog?",
    "options": [
      { "id": "option_1", "text": "Lock backlog items for the entire project", "isCorrect": false },
      { "id": "option_2", "text": "Continuously update and prioritize items", "isCorrect": true },
      { "id": "option_3", "text": "Remove all feedback-based changes", "isCorrect": false },
      { "id": "option_4", "text": "Delegate backlog refinement to developers", "isCorrect": false }
    ],
    "hint": "Backlog refinement is an ongoing process.",
    "answerDescription": "Regular backlog updates ensure that the most valuable and relevant work is prioritized."
  },
  {
    "id": "agile_2156",
    "question": "Which technique helps a Product Owner prioritize backlog items effectively?",
    "options": [
      { "id": "option_1", "text": "Sorting tasks by completion time", "isCorrect": false },
      { "id": "option_2", "text": "Using a value-based ranking system", "isCorrect": true },
      { "id": "option_3", "text": "Selecting items randomly", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizing only technical improvements", "isCorrect": false }
    ],
    "hint": "Prioritization should focus on value delivery.",
    "answerDescription": "A value-based ranking system helps ensure that high-impact features are developed first."
  },
  {
    "id": "agile_2157",
    "question": "What challenge does a Product Owner often face?",
    "options": [
      { "id": "option_1", "text": "Having too much development control", "isCorrect": false },
      { "id": "option_2", "text": "Balancing conflicting stakeholder demands", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding user feedback", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing backlog refinement", "isCorrect": false }
    ],
    "hint": "Stakeholders often have different priorities.",
    "answerDescription": "Managing diverse stakeholder expectations while keeping the product vision intact is a key challenge for Product Owners."
  },
  {
    "id": "agile_2158",
    "question": "How can a Product Owner maximize development team efficiency?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks directly to developers", "isCorrect": false },
      { "id": "option_2", "text": "Providing a clear and well-prioritized backlog", "isCorrect": true },
      { "id": "option_3", "text": "Setting sprint goals without team input", "isCorrect": false },
      { "id": "option_4", "text": "Controlling daily standups", "isCorrect": false }
    ],
    "hint": "Clear priorities help teams work efficiently.",
    "answerDescription": "A well-maintained backlog ensures that the team can focus on delivering the most valuable work efficiently."
  },
  {
    "id": "agile_2159",
    "question": "Why is stakeholder feedback important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To add new features constantly", "isCorrect": false },
      { "id": "option_2", "text": "To validate priorities and improve the product", "isCorrect": true },
      { "id": "option_3", "text": "To extend development timelines", "isCorrect": false },
      { "id": "option_4", "text": "To finalize the backlog early", "isCorrect": false }
    ],
    "hint": "Feedback helps refine the backlog.",
    "answerDescription": "Stakeholder feedback ensures that the product aligns with business needs and provides continuous value."
  },
  {
    "id": "agile_2160",
    "question": "What is the role of a Product Owner in sprint planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Clarifying backlog items and setting priorities", "isCorrect": true },
      { "id": "option_3", "text": "Monitoring team performance closely", "isCorrect": false },
      { "id": "option_4", "text": "Leading technical discussions", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on backlog clarity during planning.",
    "answerDescription": "Providing clarity on backlog items ensures that sprint goals align with business priorities."
  },
  {
    "id": "agile_2161",
    "question": "What is the key difference between a Product Owner and a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master owns the backlog", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner focuses on business value, while the Scrum Master facilitates the process", "isCorrect": true },
      { "id": "option_3", "text": "The Scrum Master makes final product decisions", "isCorrect": false },
      { "id": "option_4", "text": "The Product Owner ensures technical implementation", "isCorrect": false }
    ],
    "hint": "The Product Owner is responsible for product value, while the Scrum Master focuses on Agile processes.",
    "answerDescription": "The Product Owner defines priorities and business goals, while the Scrum Master ensures smooth Agile practices."
  },
  {
    "id": "agile_2162",
    "question": "How does a Product Owner ensure sprint goals are met?",
    "options": [
      { "id": "option_1", "text": "By tracking each developer's daily work", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring backlog items are well-defined and prioritized", "isCorrect": true },
      { "id": "option_3", "text": "By creating strict deadlines for tasks", "isCorrect": false },
      { "id": "option_4", "text": "By micromanaging the development process", "isCorrect": false }
    ],
    "hint": "Sprint success depends on backlog clarity and prioritization.",
    "answerDescription": "A well-prioritized backlog ensures that sprint goals align with business needs and development efforts."
  },
  {
    "id": "agile_2163",
    "question": "What is one of the primary responsibilities of a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Ensuring code quality", "isCorrect": false },
      { "id": "option_2", "text": "Managing the Scrum team", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing backlog items based on business value", "isCorrect": true },
      { "id": "option_4", "text": "Assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on value delivery.",
    "answerDescription": "Prioritizing backlog items ensures that the most valuable features are developed first."
  },
  {
    "id": "agile_2164",
    "question": "How can a Product Owner facilitate smooth Agile development?",
    "options": [
      { "id": "option_1", "text": "Micromanaging developers' work", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding stakeholder meetings", "isCorrect": false },
      { "id": "option_3", "text": "Providing clear acceptance criteria for backlog items", "isCorrect": true },
      { "id": "option_4", "text": "Skipping backlog refinement sessions", "isCorrect": false }
    ],
    "hint": "Clearly defining expectations helps the team work efficiently.",
    "answerDescription": "Well-defined acceptance criteria ensure that development aligns with business needs and stakeholder expectations."
  },
  {
    "id": "agile_2165",
    "question": "What should a Product Owner do to manage changing priorities effectively?",
    "options": [
      { "id": "option_1", "text": "Ignore changes after sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "Let the development team handle priority decisions", "isCorrect": false },
      { "id": "option_3", "text": "Continuously communicate with stakeholders and update backlog priorities", "isCorrect": true },
      { "id": "option_4", "text": "Freeze the backlog for long periods", "isCorrect": false }
    ],
    "hint": "Agility involves adapting to change.",
    "answerDescription": "Regular communication with stakeholders allows the Product Owner to adjust priorities based on evolving business needs."
  },
  {
    "id": "agile_2166",
    "question": "What technique can help a Product Owner estimate and prioritize features?",
    "options": [
      { "id": "option_1", "text": "Assigning features randomly", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring technical complexity", "isCorrect": false },
      { "id": "option_3", "text": "Using story points and business value assessment", "isCorrect": true },
      { "id": "option_4", "text": "Relying only on developer estimates", "isCorrect": false }
    ],
    "hint": "Estimations should balance effort and value.",
    "answerDescription": "Story points help estimate effort, while business value assessment ensures the highest impact features are prioritized."
  },
  {
    "id": "agile_2167",
    "question": "How does a Product Owner ensure stakeholder needs are met?",
    "options": [
      { "id": "option_1", "text": "By finalizing requirements at the start of the project", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on technical improvements", "isCorrect": false },
      { "id": "option_3", "text": "By maintaining continuous collaboration with stakeholders", "isCorrect": true },
      { "id": "option_4", "text": "By making independent decisions without feedback", "isCorrect": false }
    ],
    "hint": "Regular engagement helps align product goals.",
    "answerDescription": "Continuous stakeholder involvement ensures the product meets their needs and aligns with business objectives."
  },
  {
    "id": "agile_2168",
    "question": "What is a key outcome of an effective backlog refinement session?",
    "options": [
      { "id": "option_1", "text": "Eliminating user stories", "isCorrect": false },
      { "id": "option_2", "text": "Fixing all bugs", "isCorrect": false },
      { "id": "option_3", "text": "Clarifying and prioritizing backlog items", "isCorrect": true },
      { "id": "option_4", "text": "Extending sprint length", "isCorrect": false }
    ],
    "hint": "Refinement helps teams prepare for future work.",
    "answerDescription": "A well-refined backlog improves clarity, allowing teams to work efficiently on the most important tasks."
  },
  {
    "id": "agile_2169",
    "question": "Why is it important for a Product Owner to understand the development process?",
    "options": [
      { "id": "option_1", "text": "To take over coding tasks", "isCorrect": false },
      { "id": "option_2", "text": "To create technical solutions", "isCorrect": false },
      { "id": "option_3", "text": "To make informed prioritization decisions", "isCorrect": true },
      { "id": "option_4", "text": "To directly assign work to developers", "isCorrect": false }
    ],
    "hint": "Understanding development helps align business goals with feasibility.",
    "answerDescription": "A Product Owner with knowledge of the development process can prioritize work effectively and avoid unrealistic expectations."
  },
  {
    "id": "agile_2170",
    "question": "What is a common challenge for Product Owners in Agile teams?",
    "options": [
      { "id": "option_1", "text": "Managing team performance", "isCorrect": false },
      { "id": "option_2", "text": "Developing technical solutions", "isCorrect": false },
      { "id": "option_3", "text": "Handling conflicting stakeholder priorities", "isCorrect": true },
      { "id": "option_4", "text": "Writing unit tests", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have competing interests.",
    "answerDescription": "Balancing stakeholder priorities while maintaining the product vision is a key challenge for Product Owners."
  },
  {
    "id": "agile_2171",
    "question": "How should a Product Owner collaborate with developers during a sprint?",
    "options": [
      { "id": "option_1", "text": "By assigning specific tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding direct interaction to maintain objectivity", "isCorrect": false },
      { "id": "option_3", "text": "By clarifying user stories and acceptance criteria", "isCorrect": true },
      { "id": "option_4", "text": "By changing sprint goals frequently", "isCorrect": false }
    ],
    "hint": "Clear requirements ensure smooth development.",
    "answerDescription": "Providing clarity on user stories and acceptance criteria helps developers deliver the expected functionality."
  },
  {
    "id": "agile_2172",
    "question": "Why is a Product Ownerâ€™s role critical in Agile success?",
    "options": [
      { "id": "option_1", "text": "Because they enforce strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Because they manage the development team", "isCorrect": false },
      { "id": "option_3", "text": "Because they ensure the product delivers maximum value", "isCorrect": true },
      { "id": "option_4", "text": "Because they create technical designs", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering value.",
    "answerDescription": "The Product Ownerâ€™s responsibility is to ensure that each sprint delivers the most valuable outcomes for the business."
  },
  {
    "id": "agile_2173",
    "question": "Which of the following is a key responsibility of a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Managing the development team", "isCorrect": false },
      { "id": "option_2", "text": "Defining and prioritizing the product backlog", "isCorrect": true },
      { "id": "option_3", "text": "Writing unit tests for the software", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring all technical tasks are completed", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on backlog management.",
    "answerDescription": "Defining and prioritizing the backlog ensures that development efforts align with business goals."
  },
  {
    "id": "agile_2174",
    "question": "How should a Product Owner handle conflicting stakeholder requests?",
    "options": [
      { "id": "option_1", "text": "Accept all requests to maintain good relationships", "isCorrect": false },
      { "id": "option_2", "text": "Evaluate requests based on business value and priorities", "isCorrect": true },
      { "id": "option_3", "text": "Ignore requests until the next sprint", "isCorrect": false },
      { "id": "option_4", "text": "Delegate decisions to the Scrum Master", "isCorrect": false }
    ],
    "hint": "Decisions should be based on value and priority.",
    "answerDescription": "A Product Owner must assess the impact of each request to ensure the highest business value is delivered."
  },
  {
    "id": "agile_2175",
    "question": "What is a key way for a Product Owner to maximize value delivery?",
    "options": [
      { "id": "option_1", "text": "Assigning specific tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring backlog items are prioritized based on impact", "isCorrect": true },
      { "id": "option_3", "text": "Focusing on the quickest tasks first", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding stakeholder input", "isCorrect": false }
    ],
    "hint": "Prioritization should focus on business impact.",
    "answerDescription": "Proper backlog prioritization ensures that the most valuable features are delivered first."
  },
  {
    "id": "agile_2176",
    "question": "What technique can help a Product Owner refine user stories effectively?",
    "options": [
      { "id": "option_1", "text": "Avoiding detailed descriptions", "isCorrect": false },
      { "id": "option_2", "text": "Defining clear acceptance criteria", "isCorrect": true },
      { "id": "option_3", "text": "Leaving refinement to the development team", "isCorrect": false },
      { "id": "option_4", "text": "Skipping backlog grooming sessions", "isCorrect": false }
    ],
    "hint": "A well-defined story ensures better implementation.",
    "answerDescription": "Clear acceptance criteria help developers understand requirements and deliver the expected outcomes."
  },
  {
    "id": "agile_2177",
    "question": "Why is stakeholder collaboration important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To avoid technical debt", "isCorrect": false },
      { "id": "option_2", "text": "To align product goals with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To manage developer productivity", "isCorrect": false },
      { "id": "option_4", "text": "To create test cases", "isCorrect": false }
    ],
    "hint": "Stakeholders provide valuable business insights.",
    "answerDescription": "Regular collaboration ensures that the product evolves according to business and market needs."
  },
  {
    "id": "agile_2178",
    "question": "What is a common mistake Product Owners make?",
    "options": [
      { "id": "option_1", "text": "Focusing only on long-term planning", "isCorrect": false },
      { "id": "option_2", "text": "Not engaging with the development team frequently", "isCorrect": true },
      { "id": "option_3", "text": "Using customer feedback for prioritization", "isCorrect": false },
      { "id": "option_4", "text": "Clarifying backlog items regularly", "isCorrect": false }
    ],
    "hint": "A Product Owner should be actively involved with the team.",
    "answerDescription": "Regular engagement with the team ensures alignment and successful product delivery."
  },
  {
    "id": "agile_2179",
    "question": "What is one key benefit of having a dedicated Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "They reduce the need for retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "They provide a clear vision and direction for the product", "isCorrect": true },
      { "id": "option_3", "text": "They make technical implementation decisions", "isCorrect": false },
      { "id": "option_4", "text": "They replace the need for Scrum Masters", "isCorrect": false }
    ],
    "hint": "Product Owners focus on guiding the product vision.",
    "answerDescription": "A Product Owner helps maintain alignment between the development team and business objectives."
  },
  {
    "id": "agile_2180",
    "question": "How does a Product Owner ensure the team works on the most valuable items?",
    "options": [
      { "id": "option_1", "text": "By focusing on fixing small bugs first", "isCorrect": false },
      { "id": "option_2", "text": "By continuously refining and reprioritizing the backlog", "isCorrect": true },
      { "id": "option_3", "text": "By assigning tasks directly to developers", "isCorrect": false },
      { "id": "option_4", "text": "By setting fixed priorities for multiple sprints", "isCorrect": false }
    ],
    "hint": "The backlog should remain dynamic based on business needs.",
    "answerDescription": "Ongoing refinement ensures that development efforts align with evolving priorities."
  },
  {
    "id": "agile_2181",
    "question": "What is a critical skill for a successful Product Owner?",
    "options": [
      { "id": "option_1", "text": "Writing unit tests", "isCorrect": false },
      { "id": "option_2", "text": "Effective communication with stakeholders and teams", "isCorrect": true },
      { "id": "option_3", "text": "Developing software code", "isCorrect": false },
      { "id": "option_4", "text": "Enforcing strict deadlines", "isCorrect": false }
    ],
    "hint": "Collaboration and clarity are key to success.",
    "answerDescription": "A Product Owner must bridge the gap between business and technical teams through clear communication."
  },
  {
    "id": "agile_2182",
    "question": "How can a Product Owner help a team maintain Agile principles?",
    "options": [
      { "id": "option_1", "text": "By avoiding customer feedback", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring iterative delivery and continuous feedback", "isCorrect": true },
      { "id": "option_3", "text": "By prioritizing only technical debt", "isCorrect": false },
      { "id": "option_4", "text": "By locking backlog items for the entire project duration", "isCorrect": false }
    ],
    "hint": "Agile is about adapting and delivering iteratively.",
    "answerDescription": "Continuous feedback and iterative delivery help maintain Agile principles and customer satisfaction."
  },
  {
    "id": "agile_2183",
    "question": "Which key artifact is managed by the Product Owner in Scrum?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Burndown Chart", "isCorrect": false },
      { "id": "option_3", "text": "Release Plan", "isCorrect": false },
      { "id": "option_4", "text": "Product Backlog", "isCorrect": true }
    ],
    "hint": "This artifact contains prioritized user stories.",
    "answerDescription": "The Product Owner manages the Product Backlog to ensure it aligns with business needs and priorities."
  },
  {
    "id": "agile_2184",
    "question": "What is the primary goal of backlog refinement sessions?",
    "options": [
      { "id": "option_1", "text": "To estimate sprint velocity", "isCorrect": false },
      { "id": "option_2", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To remove completed backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To clarify and prioritize backlog items", "isCorrect": true }
    ],
    "hint": "Refinement ensures backlog readiness for upcoming sprints.",
    "answerDescription": "Backlog refinement helps the team understand, break down, and prioritize work effectively."
  },
  {
    "id": "agile_2185",
    "question": "How should a Product Owner define acceptance criteria for user stories?",
    "options": [
      { "id": "option_1", "text": "By leaving it open for interpretation", "isCorrect": false },
      { "id": "option_2", "text": "By setting broad objectives only", "isCorrect": false },
      { "id": "option_3", "text": "By making them optional", "isCorrect": false },
      { "id": "option_4", "text": "By providing clear and measurable conditions", "isCorrect": true }
    ],
    "hint": "Acceptance criteria should remove ambiguity.",
    "answerDescription": "Well-defined acceptance criteria help developers understand the requirements and deliver quality work."
  },
  {
    "id": "agile_2186",
    "question": "Why is stakeholder feedback crucial for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "It ensures a fixed scope for development", "isCorrect": false },
      { "id": "option_4", "text": "It helps align the product with business needs", "isCorrect": true }
    ],
    "hint": "Stakeholders influence product direction.",
    "answerDescription": "Regular stakeholder feedback ensures that the product remains valuable and aligned with business objectives."
  },
  {
    "id": "agile_2187",
    "question": "What should a Product Owner do if a high-priority item is not ready for development?",
    "options": [
      { "id": "option_1", "text": "Force the team to implement it anyway", "isCorrect": false },
      { "id": "option_2", "text": "Skip backlog refinement sessions", "isCorrect": false },
      { "id": "option_3", "text": "Ignore dependencies and start implementation", "isCorrect": false },
      { "id": "option_4", "text": "Refine the item further before prioritizing it", "isCorrect": true }
    ],
    "hint": "Items must be ready before implementation.",
    "answerDescription": "A well-refined backlog ensures smooth development and reduces confusion within the team."
  },
  {
    "id": "agile_2188",
    "question": "What is a Product Ownerâ€™s role in sprint planning?",
    "options": [
      { "id": "option_1", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To set fixed deadlines for all tasks", "isCorrect": false },
      { "id": "option_3", "text": "To finalize sprint velocity", "isCorrect": false },
      { "id": "option_4", "text": "To clarify priorities and backlog items", "isCorrect": true }
    ],
    "hint": "The Product Owner helps guide the sprint backlog.",
    "answerDescription": "By ensuring clear priorities, the Product Owner helps the team plan effectively for the sprint."
  },
  {
    "id": "agile_2189",
    "question": "Which of the following is NOT a responsibility of a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Defining product goals", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing backlog items", "isCorrect": false },
      { "id": "option_3", "text": "Engaging with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Managing the development teamâ€™s daily work", "isCorrect": true }
    ],
    "hint": "A Product Owner focuses on the backlog and product vision.",
    "answerDescription": "The Scrum Master and development team handle daily tasks, while the Product Owner manages the backlog and priorities."
  },
  {
    "id": "agile_2190",
    "question": "What should a Product Owner do if a stakeholder requests a last-minute feature addition?",
    "options": [
      { "id": "option_1", "text": "Immediately add it to the current sprint", "isCorrect": false },
      { "id": "option_2", "text": "Reject the request outright", "isCorrect": false },
      { "id": "option_3", "text": "Allow the team to decide independently", "isCorrect": false },
      { "id": "option_4", "text": "Evaluate priority and fit it into the backlog appropriately", "isCorrect": true }
    ],
    "hint": "New requests should be assessed before inclusion.",
    "answerDescription": "Prioritization ensures that only valuable and feasible items are added to the backlog."
  },
  {
    "id": "agile_2191",
    "question": "Why is a Product Owner responsible for maintaining a well-structured backlog?",
    "options": [
      { "id": "option_1", "text": "To control the development team's daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the Scrum Master has less work", "isCorrect": false },
      { "id": "option_3", "text": "To limit changes to the product vision", "isCorrect": false },
      { "id": "option_4", "text": "To keep development focused on the highest-value work", "isCorrect": true }
    ],
    "hint": "A well-maintained backlog helps deliver value effectively.",
    "answerDescription": "A clear and prioritized backlog ensures that the development team focuses on delivering high-value features."
  },
  {
    "id": "agile_2192",
    "question": "What is a sign of an ineffective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Engaging regularly with stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing backlog items based on business value", "isCorrect": false },
      { "id": "option_3", "text": "Clarifying requirements for the team", "isCorrect": false },
      { "id": "option_4", "text": "Failing to update the backlog based on feedback", "isCorrect": true }
    ],
    "hint": "The backlog should evolve with feedback and priorities.",
    "answerDescription": "A Product Owner must actively refine and prioritize the backlog to keep the team aligned with business goals."
  },  {
    "id": "agile_2193",
    "question": "What is the main responsibility of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Maximizing product value", "isCorrect": true },
      { "id": "option_2", "text": "Managing team velocity", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Defining sprint goals", "isCorrect": false }
    ],
    "hint": "The Product Owner focuses on business value.",
    "answerDescription": "A Product Owner ensures that backlog items align with business goals and provide maximum value."
  },
  {
    "id": "agile_2194",
    "question": "Which Agile event allows the Product Owner to showcase completed work to stakeholders?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event involves gathering feedback on completed work.",
    "answerDescription": "During the Sprint Review, stakeholders review the product increment and provide feedback for future improvements."
  },
  {
    "id": "agile_2195",
    "question": "What should a Product Owner do when there is a conflict between stakeholders regarding priorities?",
    "options": [
      { "id": "option_1", "text": "Facilitate discussions to align priorities", "isCorrect": true },
      { "id": "option_2", "text": "Ignore the disagreement", "isCorrect": false },
      { "id": "option_3", "text": "Give priority to the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_4", "text": "Let the development team decide", "isCorrect": false }
    ],
    "hint": "Stakeholder alignment is key to backlog prioritization.",
    "answerDescription": "A Product Owner must mediate conflicts and ensure priorities align with business goals and user needs."
  },
  {
    "id": "agile_2196",
    "question": "Which characteristic is essential for a successful Product Owner?",
    "options": [
      { "id": "option_1", "text": "Strong decision-making skills", "isCorrect": true },
      { "id": "option_2", "text": "Advanced coding ability", "isCorrect": false },
      { "id": "option_3", "text": "Extensive testing experience", "isCorrect": false },
      { "id": "option_4", "text": "Daily involvement in development tasks", "isCorrect": false }
    ],
    "hint": "A Product Owner must make critical choices quickly.",
    "answerDescription": "Strong decision-making helps a Product Owner prioritize effectively and guide the team toward success."
  },
  {
    "id": "agile_2197",
    "question": "What should a Product Owner do to ensure the backlog remains effective?",
    "options": [
      { "id": "option_1", "text": "Continuously refine and prioritize items", "isCorrect": true },
      { "id": "option_2", "text": "Lock the backlog after sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "Allow only developers to modify it", "isCorrect": false },
      { "id": "option_4", "text": "Avoid changes until a feature is complete", "isCorrect": false }
    ],
    "hint": "A backlog must evolve based on feedback and business needs.",
    "answerDescription": "Refinement ensures backlog items remain relevant, clear, and valuable for the development team."
  },
  {
    "id": "agile_2198",
    "question": "Why is user feedback crucial for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To validate product assumptions", "isCorrect": true },
      { "id": "option_2", "text": "To replace developer estimates", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "To ensure team velocity remains stable", "isCorrect": false }
    ],
    "hint": "Users help shape product improvements.",
    "answerDescription": "User feedback helps the Product Owner refine features and validate if the product meets user needs."
  },
  {
    "id": "agile_2199",
    "question": "How can a Product Owner ensure alignment between development and business goals?",
    "options": [
      { "id": "option_1", "text": "By communicating a clear product vision", "isCorrect": true },
      { "id": "option_2", "text": "By focusing only on technical tasks", "isCorrect": false },
      { "id": "option_3", "text": "By increasing the number of sprints", "isCorrect": false },
      { "id": "option_4", "text": "By micromanaging the team", "isCorrect": false }
    ],
    "hint": "A clear vision helps bridge business and development efforts.",
    "answerDescription": "By ensuring a shared understanding of the product vision, the Product Owner helps align development with business priorities."
  },
  {
    "id": "agile_2200",
    "question": "Which Agile principle should a Product Owner follow when prioritizing backlog items?",
    "options": [
      { "id": "option_1", "text": "Delivering value early and often", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring all features are developed simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "Deferring customer feedback", "isCorrect": false },
      { "id": "option_4", "text": "Locking the backlog after refinement", "isCorrect": false }
    ],
    "hint": "Frequent delivery ensures user satisfaction.",
    "answerDescription": "Prioritizing based on delivering value early helps the team adjust to feedback and business needs efficiently."
  },
  {
    "id": "agile_2201",
    "question": "How should a Product Owner handle technical debt in the backlog?",
    "options": [
      { "id": "option_1", "text": "By balancing new features with necessary refactoring", "isCorrect": true },
      { "id": "option_2", "text": "By focusing only on new feature development", "isCorrect": false },
      { "id": "option_3", "text": "By allowing developers to manage it independently", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring it until a major issue arises", "isCorrect": false }
    ],
    "hint": "Ignoring technical debt can slow down development.",
    "answerDescription": "A balance between feature development and addressing technical debt ensures long-term system health."
  },
  {
    "id": "agile_2202",
    "question": "What is an indicator of a Product Ownerâ€™s success?",
    "options": [
      { "id": "option_1", "text": "High customer satisfaction", "isCorrect": true },
      { "id": "option_2", "text": "Fixed backlog items with no changes", "isCorrect": false },
      { "id": "option_3", "text": "Increasing story points per sprint", "isCorrect": false },
      { "id": "option_4", "text": "A large number of backlog items", "isCorrect": false }
    ],
    "hint": "The Product Ownerâ€™s success is tied to product value.",
    "answerDescription": "Customer satisfaction reflects the effectiveness of backlog prioritization and product decisions."
  },
  {
    "id": "agile_2203",
    "question": "What is the primary focus of a Product Owner when managing the backlog?",
    "options": [
      { "id": "option_1", "text": "Ensuring all items are detailed upfront", "isCorrect": false },
      { "id": "option_2", "text": "Maximizing business value", "isCorrect": true },
      { "id": "option_3", "text": "Minimizing development effort", "isCorrect": false },
      { "id": "option_4", "text": "Keeping the backlog size constant", "isCorrect": false }
    ],
    "hint": "The Product Owner's responsibility is aligned with business goals.",
    "answerDescription": "A Product Owner prioritizes backlog items to deliver the highest business value effectively."
  },
  {
    "id": "agile_2204",
    "question": "How should a Product Owner handle changes in customer requirements?",
    "options": [
      { "id": "option_1", "text": "Reject changes to maintain stability", "isCorrect": false },
      { "id": "option_2", "text": "Incorporate changes into backlog prioritization", "isCorrect": true },
      { "id": "option_3", "text": "Only consider changes after a sprint ends", "isCorrect": false },
      { "id": "option_4", "text": "Let the development team decide", "isCorrect": false }
    ],
    "hint": "Agility involves responding to change effectively.",
    "answerDescription": "A Product Owner should adjust priorities dynamically to align with evolving customer needs."
  },
  {
    "id": "agile_2205",
    "question": "Which activity should a Product Owner regularly engage in to keep the backlog effective?",
    "options": [
      { "id": "option_1", "text": "Finalizing all user stories at the start", "isCorrect": false },
      { "id": "option_2", "text": "Backlog refinement", "isCorrect": true },
      { "id": "option_3", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "Increasing sprint lengths", "isCorrect": false }
    ],
    "hint": "The backlog is a living document that needs continuous attention.",
    "answerDescription": "Refinement helps keep backlog items relevant, clear, and prioritized for smooth development cycles."
  },
  {
    "id": "agile_2206",
    "question": "Why should a Product Owner work closely with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure sprint goals are met", "isCorrect": false },
      { "id": "option_2", "text": "To align product development with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To approve all code changes", "isCorrect": false }
    ],
    "hint": "Stakeholders influence the product's direction.",
    "answerDescription": "Close collaboration ensures that product development aligns with strategic goals and customer expectations."
  },
  {
    "id": "agile_2207",
    "question": "What is an important skill for a Product Owner when communicating with the team?",
    "options": [
      { "id": "option_1", "text": "Technical expertise", "isCorrect": false },
      { "id": "option_2", "text": "Effective storytelling", "isCorrect": true },
      { "id": "option_3", "text": "Commanding authority", "isCorrect": false },
      { "id": "option_4", "text": "Micromanaging development tasks", "isCorrect": false }
    ],
    "hint": "A Product Owner must convey vision and purpose effectively.",
    "answerDescription": "Storytelling helps articulate the business value and user needs behind backlog items."
  },
  {
    "id": "agile_2208",
    "question": "When should a Product Owner accept a user story as complete?",
    "options": [
      { "id": "option_1", "text": "When the developers confirm it is finished", "isCorrect": false },
      { "id": "option_2", "text": "When it meets the Definition of Done", "isCorrect": true },
      { "id": "option_3", "text": "When the team has moved to the next task", "isCorrect": false },
      { "id": "option_4", "text": "When the customer requests early release", "isCorrect": false }
    ],
    "hint": "Completion criteria should be pre-defined and agreed upon.",
    "answerDescription": "The Definition of Done ensures consistency and quality across delivered user stories."
  },
  {
    "id": "agile_2209",
    "question": "What should a Product Owner consider when prioritizing backlog items?",
    "options": [
      { "id": "option_1", "text": "The preferences of individual developers", "isCorrect": false },
      { "id": "option_2", "text": "Business value and customer impact", "isCorrect": true },
      { "id": "option_3", "text": "Only technical feasibility", "isCorrect": false },
      { "id": "option_4", "text": "The number of dependencies in the code", "isCorrect": false }
    ],
    "hint": "The priority should reflect the highest value to stakeholders.",
    "answerDescription": "Prioritization should focus on maximizing business impact and improving customer experience."
  },
  {
    "id": "agile_2210",
    "question": "How can a Product Owner support the Agile teamâ€™s efficiency?",
    "options": [
      { "id": "option_1", "text": "By assigning specific tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring a well-defined and prioritized backlog", "isCorrect": true },
      { "id": "option_3", "text": "By setting fixed deadlines for each task", "isCorrect": false },
      { "id": "option_4", "text": "By restricting team discussions", "isCorrect": false }
    ],
    "hint": "The backlog is a key tool for guiding development.",
    "answerDescription": "A well-organized backlog helps teams focus on delivering high-priority work efficiently."
  },
  {
    "id": "agile_2211",
    "question": "What is a Product Ownerâ€™s role in ensuring customer satisfaction?",
    "options": [
      { "id": "option_1", "text": "Ensuring development speed is maximized", "isCorrect": false },
      { "id": "option_2", "text": "Delivering valuable and user-centric solutions", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding changes to the product backlog", "isCorrect": false },
      { "id": "option_4", "text": "Reducing the frequency of product releases", "isCorrect": false }
    ],
    "hint": "Customer needs drive the product roadmap.",
    "answerDescription": "By prioritizing features based on user needs, a Product Owner ensures continuous value delivery."
  },
  {
    "id": "agile_2212",
    "question": "Which approach should a Product Owner take when facing an urgent business need?",
    "options": [
      { "id": "option_1", "text": "Immediately override the current sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Work with the Scrum Team to evaluate and adjust priorities", "isCorrect": true },
      { "id": "option_3", "text": "Cancel the current sprint and start a new one", "isCorrect": false },
      { "id": "option_4", "text": "Make decisions without team input", "isCorrect": false }
    ],
    "hint": "Collaboration is key in Agile decision-making.",
    "answerDescription": "A Product Owner should involve the team in discussions to balance business needs with ongoing work."
  },
  {
    "id": "agile_2213",
    "question": "How does a Product Owner measure the success of an Agile product?",
    "options": [
      { "id": "option_1", "text": "By counting the number of features released", "isCorrect": false },
      { "id": "option_2", "text": "By tracking the time taken to complete sprints", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring all initial requirements are implemented", "isCorrect": false },
      { "id": "option_4", "text": "By evaluating customer satisfaction and business impact", "isCorrect": true }
    ],
    "hint": "Product success is about outcomes, not just output.",
    "answerDescription": "Customer satisfaction and business value are key indicators of a successful Agile product."
  },
  {
    "id": "agile_2214",
    "question": "Which metric is most relevant to a Product Ownerâ€™s success?",
    "options": [
      { "id": "option_1", "text": "Lines of code written by the team", "isCorrect": false },
      { "id": "option_2", "text": "Customer satisfaction and delivered business value", "isCorrect": true },
      { "id": "option_3", "text": "Number of tasks completed per sprint", "isCorrect": false },
      { "id": "option_4", "text": "Bug count in the latest release", "isCorrect": false }
    ],
    "hint": "The goal is to maximize value for customers and stakeholders.",
    "answerDescription": "A Product Owner's success is measured by the business value delivered and customer satisfaction."
  },
  {
    "id": "agile_2215",
    "question": "How should a Product Owner interact with the development team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks and deadlines", "isCorrect": false },
      { "id": "option_2", "text": "By providing clear requirements and priorities", "isCorrect": true },
      { "id": "option_3", "text": "By monitoring team members' working hours", "isCorrect": false },
      { "id": "option_4", "text": "By limiting discussions to sprint reviews only", "isCorrect": false }
    ],
    "hint": "Collaboration and clear guidance are key.",
    "answerDescription": "A Product Owner should focus on setting priorities and clarifying requirements rather than micromanaging tasks."
  },
  {
    "id": "agile_2216",
    "question": "What is a common challenge faced by Product Owners?",
    "options": [
      { "id": "option_1", "text": "Handling technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "Balancing stakeholder expectations with development capacity", "isCorrect": true },
      { "id": "option_3", "text": "Writing unit tests for user stories", "isCorrect": false },
      { "id": "option_4", "text": "Executing test cases before releases", "isCorrect": false }
    ],
    "hint": "The Product Owner must manage expectations while ensuring realistic planning.",
    "answerDescription": "One of the biggest challenges is balancing business needs with what is realistically achievable within each sprint."
  },
  {
    "id": "agile_2217",
    "question": "Which technique can a Product Owner use to understand customer needs better?",
    "options": [
      { "id": "option_1", "text": "Holding internal technical meetings", "isCorrect": false },
      { "id": "option_2", "text": "Conducting user interviews and feedback sessions", "isCorrect": true },
      { "id": "option_3", "text": "Writing detailed technical specifications", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on backlog items", "isCorrect": false }
    ],
    "hint": "Direct customer input is valuable for prioritization.",
    "answerDescription": "By gathering direct user feedback, a Product Owner ensures that product decisions align with real user needs."
  },
  {
    "id": "agile_2218",
    "question": "What should a Product Owner do if a critical requirement is identified mid-sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately cancel the sprint", "isCorrect": false },
      { "id": "option_2", "text": "Evaluate its urgency and discuss with the team", "isCorrect": true },
      { "id": "option_3", "text": "Add it to the sprint backlog without discussion", "isCorrect": false },
      { "id": "option_4", "text": "Ignore it until the next sprint planning", "isCorrect": false }
    ],
    "hint": "Agility requires adaptability but also structured decision-making.",
    "answerDescription": "The Product Owner should assess the impact and collaborate with the team to make an informed decision."
  },
  {
    "id": "agile_2219",
    "question": "How can a Product Owner ensure transparency in backlog prioritization?",
    "options": [
      { "id": "option_1", "text": "By keeping prioritization criteria private", "isCorrect": false },
      { "id": "option_2", "text": "By using clear and objective criteria", "isCorrect": true },
      { "id": "option_3", "text": "By allowing developers to choose priority items", "isCorrect": false },
      { "id": "option_4", "text": "By only discussing priorities during sprint reviews", "isCorrect": false }
    ],
    "hint": "Stakeholders need to understand how prioritization decisions are made.",
    "answerDescription": "Using clear criteria such as business value, risk, and effort makes prioritization transparent and effective."
  },
  {
    "id": "agile_2220",
    "question": "What is an effective way for a Product Owner to communicate the product vision?",
    "options": [
      { "id": "option_1", "text": "By documenting detailed technical designs", "isCorrect": false },
      { "id": "option_2", "text": "By using a well-defined product roadmap", "isCorrect": true },
      { "id": "option_3", "text": "By assigning specific coding tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "By restricting changes to the backlog", "isCorrect": false }
    ],
    "hint": "A roadmap provides a structured way to communicate the productâ€™s direction.",
    "answerDescription": "A well-structured roadmap helps align teams and stakeholders with the long-term vision of the product."
  },
  {
    "id": "agile_2221",
    "question": "How does a Product Owner contribute to an Agile team's self-organization?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "By setting clear priorities and allowing flexibility", "isCorrect": true },
      { "id": "option_3", "text": "By making all technical decisions", "isCorrect": false },
      { "id": "option_4", "text": "By monitoring individual team membersâ€™ progress", "isCorrect": false }
    ],
    "hint": "Agile teams thrive on autonomy with clear direction.",
    "answerDescription": "The Product Owner provides strategic guidance while allowing the team to determine how to achieve goals."
  },
  {
    "id": "agile_2222",
    "question": "What should a Product Owner focus on during a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Evaluating individual team performance", "isCorrect": false },
      { "id": "option_2", "text": "Gathering feedback on delivered increments", "isCorrect": true },
      { "id": "option_3", "text": "Ensuring developers follow the roadmap strictly", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work for the next sprint", "isCorrect": false }
    ],
    "hint": "The Sprint Review is a collaborative event to showcase progress.",
    "answerDescription": "The Product Owner should focus on gathering feedback and ensuring alignment with stakeholder needs."
  }, {
    "id": "agile_2223",
    "question": "Which of the following is a primary role of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing team performance", "isCorrect": false },
      { "id": "option_2", "text": "Assigning development tasks", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing product value", "isCorrect": true },
      { "id": "option_4", "text": "Creating technical documentation", "isCorrect": false }
    ],
    "hint": "The focus is on delivering business value through the product.",
    "answerDescription": "A Product Owner's primary responsibility is to maximize the value of the product being developed."
  },
  {
    "id": "agile_2224",
    "question": "What is a key characteristic of an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Having extensive coding knowledge", "isCorrect": false },
      { "id": "option_2", "text": "Controlling sprint execution", "isCorrect": false },
      { "id": "option_3", "text": "Strong stakeholder management skills", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on financial metrics", "isCorrect": false }
    ],
    "hint": "They need to balance multiple perspectives effectively.",
    "answerDescription": "A great Product Owner collaborates with stakeholders and ensures the development team is aligned with business goals."
  },
  {
    "id": "agile_2225",
    "question": "How does a Product Owner ensure backlog items are ready for development?",
    "options": [
      { "id": "option_1", "text": "By estimating story points independently", "isCorrect": false },
      { "id": "option_2", "text": "By enforcing strict development deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By defining acceptance criteria clearly", "isCorrect": true },
      { "id": "option_4", "text": "By writing code for critical features", "isCorrect": false }
    ],
    "hint": "Clarity in expectations leads to smoother development.",
    "answerDescription": "Acceptance criteria help ensure that backlog items are well-defined and development-ready."
  },
  {
    "id": "agile_2226",
    "question": "Which activity should a Product Owner focus on to maintain a well-structured backlog?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "Monitoring sprint velocity", "isCorrect": false },
      { "id": "option_3", "text": "Regularly refining backlog items", "isCorrect": true },
      { "id": "option_4", "text": "Defining coding standards", "isCorrect": false }
    ],
    "hint": "Backlog refinement is a continuous process.",
    "answerDescription": "Regular backlog refinement ensures that items are prioritized and clear before development begins."
  },
  {
    "id": "agile_2227",
    "question": "What should a Product Owner do when stakeholders frequently change priorities?",
    "options": [
      { "id": "option_1", "text": "Ignore stakeholder requests", "isCorrect": false },
      { "id": "option_2", "text": "Immediately change sprint goals", "isCorrect": false },
      { "id": "option_3", "text": "Balance stakeholder needs with sprint commitments", "isCorrect": true },
      { "id": "option_4", "text": "Allow the development team to decide priorities", "isCorrect": false }
    ],
    "hint": "A structured approach to handling changes is key.",
    "answerDescription": "A Product Owner should manage changing priorities while ensuring stability in ongoing sprints."
  },
  {
    "id": "agile_2228",
    "question": "Which method helps a Product Owner assess the value of backlog items?",
    "options": [
      { "id": "option_1", "text": "Team member preferences", "isCorrect": false },
      { "id": "option_2", "text": "Number of user stories completed", "isCorrect": false },
      { "id": "option_3", "text": "Cost of delay analysis", "isCorrect": true },
      { "id": "option_4", "text": "Total lines of code written", "isCorrect": false }
    ],
    "hint": "The approach considers how delays impact business value.",
    "answerDescription": "Cost of delay analysis helps in prioritizing backlog items based on their potential business impact."
  },
  {
    "id": "agile_2229",
    "question": "How can a Product Owner help the team stay focused on sprint goals?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks individually", "isCorrect": false },
      { "id": "option_2", "text": "Modifying sprint goals frequently", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring a clear and stable backlog", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding interaction with the development team", "isCorrect": false }
    ],
    "hint": "A well-maintained backlog supports focus.",
    "answerDescription": "A clear and stable backlog allows the team to work efficiently without unnecessary disruptions."
  },
  {
    "id": "agile_2230",
    "question": "What is the best way for a Product Owner to align the team with the product vision?",
    "options": [
      { "id": "option_1", "text": "Providing a detailed technical roadmap", "isCorrect": false },
      { "id": "option_2", "text": "Only communicating vision during sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "Regularly discussing the vision with the team", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on short-term deliverables", "isCorrect": false }
    ],
    "hint": "Consistent communication reinforces alignment.",
    "answerDescription": "Frequent discussions about the vision ensure the team stays aligned with long-term goals."
  },
  {
    "id": "agile_2231",
    "question": "How does a Product Owner contribute to Agile release planning?",
    "options": [
      { "id": "option_1", "text": "By defining sprint tasks", "isCorrect": false },
      { "id": "option_2", "text": "By estimating development time independently", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing backlog items for upcoming releases", "isCorrect": true },
      { "id": "option_4", "text": "By setting individual team goals", "isCorrect": false }
    ],
    "hint": "Backlog prioritization plays a critical role in releases.",
    "answerDescription": "A Product Owner ensures that the highest-value items are planned for upcoming releases."
  },
  {
    "id": "agile_2232",
    "question": "What should a Product Owner do if stakeholders request features that contradict the product vision?",
    "options": [
      { "id": "option_1", "text": "Implement them without question", "isCorrect": false },
      { "id": "option_2", "text": "Escalate the request to senior management immediately", "isCorrect": false },
      { "id": "option_3", "text": "Explain the conflict and suggest alternative solutions", "isCorrect": true },
      { "id": "option_4", "text": "Ignore the request entirely", "isCorrect": false }
    ],
    "hint": "Effective communication is crucial when addressing conflicting requests.",
    "answerDescription": "A Product Owner should communicate product goals and suggest alternative solutions that align with the vision."
  },
  {
    "id": "agile_2233",
    "question": "How does a Product Owner contribute to Agile success?",
    "options": [
      { "id": "option_1", "text": "Ensuring that backlog items align with business goals", "isCorrect": true },
      { "id": "option_2", "text": "Controlling the development team's daily work", "isCorrect": false },
      { "id": "option_3", "text": "Handling the technical design of features", "isCorrect": false },
      { "id": "option_4", "text": "Writing detailed code specifications", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering business value through prioritization.",
    "answerDescription": "A Product Owner aligns backlog priorities with strategic business objectives to drive Agile success."
  },
  {
    "id": "agile_2234",
    "question": "How does a Product Owner contribute to sprint planning?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By determining sprint capacity", "isCorrect": false },
      { "id": "option_3", "text": "By defining coding standards", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing backlog items for the sprint", "isCorrect": true }
    ],
    "hint": "The Product Owner decides which items should be worked on next.",
    "answerDescription": "The Product Owner collaborates with the team to prioritize backlog items based on business needs."
  },
  {
    "id": "agile_2235",
    "question": "Which approach should a Product Owner take when a stakeholder requests a new feature mid-sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately add it to the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Reject it outright to maintain sprint focus", "isCorrect": false },
      { "id": "option_3", "text": "Ask the team to decide", "isCorrect": false },
      { "id": "option_4", "text": "Evaluate its urgency and plan it for the next sprint if necessary", "isCorrect": true }
    ],
    "hint": "The Product Owner must balance flexibility with sprint commitments.",
    "answerDescription": "New feature requests should be assessed for priority and planned accordingly."
  },
  {
    "id": "agile_2236",
    "question": "What is an essential skill for a Product Owner when dealing with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Ability to write complex SQL queries", "isCorrect": false },
      { "id": "option_2", "text": "Expertise in system architecture", "isCorrect": false },
      { "id": "option_3", "text": "Controlling the development team's work", "isCorrect": false },
      { "id": "option_4", "text": "Strong communication and negotiation skills", "isCorrect": true }
    ],
    "hint": "The Product Owner acts as a bridge between stakeholders and the development team.",
    "answerDescription": "A Product Owner needs to effectively communicate and negotiate priorities with stakeholders."
  },
  {
    "id": "agile_2237",
    "question": "Why is backlog refinement important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "It allows the Product Owner to make independent decisions", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "It ensures all backlog items have detailed designs", "isCorrect": false },
      { "id": "option_4", "text": "It helps maintain a prioritized and ready backlog", "isCorrect": true }
    ],
    "hint": "Regular backlog refinement prevents bottlenecks in development.",
    "answerDescription": "A well-maintained backlog enables smooth sprint planning and execution."
  },
  {
    "id": "agile_2238",
    "question": "What should a Product Owner do if the development team has difficulty delivering a backlog item?",
    "options": [
      { "id": "option_1", "text": "Force the team to complete it on time", "isCorrect": false },
      { "id": "option_2", "text": "Abandon the item and move to the next one", "isCorrect": false },
      { "id": "option_3", "text": "Take over the development work", "isCorrect": false },
      { "id": "option_4", "text": "Work with the team to clarify requirements and remove obstacles", "isCorrect": true }
    ],
    "hint": "Collaboration is key when resolving development challenges.",
    "answerDescription": "The Product Owner should facilitate discussions and ensure clarity to help the team deliver successfully."
  },
  {
    "id": "agile_2239",
    "question": "How can a Product Owner ensure alignment between business objectives and development efforts?",
    "options": [
      { "id": "option_1", "text": "By setting strict deadlines for the team", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing features based on developer preference", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding discussions with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By continuously communicating the product vision to the team", "isCorrect": true }
    ],
    "hint": "Frequent discussions about business goals help teams stay aligned.",
    "answerDescription": "Clear and continuous communication ensures the team understands how their work contributes to business goals."
  },
  {
    "id": "agile_2240",
    "question": "What is the role of a Product Owner in Agile release planning?",
    "options": [
      { "id": "option_1", "text": "Defining the technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "Controlling the development team's workload", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizing backlog items for future releases", "isCorrect": true }
    ],
    "hint": "The Product Owner focuses on feature prioritization and value delivery.",
    "answerDescription": "By prioritizing backlog items, the Product Owner ensures that the most valuable features are developed first."
  },
  {
    "id": "agile_2241",
    "question": "Why should a Product Owner avoid frequently changing backlog priorities mid-sprint?",
    "options": [
      { "id": "option_1", "text": "To maintain sprint focus and team efficiency", "isCorrect": true },
      { "id": "option_2", "text": "To prevent developers from making decisions", "isCorrect": false },
      { "id": "option_3", "text": "Because Agile does not allow backlog changes", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all stakeholders get their requests fulfilled immediately", "isCorrect": false }
    ],
    "hint": "A stable sprint backlog helps maintain team efficiency.",
    "answerDescription": "Changing priorities mid-sprint disrupts focus and efficiency, so the Product Owner should avoid unnecessary alterations."
  },
  {
    "id": "agile_2242",
    "question": "What is a key challenge that Product Owners often face?",
    "options": [
      { "id": "option_1", "text": "Managing technical implementation", "isCorrect": false },
      { "id": "option_2", "text": "Deciding on sprint velocity", "isCorrect": false },
      { "id": "option_3", "text": "Writing code alongside developers", "isCorrect": false },
      { "id": "option_4", "text": "Balancing stakeholder expectations with team capacity", "isCorrect": true }
    ],
    "hint": "A Product Owner must navigate between business needs and development realities.",
    "answerDescription": "Ensuring stakeholder expectations are met while keeping the teamâ€™s workload manageable is a major Product Owner responsibility."
  }, 
  {
    "id": "agile_2243",
    "question": "What is the main focus of a Product Owner in Agile?",
    "options": [
      { "id": "option_1", "text": "Managing the development team's work assignments", "isCorrect": false },
      { "id": "option_2", "text": "Defining the software architecture", "isCorrect": false },
      { "id": "option_3", "text": "Writing detailed technical specifications", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing the value of the product by prioritizing the backlog", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures the team builds the most valuable features first.",
    "answerDescription": "The Product Owner focuses on maximizing business value by managing and prioritizing the product backlog effectively."
  },
  {
    "id": "agile_2244",
    "question": "How does a Product Owner ensure the team delivers high-value work?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By frequently changing the sprint goal", "isCorrect": false },
      { "id": "option_3", "text": "By making ad-hoc changes to the backlog mid-sprint", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing features based on business value and customer needs", "isCorrect": true }
    ],
    "hint": "The backlog is key to delivering value in Agile.",
    "answerDescription": "A well-prioritized backlog ensures the team focuses on the highest-impact features first."
  },
  {
    "id": "agile_2245",
    "question": "What is the best way for a Product Owner to gather customer feedback?",
    "options": [
      { "id": "option_1", "text": "By relying only on internal team discussions", "isCorrect": false },
      { "id": "option_2", "text": "By implementing all stakeholder requests immediately", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding direct interaction with customers", "isCorrect": false },
      { "id": "option_4", "text": "By conducting user research, surveys, and stakeholder meetings", "isCorrect": true }
    ],
    "hint": "Direct interaction with customers helps refine product direction.",
    "answerDescription": "Customer feedback through surveys, research, and meetings allows the Product Owner to make informed product decisions."
  },
  {
    "id": "agile_2246",
    "question": "What should a Product Owner do if a stakeholder requests an urgent change during a sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately add it to the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the request completely", "isCorrect": false },
      { "id": "option_3", "text": "Instruct the team to pause current work and switch priorities", "isCorrect": false },
      { "id": "option_4", "text": "Discuss with the team and stakeholders to evaluate the impact", "isCorrect": true }
    ],
    "hint": "The Product Owner should balance flexibility with sprint commitments.",
    "answerDescription": "Urgent changes should be evaluated collaboratively to minimize disruption and maintain sprint focus."
  },
  {
    "id": "agile_2247",
    "question": "What is the key benefit of a well-maintained product backlog?",
    "options": [
      { "id": "option_1", "text": "It allows the Product Owner to control the teamâ€™s workflow", "isCorrect": false },
      { "id": "option_2", "text": "It guarantees that all stakeholder demands are met immediately", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for refinement meetings", "isCorrect": false },
      { "id": "option_4", "text": "It ensures the team works on high-priority, valuable features", "isCorrect": true }
    ],
    "hint": "A backlog guides the teamâ€™s work based on business priorities.",
    "answerDescription": "A well-maintained backlog keeps the team focused on delivering the most valuable features first."
  },
  {
    "id": "agile_2248",
    "question": "Why should a Product Owner avoid adding excessive detail to backlog items?",
    "options": [
      { "id": "option_1", "text": "To prevent the team from working efficiently", "isCorrect": false },
      { "id": "option_2", "text": "Because Agile does not require backlog items", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the team has to guess the requirements", "isCorrect": false },
      { "id": "option_4", "text": "To allow flexibility and collaboration in refining work items", "isCorrect": true }
    ],
    "hint": "Agile encourages adaptive planning rather than rigid specifications.",
    "answerDescription": "Backlog items should provide enough clarity without limiting the team's ability to adapt and refine them."
  },
  {
    "id": "agile_2249",
    "question": "What is a key aspect of backlog refinement?",
    "options": [
      { "id": "option_1", "text": "Finalizing all backlog items before the project starts", "isCorrect": false },
      { "id": "option_2", "text": "Letting developers set all priorities", "isCorrect": false },
      { "id": "option_3", "text": "Constantly changing priorities every sprint", "isCorrect": false },
      { "id": "option_4", "text": "Collaborating with the team to ensure items are clear and ready for development", "isCorrect": true }
    ],
    "hint": "Refinement helps keep backlog items actionable and clear.",
    "answerDescription": "Regular refinement ensures that backlog items are well-defined, estimated, and prioritized appropriately."
  },
  {
    "id": "agile_2250",
    "question": "Why should a Product Owner regularly communicate with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure product decisions align with business needs", "isCorrect": true },
      { "id": "option_2", "text": "To give daily instructions to the development team", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "To micromanage the Scrum Master", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration is essential for Agile product development.",
    "answerDescription": "The Product Owner gathers stakeholder input to ensure the product remains aligned with business objectives."
  },
  {
    "id": "agile_2251",
    "question": "What is the role of the Product Owner in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "Dictating how developers should implement features", "isCorrect": false },
      { "id": "option_3", "text": "Defining the teamâ€™s working process", "isCorrect": false },
      { "id": "option_4", "text": "Clarifying backlog priorities and ensuring alignment with sprint goals", "isCorrect": true }
    ],
    "hint": "Sprint Planning ensures the team works on the most valuable features.",
    "answerDescription": "The Product Owner ensures backlog priorities are clear, but the team decides how to execute the work."
  },
  {
    "id": "agile_2252",
    "question": "What should a Product Owner do if a backlog item is not well understood by the team?",
    "options": [
      { "id": "option_1", "text": "Force the team to implement it as is", "isCorrect": false },
      { "id": "option_2", "text": "Remove it from the backlog", "isCorrect": false },
      { "id": "option_3", "text": "Wait until the Sprint Review to explain it", "isCorrect": false },
      { "id": "option_4", "text": "Refine and clarify the item with the team before implementation", "isCorrect": true }
    ],
    "hint": "Unclear backlog items can lead to misunderstandings.",
    "answerDescription": "The Product Owner should ensure that backlog items are well-defined and understood before they are worked on."
  },
{
    "id": "agile_2253",
    "question": "What is the primary way a Product Owner communicates product goals to the team?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "By setting strict deadlines", "isCorrect": false },
      { "id": "option_3", "text": "By documenting every detail in advance", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining and prioritizing the product backlog", "isCorrect": true }
    ],
    "hint": "The backlog is the key tool used by the Product Owner.",
    "answerDescription": "A well-maintained backlog ensures the team understands the product vision and priorities."
  },
  {
    "id": "agile_2254",
    "question": "Which of the following is a key responsibility of the Product Owner during sprint reviews?",
    "options": [
      { "id": "option_1", "text": "Directing how the team should demo features", "isCorrect": false },
      { "id": "option_2", "text": "Rejecting work that doesnâ€™t match personal preferences", "isCorrect": false },
      { "id": "option_3", "text": "Micromanaging the team's presentation", "isCorrect": false },
      { "id": "option_4", "text": "Gathering stakeholder feedback on the increment", "isCorrect": true }
    ],
    "hint": "Sprint reviews are about showcasing progress and collecting feedback.",
    "answerDescription": "The Product Owner ensures that stakeholders provide input to refine the product direction."
  },
  {
    "id": "agile_2255",
    "question": "How does a Product Owner support Agile team autonomy?",
    "options": [
      { "id": "option_1", "text": "By making all technical decisions", "isCorrect": false },
      { "id": "option_2", "text": "By controlling how work is implemented", "isCorrect": false },
      { "id": "option_3", "text": "By dictating the team's processes", "isCorrect": false },
      { "id": "option_4", "text": "By providing clear priorities while allowing the team to self-organize", "isCorrect": true }
    ],
    "hint": "Agile promotes self-organization with clear guidance.",
    "answerDescription": "The Product Owner ensures priorities are clear but lets the team decide how to execute the work."
  },
  {
    "id": "agile_2256",
    "question": "What should a Product Owner do when multiple stakeholders request competing features?",
    "options": [
      { "id": "option_1", "text": "Implement all features simultaneously", "isCorrect": false },
      { "id": "option_2", "text": "Choose the request from the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_3", "text": "Ignore stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "Prioritize based on business value and customer impact", "isCorrect": true }
    ],
    "hint": "Stakeholder requests should be evaluated based on value, not hierarchy.",
    "answerDescription": "The Product Owner must balance competing demands by focusing on business impact and product goals."
  },
  {
    "id": "agile_2257",
    "question": "Which Agile artifact is primarily owned and managed by the Product Owner?",
    "options": [
      { "id": "option_1", "text": "The Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "The Definition of Done", "isCorrect": false },
      { "id": "option_3", "text": "The Burndown Chart", "isCorrect": false },
      { "id": "option_4", "text": "The Product Backlog", "isCorrect": true }
    ],
    "hint": "This artifact contains all future work and priorities for the product.",
    "answerDescription": "The Product Owner is responsible for maintaining, refining, and prioritizing the product backlog."
  },
  {
    "id": "agile_2258",
    "question": "Why is it important for a Product Owner to engage with the development team regularly?",
    "options": [
      { "id": "option_1", "text": "To supervise daily coding tasks", "isCorrect": false },
      { "id": "option_2", "text": "To approve every technical decision", "isCorrect": false },
      { "id": "option_3", "text": "To ensure developers follow a fixed workflow", "isCorrect": false },
      { "id": "option_4", "text": "To clarify requirements and answer questions promptly", "isCorrect": true }
    ],
    "hint": "Collaboration between the Product Owner and the team ensures smooth delivery.",
    "answerDescription": "Regular engagement allows the Product Owner to address concerns early and keep the team aligned with business goals."
  },
  {
    "id": "agile_2259",
    "question": "How should a Product Owner handle changing business priorities?",
    "options": [
      { "id": "option_1", "text": "Ignore changes to maintain the initial plan", "isCorrect": false },
      { "id": "option_2", "text": "Demand the team immediately change direction mid-sprint", "isCorrect": false },
      { "id": "option_3", "text": "Let stakeholders dictate the next steps without analysis", "isCorrect": false },
      { "id": "option_4", "text": "Continuously refine the backlog to adapt to new priorities", "isCorrect": true }
    ],
    "hint": "Agile embraces change through backlog management.",
    "answerDescription": "A Product Owner ensures business agility by keeping the backlog up to date with evolving priorities."
  },
  {
    "id": "agile_2260",
    "question": "What key factor should a Product Owner consider when accepting a backlog item as 'Done'?",
    "options": [
      { "id": "option_1", "text": "The amount of code written", "isCorrect": false },
      { "id": "option_2", "text": "Whether it matches their personal expectations", "isCorrect": false },
      { "id": "option_3", "text": "The speed at which it was completed", "isCorrect": false },
      { "id": "option_4", "text": "Whether it meets the Definition of Done", "isCorrect": true }
    ],
    "hint": "Work should align with a predefined standard before it is considered complete.",
    "answerDescription": "A backlog item is only 'Done' when it meets the agreed-upon Definition of Done, ensuring quality and completeness."
  },
  {
    "id": "agile_2261",
    "question": "What role does the Product Owner play in ensuring product-market fit?",
    "options": [
      { "id": "option_1", "text": "By dictating technology choices", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on internal team goals", "isCorrect": false },
      { "id": "option_3", "text": "By delivering as many features as possible without user feedback", "isCorrect": false },
      { "id": "option_4", "text": "By gathering user insights and aligning the product with customer needs", "isCorrect": true }
    ],
    "hint": "The Product Owner ensures the product solves real user problems.",
    "answerDescription": "Continuous feedback from users helps the Product Owner steer the product in the right direction."
  },
  {
    "id": "agile_2262",
    "question": "Why should a Product Owner avoid overloading the team with work?",
    "options": [
      { "id": "option_1", "text": "To ensure they work at a slower pace", "isCorrect": false },
      { "id": "option_2", "text": "Because Agile discourages task completion", "isCorrect": false },
      { "id": "option_3", "text": "To reduce development costs", "isCorrect": false },
      { "id": "option_4", "text": "To maintain sustainable development and quality output", "isCorrect": true }
    ],
    "hint": "Sustainable work leads to consistent delivery and high-quality products.",
    "answerDescription": "A balanced workload helps teams maintain efficiency, morale, and high-quality output over time."
  },
  {
    "id": "agile_2263",
    "question": "Which of the following is a key characteristic of an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Only focusing on customer requests", "isCorrect": false },
      { "id": "option_2", "text": "Balancing stakeholder needs with business goals", "isCorrect": true },
      { "id": "option_3", "text": "Micromanaging the development team", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding direct involvement in backlog refinement", "isCorrect": false }
    ],
    "hint": "A Product Owner must align business value with stakeholder expectations.",
    "answerDescription": "An effective Product Owner ensures that backlog prioritization aligns with business objectives and stakeholder needs."
  },
  {
    "id": "agile_2264",
    "question": "What is the main reason a Product Owner should avoid overloading a sprint backlog?",
    "options": [
      { "id": "option_1", "text": "To reduce the number of backlog items", "isCorrect": false },
      { "id": "option_2", "text": "To allow the team to complete work within the sprint timeframe", "isCorrect": true },
      { "id": "option_3", "text": "To prevent stakeholders from making additional requests", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all features are completed in one iteration", "isCorrect": false }
    ],
    "hint": "A sprint backlog should contain only work that can be completed within the sprint.",
    "answerDescription": "Keeping the backlog manageable ensures the team can deliver quality work without exceeding their capacity."
  },
  {
    "id": "agile_2265",
    "question": "What should a Product Owner do if a backlog item is too large for a single sprint?",
    "options": [
      { "id": "option_1", "text": "Break it down into smaller, manageable user stories", "isCorrect": true },
      { "id": "option_2", "text": "Extend the sprint duration to accommodate it", "isCorrect": false },
      { "id": "option_3", "text": "Ask the team to complete it as quickly as possible", "isCorrect": false },
      { "id": "option_4", "text": "Remove it from the backlog entirely", "isCorrect": false }
    ],
    "hint": "Large backlog items should be divided for better agility.",
    "answerDescription": "The Product Owner ensures that work items are refined into smaller, achievable tasks to fit within sprint timelines."
  },
  {
    "id": "agile_2266",
    "question": "Why is it important for a Product Owner to define clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "To restrict how developers implement a feature", "isCorrect": false },
      { "id": "option_2", "text": "To ensure that the team understands when a story is complete", "isCorrect": true },
      { "id": "option_3", "text": "To micromanage the development process", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help determine when a feature meets expectations.",
    "answerDescription": "Well-defined acceptance criteria ensure alignment between stakeholders, developers, and business goals."
  },
  {
    "id": "agile_2267",
    "question": "What should a Product Owner do when a stakeholder requests an urgent feature mid-sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately add it to the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Assess its priority and schedule it in the next sprint if necessary", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the request to maintain focus", "isCorrect": false },
      { "id": "option_4", "text": "Replace an existing sprint item with the new feature", "isCorrect": false }
    ],
    "hint": "Sprints should remain stable to maintain team productivity.",
    "answerDescription": "New urgent requests should be evaluated and, if valid, prioritized in the product backlog for a future sprint."
  },
  {
    "id": "agile_2268",
    "question": "What is a good practice for a Product Owner to ensure that user stories are properly refined?",
    "options": [
      { "id": "option_1", "text": "Writing all backlog items alone", "isCorrect": false },
      { "id": "option_2", "text": "Collaborating with the development team during backlog refinement", "isCorrect": true },
      { "id": "option_3", "text": "Defining only high-level goals without details", "isCorrect": false },
      { "id": "option_4", "text": "Finalizing backlog items without any feedback", "isCorrect": false }
    ],
    "hint": "Refinement is a collaborative effort between the Product Owner and the team.",
    "answerDescription": "Working with the development team ensures backlog items are well-defined, achievable, and aligned with sprint goals."
  },
  {
    "id": "agile_2269",
    "question": "How does a Product Owner contribute to Agileâ€™s focus on delivering value?",
    "options": [
      { "id": "option_1", "text": "By tracking team velocity", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing features that provide the highest business value", "isCorrect": true },
      { "id": "option_3", "text": "By dictating the technical architecture", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring all backlog items are equal in priority", "isCorrect": false }
    ],
    "hint": "Agile aims to deliver value by prioritizing important features.",
    "answerDescription": "The Product Owner focuses on prioritizing backlog items that bring the most business value to the organization."
  },
  {
    "id": "agile_2270",
    "question": "Why is stakeholder involvement important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To get approvals before every backlog change", "isCorrect": false },
      { "id": "option_2", "text": "To align product development with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To allow stakeholders to directly assign tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "To avoid making independent product decisions", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback ensures the product meets business goals.",
    "answerDescription": "Engaging stakeholders helps the Product Owner make informed backlog decisions aligned with business strategy."
  },
  {
    "id": "agile_2271",
    "question": "What should a Product Owner do if a backlog item is too complex to estimate?",
    "options": [
      { "id": "option_1", "text": "Keep it in the backlog and revisit it later", "isCorrect": false },
      { "id": "option_2", "text": "Break it down into smaller, more manageable pieces", "isCorrect": true },
      { "id": "option_3", "text": "Force the team to estimate it immediately", "isCorrect": false },
      { "id": "option_4", "text": "Remove it from the backlog", "isCorrect": false }
    ],
    "hint": "Large or complex items should be refined for better estimation.",
    "answerDescription": "Decomposing backlog items into smaller stories makes them easier to estimate and implement."
  },
  {
    "id": "agile_2272",
    "question": "How does a Product Owner help ensure sprint success?",
    "options": [
      { "id": "option_1", "text": "By setting strict deadlines for the team", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring backlog items are well-defined and prioritized", "isCorrect": true },
      { "id": "option_3", "text": "By finalizing sprint tasks without team input", "isCorrect": false },
      { "id": "option_4", "text": "By adjusting sprint priorities mid-sprint", "isCorrect": false }
    ],
    "hint": "Clear backlog items help teams execute sprints smoothly.",
    "answerDescription": "A well-structured backlog ensures teams work on high-value, well-defined tasks, leading to successful sprints."
  },
  {
    "id": "agile_2273",
    "question": "How does a Product Owner support continuous improvement in Agile?",
    "options": [
      { "id": "option_1", "text": "By incorporating feedback from retrospectives into backlog refinement", "isCorrect": true },
      { "id": "option_2", "text": "By enforcing strict adherence to a fixed product plan", "isCorrect": false },
      { "id": "option_3", "text": "By limiting team involvement in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding discussions on process improvements", "isCorrect": false }
    ],
    "hint": "Agile embraces continuous improvement through feedback.",
    "answerDescription": "The Product Owner ensures that lessons from retrospectives inform backlog improvements and future development priorities."
  },
  {
    "id": "agile_2274",
    "question": "Why is it important for a Product Owner to maintain a well-prioritized backlog?",
    "options": [
      { "id": "option_1", "text": "To reduce the workload of the Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "To ensure developers work on features they prefer", "isCorrect": false },
      { "id": "option_3", "text": "To align development efforts with business goals", "isCorrect": true },
      { "id": "option_4", "text": "To avoid changes in sprint planning", "isCorrect": false }
    ],
    "hint": "A prioritized backlog helps deliver the most valuable features first.",
    "answerDescription": "The Product Owner aligns the backlog with business goals to maximize value delivery."
  },
  {
    "id": "agile_2275",
    "question": "How can a Product Owner ensure that development efforts meet customer needs?",
    "options": [
      { "id": "option_1", "text": "By dictating technical solutions to the team", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the number of backlog items", "isCorrect": false },
      { "id": "option_3", "text": "By regularly gathering and incorporating customer feedback", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "Customer feedback helps refine product direction.",
    "answerDescription": "Continuous feedback ensures that development aligns with user expectations and business needs."
  },
  {
    "id": "agile_2276",
    "question": "Which of the following is NOT a key responsibility of a Product Owner?",
    "options": [
      { "id": "option_1", "text": "Prioritizing the product backlog", "isCorrect": false },
      { "id": "option_2", "text": "Defining product goals and vision", "isCorrect": false },
      { "id": "option_3", "text": "Managing the development team's daily work", "isCorrect": true },
      { "id": "option_4", "text": "Engaging with stakeholders", "isCorrect": false }
    ],
    "hint": "The Product Owner does not micromanage the development team.",
    "answerDescription": "A Product Owner focuses on product direction, while the development team self-organizes its work."
  },
  {
    "id": "agile_2277",
    "question": "What should a Product Owner do if there is a conflict between stakeholders regarding feature priorities?",
    "options": [
      { "id": "option_1", "text": "Implement all requested features immediately", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the conflict and continue as planned", "isCorrect": false },
      { "id": "option_3", "text": "Evaluate business value and make a data-driven decision", "isCorrect": true },
      { "id": "option_4", "text": "Allow stakeholders to decide among themselves", "isCorrect": false }
    ],
    "hint": "A Product Owner should rely on objective business value rather than stakeholder influence.",
    "answerDescription": "The Product Owner prioritizes based on value, ensuring decisions are guided by business impact rather than personal opinions."
  },
  {
    "id": "agile_2278",
    "question": "What is a key challenge a Product Owner faces in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "Making sure developers estimate stories correctly", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring that only new features are added", "isCorrect": false },
      { "id": "option_3", "text": "Balancing short-term needs with long-term goals", "isCorrect": true },
      { "id": "option_4", "text": "Controlling how developers implement features", "isCorrect": false }
    ],
    "hint": "A Product Owner must focus on both immediate requirements and the product vision.",
    "answerDescription": "Refining the backlog involves balancing immediate priorities with the long-term product strategy."
  },
  {
    "id": "agile_2279",
    "question": "Why should a Product Owner be involved in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To evaluate developer performance", "isCorrect": false },
      { "id": "option_2", "text": "To finalize product design decisions", "isCorrect": false },
      { "id": "option_3", "text": "To gather feedback and validate product direction", "isCorrect": true },
      { "id": "option_4", "text": "To assign new tasks for the next sprint", "isCorrect": false }
    ],
    "hint": "Sprint Reviews provide insights into product progress and stakeholder expectations.",
    "answerDescription": "The Product Owner uses Sprint Reviews to collect feedback, ensuring the product meets business and customer needs."
  },
  {
    "id": "agile_2280",
    "question": "How does a Product Owner contribute to Agileâ€™s iterative approach?",
    "options": [
      { "id": "option_1", "text": "By delivering the entire product at once", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring that development follows a strict linear process", "isCorrect": false },
      { "id": "option_3", "text": "By continuously refining and reprioritizing the backlog", "isCorrect": true },
      { "id": "option_4", "text": "By focusing only on long-term planning", "isCorrect": false }
    ],
    "hint": "Agile encourages flexibility through backlog adjustments.",
    "answerDescription": "The Product Owner refines the backlog based on feedback and business needs, ensuring adaptability in development."
  },
  {
    "id": "agile_2281",
    "question": "What is a key difference between a Product Owner and a Scrum Master?",
    "options": [
      { "id": "option_1", "text": "The Product Owner handles team dynamics", "isCorrect": false },
      { "id": "option_2", "text": "The Scrum Master prioritizes the backlog", "isCorrect": false },
      { "id": "option_3", "text": "The Product Owner focuses on value delivery, while the Scrum Master ensures process efficiency", "isCorrect": true },
      { "id": "option_4", "text": "The Scrum Master decides on product features", "isCorrect": false }
    ],
    "hint": "The Product Owner is responsible for value, while the Scrum Master ensures Agile practices are followed.",
    "answerDescription": "A Product Owner maximizes product value, while a Scrum Master facilitates team processes and removes impediments."
  },
  {
    "id": "agile_2282",
    "question": "How does a Product Owner ensure a feature is valuable before development starts?",
    "options": [
      { "id": "option_1", "text": "By requiring the team to build a prototype first", "isCorrect": false },
      { "id": "option_2", "text": "By requesting approval from all stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By conducting market research and defining clear acceptance criteria", "isCorrect": true },
      { "id": "option_4", "text": "By asking developers to determine the featureâ€™s importance", "isCorrect": false }
    ],
    "hint": "A Product Owner must ensure that features align with business and customer needs.",
    "answerDescription": "Market research and acceptance criteria help validate a feature's value before development begins."
  },
  {
    "id": "agile_2283",
    "question": "What is the primary focus of a Product Owner in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Ensuring team members complete their tasks on time", "isCorrect": false },
      { "id": "option_2", "text": "Monitoring daily development progress", "isCorrect": false },
      { "id": "option_3", "text": "Maximizing product value through backlog management", "isCorrect": true },
      { "id": "option_4", "text": "Handling technical implementation details", "isCorrect": false }
    ],
    "hint": "The Product Owner is responsible for prioritizing and managing the backlog.",
    "answerDescription": "The Product Owner ensures the backlog aligns with business goals to maximize product value."
  },
  {
    "id": "agile_2284",
    "question": "Which of the following is a key skill for an effective Product Owner?",
    "options": [
      { "id": "option_1", "text": "Writing complex code", "isCorrect": false },
      { "id": "option_2", "text": "Handling server maintenance", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing features based on business value", "isCorrect": true },
      { "id": "option_4", "text": "Managing daily standup meetings", "isCorrect": false }
    ],
    "hint": "A Product Owner is responsible for prioritization and value delivery.",
    "answerDescription": "Prioritizing features ensures the most valuable work is completed first, maximizing business impact."
  },
  {
    "id": "agile_2285",
    "question": "What should a Product Owner do when multiple stakeholders have conflicting priorities?",
    "options": [
      { "id": "option_1", "text": "Evaluate priorities based on business value and impact", "isCorrect": true },
      { "id": "option_2", "text": "Always prioritize the most senior stakeholder's request", "isCorrect": false },
      { "id": "option_3", "text": "Implement all requests immediately", "isCorrect": false },
      { "id": "option_4", "text": "Ignore stakeholder feedback and focus only on the development team", "isCorrect": false }
    ],
    "hint": "The backlog should reflect the highest business value.",
    "answerDescription": "A Product Owner balances stakeholder needs by prioritizing features that deliver the most business value."
  },
  {
    "id": "agile_2286",
    "question": "What is one key responsibility of a Product Owner during a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Assigning new tasks to the team", "isCorrect": false },
      { "id": "option_2", "text": "Finalizing sprint backlog for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "Gathering stakeholder feedback to refine the product", "isCorrect": true },
      { "id": "option_4", "text": "Approving code changes made by the developers", "isCorrect": false }
    ],
    "hint": "Sprint Reviews help validate product progress and direction.",
    "answerDescription": "Stakeholder feedback is essential for refining the product and aligning with business needs."
  },
  {
    "id": "agile_2287",
    "question": "Why should a Product Owner avoid micromanaging the development team?",
    "options": [
      { "id": "option_1", "text": "Because it increases project costs", "isCorrect": false },
      { "id": "option_2", "text": "Because Agile teams should self-organize", "isCorrect": true },
      { "id": "option_3", "text": "Because the Scrum Master handles all technical decisions", "isCorrect": false },
      { "id": "option_4", "text": "Because it slows down coding speed", "isCorrect": false }
    ],
    "hint": "Agile emphasizes self-organizing teams for better efficiency.",
    "answerDescription": "Agile teams should manage their own work, while the Product Owner focuses on product vision and priorities."
  },
  {
    "id": "agile_2288",
    "question": "How does a well-maintained product backlog benefit an Agile team?",
    "options": [
      { "id": "option_1", "text": "It allows the team to complete tasks faster", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "It provides clarity on priorities and direction", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the need for stakeholder involvement", "isCorrect": false }
    ],
    "hint": "A clear backlog ensures teams focus on high-value work.",
    "answerDescription": "A well-maintained backlog helps the team understand priorities and align with business objectives."
  },
  {
    "id": "agile_2289",
    "question": "What should a Product Owner do when a backlog item is no longer valuable?",
    "options": [
      { "id": "option_1", "text": "Move it to the bottom of the backlog", "isCorrect": false },
      { "id": "option_2", "text": "Assign it to a future sprint", "isCorrect": false },
      { "id": "option_3", "text": "Remove it from the backlog", "isCorrect": true },
      { "id": "option_4", "text": "Keep it in case priorities change", "isCorrect": false }
    ],
    "hint": "A Product Owner must ensure that backlog items remain relevant.",
    "answerDescription": "Removing outdated items keeps the backlog focused and aligned with business priorities."
  },
  {
    "id": "agile_2290",
    "question": "How can a Product Owner ensure the development team understands backlog items?",
    "options": [
      { "id": "option_1", "text": "By writing detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "By assigning tasks directly to developers", "isCorrect": false },
      { "id": "option_3", "text": "By clearly defining acceptance criteria", "isCorrect": true },
      { "id": "option_4", "text": "By reviewing all code changes", "isCorrect": false }
    ],
    "hint": "Clear criteria help the team deliver expected outcomes.",
    "answerDescription": "Acceptance criteria provide clear expectations for when a backlog item is considered complete."
  },
  {
    "id": "agile_2291",
    "question": "Why is customer feedback important for a Product Owner?",
    "options": [
      { "id": "option_1", "text": "To help the development team write better code", "isCorrect": false },
      { "id": "option_2", "text": "To avoid engaging with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "To validate product direction and improve features", "isCorrect": true },
      { "id": "option_4", "text": "To increase the sprint length", "isCorrect": false }
    ],
    "hint": "Customer insights drive product improvements.",
    "answerDescription": "Regular feedback ensures the product meets user needs and remains relevant."
  },
  {
    "id": "agile_2292",
    "question": "How does a Product Owner contribute to Agileâ€™s iterative development approach?",
    "options": [
      { "id": "option_1", "text": "By finalizing all requirements before development starts", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring developers complete tasks in order", "isCorrect": false },
      { "id": "option_3", "text": "By continuously refining the backlog based on feedback", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding changes to planned sprints", "isCorrect": false }
    ],
    "hint": "Agile requires flexibility in response to feedback.",
    "answerDescription": "A Product Owner refines the backlog to adapt to evolving business and customer needs."
  },
  {
    "id": "agile_2293",
    "question": "What should a Product Owner do when faced with changing market conditions?",
    "options": [
      { "id": "option_1", "text": "Ignore market trends to maintain backlog stability", "isCorrect": false },
      { "id": "option_2", "text": "Stick to the original product roadmap at all costs", "isCorrect": false },
      { "id": "option_3", "text": "Delay product updates until a future release", "isCorrect": false },
      { "id": "option_4", "text": "Adapt the backlog and priorities based on new insights", "isCorrect": true }
    ],
    "hint": "Agile requires adaptability to external changes.",
    "answerDescription": "A Product Owner must ensure the backlog reflects current market needs and opportunities."
  },
  {
    "id": "agile_2294",
    "question": "Why should a Product Owner focus on delivering value rather than completing features?",
    "options": [
      { "id": "option_1", "text": "Because features can be added at any time", "isCorrect": false },
      { "id": "option_2", "text": "Because completing all features is unnecessary", "isCorrect": false },
      { "id": "option_3", "text": "Because Agile discourages feature development", "isCorrect": false },
      { "id": "option_4", "text": "Because value-driven development ensures business success", "isCorrect": true }
    ],
    "hint": "Agile focuses on delivering value to users and stakeholders.",
    "answerDescription": "Prioritizing value ensures the team delivers meaningful improvements rather than just features."
  },
  {
    "id": "agile_2295",
    "question": "How should a Product Owner approach backlog refinement?",
    "options": [
      { "id": "option_1", "text": "By finalizing requirements only at the start of the project", "isCorrect": false },
      { "id": "option_2", "text": "By limiting changes to prevent rework", "isCorrect": false },
      { "id": "option_3", "text": "By delegating all backlog management to the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "By continuously updating and prioritizing backlog items", "isCorrect": true }
    ],
    "hint": "Agile requires an adaptable approach to backlog management.",
    "answerDescription": "Refining the backlog regularly ensures the team works on the most valuable tasks."
  },
  {
    "id": "agile_2296",
    "question": "What is the main benefit of defining clear acceptance criteria for backlog items?",
    "options": [
      { "id": "option_1", "text": "To ensure the Scrum Master has full control over tasks", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "To prevent developers from contributing to product decisions", "isCorrect": false },
      { "id": "option_4", "text": "To ensure alignment on expectations and deliverables", "isCorrect": true }
    ],
    "hint": "Clear criteria help teams understand when work is complete.",
    "answerDescription": "Defining acceptance criteria ensures backlog items meet quality and business requirements."
  },
  {
    "id": "agile_2297",
    "question": "How does a Product Owner ensure that a backlog is well-organized?",
    "options": [
      { "id": "option_1", "text": "By assigning tasks to developers directly", "isCorrect": false },
      { "id": "option_2", "text": "By keeping all backlog items at the same priority level", "isCorrect": false },
      { "id": "option_3", "text": "By adding every possible feature to the backlog", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing backlog items based on business value", "isCorrect": true }
    ],
    "hint": "Backlog organization should focus on delivering the most value first.",
    "answerDescription": "Prioritization helps the team focus on the most impactful work for the business."
  },
  {
    "id": "agile_2298",
    "question": "What role does a Product Owner play in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Assigning tasks to individual developers", "isCorrect": false },
      { "id": "option_2", "text": "Deciding the technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring that sprints include all backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Providing clarity on priorities and goals", "isCorrect": true }
    ],
    "hint": "Sprint Planning requires clear priorities to guide the team.",
    "answerDescription": "By defining priorities, the Product Owner ensures the team focuses on high-value work."
  },
  {
    "id": "agile_2299",
    "question": "What is the primary responsibility of a development team in Agile?",
    "options": [
      { "id": "option_1", "text": "Defining project budget", "isCorrect": false },
      { "id": "option_2", "text": "Creating marketing strategies", "isCorrect": false },
      { "id": "option_3", "text": "Managing customer relations", "isCorrect": false },
      { "id": "option_4", "text": "Delivering high-quality increments", "isCorrect": true }
    ],
    "hint": "Agile teams focus on delivering working software.",
    "answerDescription": "A development team's key responsibility is to deliver high-quality product increments in each sprint."
  },
  {
    "id": "agile_2300",
    "question": "Which characteristic is essential for a successful development team?",
    "options": [
      { "id": "option_1", "text": "Working in silos", "isCorrect": false },
      { "id": "option_2", "text": "Rigid hierarchy", "isCorrect": false },
      { "id": "option_3", "text": "Individual accountability only", "isCorrect": false },
      { "id": "option_4", "text": "Cross-functionality", "isCorrect": true }
    ],
    "hint": "Agile teams work best when they have diverse skills.",
    "answerDescription": "A cross-functional team is necessary to handle various aspects of software development efficiently."
  },
  {
    "id": "agile_2301",
    "question": "How does a development team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By avoiding change", "isCorrect": false },
      { "id": "option_2", "text": "By following the same process indefinitely", "isCorrect": false },
      { "id": "option_3", "text": "By resisting stakeholder input", "isCorrect": false },
      { "id": "option_4", "text": "By implementing retrospective feedback", "isCorrect": true }
    ],
    "hint": "Learning from past work is key to improvement.",
    "answerDescription": "Retrospectives help teams reflect and adapt for better performance in future sprints."
  },
  {
    "id": "agile_2302",
    "question": "What is the role of a development team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Supervising the Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Managing the company's finances", "isCorrect": false },
      { "id": "option_3", "text": "Defining project vision", "isCorrect": false },
      { "id": "option_4", "text": "Building and delivering the product increment", "isCorrect": true }
    ],
    "hint": "Scrum teams focus on delivering value.",
    "answerDescription": "The development team is responsible for delivering working software at the end of each sprint."
  },
  {
    "id": "agile_2303",
    "question": "Which of the following improves a development team's efficiency?",
    "options": [
      { "id": "option_1", "text": "Limited collaboration", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring feedback", "isCorrect": false },
      { "id": "option_3", "text": "A blame culture", "isCorrect": false },
      { "id": "option_4", "text": "Clear communication and self-organization", "isCorrect": true }
    ],
    "hint": "Teams perform better with effective collaboration.",
    "answerDescription": "Clear communication and self-organization foster collaboration and efficiency in Agile teams."
  },
  {
    "id": "agile_2304",
    "question": "Why is self-organization important for a development team?",
    "options": [
      { "id": "option_1", "text": "It removes the need for collaboration", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for a Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "It allows external stakeholders to make all decisions", "isCorrect": false },
      { "id": "option_4", "text": "It increases autonomy and accountability", "isCorrect": true }
    ],
    "hint": "Empowered teams make better decisions.",
    "answerDescription": "Self-organized teams take ownership, adapt quickly, and deliver better outcomes."
  },
  {
    "id": "agile_2305",
    "question": "What is a key benefit of cross-functional development teams?",
    "options": [
      { "id": "option_1", "text": "Specialization in only one skill set", "isCorrect": false },
      { "id": "option_2", "text": "Reduced collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Dependency on external teams for execution", "isCorrect": false },
      { "id": "option_4", "text": "Faster decision-making and adaptability", "isCorrect": true }
    ],
    "hint": "Teams with diverse skills can work independently.",
    "answerDescription": "Cross-functional teams improve agility by reducing dependencies and enabling quick decision-making."
  },
  {
    "id": "agile_2306",
    "question": "How does a development team contribute to product quality?",
    "options": [
      { "id": "option_1", "text": "By avoiding testing", "isCorrect": false },
      { "id": "option_2", "text": "By writing extensive documentation instead of code", "isCorrect": false },
      { "id": "option_3", "text": "By working on features without reviews", "isCorrect": false },
      { "id": "option_4", "text": "By following best coding practices and continuous integration", "isCorrect": true }
    ],
    "hint": "Agile focuses on delivering high-quality software.",
    "answerDescription": "A development team ensures quality by using best coding practices and continuous integration."
  },
  {
    "id": "agile_2307",
    "question": "What mindset should a development team adopt for successful Agile execution?",
    "options": [
      { "id": "option_1", "text": "Fixed mindset", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding change", "isCorrect": false },
      { "id": "option_3", "text": "Resistance to collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Continuous learning and improvement", "isCorrect": true }
    ],
    "hint": "Agile is about adaptability.",
    "answerDescription": "A growth mindset helps teams embrace feedback and improve continuously."
  },
  {
    "id": "agile_2308",
    "question": "Which practice supports strong collaboration within a development team?",
    "options": [
      { "id": "option_1", "text": "Working in isolation", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding feedback", "isCorrect": false },
      { "id": "option_3", "text": "Ignoring stakeholder requirements", "isCorrect": false },
      { "id": "option_4", "text": "Pair programming and shared ownership", "isCorrect": true }
    ],
    "hint": "Working together improves efficiency.",
    "answerDescription": "Pair programming and shared ownership encourage knowledge sharing and teamwork."
  },
  {
    "id": "agile_2309",
    "question": "What is the primary focus of a development team in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering a working product increment", "isCorrect": true },
      { "id": "option_2", "text": "Documenting project risks", "isCorrect": false },
      { "id": "option_3", "text": "Creating financial reports", "isCorrect": false },
      { "id": "option_4", "text": "Supervising project stakeholders", "isCorrect": false }
    ],
    "hint": "Agile teams focus on delivering value in each iteration.",
    "answerDescription": "A development teamâ€™s primary focus is to deliver working software that adds value to the product."
  },
  {
    "id": "agile_2310",
    "question": "Which principle ensures that an Agile development team stays productive?",
    "options": [
      { "id": "option_1", "text": "Self-organization", "isCorrect": true },
      { "id": "option_2", "text": "Strict top-down management", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing team communication", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding process improvements", "isCorrect": false }
    ],
    "hint": "Agile teams function best when they have autonomy.",
    "answerDescription": "Self-organized teams make decisions independently, leading to higher productivity and efficiency."
  },
  {
    "id": "agile_2311",
    "question": "How should a development team handle technical debt?",
    "options": [
      { "id": "option_1", "text": "Address it regularly to maintain code quality", "isCorrect": true },
      { "id": "option_2", "text": "Ignore it to focus only on new features", "isCorrect": false },
      { "id": "option_3", "text": "Shift responsibility to external testers", "isCorrect": false },
      { "id": "option_4", "text": "Eliminate testing to speed up development", "isCorrect": false }
    ],
    "hint": "Neglecting technical debt can slow down future development.",
    "answerDescription": "Regularly addressing technical debt ensures maintainability and long-term project success."
  },
  {
    "id": "agile_2312",
    "question": "What is an essential characteristic of a high-performing Agile development team?",
    "options": [
      { "id": "option_1", "text": "Cross-functionality", "isCorrect": true },
      { "id": "option_2", "text": "Rigid specialization", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding collaboration", "isCorrect": false },
      { "id": "option_4", "text": "Following strict roles without flexibility", "isCorrect": false }
    ],
    "hint": "Agile teams should have a mix of skills to handle tasks independently.",
    "answerDescription": "Cross-functional teams have diverse skills, allowing them to complete work without external dependencies."
  },
  {
    "id": "agile_2313",
    "question": "Why is collaboration important within a development team?",
    "options": [
      { "id": "option_1", "text": "It improves problem-solving and innovation", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for communication", "isCorrect": false },
      { "id": "option_3", "text": "It creates unnecessary complexity", "isCorrect": false },
      { "id": "option_4", "text": "It allows teams to work in silos", "isCorrect": false }
    ],
    "hint": "Working together helps teams solve problems more efficiently.",
    "answerDescription": "Collaboration allows development teams to solve problems faster and create better solutions."
  },
  {
    "id": "agile_2314",
    "question": "What approach should a development team take when facing unclear requirements?",
    "options": [
      { "id": "option_1", "text": "Seek clarification from the Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Ignore the requirement and proceed", "isCorrect": false },
      { "id": "option_3", "text": "Wait for stakeholders to provide all details", "isCorrect": false },
      { "id": "option_4", "text": "Make assumptions without consulting anyone", "isCorrect": false }
    ],
    "hint": "Clear communication ensures correct implementation.",
    "answerDescription": "Consulting the Product Owner helps clarify requirements and align development efforts."
  },
  {
    "id": "agile_2315",
    "question": "How does pair programming benefit a development team?",
    "options": [
      { "id": "option_1", "text": "It improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_2", "text": "It doubles development time", "isCorrect": false },
      { "id": "option_3", "text": "It reduces collaboration between team members", "isCorrect": false },
      { "id": "option_4", "text": "It increases the risk of errors", "isCorrect": false }
    ],
    "hint": "Working in pairs helps catch mistakes early.",
    "answerDescription": "Pair programming enhances collaboration, leading to higher-quality code and better knowledge transfer."
  },
  {
    "id": "agile_2316",
    "question": "What is the main goal of a Sprint for a development team?",
    "options": [
      { "id": "option_1", "text": "Deliver a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Complete as many tasks as possible", "isCorrect": false },
      { "id": "option_3", "text": "Ensure all team members work individually", "isCorrect": false },
      { "id": "option_4", "text": "Create extensive project documentation", "isCorrect": false }
    ],
    "hint": "Sprints should produce usable software increments.",
    "answerDescription": "Each sprint should result in a product increment that adds value and is potentially shippable."
  },
  {
    "id": "agile_2317",
    "question": "How can a development team ensure effective Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "By breaking down tasks and defining a clear sprint goal", "isCorrect": true },
      { "id": "option_2", "text": "By setting rigid deadlines without flexibility", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding input from stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By estimating work without considering complexity", "isCorrect": false }
    ],
    "hint": "Clear sprint goals help teams stay focused.",
    "answerDescription": "Defining a clear goal and breaking down work ensures that the sprint remains structured and achievable."
  },
  {
    "id": "agile_2318",
    "question": "What is a key responsibility of an Agile development team during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Collaborating to deliver a functional increment", "isCorrect": true },
      { "id": "option_2", "text": "Waiting for management approval before making decisions", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding changes even if new information arises", "isCorrect": false },
      { "id": "option_4", "text": "Relying on external teams to complete tasks", "isCorrect": false }
    ],
    "hint": "Agile teams should work together towards their sprint goal.",
    "answerDescription": "A development team must collaborate effectively to complete the sprint and deliver working software."
  },
  {
    "id": "agile_2319",
    "question": "What is the most effective way for a development team to handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "Ignore changes once development has started", "isCorrect": false },
      { "id": "option_2", "text": "Embrace and incorporate changes iteratively", "isCorrect": true },
      { "id": "option_3", "text": "Delay changes until the next release", "isCorrect": false },
      { "id": "option_4", "text": "Rely solely on initial requirements without modification", "isCorrect": false }
    ],
    "hint": "Agile encourages adaptability to evolving needs.",
    "answerDescription": "Agile teams embrace change by adjusting plans iteratively to meet evolving requirements."
  },
  {
    "id": "agile_2320",
    "question": "How should an Agile development team estimate work effectively?",
    "options": [
      { "id": "option_1", "text": "By assigning fixed hours to each task", "isCorrect": false },
      { "id": "option_2", "text": "Using relative estimation techniques like story points", "isCorrect": true },
      { "id": "option_3", "text": "By only estimating when stakeholders request it", "isCorrect": false },
      { "id": "option_4", "text": "By having one person decide the estimates for the team", "isCorrect": false }
    ],
    "hint": "Agile teams often use story points to estimate work complexity.",
    "answerDescription": "Relative estimation techniques such as story points help teams assess effort more effectively than fixed time estimates."
  },
  {
    "id": "agile_2321",
    "question": "What is the benefit of daily stand-up meetings for a development team?",
    "options": [
      { "id": "option_1", "text": "To track individual performance closely", "isCorrect": false },
      { "id": "option_2", "text": "To promote alignment and quick issue resolution", "isCorrect": true },
      { "id": "option_3", "text": "To replace other forms of team communication", "isCorrect": false },
      { "id": "option_4", "text": "To document all progress in a detailed report", "isCorrect": false }
    ],
    "hint": "Daily stand-ups help teams stay aligned and address blockers.",
    "answerDescription": "Stand-up meetings improve team alignment, transparency, and issue resolution efficiency."
  },
  {
    "id": "agile_2322",
    "question": "Why should a development team avoid overcommitting in a Sprint?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "To ensure sustainable and high-quality delivery", "isCorrect": true },
      { "id": "option_3", "text": "To avoid working collaboratively", "isCorrect": false },
      { "id": "option_4", "text": "To keep the backlog unchanged", "isCorrect": false }
    ],
    "hint": "Sustainable work ensures consistent high-quality output.",
    "answerDescription": "Avoiding overcommitment allows teams to maintain quality, avoid burnout, and meet realistic goals."
  },
  {
    "id": "agile_2323",
    "question": "How does continuous integration benefit a development team?",
    "options": [
      { "id": "option_1", "text": "By allowing delayed testing and deployment", "isCorrect": false },
      { "id": "option_2", "text": "By identifying and fixing issues early in development", "isCorrect": true },
      { "id": "option_3", "text": "By eliminating the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "By reducing the need for automation", "isCorrect": false }
    ],
    "hint": "Continuous integration helps catch issues early.",
    "answerDescription": "Integrating code frequently allows teams to detect and resolve defects early, improving software quality."
  },
  {
    "id": "agile_2324",
    "question": "What should a development team do if a user story is too large for a Sprint?",
    "options": [
      { "id": "option_1", "text": "Postpone it to the next Sprint without changes", "isCorrect": false },
      { "id": "option_2", "text": "Break it down into smaller, manageable tasks", "isCorrect": true },
      { "id": "option_3", "text": "Ask stakeholders to remove the requirement", "isCorrect": false },
      { "id": "option_4", "text": "Ignore it and focus on other stories", "isCorrect": false }
    ],
    "hint": "Smaller tasks make work more manageable.",
    "answerDescription": "Breaking large stories into smaller ones ensures they fit within a Sprint and deliver incremental value."
  },
  {
    "id": "agile_2325",
    "question": "What is a key characteristic of an Agile development team?",
    "options": [
      { "id": "option_1", "text": "Strict adherence to a managerâ€™s directives", "isCorrect": false },
      { "id": "option_2", "text": "A focus on collaboration and adaptability", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding feedback from stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Minimal communication between team members", "isCorrect": false }
    ],
    "hint": "Agile teams emphasize working together and adapting to change.",
    "answerDescription": "Agile teams thrive on collaboration and adaptability, ensuring effective responses to change."
  },
  {
    "id": "agile_2326",
    "question": "How should a development team measure the success of a Sprint?",
    "options": [
      { "id": "option_1", "text": "By counting the number of hours worked", "isCorrect": false },
      { "id": "option_2", "text": "By delivering a working and valuable product increment", "isCorrect": true },
      { "id": "option_3", "text": "By ensuring all documentation is completed", "isCorrect": false },
      { "id": "option_4", "text": "By completing as many tasks as possible, regardless of quality", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering value in increments.",
    "answerDescription": "The success of a Sprint is measured by delivering a working product increment that provides value."
  },
  {
    "id": "agile_2327",
    "question": "Why should an Agile development team conduct retrospectives after each Sprint?",
    "options": [
      { "id": "option_1", "text": "To review customer satisfaction surveys", "isCorrect": false },
      { "id": "option_2", "text": "To identify areas for process improvement", "isCorrect": true },
      { "id": "option_3", "text": "To eliminate the need for daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "To replace all other Scrum ceremonies", "isCorrect": false }
    ],
    "hint": "Continuous improvement is key in Agile.",
    "answerDescription": "Sprint retrospectives help teams reflect on their process and make necessary improvements."
  },
  {
    "id": "agile_2328",
    "question": "How can an Agile development team ensure high-quality code?",
    "options": [
      { "id": "option_1", "text": "By skipping testing to save time", "isCorrect": false },
      { "id": "option_2", "text": "By following coding standards and best practices", "isCorrect": true },
      { "id": "option_3", "text": "By minimizing communication with testers", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding collaboration with other developers", "isCorrect": false }
    ],
    "hint": "Quality depends on strong coding practices.",
    "answerDescription": "Using coding standards, testing, and best practices ensures maintainability and high-quality software."
  },
  {
    "id": "agile_2329",
    "question": "What is a primary responsibility of a development team in Agile?",
    "options": [
      { "id": "option_1", "text": "Ensuring the Product Owner writes all user stories", "isCorrect": false },
      { "id": "option_2", "text": "Delegating work to external teams", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a working product increment", "isCorrect": true },
      { "id": "option_4", "text": "Relying solely on management for decision-making", "isCorrect": false }
    ],
    "hint": "Agile teams focus on delivering incremental value.",
    "answerDescription": "The development team is responsible for creating working product increments in each Sprint."
  },
  {
    "id": "agile_2330",
    "question": "What is the role of continuous integration in Agile development?",
    "options": [
      { "id": "option_1", "text": "To delay testing until the final stages of development", "isCorrect": false },
      { "id": "option_2", "text": "To separate coding and testing into different teams", "isCorrect": false },
      { "id": "option_3", "text": "To ensure developers work on isolated branches for long periods", "isCorrect": false },
      { "id": "option_4", "text": "To detect and fix integration issues early in development", "isCorrect": true }
    ],
    "hint": "Continuous integration reduces integration problems.",
    "answerDescription": "By integrating code frequently, teams can catch issues early and maintain a stable product."
  },
  {
    "id": "agile_2331",
    "question": "What approach should a development team take when facing a complex problem?",
    "options": [
      { "id": "option_1", "text": "Wait for external consultants to provide a solution", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the problem and move to another task", "isCorrect": false },
      { "id": "option_3", "text": "Collaborate and experiment with different solutions", "isCorrect": true },
      { "id": "option_4", "text": "Assign the problem to a single team member", "isCorrect": false }
    ],
    "hint": "Agile encourages teamwork and iterative problem-solving.",
    "answerDescription": "Working together and experimenting with potential solutions helps teams solve complex problems effectively."
  },
  {
    "id": "agile_2332",
    "question": "What is an important factor in maintaining team motivation in Agile?",
    "options": [
      { "id": "option_1", "text": "Strictly enforcing deadlines without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "Keeping team members isolated in their tasks", "isCorrect": false },
      { "id": "option_3", "text": "Encouraging autonomy and ownership of work", "isCorrect": true },
      { "id": "option_4", "text": "Having management dictate every decision", "isCorrect": false }
    ],
    "hint": "Empowered teams tend to be more motivated.",
    "answerDescription": "Giving teams ownership over their work fosters motivation, creativity, and accountability."
  },
  {
    "id": "agile_2333",
    "question": "What should a development team do if a backlog item lacks clarity?",
    "options": [
      { "id": "option_1", "text": "Make assumptions and start development", "isCorrect": false },
      { "id": "option_2", "text": "Skip the item and work on something else", "isCorrect": false },
      { "id": "option_3", "text": "Collaborate with the Product Owner to refine it", "isCorrect": true },
      { "id": "option_4", "text": "Only work on items that are fully documented", "isCorrect": false }
    ],
    "hint": "Clear backlog items ensure better development outcomes.",
    "answerDescription": "Clarifying backlog items with the Product Owner helps avoid misinterpretation and ensures smooth development."
  },
  {
    "id": "agile_2334",
    "question": "What is the primary purpose of Sprint Review?",
    "options": [
      { "id": "option_1", "text": "To finalize all pending documentation", "isCorrect": false },
      { "id": "option_2", "text": "To critique individual developer performance", "isCorrect": false },
      { "id": "option_3", "text": "To demonstrate the completed work and gather feedback", "isCorrect": true },
      { "id": "option_4", "text": "To make last-minute changes before deployment", "isCorrect": false }
    ],
    "hint": "Sprint Reviews focus on showcasing completed work.",
    "answerDescription": "The Sprint Review allows stakeholders to inspect the increment and provide valuable feedback."
  },
  {
    "id": "agile_2335",
    "question": "How can a development team improve cross-functionality?",
    "options": [
      { "id": "option_1", "text": "By ensuring each team member specializes in one skill only", "isCorrect": false },
      { "id": "option_2", "text": "By working on tasks individually with minimal collaboration", "isCorrect": false },
      { "id": "option_3", "text": "By learning multiple skills and collaborating across roles", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding knowledge-sharing sessions", "isCorrect": false }
    ],
    "hint": "Cross-functionality enables flexibility and collaboration.",
    "answerDescription": "A team with diverse skills can adapt to different tasks, improving efficiency and collaboration."
  },
  {
    "id": "agile_2336",
    "question": "Why should development teams practice test-driven development (TDD)?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for future testing", "isCorrect": false },
      { "id": "option_2", "text": "To delay identifying issues until after release", "isCorrect": false },
      { "id": "option_3", "text": "To ensure code quality and prevent defects early", "isCorrect": true },
      { "id": "option_4", "text": "To speed up development by skipping validation", "isCorrect": false }
    ],
    "hint": "TDD focuses on early issue detection.",
    "answerDescription": "Writing tests before development helps prevent defects and ensures higher code quality."
  },
  {
    "id": "agile_2337",
    "question": "How should a development team handle external dependencies in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore dependencies and focus on internal work", "isCorrect": false },
      { "id": "option_2", "text": "Wait until the dependency is resolved before planning", "isCorrect": false },
      { "id": "option_3", "text": "Identify and mitigate risks related to dependencies early", "isCorrect": true },
      { "id": "option_4", "text": "Avoid working on stories that have dependencies", "isCorrect": false }
    ],
    "hint": "Managing dependencies proactively ensures smooth progress.",
    "answerDescription": "Identifying and planning for dependencies helps prevent bottlenecks and delays in Sprints."
  },
  {
    "id": "agile_2338",
    "question": "Why should a development team use a Definition of Done (DoD)?",
    "options": [
      { "id": "option_1", "text": "To set expectations for feature release dates", "isCorrect": false },
      { "id": "option_2", "text": "To define high-level project goals", "isCorrect": false },
      { "id": "option_3", "text": "To ensure work meets quality standards before completion", "isCorrect": true },
      { "id": "option_4", "text": "To track hours spent on tasks", "isCorrect": false }
    ],
    "hint": "DoD ensures consistency and quality in deliverables.",
    "answerDescription": "A clear Definition of Done helps teams deliver high-quality, shippable increments consistently."
  },  {
    "id": "agile_2339",
    "question": "What is the key benefit of a self-organizing development team?",
    "options": [
      { "id": "option_1", "text": "Increased reliance on external management", "isCorrect": false },
      { "id": "option_2", "text": "Reduced need for team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Strict adherence to traditional hierarchy", "isCorrect": false },
      { "id": "option_4", "text": "Greater ownership and accountability", "isCorrect": true }
    ],
    "hint": "Self-organizing teams take responsibility for their work.",
    "answerDescription": "A self-organizing team fosters accountability, collaboration, and efficient decision-making."
  },
  {
    "id": "agile_2340",
    "question": "How should a development team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By repeating the same processes without change", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on management feedback", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding retrospectives to save time", "isCorrect": false },
      { "id": "option_4", "text": "By regularly reflecting and adapting", "isCorrect": true }
    ],
    "hint": "Agile teams improve through iteration and reflection.",
    "answerDescription": "Regular retrospectives and adapting based on insights lead to continuous team improvement."
  },
  {
    "id": "agile_2341",
    "question": "Why is limiting Work in Progress (WIP) important for a development team?",
    "options": [
      { "id": "option_1", "text": "To ensure every team member is always busy", "isCorrect": false },
      { "id": "option_2", "text": "To increase multitasking across multiple tasks", "isCorrect": false },
      { "id": "option_3", "text": "To maximize task switching", "isCorrect": false },
      { "id": "option_4", "text": "To improve focus and efficiency", "isCorrect": true }
    ],
    "hint": "Too much WIP can reduce productivity and slow progress.",
    "answerDescription": "Limiting WIP reduces context switching and helps teams focus on delivering value efficiently."
  },
  {
    "id": "agile_2342",
    "question": "What should a development team do if a Sprint goal becomes unachievable?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue and continue as planned", "isCorrect": false },
      { "id": "option_2", "text": "Blame external stakeholders for the problem", "isCorrect": false },
      { "id": "option_3", "text": "Request a change in the Sprint backlog without discussion", "isCorrect": false },
      { "id": "option_4", "text": "Collaborate with the Product Owner to adjust the goal", "isCorrect": true }
    ],
    "hint": "Agile teams adapt to changing circumstances.",
    "answerDescription": "Adjusting the Sprint goal with the Product Owner ensures alignment with business priorities."
  },
  {
    "id": "agile_2343",
    "question": "Why should Agile Development Teams focus on delivering small increments?",
    "options": [
      { "id": "option_1", "text": "To delay customer feedback until the final release", "isCorrect": false },
      { "id": "option_2", "text": "To avoid making changes based on user needs", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the importance of testing", "isCorrect": false },
      { "id": "option_4", "text": "To get early feedback and improve continuously", "isCorrect": true }
    ],
    "hint": "Frequent releases allow for quick adaptation.",
    "answerDescription": "By delivering small increments, teams can adjust based on feedback and provide value sooner."
  },
  {
    "id": "agile_2344",
    "question": "What is a characteristic of a high-performing development team?",
    "options": [
      { "id": "option_1", "text": "A rigid hierarchy with minimal collaboration", "isCorrect": false },
      { "id": "option_2", "text": "Team members working in complete isolation", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding feedback loops to maintain speed", "isCorrect": false },
      { "id": "option_4", "text": "Continuous learning and adaptation", "isCorrect": true }
    ],
    "hint": "Agile teams thrive on learning and improving.",
    "answerDescription": "A high-performing team embraces feedback, continuous learning, and iterative improvements."
  },
  {
    "id": "agile_2345",
    "question": "What is an important factor in fostering collaboration within a development team?",
    "options": [
      { "id": "option_1", "text": "Encouraging individual competition over teamwork", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing team interactions to avoid conflicts", "isCorrect": false },
      { "id": "option_3", "text": "Only communicating through formal documentation", "isCorrect": false },
      { "id": "option_4", "text": "Promoting open communication and trust", "isCorrect": true }
    ],
    "hint": "Trust and communication are key to teamwork.",
    "answerDescription": "Encouraging open discussions and trust fosters effective collaboration in development teams."
  },
  {
    "id": "agile_2346",
    "question": "Why should a development team embrace feedback from stakeholders?",
    "options": [
      { "id": "option_1", "text": "To prove that the current process is flawless", "isCorrect": false },
      { "id": "option_2", "text": "To avoid making any changes to the product", "isCorrect": false },
      { "id": "option_3", "text": "To reduce transparency in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "To refine and improve the product continuously", "isCorrect": true }
    ],
    "hint": "Stakeholder feedback helps align the product with user needs.",
    "answerDescription": "Incorporating stakeholder feedback ensures continuous improvement and alignment with business goals."
  },
  {
    "id": "agile_2347",
    "question": "How should a development team handle unexpected changes during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Reject all changes to stay on track", "isCorrect": false },
      { "id": "option_2", "text": "Only consider changes after the Sprint ends", "isCorrect": false },
      { "id": "option_3", "text": "Pause all work until a new plan is created", "isCorrect": false },
      { "id": "option_4", "text": "Assess the impact and collaborate with the Product Owner", "isCorrect": true }
    ],
    "hint": "Agile teams adapt to change while maintaining focus.",
    "answerDescription": "Discussing changes with the Product Owner helps the team stay aligned with business priorities."
  },
  {
    "id": "agile_2348",
    "question": "What is an effective way for a development team to improve velocity?",
    "options": [
      { "id": "option_1", "text": "By skipping quality checks to deliver faster", "isCorrect": false },
      { "id": "option_2", "text": "By overloading the team with excessive tasks", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding retrospective meetings", "isCorrect": false },
      { "id": "option_4", "text": "By improving collaboration and efficiency", "isCorrect": true }
    ],
    "hint": "Velocity improves with efficiency and teamwork.",
    "answerDescription": "Strong collaboration, process improvements, and efficient work practices help boost velocity."
  },
  {
    "id": "agile_2349",
    "question": "What is the primary responsibility of a Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Defining the companyâ€™s strategic vision", "isCorrect": false },
      { "id": "option_3", "text": "Assigning tasks to team members individually", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring no changes are made to the backlog", "isCorrect": false }
    ],
    "hint": "The goal of each Sprint is to deliver value.",
    "answerDescription": "A Development Team is responsible for delivering a high-quality product increment that meets the Definition of Done."
  },
  {
    "id": "agile_2350",
    "question": "Why is cross-functionality important in a Development Team?",
    "options": [
      { "id": "option_1", "text": "It allows the team to deliver features independently", "isCorrect": true },
      { "id": "option_2", "text": "It ensures only specialists work on specific tasks", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for collaboration", "isCorrect": false },
      { "id": "option_4", "text": "It limits the team's ability to adapt to change", "isCorrect": false }
    ],
    "hint": "Cross-functional teams can handle all aspects of development.",
    "answerDescription": "Having a cross-functional team ensures that all necessary skills are available to deliver working software each Sprint."
  },
  {
    "id": "agile_2351",
    "question": "How does a Development Team achieve high quality in Agile projects?",
    "options": [
      { "id": "option_1", "text": "By adhering to the Definition of Done", "isCorrect": true },
      { "id": "option_2", "text": "By delivering as quickly as possible without testing", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding automated testing and reviews", "isCorrect": false },
      { "id": "option_4", "text": "By working in silos with limited communication", "isCorrect": false }
    ],
    "hint": "Quality is ensured by well-defined completion criteria.",
    "answerDescription": "The Definition of Done ensures that the product increment meets the required quality standards."
  },
  {
    "id": "agile_2352",
    "question": "What should a Development Team do if they encounter a blocker during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Raise the issue in the Daily Scrum for resolution", "isCorrect": true },
      { "id": "option_2", "text": "Ignore the issue and continue with other tasks", "isCorrect": false },
      { "id": "option_3", "text": "Wait until the Sprint Review to discuss it", "isCorrect": false },
      { "id": "option_4", "text": "Ask only the Scrum Master to solve the problem", "isCorrect": false }
    ],
    "hint": "Daily Scrums help identify and resolve blockers.",
    "answerDescription": "Raising blockers in the Daily Scrum allows the team to collaborate on solutions quickly."
  },
  {
    "id": "agile_2353",
    "question": "Why is it important for a Development Team to be self-organizing?",
    "options": [
      { "id": "option_1", "text": "It enhances team ownership and decision-making", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for a Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "It allows team members to work without any accountability", "isCorrect": false },
      { "id": "option_4", "text": "It removes the necessity for a Scrum Master", "isCorrect": false }
    ],
    "hint": "Self-organizing teams take responsibility for their own processes.",
    "answerDescription": "A self-organizing team makes decisions collectively, improving efficiency and accountability."
  },
  {
    "id": "agile_2354",
    "question": "What should the Development Team focus on during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Delivering the highest priority Sprint Goal", "isCorrect": true },
      { "id": "option_2", "text": "Completing as many tasks as possible, regardless of priority", "isCorrect": false },
      { "id": "option_3", "text": "Only working on tasks assigned by the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding communication with stakeholders", "isCorrect": false }
    ],
    "hint": "Sprint Goals align development work with business value.",
    "answerDescription": "Focusing on the Sprint Goal ensures the team delivers the most valuable work within the Sprint."
  },
  {
    "id": "agile_2355",
    "question": "How does the Development Team ensure transparency in their work?",
    "options": [
      { "id": "option_1", "text": "By maintaining an up-to-date Sprint Backlog", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding documentation to speed up development", "isCorrect": false },
      { "id": "option_3", "text": "By keeping progress discussions private", "isCorrect": false },
      { "id": "option_4", "text": "By relying only on the Scrum Master for updates", "isCorrect": false }
    ],
    "hint": "An updated Sprint Backlog makes progress visible to all.",
    "answerDescription": "Keeping the Sprint Backlog updated helps the team and stakeholders track progress transparently."
  },
  {
    "id": "agile_2356",
    "question": "What is an advantage of small, stable development teams?",
    "options": [
      { "id": "option_1", "text": "They build strong collaboration and efficiency", "isCorrect": true },
      { "id": "option_2", "text": "They reduce the need for communication", "isCorrect": false },
      { "id": "option_3", "text": "They minimize learning opportunities", "isCorrect": false },
      { "id": "option_4", "text": "They discourage knowledge sharing", "isCorrect": false }
    ],
    "hint": "Stable teams improve collaboration and productivity over time.",
    "answerDescription": "Small, stable teams develop a strong working rhythm, leading to higher efficiency and better results."
  },
  {
    "id": "agile_2357",
    "question": "Why is it important for the Development Team to participate in Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "To commit to and plan how to achieve the Sprint Goal", "isCorrect": true },
      { "id": "option_2", "text": "To allow only the Scrum Master to make decisions", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the Product Owner assigns tasks to them", "isCorrect": false },
      { "id": "option_4", "text": "To avoid making adjustments to the Sprint Backlog", "isCorrect": false }
    ],
    "hint": "Sprint Planning defines the team's commitment for the Sprint.",
    "answerDescription": "By actively participating in Sprint Planning, the Development Team ensures clarity and alignment with Sprint Goals."
  },
  {
    "id": "agile_2358",
    "question": "What is the main advantage of collective code ownership in Agile?",
    "options": [
      { "id": "option_1", "text": "It increases code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_2", "text": "It allows only senior developers to modify the code", "isCorrect": false },
      { "id": "option_3", "text": "It prevents junior developers from learning", "isCorrect": false },
      { "id": "option_4", "text": "It restricts code changes to a single team member", "isCorrect": false }
    ],
    "hint": "Agile teams promote shared responsibility for code.",
    "answerDescription": "Collective code ownership ensures that all team members can contribute, leading to better quality and collaboration."
  },
  {
    "id": "agile_2359",
    "question": "What is the key characteristic of a self-organizing Development Team?",
    "options": [
      { "id": "option_1", "text": "It requires constant supervision", "isCorrect": false },
      { "id": "option_2", "text": "It decides how to accomplish the work", "isCorrect": true },
      { "id": "option_3", "text": "It waits for instructions from the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "It follows strict hierarchical structures", "isCorrect": false }
    ],
    "hint": "A self-organizing team determines the best way to deliver work.",
    "answerDescription": "Self-organizing teams take ownership of their work, improving efficiency and agility."
  },
  {
    "id": "agile_2360",
    "question": "Why should the Development Team avoid multitasking?",
    "options": [
      { "id": "option_1", "text": "It allows the Scrum Master to assign more work", "isCorrect": false },
      { "id": "option_2", "text": "It improves focus and productivity", "isCorrect": true },
      { "id": "option_3", "text": "It increases workload for each team member", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for prioritization", "isCorrect": false }
    ],
    "hint": "Multitasking reduces efficiency in Agile development.",
    "answerDescription": "Avoiding multitasking helps the Development Team complete tasks faster with higher quality."
  },
  {
    "id": "agile_2361",
    "question": "What is the best way for a Development Team to handle technical debt?",
    "options": [
      { "id": "option_1", "text": "Ignore it until later releases", "isCorrect": false },
      { "id": "option_2", "text": "Address it regularly within each Sprint", "isCorrect": true },
      { "id": "option_3", "text": "Rely only on external consultants to fix it", "isCorrect": false },
      { "id": "option_4", "text": "Only fix technical debt when customers complain", "isCorrect": false }
    ],
    "hint": "Technical debt should be managed proactively.",
    "answerDescription": "By addressing technical debt in each Sprint, teams maintain code quality and prevent long-term issues."
  },
  {
    "id": "agile_2362",
    "question": "How can a Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By following fixed processes without change", "isCorrect": false },
      { "id": "option_2", "text": "By conducting Sprint Retrospectives", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding feedback from stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on coding without discussions", "isCorrect": false }
    ],
    "hint": "Regular reflection helps teams improve over time.",
    "answerDescription": "Sprint Retrospectives allow the Development Team to inspect and adapt, fostering continuous improvement."
  },
  {
    "id": "agile_2363",
    "question": "What helps a Development Team work effectively in Agile?",
    "options": [
      { "id": "option_1", "text": "Having separate teams for each task", "isCorrect": false },
      { "id": "option_2", "text": "Clear goals and open communication", "isCorrect": true },
      { "id": "option_3", "text": "Only working on individual tasks", "isCorrect": false },
      { "id": "option_4", "text": "Following rigid, unchangeable plans", "isCorrect": false }
    ],
    "hint": "Alignment and collaboration improve Agile teams.",
    "answerDescription": "Clear goals and communication ensure the Development Team delivers effectively in Agile environments."
  },
  {
    "id": "agile_2364",
    "question": "Why should a Development Team collaborate closely with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To avoid unexpected requirements", "isCorrect": false },
      { "id": "option_2", "text": "To align development with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To ensure they receive detailed task assignments", "isCorrect": false },
      { "id": "option_4", "text": "To minimize direct customer interactions", "isCorrect": false }
    ],
    "hint": "Stakeholder collaboration improves product value.",
    "answerDescription": "Working closely with stakeholders helps the team build solutions that meet business and customer needs."
  },
  {
    "id": "agile_2365",
    "question": "What should a Development Team do if a Sprint Goal becomes obsolete?",
    "options": [
      { "id": "option_1", "text": "Ignore the change and complete the planned work", "isCorrect": false },
      { "id": "option_2", "text": "Discuss with the Product Owner and adapt the Sprint", "isCorrect": true },
      { "id": "option_3", "text": "Immediately end the Sprint and start a new one", "isCorrect": false },
      { "id": "option_4", "text": "Continue the Sprint without informing stakeholders", "isCorrect": false }
    ],
    "hint": "Agile teams adapt to changes in requirements.",
    "answerDescription": "If the Sprint Goal is no longer relevant, the Development Team and Product Owner should reassess and adapt."
  },
  {
    "id": "agile_2366",
    "question": "How can the Development Team improve collaboration?",
    "options": [
      { "id": "option_1", "text": "By working independently without communication", "isCorrect": false },
      { "id": "option_2", "text": "By having regular discussions and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding code reviews and pair programming", "isCorrect": false },
      { "id": "option_4", "text": "By relying only on written documentation", "isCorrect": false }
    ],
    "hint": "Frequent communication strengthens team collaboration.",
    "answerDescription": "Regular discussions and knowledge sharing improve teamwork and alignment in Agile development."
  },
  {
    "id": "agile_2367",
    "question": "What should a Development Team do if a critical bug is found during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Delay fixing it until the next release", "isCorrect": false },
      { "id": "option_2", "text": "Prioritize it based on its impact", "isCorrect": true },
      { "id": "option_3", "text": "Ignore it if it does not affect all users", "isCorrect": false },
      { "id": "option_4", "text": "Let only the Scrum Master decide on its priority", "isCorrect": false }
    ],
    "hint": "Bugs should be handled based on their urgency and impact.",
    "answerDescription": "Prioritizing bugs based on impact ensures the most critical issues are addressed within the Sprint."
  },
  {
    "id": "agile_2368",
    "question": "How does Agile encourage high team motivation?",
    "options": [
      { "id": "option_1", "text": "By providing fixed roles and limited responsibilities", "isCorrect": false },
      { "id": "option_2", "text": "By fostering autonomy, mastery, and purpose", "isCorrect": true },
      { "id": "option_3", "text": "By requiring strict adherence to pre-defined processes", "isCorrect": false },
      { "id": "option_4", "text": "By discouraging self-organization", "isCorrect": false }
    ],
    "hint": "Motivation thrives on autonomy and purpose.",
    "answerDescription": "Agile teams stay motivated by having autonomy in decision-making and a clear sense of purpose."
  },
  {
    "id": "agile_2369",
    "question": "What is the primary responsibility of a Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Managing the product backlog", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing Sprint goals", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "Assigning tasks to individual members", "isCorrect": false }
    ],
    "hint": "The Development Team is responsible for creating working software.",
    "answerDescription": "In Scrum, the Development Team is accountable for delivering a potentially shippable product increment at the end of each Sprint."
  },
  {
    "id": "agile_2370",
    "question": "How does a Development Team track its progress during a Sprint?",
    "options": [
      { "id": "option_1", "text": "By updating the Product Roadmap", "isCorrect": false },
      { "id": "option_2", "text": "By holding retrospectives daily", "isCorrect": false },
      { "id": "option_3", "text": "By using a Sprint Burndown Chart", "isCorrect": true },
      { "id": "option_4", "text": "By having the Scrum Master track their tasks", "isCorrect": false }
    ],
    "hint": "A visual tool helps monitor remaining work during a Sprint.",
    "answerDescription": "A Sprint Burndown Chart helps the Development Team see how much work remains and adjust their efforts accordingly."
  },
  {
    "id": "agile_2371",
    "question": "What should the Development Team do if they cannot complete all tasks in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint until everything is completed", "isCorrect": false },
      { "id": "option_2", "text": "Ask the Product Owner to change the Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Collaborate with the Product Owner to reprioritize work", "isCorrect": true },
      { "id": "option_4", "text": "Drop the tasks without informing stakeholders", "isCorrect": false }
    ],
    "hint": "Agile teams must adapt and communicate when work cannot be finished.",
    "answerDescription": "When a team cannot complete all tasks, they should work with the Product Owner to adjust priorities while maintaining transparency."
  },
  {
    "id": "agile_2372",
    "question": "Why cross-functionality is needed in a Development Team?",
    "options": [
      { "id": "option_1", "text": "It allows specialists to focus only on their expertise", "isCorrect": false },
      { "id": "option_2", "text": "It enables team members to work independently", "isCorrect": false },
      { "id": "option_3", "text": "It helps the team deliver a complete product increment", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the need for communication", "isCorrect": false }
    ],
    "hint": "A cross-functional team can handle all aspects of development.",
    "answerDescription": "Cross-functionality ensures the team has all necessary skills to deliver a fully functional product increment without external dependencies."
  },
  {
    "id": "agile_2373",
    "question": "How should a Development Team respond to changing requirements?",
    "options": [
      { "id": "option_1", "text": "Ignore changes to maintain Sprint commitments", "isCorrect": false },
      { "id": "option_2", "text": "Ask the Scrum Master to prevent changes", "isCorrect": false },
      { "id": "option_3", "text": "Embrace change while maintaining focus on Sprint goals", "isCorrect": true },
      { "id": "option_4", "text": "Restart the Sprint to accommodate new requirements", "isCorrect": false }
    ],
    "hint": "Agile is designed to be flexible and adaptive.",
    "answerDescription": "While change is inevitable, the Development Team should balance flexibility with achieving the Sprint Goal."
  },
  {
    "id": "agile_2374",
    "question": "What is the purpose of a Sprint Retrospective for the Development Team?",
    "options": [
      { "id": "option_1", "text": "To review completed backlog items", "isCorrect": false },
      { "id": "option_2", "text": "To assess individual performance", "isCorrect": false },
      { "id": "option_3", "text": "To reflect on and improve team processes", "isCorrect": true },
      { "id": "option_4", "text": "To present work to stakeholders", "isCorrect": false }
    ],
    "hint": "Retrospectives focus on team growth and improvement.",
    "answerDescription": "Sprint Retrospectives help teams continuously refine their collaboration and processes for better efficiency."
  },
  {
    "id": "agile_2375",
    "question": "How can a Development Team improve collaboration?",
    "options": [
      { "id": "option_1", "text": "By assigning work strictly based on job titles", "isCorrect": false },
      { "id": "option_2", "text": "By reducing the number of meetings", "isCorrect": false },
      { "id": "option_3", "text": "By fostering open communication and shared ownership", "isCorrect": true },
      { "id": "option_4", "text": "By limiting discussions to formal reports", "isCorrect": false }
    ],
    "hint": "Effective collaboration depends on communication and teamwork.",
    "answerDescription": "Open communication and shared ownership encourage a collaborative environment where all team members contribute to success."
  },
  {
    "id": "agile_2376",
    "question": "Why is it important for the Development Team to have a Definition of Done?",
    "options": [
      { "id": "option_1", "text": "To ensure work is completed to a consistent standard", "isCorrect": true },
      { "id": "option_2", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_3", "text": "To allow unfinished work to be pushed to the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "To enable the Scrum Master to evaluate progress", "isCorrect": false }
    ],
    "hint": "A shared understanding of completion ensures quality work.",
    "answerDescription": "A Definition of Done ensures that all team members follow a consistent standard before considering work complete."
  },
  {
    "id": "agile_2377",
    "question": "What should a Development Team do if they identify a knowledge gap?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus on immediate tasks", "isCorrect": false },
      { "id": "option_2", "text": "Wait for management to assign training", "isCorrect": false },
      { "id": "option_3", "text": "Take initiative to learn and share knowledge", "isCorrect": true },
      { "id": "option_4", "text": "Rely on external consultants for all learning", "isCorrect": false }
    ],
    "hint": "Continuous learning is key to Agile success.",
    "answerDescription": "Development Teams should actively seek knowledge and share learning to stay adaptable and effective."
  },
  {
    "id": "agile_2378",
    "question": "What is an important characteristic of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Following strict hierarchical structures", "isCorrect": false },
      { "id": "option_2", "text": "Working in silos to maximize efficiency", "isCorrect": false },
      { "id": "option_3", "text": "Being self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_4", "text": "Relying on external teams for critical decisions", "isCorrect": false }
    ],
    "hint": "Agile teams manage their own work and are multidisciplinary.",
    "answerDescription": "Agile Development Teams are self-organizing and cross-functional, ensuring they can complete work without external dependencies."
  },
  {
    "id": "agile_2379",
    "question": "What is the ideal size of a Scrum Development Team?",
    "options": [
      { "id": "option_1", "text": "More than 15 members", "isCorrect": false },
      { "id": "option_2", "text": "Exactly 5 members", "isCorrect": false },
      { "id": "option_3", "text": "Only 2 or 3 members", "isCorrect": false },
      { "id": "option_4", "text": "Between 3 and 9 members", "isCorrect": true }
    ],
    "hint": "Scrum recommends a team size that balances agility and collaboration.",
    "answerDescription": "A Scrum Development Team should ideally have between 3 and 9 members to remain effective and collaborative."
  },
  {
    "id": "agile_2380",
    "question": "How does a Development Team ensure transparency in their work?",
    "options": [
      { "id": "option_1", "text": "By keeping work progress private", "isCorrect": false },
      { "id": "option_2", "text": "By relying solely on the Scrum Master for updates", "isCorrect": false },
      { "id": "option_3", "text": "By only communicating at the end of the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By using tools like task boards and daily stand-ups", "isCorrect": true }
    ],
    "hint": "Scrum encourages visibility of work progress.",
    "answerDescription": "Development Teams ensure transparency by using task boards, daily stand-ups, and regular updates to share progress."
  },
  {
    "id": "agile_2381",
    "question": "What happens when a Development Team member faces a blocker?",
    "options": [
      { "id": "option_1", "text": "They wait until the Sprint Review to address it", "isCorrect": false },
      { "id": "option_2", "text": "They complete other tasks and ignore the issue", "isCorrect": false },
      { "id": "option_3", "text": "They escalate the issue directly to stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "They raise it in the Daily Scrum for resolution", "isCorrect": true }
    ],
    "hint": "Daily meetings help resolve impediments quickly.",
    "answerDescription": "Team members should raise blockers in the Daily Scrum to seek support and ensure progress continues smoothly."
  },
  {
    "id": "agile_2382",
    "question": "How does a Development Team improve Sprint execution?",
    "options": [
      { "id": "option_1", "text": "By working in isolation to minimize distractions", "isCorrect": false },
      { "id": "option_2", "text": "By only following predefined roles and responsibilities", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding communication with the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "By collaborating, adapting, and continuously improving", "isCorrect": true }
    ],
    "hint": "Scrum promotes continuous improvement through collaboration.",
    "answerDescription": "A Development Team should embrace adaptability, teamwork, and learning to enhance Sprint execution."
  },
  {
    "id": "agile_2383",
    "question": "What should a Development Team do when they finish all Sprint tasks early?",
    "options": [
      { "id": "option_1", "text": "End the Sprint immediately", "isCorrect": false },
      { "id": "option_2", "text": "Wait for the next Sprint to begin", "isCorrect": false },
      { "id": "option_3", "text": "Take on additional work without discussing it", "isCorrect": false },
      { "id": "option_4", "text": "Collaborate with the Product Owner to pull in more backlog items", "isCorrect": true }
    ],
    "hint": "A flexible approach ensures maximum value delivery.",
    "answerDescription": "If a Development Team completes work early, they should work with the Product Owner to pull additional valuable backlog items into the Sprint."
  },
  {
    "id": "agile_2384",
    "question": "Why is it important for Development Team members to be self-organizing?",
    "options": [
      { "id": "option_1", "text": "To avoid the need for a Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for planning", "isCorrect": false },
      { "id": "option_3", "text": "To ensure tasks are assigned by management", "isCorrect": false },
      { "id": "option_4", "text": "To take responsibility for planning and execution", "isCorrect": true }
    ],
    "hint": "Scrum teams are self-sufficient and accountable.",
    "answerDescription": "Self-organizing teams take ownership of how they complete work, leading to better collaboration and efficiency."
  },
  {
    "id": "agile_2385",
    "question": "What is a key outcome of a Development Teamâ€™s Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "A detailed performance review of team members", "isCorrect": false },
      { "id": "option_2", "text": "Approval of work by the Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Finalization of all pending backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Identification of blockers and adjustments to work plans", "isCorrect": true }
    ],
    "hint": "Daily Scrums help ensure smooth progress.",
    "answerDescription": "Daily Scrums allow the Development Team to identify impediments and adjust their approach to meet Sprint goals."
  },
  {
    "id": "agile_2386",
    "question": "Why is technical excellence important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To reduce interactions with stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "To ensure they always deliver more features than expected", "isCorrect": false },
      { "id": "option_3", "text": "To avoid the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To create high-quality, maintainable software", "isCorrect": true }
    ],
    "hint": "Sustainable development depends on quality.",
    "answerDescription": "Focusing on technical excellence ensures the Development Team delivers high-quality, scalable, and maintainable software."
  },
  {
    "id": "agile_2387",
    "question": "How can a Development Team handle conflicting priorities within a Sprint?",
    "options": [
      { "id": "option_1", "text": "By allowing each team member to choose their own priorities", "isCorrect": false },
      { "id": "option_2", "text": "By escalating all conflicts to senior management", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring lower-priority tasks until the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By working with the Product Owner to realign priorities", "isCorrect": true }
    ],
    "hint": "Collaboration with the Product Owner helps resolve priority conflicts.",
    "answerDescription": "The Development Team should work closely with the Product Owner to ensure alignment on priorities and deliver the most valuable work."
  },
  {
    "id": "agile_2388",
    "question": "What should a Development Team do if they disagree on a technical approach?",
    "options": [
      { "id": "option_1", "text": "Have the Scrum Master make the final decision", "isCorrect": false },
      { "id": "option_2", "text": "Let the most senior developer decide", "isCorrect": false },
      { "id": "option_3", "text": "Follow the approach used in previous projects", "isCorrect": false },
      { "id": "option_4", "text": "Discuss options and reach a consensus as a team", "isCorrect": true }
    ],
    "hint": "Agile promotes collaborative decision-making.",
    "answerDescription": "Development Teams should openly discuss technical decisions and reach a consensus to ensure the best approach is taken."
  },
  {
    "id": "agile_2389",
    "question": "What is a primary responsibility of a Scrum Development Team?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Defining business goals and customer requirements", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring management assigns individual tasks", "isCorrect": false },
      { "id": "option_4", "text": "Finalizing budgets and marketing strategies", "isCorrect": false }
    ],
    "hint": "Scrum teams focus on delivering working software.",
    "answerDescription": "The Development Team is responsible for delivering a usable product increment at the end of each Sprint."
  },
  {
    "id": "agile_2390",
    "question": "How does a Development Team handle work allocation?",
    "options": [
      { "id": "option_1", "text": "They self-organize to determine how work is done", "isCorrect": true },
      { "id": "option_2", "text": "The Scrum Master assigns tasks to individuals", "isCorrect": false },
      { "id": "option_3", "text": "The Product Owner divides work among team members", "isCorrect": false },
      { "id": "option_4", "text": "Managers outside the team distribute tasks", "isCorrect": false }
    ],
    "hint": "Scrum teams are self-organizing.",
    "answerDescription": "In Scrum, Development Teams decide how to divide and complete work without external interference."
  },
  {
    "id": "agile_2391",
    "question": "Why should a Development Team collaborate closely with the Product Owner?",
    "options": [
      { "id": "option_1", "text": "To ensure the most valuable features are built first", "isCorrect": true },
      { "id": "option_2", "text": "To let the Product Owner assign daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "To get approval for every line of code", "isCorrect": false },
      { "id": "option_4", "text": "To avoid responsibility for backlog refinement", "isCorrect": false }
    ],
    "hint": "Aligning on priorities leads to better outcomes.",
    "answerDescription": "Close collaboration with the Product Owner ensures the team focuses on the highest-value work."
  },
  {
    "id": "agile_2392",
    "question": "What should a Development Team do if they realize a backlog item is much larger than expected?",
    "options": [
      { "id": "option_1", "text": "Break it down into smaller, manageable tasks", "isCorrect": true },
      { "id": "option_2", "text": "Remove it from the Sprint and delay progress", "isCorrect": false },
      { "id": "option_3", "text": "Ask the Scrum Master to redefine the backlog", "isCorrect": false },
      { "id": "option_4", "text": "Continue working without adjusting estimates", "isCorrect": false }
    ],
    "hint": "Large backlog items should be refined.",
    "answerDescription": "Breaking down large backlog items helps maintain steady progress and ensures delivery within the Sprint."
  },
  {
    "id": "agile_2393",
    "question": "What mindset should a Development Team adopt to continuously improve?",
    "options": [
      { "id": "option_1", "text": "A culture of continuous learning and feedback", "isCorrect": true },
      { "id": "option_2", "text": "A rigid process that never changes", "isCorrect": false },
      { "id": "option_3", "text": "Focusing only on individual growth, not teamwork", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding retrospectives to save time", "isCorrect": false }
    ],
    "hint": "Agile encourages teams to evolve and adapt.",
    "answerDescription": "By embracing continuous learning and feedback, Development Teams can refine their processes and improve over time."
  },
  {
    "id": "agile_2394",
    "question": "Why is cross-functionality important in a Development Team in agile?",
    "options": [
      { "id": "option_1", "text": "It allows the team to deliver a complete product increment", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for specialized skills", "isCorrect": false },
      { "id": "option_3", "text": "It ensures team members only focus on their expertise", "isCorrect": false },
      { "id": "option_4", "text": "It means the team doesn't need to collaborate", "isCorrect": false }
    ],
    "hint": "Agile teams should be able to handle all necessary tasks.",
    "answerDescription": "Cross-functional teams can complete an entire product increment without relying on external teams."
  },
  {
    "id": "agile_2395",
    "question": "What is one way a Development Team can improve code quality?",
    "options": [
      { "id": "option_1", "text": "By conducting peer reviews and pair programming", "isCorrect": true },
      { "id": "option_2", "text": "By skipping code reviews to save time", "isCorrect": false },
      { "id": "option_3", "text": "By allowing only senior developers to write code", "isCorrect": false },
      { "id": "option_4", "text": "By postponing testing until after deployment", "isCorrect": false }
    ],
    "hint": "Collaborative practices improve quality.",
    "answerDescription": "Peer reviews and pair programming help catch errors early and improve overall code quality."
  },
  {
    "id": "agile_2396",
    "question": "Why is psychological safety important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "It encourages open communication and risk-taking", "isCorrect": true },
      { "id": "option_2", "text": "It ensures only experienced developers speak up", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams avoid making mistakes", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for collaboration", "isCorrect": false }
    ],
    "hint": "Team members should feel comfortable sharing ideas.",
    "answerDescription": "A psychologically safe environment allows Development Teams to openly discuss challenges and innovate without fear."
  },
  {
    "id": "agile_2397",
    "question": "How does automation benefit a Development Team?",
    "options": [
      { "id": "option_1", "text": "It reduces manual errors and improves efficiency", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for human developers", "isCorrect": false },
      { "id": "option_3", "text": "It makes testing unnecessary", "isCorrect": false },
      { "id": "option_4", "text": "It increases project timelines", "isCorrect": false }
    ],
    "hint": "Automation helps speed up repetitive tasks.",
    "answerDescription": "By automating tasks like testing and deployment, teams reduce errors and improve efficiency."
  },
  {
    "id": "agile_2398",
    "question": "What should a Development Team do if they consistently fail to complete Sprint goals?",
    "options": [
      { "id": "option_1", "text": "Analyze and adjust their Sprint planning process", "isCorrect": true },
      { "id": "option_2", "text": "Blame external factors and continue as usual", "isCorrect": false },
      { "id": "option_3", "text": "Increase the Sprint length to accommodate more work", "isCorrect": false },
      { "id": "option_4", "text": "Avoid discussing it in retrospectives", "isCorrect": false }
    ],
    "hint": "Teams should adapt and refine their process.",
    "answerDescription": "If a team struggles to meet goals, they should reassess and refine their Sprint planning process for better execution."
  },
  {
    "id": "agile_2399",
    "question": "What is the main benefit of a self-organizing Development Team?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for a Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "It enhances team accountability and efficiency", "isCorrect": true },
      { "id": "option_3", "text": "It allows management to micromanage work", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for communication", "isCorrect": false }
    ],
    "hint": "Self-organizing teams take ownership of their work.",
    "answerDescription": "A self-organizing Development Team takes responsibility for how work is completed, improving efficiency and accountability."
  },
  {
    "id": "agile_2400",
    "question": "How should a Development Team approach technical debt?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus only on new features", "isCorrect": false },
      { "id": "option_2", "text": "Address it incrementally to maintain quality", "isCorrect": true },
      { "id": "option_3", "text": "Completely halt development until all debt is fixed", "isCorrect": false },
      { "id": "option_4", "text": "Let management decide when to address it", "isCorrect": false }
    ],
    "hint": "Balancing new development and maintenance is key.",
    "answerDescription": "Technical debt should be addressed gradually to ensure system maintainability without halting progress."
  },
  {
    "id": "agile_2401",
    "question": "Why is a cross-functional Development Team important in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows teams to work without collaboration", "isCorrect": false },
      { "id": "option_2", "text": "It ensures all necessary skills are available within the team", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for specialized roles", "isCorrect": false },
      { "id": "option_4", "text": "It focuses only on speed, not quality", "isCorrect": false }
    ],
    "hint": "Cross-functional teams minimize external dependencies.",
    "answerDescription": "A cross-functional team can independently complete backlog items, reducing bottlenecks and dependencies."
  },
  {
    "id": "agile_2402",
    "question": "What should a Development Team do if a Sprint goal becomes unachievable?",
    "options": [
      { "id": "option_1", "text": "Continue working without adjustments", "isCorrect": false },
      { "id": "option_2", "text": "Discuss and adjust the plan with the Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Abandon the Sprint and start a new one", "isCorrect": false },
      { "id": "option_4", "text": "Let the Scrum Master handle it alone", "isCorrect": false }
    ],
    "hint": "Agility means adapting to change.",
    "answerDescription": "If a Sprint goal is no longer realistic, the team should collaborate with the Product Owner to adjust priorities."
  },
  {
    "id": "agile_2403",
    "question": "How does pair programming benefit a Development Team?",
    "options": [
      { "id": "option_1", "text": "It slows down development", "isCorrect": false },
      { "id": "option_2", "text": "It improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "It allows one developer to take full control", "isCorrect": false }
    ],
    "hint": "Collaboration leads to better results.",
    "answerDescription": "Pair programming helps catch errors early and allows team members to share expertise, improving overall code quality."
  },
  {
    "id": "agile_2404",
    "question": "What is a key responsibility of a Development Team during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Setting the overall company vision", "isCorrect": false },
      { "id": "option_2", "text": "Determining how to complete selected backlog items", "isCorrect": true },
      { "id": "option_3", "text": "Finalizing the product roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work based on seniority", "isCorrect": false }
    ],
    "hint": "The team decides how work will be done.",
    "answerDescription": "In Sprint Planning, the Development Team determines the approach for completing backlog items."
  },
  {
    "id": "agile_2405",
    "question": "Why should a Development Team conduct regular retrospectives?",
    "options": [
      { "id": "option_1", "text": "To document mistakes for reporting", "isCorrect": false },
      { "id": "option_2", "text": "To identify areas for improvement and enhance processes", "isCorrect": true },
      { "id": "option_3", "text": "To assign blame for Sprint failures", "isCorrect": false },
      { "id": "option_4", "text": "To reduce interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "Continuous improvement is essential in Agile.",
    "answerDescription": "Retrospectives help teams reflect on their work and improve efficiency in future Sprints."
  },
  {
    "id": "agile_2406",
    "question": "What should a Development Team do if they identify a critical issue mid-Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore it until the next Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Collaborate to address it while balancing Sprint commitments", "isCorrect": true },
      { "id": "option_3", "text": "Wait for the Scrum Master to decide", "isCorrect": false },
      { "id": "option_4", "text": "Stop all other work to fix it immediately", "isCorrect": false }
    ],
    "hint": "Teams should adapt while maintaining progress.",
    "answerDescription": "The team should manage urgent issues while ensuring they do not disrupt Sprint goals unnecessarily."
  },
  {
    "id": "agile_2407",
    "question": "How does test automation support a Development Team?",
    "options": [
      { "id": "option_1", "text": "By replacing the need for manual testing completely", "isCorrect": false },
      { "id": "option_2", "text": "By increasing efficiency and catching defects early", "isCorrect": true },
      { "id": "option_3", "text": "By making the testing process unnecessary", "isCorrect": false },
      { "id": "option_4", "text": "By reducing the need for team collaboration", "isCorrect": false }
    ],
    "hint": "Automation helps streamline quality assurance.",
    "answerDescription": "Test automation speeds up testing and helps detect issues early, improving software quality."
  },
  {
    "id": "agile_2408",
    "question": "What is the primary purpose of backlog refinement for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To finalize requirements before coding begins", "isCorrect": false },
      { "id": "option_2", "text": "To clarify and break down backlog items for future Sprints", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the need for Sprint Planning", "isCorrect": false },
      { "id": "option_4", "text": "To allow only the Product Owner to define work", "isCorrect": false }
    ],
    "hint": "Refinement prepares work for upcoming Sprints.",
    "answerDescription": "Backlog refinement ensures that items are well-defined and ready for the team to take on in future Sprints."
  },{
    "id": "agile_2409",
    "question": "What is the Development Team's primary responsibility in Agile?",
    "options": [
      { "id": "option_1", "text": "Creating the product vision", "isCorrect": false },
      { "id": "option_2", "text": "Defining the Sprint Goal", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "Assigning work based on seniority", "isCorrect": false }
    ],
    "hint": "The Development Team is responsible for delivering working software.",
    "answerDescription": "The team is accountable for completing backlog items and ensuring the product increment is ready for release."
  },
  {
    "id": "agile_2410",
    "question": "How does a Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By focusing only on new feature development", "isCorrect": false },
      { "id": "option_2", "text": "By letting the Scrum Master handle improvements", "isCorrect": false },
      { "id": "option_3", "text": "By conducting regular retrospectives and applying learnings", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding changes to the development process", "isCorrect": false }
    ],
    "hint": "Reflection and adaptation are key to Agile success.",
    "answerDescription": "Retrospectives help teams identify improvement areas and implement better practices in future Sprints."
  },
  {
    "id": "agile_2411",
    "question": "What is the best way for a Development Team to handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "Reject any changes after Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Only accept changes from upper management", "isCorrect": false },
      { "id": "option_3", "text": "Embrace change and work with the Product Owner to adjust priorities", "isCorrect": true },
      { "id": "option_4", "text": "Restart the Sprint if a major change occurs", "isCorrect": false }
    ],
    "hint": "Agile welcomes changing requirements for customer satisfaction.",
    "answerDescription": "The Development Team should collaborate with the Product Owner to adapt to changes while maintaining Sprint goals."
  },
  {
    "id": "agile_2412",
    "question": "Why is collaboration crucial for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To minimize individual responsibilities", "isCorrect": false },
      { "id": "option_2", "text": "To avoid dependencies on other teams", "isCorrect": false },
      { "id": "option_3", "text": "To ensure efficient problem-solving and knowledge sharing", "isCorrect": true },
      { "id": "option_4", "text": "To allow the Scrum Master to dictate tasks", "isCorrect": false }
    ],
    "hint": "Teamwork enhances problem-solving and efficiency.",
    "answerDescription": "A collaborative Development Team fosters faster issue resolution and shared understanding of project goals."
  },
  {
    "id": "agile_2413",
    "question": "What is the main purpose of Sprint Planning for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To estimate project completion dates", "isCorrect": false },
      { "id": "option_2", "text": "To assign individual tasks in advance", "isCorrect": false },
      { "id": "option_3", "text": "To determine how the Sprint Goal will be achieved", "isCorrect": true },
      { "id": "option_4", "text": "To finalize all Sprint tasks before starting", "isCorrect": false }
    ],
    "hint": "Sprint Planning is about defining the approach to achieving Sprint goals.",
    "answerDescription": "The Development Team collaborates to decide how they will complete backlog items to meet Sprint objectives."
  },
  {
    "id": "agile_2414",
    "question": "How should a Development Team handle a blocked task during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus on other tasks", "isCorrect": false },
      { "id": "option_2", "text": "Wait for the Scrum Master to resolve it", "isCorrect": false },
      { "id": "option_3", "text": "Raise the issue immediately and collaborate to unblock it", "isCorrect": true },
      { "id": "option_4", "text": "Pause all work until the issue is resolved", "isCorrect": false }
    ],
    "hint": "Addressing blockers quickly prevents delays.",
    "answerDescription": "The team should actively work together to resolve issues and ensure Sprint progress continues smoothly."
  },
  {
    "id": "agile_2415",
    "question": "What is a key characteristic of a well-functioning Development Team?",
    "options": [
      { "id": "option_1", "text": "Each team member works independently", "isCorrect": false },
      { "id": "option_2", "text": "The Scrum Master assigns all tasks", "isCorrect": false },
      { "id": "option_3", "text": "The team collaborates and takes ownership of work", "isCorrect": true },
      { "id": "option_4", "text": "The Product Owner dictates implementation details", "isCorrect": false }
    ],
    "hint": "A good Agile team takes responsibility for its work.",
    "answerDescription": "High-performing teams are self-organizing, taking ownership of their tasks and collaborating effectively."
  },
  {
    "id": "agile_2416",
    "question": "Why should a Development Team maintain a sustainable work pace?",
    "options": [
      { "id": "option_1", "text": "To minimize the need for retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "To ensure quick releases at all costs", "isCorrect": false },
      { "id": "option_3", "text": "To prevent burnout and maintain long-term productivity", "isCorrect": true },
      { "id": "option_4", "text": "To focus only on urgent tasks", "isCorrect": false }
    ],
    "hint": "Sustainable work pace ensures consistent performance.",
    "answerDescription": "Maintaining a sustainable pace helps teams deliver high-quality work without exhaustion or loss of motivation."
  },
  {
    "id": "agile_2417",
    "question": "What should a Development Team do if they cannot complete all committed work in a Sprint?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint to finish the work", "isCorrect": false },
      { "id": "option_2", "text": "Drop unfinished work without discussion", "isCorrect": false },
      { "id": "option_3", "text": "Discuss with the Product Owner to reprioritize and adjust", "isCorrect": true },
      { "id": "option_4", "text": "Blame the Scrum Master for poor planning", "isCorrect": false }
    ],
    "hint": "Agile requires collaboration to handle unexpected challenges.",
    "answerDescription": "If work cannot be completed, the team should work with the Product Owner to prioritize and decide the next steps."
  },
  {
    "id": "agile_2418",
    "question": "How can a Development Team ensure high product quality?",
    "options": [
      { "id": "option_1", "text": "By avoiding tests to speed up development", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on the testing team", "isCorrect": false },
      { "id": "option_3", "text": "By following coding standards, test automation, and code reviews", "isCorrect": true },
      { "id": "option_4", "text": "By focusing only on functional requirements", "isCorrect": false }
    ],
    "hint": "Quality requires both good practices and testing.",
    "answerDescription": "Maintaining high product quality requires a mix of best coding practices, automated tests, and peer reviews."
  },
  {
    "id": "agile_2419",
    "question": "What is a key characteristic of a self-organizing Development Team?",
    "options": [
      { "id": "option_1", "text": "They rely on the Scrum Master for all decisions", "isCorrect": false },
      { "id": "option_2", "text": "They wait for the Product Owner to assign tasks", "isCorrect": false },
      { "id": "option_3", "text": "They avoid collaboration and work independently", "isCorrect": false },
      { "id": "option_4", "text": "They take ownership of their work and make decisions together", "isCorrect": true }
    ],
    "hint": "Agile teams are responsible for organizing themselves to meet goals.",
    "answerDescription": "A self-organizing team collaborates and makes decisions without waiting for external direction."
  },
  {
    "id": "agile_2420",
    "question": "Why should a Development Team avoid multitasking during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Because it increases productivity by handling multiple tasks at once", "isCorrect": false },
      { "id": "option_2", "text": "Because Scrum requires tasks to be done sequentially", "isCorrect": false },
      { "id": "option_3", "text": "Because multitasking reduces the need for team communication", "isCorrect": false },
      { "id": "option_4", "text": "Because context-switching reduces efficiency and focus", "isCorrect": true }
    ],
    "hint": "Switching tasks frequently can slow down overall progress.",
    "answerDescription": "Avoiding multitasking allows the team to maintain focus and complete work faster with higher quality."
  },
  {
    "id": "agile_2421",
    "question": "What should the Development Team do if they identify a technical debt item during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore it until all features are complete", "isCorrect": false },
      { "id": "option_2", "text": "Wait for the Product Owner to prioritize it", "isCorrect": false },
      { "id": "option_3", "text": "Log it in the backlog but avoid addressing it immediately", "isCorrect": false },
      { "id": "option_4", "text": "Raise it during backlog refinement and address it when appropriate", "isCorrect": true }
    ],
    "hint": "Technical debt should be managed proactively to prevent future issues.",
    "answerDescription": "The team should document and discuss technical debt to ensure it is addressed at the right time."
  },
  {
    "id": "agile_2422",
    "question": "How can a Development Team improve estimation accuracy?",
    "options": [
      { "id": "option_1", "text": "By letting only senior developers estimate tasks", "isCorrect": false },
      { "id": "option_2", "text": "By using the same estimate for similar past tasks", "isCorrect": false },
      { "id": "option_3", "text": "By estimating individually and averaging the results", "isCorrect": false },
      { "id": "option_4", "text": "By using techniques like Planning Poker and considering past velocity", "isCorrect": true }
    ],
    "hint": "Accurate estimation relies on collaboration and past experience.",
    "answerDescription": "Techniques like Planning Poker and data-driven adjustments help improve the accuracy of task estimates."
  },
  {
    "id": "agile_2423",
    "question": "What should a Development Team do if a team member is struggling with a task?",
    "options": [
      { "id": "option_1", "text": "Ignore it and let them complete it alone", "isCorrect": false },
      { "id": "option_2", "text": "Report it to management immediately", "isCorrect": false },
      { "id": "option_3", "text": "Replace them with another team member", "isCorrect": false },
      { "id": "option_4", "text": "Offer help and collaborate to resolve the challenge", "isCorrect": true }
    ],
    "hint": "Agile teams support each other to ensure progress.",
    "answerDescription": "Collaboration and peer support help resolve challenges faster and improve team performance."
  },
  {
    "id": "agile_2424",
    "question": "Why is cross-functionality important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To allow specialization and avoid learning new skills", "isCorrect": false },
      { "id": "option_2", "text": "To limit dependencies on other teams", "isCorrect": false },
      { "id": "option_3", "text": "To ensure that all work goes through a single team member", "isCorrect": false },
      { "id": "option_4", "text": "To enable the team to complete tasks independently without waiting for external help", "isCorrect": true }
    ],
    "hint": "Cross-functional teams reduce delays and dependencies.",
    "answerDescription": "A cross-functional team has the necessary skills to complete tasks without relying on other teams."
  },
  {
    "id": "agile_2425",
    "question": "What is the best way for a Development Team to ensure knowledge sharing?",
    "options": [
      { "id": "option_1", "text": "By assigning documentation tasks to a single member", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on formal training sessions", "isCorrect": false },
      { "id": "option_3", "text": "By keeping expertise restricted to individual members", "isCorrect": false },
      { "id": "option_4", "text": "By using pair programming, code reviews, and team discussions", "isCorrect": true }
    ],
    "hint": "Agile promotes continuous learning and collaboration.",
    "answerDescription": "Techniques like pair programming and code reviews help distribute knowledge across the team."
  },
  {
    "id": "agile_2426",
    "question": "How does a Development Team ensure transparency in their work in agile ?",
    "options": [
      { "id": "option_1", "text": "By only communicating updates to the Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "By keeping backlog changes hidden until the Sprint Review", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding frequent discussions to focus on coding", "isCorrect": false },
      { "id": "option_4", "text": "By updating task boards, holding daily standups, and documenting progress", "isCorrect": true }
    ],
    "hint": "Transparency helps the whole team stay aligned and proactive.",
    "answerDescription": "Using task boards and standups ensures visibility into the team's progress and challenges."
  },
  {
    "id": "agile_2427",
    "question": "What should a Development Team do if they complete all Sprint tasks early?",
    "options": [
      { "id": "option_1", "text": "End the Sprint immediately", "isCorrect": false },
      { "id": "option_2", "text": "Take a break until the next Sprint", "isCorrect": false },
      { "id": "option_3", "text": "Start working on the next Sprintâ€™s tasks", "isCorrect": false },
      { "id": "option_4", "text": "Pick additional backlog items and collaborate with the Product Owner", "isCorrect": true }
    ],
    "hint": "Agile teams focus on delivering value continuously.",
    "answerDescription": "If a team finishes early, they should continue delivering value by selecting additional work from the backlog."
  },
  {
    "id": "agile_2428",
    "question": "Why is it important for a Development Team to focus on technical excellence?",
    "options": [
      { "id": "option_1", "text": "To impress stakeholders with complex code", "isCorrect": false },
      { "id": "option_2", "text": "To increase the number of features delivered", "isCorrect": false },
      { "id": "option_3", "text": "To reduce collaboration and work independently", "isCorrect": false },
      { "id": "option_4", "text": "To ensure maintainability, scalability, and quality", "isCorrect": true }
    ],
    "hint": "High-quality code benefits the entire software lifecycle.",
    "answerDescription": "Technical excellence leads to a stable, maintainable product that adapts to future needs."
  },
  {
    "id": "agile_2429",
    "question": "What is the primary responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Defining the business value of features", "isCorrect": false },
      { "id": "option_3", "text": "Creating the Product Roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring stakeholders attend sprint reviews", "isCorrect": false }
    ],
    "hint": "The Development Team focuses on delivering a working product increment each sprint.",
    "answerDescription": "The Agile Development Team is responsible for building and delivering potentially shippable product increments at the end of each sprint."
  },
  {
    "id": "agile_2430",
    "question": "Which quality is most important for a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Self-organization", "isCorrect": true },
      { "id": "option_2", "text": "Following detailed instructions", "isCorrect": false },
      { "id": "option_3", "text": "Relying solely on the Scrum Master", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing individual productivity", "isCorrect": false }
    ],
    "hint": "Agile teams are empowered to manage their work without constant supervision.",
    "answerDescription": "Self-organization allows Agile Development Teams to adapt, take ownership, and deliver value efficiently."
  },
  {
    "id": "agile_2431",
    "question": "What makes an Agile Development Team cross-functional?",
    "options": [
      { "id": "option_1", "text": "Having all the necessary skills to deliver a product increment", "isCorrect": true },
      { "id": "option_2", "text": "Being composed of only software developers", "isCorrect": false },
      { "id": "option_3", "text": "Following a strict hierarchy", "isCorrect": false },
      { "id": "option_4", "text": "Working on multiple projects simultaneously", "isCorrect": false }
    ],
    "hint": "A cross-functional team includes all expertise needed to deliver value.",
    "answerDescription": "Cross-functional teams have all the required skills, such as design, development, and testing, to complete their work without dependencies."
  },
  {
    "id": "agile_2432",
    "question": "Why should an Agile Development Team avoid multitasking?",
    "options": [
      { "id": "option_1", "text": "It reduces efficiency and focus", "isCorrect": true },
      { "id": "option_2", "text": "It helps team members gain more experience", "isCorrect": false },
      { "id": "option_3", "text": "It increases individual output", "isCorrect": false },
      { "id": "option_4", "text": "It encourages working longer hours", "isCorrect": false }
    ],
    "hint": "Context switching between tasks leads to inefficiency.",
    "answerDescription": "Avoiding multitasking allows team members to focus on delivering high-quality work and minimizes wasted effort due to context switching."
  },
  {
    "id": "agile_2433",
    "question": "How does an Agile Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By conducting regular retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "By working longer hours", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding changes in processes", "isCorrect": false },
      { "id": "option_4", "text": "By assigning blame for failures", "isCorrect": false }
    ],
    "hint": "A specific Agile event focuses on reflecting and improving.",
    "answerDescription": "Sprint retrospectives help teams reflect on their work and make incremental improvements in processes and collaboration."
  },
  {
    "id": "agile_2434",
    "question": "What is the benefit of having a small Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Improved communication and collaboration", "isCorrect": true },
      { "id": "option_2", "text": "Greater individual responsibility", "isCorrect": false },
      { "id": "option_3", "text": "More detailed task assignments", "isCorrect": false },
      { "id": "option_4", "text": "More hierarchical control", "isCorrect": false }
    ],
    "hint": "Smaller teams communicate and coordinate more effectively.",
    "answerDescription": "Smaller Agile teams facilitate better collaboration, faster decision-making, and reduced communication overhead."
  },
  {
    "id": "agile_2435",
    "question": "Why is collective code ownership encouraged in Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "It allows any team member to modify any part of the code", "isCorrect": true },
      { "id": "option_2", "text": "It makes individual developers accountable for specific modules", "isCorrect": false },
      { "id": "option_3", "text": "It restricts access to senior developers", "isCorrect": false },
      { "id": "option_4", "text": "It ensures only one person is responsible for documentation", "isCorrect": false }
    ],
    "hint": "This practice increases flexibility and reduces bottlenecks.",
    "answerDescription": "Collective code ownership ensures that no single developer is a bottleneck and enables continuous collaboration and knowledge sharing."
  },
  {
    "id": "agile_2436",
    "question": "What is the primary role of a Development Team in Sprint Review?",
    "options": [
      { "id": "option_1", "text": "Demonstrating completed work to stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "Defining the business goals for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "Finalizing requirements for future sprints", "isCorrect": false },
      { "id": "option_4", "text": "Approving changes to the Product Backlog", "isCorrect": false }
    ],
    "hint": "Sprint Review involves showcasing the work done.",
    "answerDescription": "During Sprint Review, the Development Team presents completed work to stakeholders and gathers feedback for future improvements."
  },
  {
    "id": "agile_2437",
    "question": "How does an Agile Development Team manage dependencies within a sprint?",
    "options": [
      { "id": "option_1", "text": "By proactively identifying and addressing them", "isCorrect": true },
      { "id": "option_2", "text": "By escalating them to management", "isCorrect": false },
      { "id": "option_3", "text": "By waiting until the end of the sprint to resolve them", "isCorrect": false },
      { "id": "option_4", "text": "By splitting work into individual silos", "isCorrect": false }
    ],
    "hint": "Agile teams need to handle dependencies early for smooth workflow.",
    "answerDescription": "By identifying dependencies early and collaborating with relevant stakeholders, Agile teams ensure a smooth workflow within the sprint."
  },
  {
    "id": "agile_2438",
    "question": "What is the best approach for an Agile Development Team when facing uncertainty?",
    "options": [
      { "id": "option_1", "text": "Experimenting and adapting based on feedback", "isCorrect": true },
      { "id": "option_2", "text": "Pausing work until full clarity is achieved", "isCorrect": false },
      { "id": "option_3", "text": "Strictly following initial project plans", "isCorrect": false },
      { "id": "option_4", "text": "Delegating decisions to senior management", "isCorrect": false }
    ],
    "hint": "Agile encourages learning through iteration.",
    "answerDescription": "Experimentation and iteration allow Agile teams to adapt to changing requirements and make data-driven decisions."
  },
  {
    "id": "agile_2439",
    "question": "What is the key characteristic of an effective Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Having a strict hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "Being self-organizing", "isCorrect": true },
      { "id": "option_3", "text": "Relying solely on a project manager", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Agile teams take responsibility for managing their work.",
    "answerDescription": "A self-organizing team takes ownership of their work, collaborates effectively, and adapts to change without rigid control."
  },
  {
    "id": "agile_2440",
    "question": "What helps a Development Team maintain a sustainable pace of work?",
    "options": [
      { "id": "option_1", "text": "Extending work hours during sprints", "isCorrect": false },
      { "id": "option_2", "text": "Setting realistic sprint goals", "isCorrect": true },
      { "id": "option_3", "text": "Skipping retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "Increasing multitasking", "isCorrect": false }
    ],
    "hint": "Overcommitting can lead to burnout and reduced quality.",
    "answerDescription": "Realistic sprint goals help teams maintain a steady workflow and avoid burnout while delivering high-quality results."
  },
  {
    "id": "agile_2441",
    "question": "Why is collaboration important in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "To ensure individual tasks are completed in isolation", "isCorrect": false },
      { "id": "option_2", "text": "To improve knowledge sharing and problem-solving", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the number of team meetings", "isCorrect": false },
      { "id": "option_4", "text": "To follow strict workflows without deviation", "isCorrect": false }
    ],
    "hint": "Effective teams share insights and tackle challenges together.",
    "answerDescription": "Collaboration allows teams to share knowledge, solve problems efficiently, and maintain high-quality standards."
  },
  {
    "id": "agile_2442",
    "question": "How should a Development Team handle changing requirements in Agile?",
    "options": [
      { "id": "option_1", "text": "Ignore changes once sprint planning is complete", "isCorrect": false },
      { "id": "option_2", "text": "Adapt to the changes and adjust priorities", "isCorrect": true },
      { "id": "option_3", "text": "Only accept changes at the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "Seek management approval for every change", "isCorrect": false }
    ],
    "hint": "Agile embraces change to deliver maximum value.",
    "answerDescription": "By adapting to changes, Agile teams ensure they deliver the most valuable product that meets evolving needs."
  },
  {
    "id": "agile_2443",
    "question": "What is the purpose of Daily Stand-up meetings in Agile?",
    "options": [
      { "id": "option_1", "text": "To assign new tasks to team members", "isCorrect": false },
      { "id": "option_2", "text": "To align the team and identify blockers", "isCorrect": true },
      { "id": "option_3", "text": "To review the entire product backlog", "isCorrect": false },
      { "id": "option_4", "text": "To finalize sprint deliverables", "isCorrect": false }
    ],
    "hint": "This meeting helps keep everyone on the same page daily.",
    "answerDescription": "Daily Stand-ups help teams coordinate work, discuss progress, and identify obstacles that may impact sprint goals."
  },
  {
    "id": "agile_2444",
    "question": "Why is having a Definition of Done (DoD) important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To allow unfinished work to be accepted", "isCorrect": false },
      { "id": "option_2", "text": "To ensure consistent quality and completeness", "isCorrect": true },
      { "id": "option_3", "text": "To restrict flexibility in work execution", "isCorrect": false },
      { "id": "option_4", "text": "To limit the number of sprint reviews", "isCorrect": false }
    ],
    "hint": "It defines the criteria for work to be considered complete.",
    "answerDescription": "A well-defined DoD ensures that work meets all quality standards before being accepted as complete."
  },
  {
    "id": "agile_2445",
    "question": "How can a Development Team improve transparency in Agile?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "By sharing progress openly with the team", "isCorrect": true },
      { "id": "option_3", "text": "By keeping work details confidential", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding backlog updates", "isCorrect": false }
    ],
    "hint": "Agile values openness and visibility in work progress.",
    "answerDescription": "Sharing progress, challenges, and updates fosters trust and alignment within the team and stakeholders."
  },
  {
    "id": "agile_2446",
    "question": "Why should a Development Team strive for continuous integration?",
    "options": [
      { "id": "option_1", "text": "To minimize testing efforts", "isCorrect": false },
      { "id": "option_2", "text": "To detect issues early and ensure smooth releases", "isCorrect": true },
      { "id": "option_3", "text": "To speed up sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "To reduce collaboration among developers", "isCorrect": false }
    ],
    "hint": "Frequent integration helps avoid last-minute surprises.",
    "answerDescription": "Continuous integration ensures that code is tested and merged frequently, reducing integration issues and improving software quality."
  },
  {
    "id": "agile_2447",
    "question": "What should a Development Team focus on during Sprint Planning?",
    "options": [
      { "id": "option_1", "text": "Finalizing all sprint deliverables in advance", "isCorrect": false },
      { "id": "option_2", "text": "Breaking down work and planning execution", "isCorrect": true },
      { "id": "option_3", "text": "Defining high-level business goals", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding changes in backlog items", "isCorrect": false }
    ],
    "hint": "Sprint Planning involves task breakdown and execution planning.",
    "answerDescription": "During Sprint Planning, the team collaborates to break down backlog items and define a plan to complete them within the sprint."
  },
  {
    "id": "agile_2448",
    "question": "How does Test-Driven Development (TDD) benefit an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for automated testing", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring code quality through test-first development", "isCorrect": true },
      { "id": "option_3", "text": "By eliminating the need for refactoring", "isCorrect": false },
      { "id": "option_4", "text": "By slowing down development for more manual testing", "isCorrect": false }
    ],
    "hint": "TDD helps build robust and maintainable code.",
    "answerDescription": "By writing tests before coding, TDD ensures higher code quality, prevents defects, and promotes continuous improvement."
  },
  {
    "id": "agile_2449",
    "question": "What is a key responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Setting business priorities for the product", "isCorrect": false },
      { "id": "option_2", "text": "Managing stakeholder expectations directly", "isCorrect": false },
      { "id": "option_3", "text": "Delivering high-quality increments each sprint", "isCorrect": true },
      { "id": "option_4", "text": "Controlling budget allocation", "isCorrect": false }
    ],
    "hint": "Development Teams focus on delivering working software.",
    "answerDescription": "The Development Team is responsible for building and delivering high-quality product increments that meet the Definition of Done."
  },
  {
    "id": "agile_2450",
    "question": "Why is cross-functionality important in a Development Team?",
    "options": [
      { "id": "option_1", "text": "To allow specialized team members to work separately", "isCorrect": false },
      { "id": "option_2", "text": "To reduce collaboration and decision-making time", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the team can complete work independently", "isCorrect": true },
      { "id": "option_4", "text": "To allow external consultants to handle complex tasks", "isCorrect": false }
    ],
    "hint": "A cross-functional team can handle all aspects of development.",
    "answerDescription": "Cross-functional teams have diverse skills, allowing them to complete work independently without relying on external teams."
  },
  {
    "id": "agile_2451",
    "question": "How does a Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By avoiding feedback from retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "By limiting process adjustments", "isCorrect": false },
      { "id": "option_3", "text": "By reflecting and implementing changes after retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "By sticking to the same workflow regardless of issues", "isCorrect": false }
    ],
    "hint": "Regular reflection and adaptation drive improvement.",
    "answerDescription": "By using retrospective insights, teams can identify improvements and adjust their practices for better efficiency and performance."
  },
  {
    "id": "agile_2452",
    "question": "What should a Development Team do if they encounter technical debt?",
    "options": [
      { "id": "option_1", "text": "Ignore it to focus only on new features", "isCorrect": false },
      { "id": "option_2", "text": "Delay addressing it indefinitely", "isCorrect": false },
      { "id": "option_3", "text": "Address it incrementally to maintain code quality", "isCorrect": true },
      { "id": "option_4", "text": "Rely only on external teams to resolve it", "isCorrect": false }
    ],
    "hint": "Unmanaged technical debt can slow down future development.",
    "answerDescription": "Addressing technical debt incrementally ensures long-term maintainability and prevents major refactoring challenges."
  },
  {
    "id": "agile_2453",
    "question": "Why is team autonomy crucial for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "To allow the team to make all business decisions", "isCorrect": false },
      { "id": "option_2", "text": "To reduce collaboration with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "To enable faster decision-making and execution", "isCorrect": true },
      { "id": "option_4", "text": "To eliminate the need for a Product Owner", "isCorrect": false }
    ],
    "hint": "Autonomy helps teams make quick and effective decisions.",
    "answerDescription": "Autonomous teams can respond faster to challenges, improving agility and decision-making efficiency."
  },
  {
    "id": "agile_2454",
    "question": "What should a Development Team do when they identify a blocker?",
    "options": [
      { "id": "option_1", "text": "Ignore it and continue working on other tasks", "isCorrect": false },
      { "id": "option_2", "text": "Wait for management to provide a solution", "isCorrect": false },
      { "id": "option_3", "text": "Raise the issue immediately and collaborate on a resolution", "isCorrect": true },
      { "id": "option_4", "text": "Delay addressing it until the next sprint", "isCorrect": false }
    ],
    "hint": "Blockers must be addressed quickly to avoid disruptions.",
    "answerDescription": "Raising and addressing blockers early ensures smooth workflow and prevents delays in sprint commitments."
  },
  {
    "id": "agile_2455",
    "question": "How does a Development Team build trust with stakeholders?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "By keeping development decisions private", "isCorrect": false },
      { "id": "option_3", "text": "By delivering working software consistently", "isCorrect": true },
      { "id": "option_4", "text": "By following traditional waterfall processes", "isCorrect": false }
    ],
    "hint": "Agile emphasizes delivering value frequently.",
    "answerDescription": "Regularly delivering high-quality, working software builds stakeholder confidence and ensures alignment with business goals."
  },
  {
    "id": "agile_2456",
    "question": "Why is peer feedback valuable in a Development Team?",
    "options": [
      { "id": "option_1", "text": "To enforce strict performance ratings", "isCorrect": false },
      { "id": "option_2", "text": "To highlight individual failures", "isCorrect": false },
      { "id": "option_3", "text": "To foster continuous learning and improvement", "isCorrect": true },
      { "id": "option_4", "text": "To discourage team collaboration", "isCorrect": false }
    ],
    "hint": "Constructive feedback leads to team growth.",
    "answerDescription": "Peer feedback helps team members learn, improve, and strengthen collaboration by sharing insights and best practices."
  },
  {
    "id": "agile_2457",
    "question": "What is the benefit of pair programming in Agile teams?",
    "options": [
      { "id": "option_1", "text": "It slows down development speed", "isCorrect": false },
      { "id": "option_2", "text": "It increases reliance on external reviewers", "isCorrect": false },
      { "id": "option_3", "text": "It enhances code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for code reviews", "isCorrect": false }
    ],
    "hint": "Pair programming involves two developers working together.",
    "answerDescription": "By collaborating closely, developers produce better-quality code and share knowledge, improving team skills and efficiency."
  },
  {
    "id": "agile_2458",
    "question": "What is an effective way for a Development Team to handle conflicts?",
    "options": [
      { "id": "option_1", "text": "Avoid discussing conflicts to maintain harmony", "isCorrect": false },
      { "id": "option_2", "text": "Wait for the Scrum Master to resolve all issues", "isCorrect": false },
      { "id": "option_3", "text": "Address conflicts openly and find solutions together", "isCorrect": true },
      { "id": "option_4", "text": "Ignore conflicts if they do not impact work", "isCorrect": false }
    ],
    "hint": "Healthy discussions help teams improve collaboration.",
    "answerDescription": "Openly addressing conflicts allows teams to resolve issues constructively, strengthening teamwork and communication."
  }, {
    "id": "agile_2459",
    "question": "What is the main goal of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "To document every change in detail", "isCorrect": false },
      { "id": "option_2", "text": "To follow instructions from management strictly", "isCorrect": false },
      { "id": "option_3", "text": "To rely on external consultants for guidance", "isCorrect": false },
      { "id": "option_4", "text": "To deliver a working product increment each sprint", "isCorrect": true }
    ],
    "hint": "Agile teams focus on delivering value in iterations.",
    "answerDescription": "The primary goal of a Development Team is to create working software that meets the Definition of Done at the end of each sprint."
  },
  {
    "id": "agile_2460",
    "question": "How does self-organization benefit a Development Team?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for collaboration", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating the need for planning", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring tasks are assigned by management", "isCorrect": false },
      { "id": "option_4", "text": "By allowing the team to decide how to accomplish their work", "isCorrect": true }
    ],
    "hint": "Agile teams manage their own workflow effectively.",
    "answerDescription": "Self-organizing teams take responsibility for how they work, leading to better collaboration, efficiency, and accountability."
  },
  {
    "id": "agile_2461",
    "question": "Why should a Development Team avoid multitasking during a sprint?",
    "options": [
      { "id": "option_1", "text": "Because it increases individual productivity", "isCorrect": false },
      { "id": "option_2", "text": "Because it allows more features to be developed simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "Because it speeds up testing and integration", "isCorrect": false },
      { "id": "option_4", "text": "Because it reduces focus and efficiency", "isCorrect": true }
    ],
    "hint": "Context switching negatively impacts productivity.",
    "answerDescription": "Multitasking leads to reduced efficiency and quality; Agile teams focus on completing prioritized tasks before starting new ones."
  },
  {
    "id": "agile_2462",
    "question": "What is the purpose of Definition of Done (DoD) in Agile?",
    "options": [
      { "id": "option_1", "text": "To define when a product is ready for release", "isCorrect": false },
      { "id": "option_2", "text": "To specify the backlog refinement process", "isCorrect": false },
      { "id": "option_3", "text": "To track work-in-progress limits", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all work meets quality standards before completion", "isCorrect": true }
    ],
    "hint": "The DoD guarantees quality and completeness.",
    "answerDescription": "The Definition of Done ensures that all work meets required quality and completeness standards before it is considered finished."
  },
  {
    "id": "agile_2463",
    "question": "How does a Development Team contribute to backlog refinement?",
    "options": [
      { "id": "option_1", "text": "By rejecting any new backlog items", "isCorrect": false },
      { "id": "option_2", "text": "By assigning backlog items to stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By limiting backlog discussions to the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "By estimating and clarifying backlog items", "isCorrect": true }
    ],
    "hint": "Development Teams help refine the backlog for clarity and estimation.",
    "answerDescription": "Development Teams actively engage in backlog refinement to estimate effort, clarify requirements, and ensure work readiness."
  },
  {
    "id": "agile_2464",
    "question": "What is one way a Development Team can improve sprint predictability?",
    "options": [
      { "id": "option_1", "text": "By committing to an unlimited number of backlog items", "isCorrect": false },
      { "id": "option_2", "text": "By changing sprint goals frequently", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding estimation of work", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining a consistent velocity", "isCorrect": true }
    ],
    "hint": "Velocity helps teams predict their delivery capacity.",
    "answerDescription": "A stable velocity allows teams to make more accurate sprint commitments and deliverables."
  },
  {
    "id": "agile_2465",
    "question": "How does a Development Team ensure transparency in Agile?",
    "options": [
      { "id": "option_1", "text": "By keeping progress details internal", "isCorrect": false },
      { "id": "option_2", "text": "By only reporting issues at the end of a sprint", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding documentation and communication", "isCorrect": false },
      { "id": "option_4", "text": "By using tools like burndown charts and daily stand-ups", "isCorrect": true }
    ],
    "hint": "Agile transparency comes through visible progress tracking.",
    "answerDescription": "Development Teams ensure transparency by openly tracking and sharing progress using Agile tools and ceremonies."
  },
  {
    "id": "agile_2466",
    "question": "Why is delivering a potentially shippable product important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To focus on documentation over functionality", "isCorrect": false },
      { "id": "option_2", "text": "To delay deployment until the final phase", "isCorrect": false },
      { "id": "option_3", "text": "To reduce flexibility in adapting to changes", "isCorrect": false },
      { "id": "option_4", "text": "To ensure valuable increments are available each sprint", "isCorrect": true }
    ],
    "hint": "Agile promotes continuous delivery of value.",
    "answerDescription": "Delivering a potentially shippable product each sprint ensures stakeholders receive continuous value and feedback opportunities."
  },
  {
    "id": "agile_2467",
    "question": "What should a Development Team do if a sprint goal becomes unachievable?",
    "options": [
      { "id": "option_1", "text": "Continue working without raising concerns", "isCorrect": false },
      { "id": "option_2", "text": "Wait until the next sprint to address the issue", "isCorrect": false },
      { "id": "option_3", "text": "Blame external factors and stop progress", "isCorrect": false },
      { "id": "option_4", "text": "Discuss and adjust priorities with the Product Owner", "isCorrect": true }
    ],
    "hint": "Collaboration is key when facing sprint challenges.",
    "answerDescription": "When sprint goals become unachievable, teams should communicate with the Product Owner to adapt and reprioritize effectively."
  },
  {
    "id": "agile_2468",
    "question": "How can a Development Team ensure efficient sprint execution?",
    "options": [
      { "id": "option_1", "text": "By working in silos and avoiding communication", "isCorrect": false },
      { "id": "option_2", "text": "By skipping daily stand-up meetings", "isCorrect": false },
      { "id": "option_3", "text": "By delaying testing until the end of the sprint", "isCorrect": false },
      { "id": "option_4", "text": "By collaborating continuously and adapting to change", "isCorrect": true }
    ],
    "hint": "Collaboration and adaptability drive Agile success.",
    "answerDescription": "By maintaining open communication and adapting to feedback, Development Teams ensure smooth sprint execution and high-quality deliverables."
  },
  {
    "id": "agile_2470",
    "question": "What is a key responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Managing stakeholder expectations", "isCorrect": false },
      { "id": "option_3", "text": "Defining the product roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Approving sprint goals", "isCorrect": false }
    ],
    "hint": "The Development Team focuses on completing product increments within sprints.",
    "answerDescription": "A Development Team's primary responsibility is to produce a potentially shippable increment of the product by the end of each sprint."
  },
  {
    "id": "agile_2471",
    "question": "Which of the following best describes the composition of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Cross-functional team with diverse skills", "isCorrect": true },
      { "id": "option_2", "text": "A group of specialists working in silos", "isCorrect": false },
      { "id": "option_3", "text": "A team solely focused on testing", "isCorrect": false },
      { "id": "option_4", "text": "A fixed set of developers for all projects", "isCorrect": false }
    ],
    "hint": "Agile teams require a mix of skills to complete work independently.",
    "answerDescription": "An Agile Development Team is cross-functional, meaning it has all the skills needed to deliver work without depending on external teams."
  },
  {
    "id": "agile_2472",
    "question": "How does an Agile Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By holding regular retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "By strictly following a fixed process", "isCorrect": false },
      { "id": "option_3", "text": "By relying solely on management decisions", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on velocity metrics", "isCorrect": false }
    ],
    "hint": "Reflection on past performance is key to growth.",
    "answerDescription": "Retrospectives allow teams to analyze what worked well and what needs improvement, fostering continuous learning."
  },
  {
    "id": "agile_2473",
    "question": "What is the recommended size for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Between 3 and 9 members", "isCorrect": true },
      { "id": "option_2", "text": "At least 15 members", "isCorrect": false },
      { "id": "option_3", "text": "A single developer is sufficient", "isCorrect": false },
      { "id": "option_4", "text": "More than 20 members for efficiency", "isCorrect": false }
    ],
    "hint": "Small teams allow better collaboration.",
    "answerDescription": "Scrum recommends teams of 3-9 members to ensure effective communication and collaboration."
  },
  {
    "id": "agile_2474",
    "question": "Which statement about self-organizing Agile Development Teams is true?",
    "options": [
      { "id": "option_1", "text": "They decide how to accomplish their work", "isCorrect": true },
      { "id": "option_2", "text": "They require constant supervision", "isCorrect": false },
      { "id": "option_3", "text": "They follow detailed task assignments from managers", "isCorrect": false },
      { "id": "option_4", "text": "They do not communicate with stakeholders", "isCorrect": false }
    ],
    "hint": "Agile teams have autonomy in their approach to work.",
    "answerDescription": "Self-organizing teams determine the best way to complete tasks without micromanagement, fostering innovation and ownership."
  },
  {
    "id": "agile_2475",
    "question": "Why should an Agile Development Team avoid multitasking across projects?",
    "options": [
      { "id": "option_1", "text": "Context switching reduces efficiency", "isCorrect": true },
      { "id": "option_2", "text": "Agile teams do not handle multiple tasks", "isCorrect": false },
      { "id": "option_3", "text": "Only Scrum Masters should manage workload", "isCorrect": false },
      { "id": "option_4", "text": "Developers should work in isolation", "isCorrect": false }
    ],
    "hint": "Switching tasks often leads to decreased productivity.",
    "answerDescription": "Context switching can lead to inefficiencies, so Agile teams focus on completing tasks before starting new ones."
  },
  {
    "id": "agile_2476",
    "question": "How does an Agile Development Team handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By welcoming changes, even late in development", "isCorrect": true },
      { "id": "option_2", "text": "By freezing requirements after sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "By escalating changes to upper management", "isCorrect": false },
      { "id": "option_4", "text": "By restarting the development cycle", "isCorrect": false }
    ],
    "hint": "Agile embraces change as a key principle.",
    "answerDescription": "Agile teams are flexible and adapt to evolving requirements to ensure they deliver maximum value."
  },
  {
    "id": "agile_2477",
    "question": "Which practice helps an Agile Development Team improve collaboration?",
    "options": [
      { "id": "option_1", "text": "Daily stand-up meetings", "isCorrect": true },
      { "id": "option_2", "text": "Only using written communication", "isCorrect": false },
      { "id": "option_3", "text": "Strictly avoiding discussions during work hours", "isCorrect": false },
      { "id": "option_4", "text": "Assigning work without discussion", "isCorrect": false }
    ],
    "hint": "Teams align and communicate daily in Agile.",
    "answerDescription": "Daily stand-ups facilitate teamwork by ensuring all members are aware of progress and roadblocks."
  },
  {
    "id": "agile_2478",
    "question": "What should an Agile Development Team focus on during a sprint?",
    "options": [
      { "id": "option_1", "text": "Delivering a working product increment", "isCorrect": true },
      { "id": "option_2", "text": "Creating extensive documentation", "isCorrect": false },
      { "id": "option_3", "text": "Following a rigid process", "isCorrect": false },
      { "id": "option_4", "text": "Maximizing the number of user stories completed", "isCorrect": false }
    ],
    "hint": "Working software is a primary Agile goal.",
    "answerDescription": "The main focus of an Agile Development Team during a sprint is delivering a functional product increment."
  },
  {
    "id": "agile_2479",
    "question": "Why is feedback important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It helps improve the product and processes", "isCorrect": true },
      { "id": "option_2", "text": "It slows down decision-making", "isCorrect": false },
      { "id": "option_3", "text": "It only matters at the end of a project", "isCorrect": false },
      { "id": "option_4", "text": "It should only come from team members", "isCorrect": false }
    ],
    "hint": "Continuous feedback ensures continuous improvement.",
    "answerDescription": "Feedback allows teams to refine both their product and their processes, leading to better outcomes over time."
  },
  {
    "id": "agile_2480",
    "question": "What is the primary focus of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Maximizing the number of tasks completed", "isCorrect": false },
      { "id": "option_2", "text": "Delivering a valuable product increment", "isCorrect": true },
      { "id": "option_3", "text": "Strictly following management directives", "isCorrect": false },
      { "id": "option_4", "text": "Completing all items in the backlog", "isCorrect": false }
    ],
    "hint": "Agile teams prioritize delivering working software.",
    "answerDescription": "The Development Team's primary goal is to deliver a functional, valuable product increment at the end of each sprint."
  },
  {
    "id": "agile_2481",
    "question": "Why is cross-functionality important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It reduces dependency on external teams", "isCorrect": false },
      { "id": "option_2", "text": "It enables the team to complete work independently", "isCorrect": true },
      { "id": "option_3", "text": "It allows specialists to work in silos", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for collaboration", "isCorrect": false }
    ],
    "hint": "Self-sufficient teams can deliver complete increments.",
    "answerDescription": "A cross-functional team possesses all the necessary skills to complete work without relying on other teams."
  },
  {
    "id": "agile_2482",
    "question": "How should an Agile Development Team respond to blockers?",
    "options": [
      { "id": "option_1", "text": "Wait for the Scrum Master to resolve them", "isCorrect": false },
      { "id": "option_2", "text": "Collaborate to find solutions quickly", "isCorrect": true },
      { "id": "option_3", "text": "Ignore them and continue working", "isCorrect": false },
      { "id": "option_4", "text": "Delay work until the next sprint", "isCorrect": false }
    ],
    "hint": "Teamwork helps resolve blockers efficiently.",
    "answerDescription": "Agile teams take ownership of blockers and collaborate to address them as soon as possible."
  },
  {
    "id": "agile_2483",
    "question": "What is one of the key benefits of self-organizing teams?",
    "options": [
      { "id": "option_1", "text": "They require constant supervision", "isCorrect": false },
      { "id": "option_2", "text": "They improve decision-making and accountability", "isCorrect": true },
      { "id": "option_3", "text": "They eliminate the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "They strictly follow a predefined workflow", "isCorrect": false }
    ],
    "hint": "Autonomy fosters responsibility.",
    "answerDescription": "Self-organizing teams take ownership of their work, leading to better decisions and accountability."
  },
  {
    "id": "agile_2484",
    "question": "Why do Agile Development Teams favor face-to-face communication?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for documentation", "isCorrect": false },
      { "id": "option_2", "text": "It enhances clarity and collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the role of Product Owners", "isCorrect": false },
      { "id": "option_4", "text": "It prevents remote work", "isCorrect": false }
    ],
    "hint": "Effective communication improves teamwork.",
    "answerDescription": "Face-to-face interactions help teams quickly align on goals, resolve issues, and enhance collaboration."
  },
  {
    "id": "agile_2485",
    "question": "What is the purpose of a Sprint Backlog for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To track all completed sprints", "isCorrect": false },
      { "id": "option_2", "text": "To guide the team on what to deliver in a sprint", "isCorrect": true },
      { "id": "option_3", "text": "To manage external stakeholder requests", "isCorrect": false },
      { "id": "option_4", "text": "To define the entire product roadmap", "isCorrect": false }
    ],
    "hint": "The Sprint Backlog helps teams focus on sprint goals.",
    "answerDescription": "A Sprint Backlog contains the items the team commits to completing within the sprint."
  },
  {
    "id": "agile_2486",
    "question": "Why is technical excellence important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It allows the team to avoid stakeholder feedback", "isCorrect": false },
      { "id": "option_2", "text": "It ensures maintainability and quality of work", "isCorrect": true },
      { "id": "option_3", "text": "It guarantees faster delivery at any cost", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for refactoring", "isCorrect": false }
    ],
    "hint": "Quality code leads to sustainable development.",
    "answerDescription": "A focus on technical excellence ensures that the product remains maintainable, scalable, and high quality."
  },
  {
    "id": "agile_2487",
    "question": "What should an Agile Development Team do if a task becomes too complex?",
    "options": [
      { "id": "option_1", "text": "Ignore the complexity and continue", "isCorrect": false },
      { "id": "option_2", "text": "Break it down into smaller manageable tasks", "isCorrect": true },
      { "id": "option_3", "text": "Delay it until the next sprint", "isCorrect": false },
      { "id": "option_4", "text": "Request a change in sprint goals", "isCorrect": false }
    ],
    "hint": "Smaller tasks improve clarity and execution.",
    "answerDescription": "Breaking down complex tasks into smaller ones makes them easier to estimate, develop, and test."
  },
  {
    "id": "agile_2488",
    "question": "What is one key aspect of Agile teamwork?",
    "options": [
      { "id": "option_1", "text": "Developers working independently without communication", "isCorrect": false },
      { "id": "option_2", "text": "Collaborating to achieve common goals", "isCorrect": true },
      { "id": "option_3", "text": "Following a rigid hierarchical structure", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizing individual performance over team results", "isCorrect": false }
    ],
    "hint": "Agile success depends on team collaboration.",
    "answerDescription": "Agile teamwork emphasizes collaboration and shared ownership of work to deliver the best possible product."
  },
  {
    "id": "agile_2489",
    "question": "How does an Agile Development Team ensure alignment with the Product Owner?",
    "options": [
      { "id": "option_1", "text": "By working independently and updating the Product Owner at the end", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining constant communication and collaboration", "isCorrect": true },
      { "id": "option_3", "text": "By strictly following initial sprint plans without discussion", "isCorrect": false },
      { "id": "option_4", "text": "By letting the Scrum Master handle all interactions", "isCorrect": false }
    ],
    "hint": "Regular discussions help maintain alignment.",
    "answerDescription": "Frequent collaboration with the Product Owner ensures that the team is aligned with the product vision and priorities."
  },  {
    "id": "agile_2490",
    "question": "What is the ideal size of a Scrum Development Team?",
    "options": [
      { "id": "option_1", "text": "2-3 members", "isCorrect": false },
      { "id": "option_2", "text": "15-20 members", "isCorrect": false },
      { "id": "option_3", "text": "3-9 members", "isCorrect": true },
      { "id": "option_4", "text": "More than 20 members", "isCorrect": false }
    ],
    "hint": "Small, cross-functional teams are most effective.",
    "answerDescription": "Scrum recommends a team size of 3-9 members to maintain agility and collaboration while avoiding complexity."
  },
  {
    "id": "agile_2491",
    "question": "How should a Development Team handle changing requirements during a sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore changes until the next sprint", "isCorrect": false },
      { "id": "option_2", "text": "Immediately stop and adjust all tasks", "isCorrect": false },
      { "id": "option_3", "text": "Assess the impact and consult the Product Owner", "isCorrect": true },
      { "id": "option_4", "text": "Reject all changes to maintain sprint scope", "isCorrect": false }
    ],
    "hint": "Agile teams adapt while maintaining sprint focus.",
    "answerDescription": "The team should evaluate changes, understand their impact, and collaborate with the Product Owner to determine the best course of action."
  },
  {
    "id": "agile_2492",
    "question": "What is the main responsibility of a Development Team in Scrum?",
    "options": [
      { "id": "option_1", "text": "Ensuring stakeholders' expectations are always met", "isCorrect": false },
      { "id": "option_2", "text": "Only working on assigned tasks", "isCorrect": false },
      { "id": "option_3", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_4", "text": "Creating detailed project documentation", "isCorrect": false }
    ],
    "hint": "A sprint should produce a usable outcome.",
    "answerDescription": "The Development Team is responsible for delivering a working product increment at the end of each sprint."
  },
  {
    "id": "agile_2493",
    "question": "What ensures that an Agile Development Team remains productive?",
    "options": [
      { "id": "option_1", "text": "Strictly following a fixed workflow", "isCorrect": false },
      { "id": "option_2", "text": "Working in silos to complete tasks independently", "isCorrect": false },
      { "id": "option_3", "text": "Continuous improvement through retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "Avoiding feedback loops", "isCorrect": false }
    ],
    "hint": "Reflection and improvement drive productivity.",
    "answerDescription": "Retrospectives help teams identify and implement improvements, leading to better productivity over time."
  },
  {
    "id": "agile_2494",
    "question": "Why is transparency important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "To allow management to control progress", "isCorrect": false },
      { "id": "option_2", "text": "To ensure external teams can dictate priorities", "isCorrect": false },
      { "id": "option_3", "text": "To foster collaboration and informed decision-making", "isCorrect": true },
      { "id": "option_4", "text": "To create additional documentation for stakeholders", "isCorrect": false }
    ],
    "hint": "Openness leads to better teamwork and trust.",
    "answerDescription": "Transparency in work processes and progress helps the team and stakeholders make informed decisions and collaborate effectively."
  },
  {
    "id": "agile_2495",
    "question": "What is the role of the Development Team in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "Defining the overall product vision", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing backlog items", "isCorrect": false },
      { "id": "option_3", "text": "Clarifying and estimating user stories", "isCorrect": true },
      { "id": "option_4", "text": "Finalizing sprint goals", "isCorrect": false }
    ],
    "hint": "The team helps make backlog items ready for future sprints.",
    "answerDescription": "Development Teams collaborate with the Product Owner to refine backlog items, ensuring clarity and accurate estimates."
  },
  {
    "id": "agile_2496",
    "question": "How the pair programming benefit an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "By doubling the effort required to complete tasks", "isCorrect": false },
      { "id": "option_2", "text": "By allowing one developer to work while the other observes", "isCorrect": false },
      { "id": "option_3", "text": "By improving code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_4", "text": "By ensuring tasks take longer to complete", "isCorrect": false }
    ],
    "hint": "Collaboration enhances both code quality and learning.",
    "answerDescription": "Pair programming leads to better code quality, improved team learning, and reduced technical debt."
  },
  {
    "id": "agile_2497",
    "question": "Why does an Agile Development Team conduct daily stand-up meetings?",
    "options": [
      { "id": "option_1", "text": "To report progress to management", "isCorrect": false },
      { "id": "option_2", "text": "To track individual performance", "isCorrect": false },
      { "id": "option_3", "text": "To align on progress, plans, and blockers", "isCorrect": true },
      { "id": "option_4", "text": "To extend sprint planning discussions", "isCorrect": false }
    ],
    "hint": "Daily stand-ups help teams stay aligned.",
    "answerDescription": "Daily stand-ups allow teams to synchronize their work, discuss challenges, and ensure alignment on sprint goals."
  },
  {
    "id": "agile_2498",
    "question": "What is a sign of a well-functioning Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Frequent conflicts and disagreements", "isCorrect": false },
      { "id": "option_2", "text": "Dependence on external approvals for small tasks", "isCorrect": false },
      { "id": "option_3", "text": "High collaboration and shared responsibility", "isCorrect": true },
      { "id": "option_4", "text": "Strictly following a fixed workflow", "isCorrect": false }
    ],
    "hint": "Agility thrives on teamwork and ownership.",
    "answerDescription": "An Agile team that collaborates effectively and shares responsibility produces better outcomes."
  },
  {
    "id": "agile_2499",
    "question": "What happens when an Agile Development Team lacks psychological safety?",
    "options": [
      { "id": "option_1", "text": "Innovation and creativity flourish", "isCorrect": false },
      { "id": "option_2", "text": "Team members freely share ideas and concerns", "isCorrect": false },
      { "id": "option_3", "text": "Team members fear making mistakes or speaking up", "isCorrect": true },
      { "id": "option_4", "text": "The team improves collaboration and trust", "isCorrect": false }
    ],
    "hint": "Psychological safety enables open communication.",
    "answerDescription": "When psychological safety is lacking, team members hesitate to share ideas, leading to lower innovation and engagement."
  },  {
    "id": "agile_2500",
    "question": "What characteristic is essential for a high-performing Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "A rigid hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "Minimal communication", "isCorrect": false },
      { "id": "option_3", "text": "Strict individual roles", "isCorrect": false },
      { "id": "option_4", "text": "Self-organization", "isCorrect": true }
    ],
    "hint": "Agile teams take ownership of their work without micromanagement.",
    "answerDescription": "A high-performing Agile Development Team is self-organizing, meaning team members collaborate and manage their own work without rigid external control."
  },
  {
    "id": "agile_2501",
    "question": "Why should an Agile Development Team limit Work in Progress (WIP)?",
    "options": [
      { "id": "option_1", "text": "To ensure every team member is always busy", "isCorrect": false },
      { "id": "option_2", "text": "To complete tasks as quickly as possible", "isCorrect": false },
      { "id": "option_3", "text": "To increase multitasking efficiency", "isCorrect": false },
      { "id": "option_4", "text": "To improve focus and workflow efficiency", "isCorrect": true }
    ],
    "hint": "Too many open tasks can slow progress instead of accelerating it.",
    "answerDescription": "Limiting WIP helps teams focus on completing tasks efficiently instead of spreading efforts too thin across multiple incomplete work items."
  },
  {
    "id": "agile_2502",
    "question": "What helps an Agile Development Team deliver high-quality software?",
    "options": [
      { "id": "option_1", "text": "Minimizing code reviews", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding automated testing", "isCorrect": false },
      { "id": "option_3", "text": "Skipping retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "Practicing continuous integration and deployment", "isCorrect": true }
    ],
    "hint": "Frequent testing and integration improve software quality.",
    "answerDescription": "Continuous integration and deployment help teams catch defects early and ensure software is always in a releasable state."
  },
  {
    "id": "agile_2503",
    "question": "How does an Agile Development Team ensure accountability?",
    "options": [
      { "id": "option_1", "text": "By assigning blame for failures", "isCorrect": false },
      { "id": "option_2", "text": "By reporting progress only to the Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "By tracking individual performance separately", "isCorrect": false },
      { "id": "option_4", "text": "By committing as a team to deliverables", "isCorrect": true }
    ],
    "hint": "Agile teams emphasize shared responsibility.",
    "answerDescription": "An Agile Development Team ensures accountability by committing to goals as a team rather than focusing on individual performance."
  },
  {
    "id": "agile_2504",
    "question": "Why is cross-functionality important in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for collaboration", "isCorrect": false },
      { "id": "option_2", "text": "It allows specialists to work independently", "isCorrect": false },
      { "id": "option_3", "text": "It prevents team members from learning new skills", "isCorrect": false },
      { "id": "option_4", "text": "It enables the team to deliver value without dependencies", "isCorrect": true }
    ],
    "hint": "Agile teams must be able to complete work independently.",
    "answerDescription": "A cross-functional team has all the necessary skills to complete a project increment without relying on external specialists."
  },
  {
    "id": "agile_2505",
    "question": "What should an Agile Development Team do when a team member is struggling with a task?",
    "options": [
      { "id": "option_1", "text": "Ignore the issue to maintain individual accountability", "isCorrect": false },
      { "id": "option_2", "text": "Report it to management immediately", "isCorrect": false },
      { "id": "option_3", "text": "Wait until the next retrospective to address it", "isCorrect": false },
      { "id": "option_4", "text": "Offer support and collaborate to resolve the issue", "isCorrect": true }
    ],
    "hint": "Agile teams support each other to achieve goals.",
    "answerDescription": "An Agile team thrives on collaboration, so when a team member struggles, the rest of the team should help them rather than leaving them to resolve the issue alone."
  },
  {
    "id": "agile_2506",
    "question": "What is one way an Agile Development Team can improve estimation accuracy?",
    "options": [
      { "id": "option_1", "text": "By setting fixed deadlines for all tasks", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on past project data", "isCorrect": false },
      { "id": "option_3", "text": "By making estimates based on gut feelings", "isCorrect": false },
      { "id": "option_4", "text": "By using techniques like Planning Poker", "isCorrect": true }
    ],
    "hint": "Collaborative estimation methods help teams make better predictions.",
    "answerDescription": "Planning Poker and other estimation techniques encourage discussion and improve estimation accuracy by leveraging team expertise."
  },
  {
    "id": "agile_2507",
    "question": "What is a key benefit of limiting the duration of Agile sprints?",
    "options": [
      { "id": "option_1", "text": "It allows teams to take on larger workloads", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for customer feedback", "isCorrect": false },
      { "id": "option_3", "text": "It enables teams to delay difficult decisions", "isCorrect": false },
      { "id": "option_4", "text": "It encourages frequent delivery and feedback", "isCorrect": true }
    ],
    "hint": "Short cycles help teams adjust quickly to changes.",
    "answerDescription": "Shorter sprints allow Agile teams to frequently deliver value and adapt to feedback, reducing risk and increasing responsiveness."
  },
  {
    "id": "agile_2508",
    "question": "How does an Agile Development Team ensure continuous learning?",
    "options": [
      { "id": "option_1", "text": "By strictly following predefined workflows", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding unnecessary experimentation", "isCorrect": false },
      { "id": "option_3", "text": "By limiting knowledge sharing to retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging feedback and experimentation", "isCorrect": true }
    ],
    "hint": "Agile teams must be open to change and improvement.",
    "answerDescription": "Agile teams learn continuously by experimenting with new approaches, reflecting on outcomes, and incorporating feedback."
  },
  {
    "id": "agile_2509",
    "question": "Why should Agile Development Teams practice swarming?",
    "options": [
      { "id": "option_1", "text": "To let multiple teams work on the same task", "isCorrect": false },
      { "id": "option_2", "text": "To assign urgent tasks to a single expert", "isCorrect": false },
      { "id": "option_3", "text": "To divide work among sub-teams", "isCorrect": false },
      { "id": "option_4", "text": "To have the team collectively focus on critical work items", "isCorrect": true }
    ],
    "hint": "Swarming helps teams complete high-priority work faster.",
    "answerDescription": "Swarming allows Agile teams to prioritize urgent or blocked tasks by collectively working on them to accelerate progress."
  },
  {
    "id": "agile_2510",
    "question": "What is a key principle of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Self-organization", "isCorrect": true },
      { "id": "option_2", "text": "Strict adherence to a fixed plan", "isCorrect": false },
      { "id": "option_3", "text": "Working in isolated silos", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing customer involvement", "isCorrect": false }
    ],
    "hint": "Agile teams manage their own work without micromanagement.",
    "answerDescription": "Self-organization allows Agile teams to be flexible and take ownership of their work without relying on constant direction from management."
  },
  {
    "id": "agile_2511",
    "question": "What should an Agile Development Team prioritize in their work?",
    "options": [
      { "id": "option_1", "text": "Delivering value to the customer", "isCorrect": true },
      { "id": "option_2", "text": "Writing excessive documentation", "isCorrect": false },
      { "id": "option_3", "text": "Strictly following initial estimates", "isCorrect": false },
      { "id": "option_4", "text": "Completing work without stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Agile is focused on delivering business value.",
    "answerDescription": "An Agile Development Team should prioritize delivering value by frequently delivering working software that meets customer needs."
  },
  {
    "id": "agile_2512",
    "question": "Why should Agile Development Teams embrace change?",
    "options": [
      { "id": "option_1", "text": "To maintain rigid plans regardless of feedback", "isCorrect": false },
      { "id": "option_2", "text": "To avoid adapting to customer needs", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all requirements are fixed from the start", "isCorrect": false },
      { "id": "option_4", "text": "To stay responsive to new insights and improvements", "isCorrect": true }
    ],
    "hint": "Agile values responding to change over following a plan.",
    "answerDescription": "Agile teams remain flexible to adjust based on customer needs and evolving requirements."
  }, 
  {
    "id": "agile_2513",
    "question": "Why is collaboration essential for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It improves communication and efficiency", "isCorrect": true },
      { "id": "option_2", "text": "It allows individual team members to work in isolation", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for feedback", "isCorrect": false },
      { "id": "option_4", "text": "It prevents the team from making independent decisions", "isCorrect": false }
    ],
    "hint": "Agile relies on teamwork and open communication.",
    "answerDescription": "Collaboration ensures that Agile teams work efficiently, solve problems together, and deliver high-quality software."
  },
  {
    "id": "agile_2514",
    "question": "What is the best way for an Agile Development Team to improve continuously?",
    "options": [
      { "id": "option_1", "text": "By conducting regular retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "By avoiding feedback from stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By strictly following the same processes", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on short-term goals", "isCorrect": false }
    ],
    "hint": "Agile teams reflect on their processes regularly.",
    "answerDescription": "Retrospectives help Agile teams identify what is working well and what needs improvement, leading to continuous growth and efficiency."
  },
  {
    "id": "agile_2515",
    "question": "What role does transparency play in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It fosters trust and alignment", "isCorrect": true },
      { "id": "option_2", "text": "It ensures work remains hidden until release", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "It increases complexity in the development process", "isCorrect": false }
    ],
    "hint": "Agile teams share progress and challenges openly.",
    "answerDescription": "Transparency enables teams to build trust, stay aligned with stakeholders, and make informed decisions."
  },
  {
    "id": "agile_2516",
    "question": "What is the main reason Agile Development Teams use user stories?",
    "options": [
      { "id": "option_1", "text": "To understand user needs and expectations", "isCorrect": true },
      { "id": "option_2", "text": "To replace technical documentation", "isCorrect": false },
      { "id": "option_3", "text": "To avoid collaboration with the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "To limit flexibility in feature development", "isCorrect": false }
    ],
    "hint": "User stories help teams develop features that provide value.",
    "answerDescription": "User stories describe features from the end-userâ€™s perspective, ensuring the development team builds functionality that meets customer needs."
  },
  {
    "id": "agile_2517",
    "question": "How can an Agile Development Team improve their velocity?",
    "options": [
      { "id": "option_1", "text": "By removing bottlenecks in the workflow", "isCorrect": true },
      { "id": "option_2", "text": "By overloading team members with more tasks", "isCorrect": false },
      { "id": "option_3", "text": "By skipping planning meetings", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding continuous integration", "isCorrect": false }
    ],
    "hint": "Improving workflow efficiency leads to better velocity.",
    "answerDescription": "Removing workflow bottlenecks helps teams complete work faster and improve their overall velocity."
  },
  {
    "id": "agile_2518",
    "question": "Why is frequent feedback important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It ensures continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "It slows down development", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for planning", "isCorrect": false },
      { "id": "option_4", "text": "It reduces adaptability", "isCorrect": false }
    ],
    "hint": "Feedback helps teams adjust and improve their processes.",
    "answerDescription": "Frequent feedback allows Agile teams to quickly adapt and make improvements based on real user and stakeholder input."
  },
  {
    "id": "agile_2519",
    "question": "How does an Agile Development Team handle risk?",
    "options": [
      { "id": "option_1", "text": "By addressing risks early and iteratively", "isCorrect": true },
      { "id": "option_2", "text": "By ignoring risks until they cause problems", "isCorrect": false },
      { "id": "option_3", "text": "By shifting all risk management to senior leadership", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding discussions about risks", "isCorrect": false }
    ],
    "hint": "Agile teams focus on early risk identification.",
    "answerDescription": "Agile teams proactively identify and address risks in each iteration, reducing uncertainty and ensuring smooth project execution."
  },  {
    "id": "agile_2520",
    "question": "What is a key benefit of a cross-functional Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Reduced collaboration between departments", "isCorrect": false },
      { "id": "option_2", "text": "Ability to deliver a complete product increment independently", "isCorrect": true },
      { "id": "option_3", "text": "Dependence on external specialists for key tasks", "isCorrect": false },
      { "id": "option_4", "text": "Less adaptability to changing requirements", "isCorrect": false }
    ],
    "hint": "A cross-functional team has all necessary skills to deliver work.",
    "answerDescription": "Cross-functional teams minimize dependencies and improve efficiency by having all the skills needed to deliver a product increment."
  },
  {
    "id": "agile_2521",
    "question": "Why should an Agile Development Team maintain a sustainable pace?",
    "options": [
      { "id": "option_1", "text": "To maximize output in short bursts", "isCorrect": false },
      { "id": "option_2", "text": "To ensure long-term productivity and team well-being", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the time spent on planning and retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To avoid collaboration with business stakeholders", "isCorrect": false }
    ],
    "hint": "Sustainable pace prevents burnout and maintains quality.",
    "answerDescription": "Agile teams work at a steady, maintainable pace to ensure high-quality output and avoid burnout."
  },
  {
    "id": "agile_2522",
    "question": "What is the primary responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Following orders from management", "isCorrect": false },
      { "id": "option_2", "text": "Delivering high-quality, working software", "isCorrect": true },
      { "id": "option_3", "text": "Creating extensive documentation before development", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering value through working software.",
    "answerDescription": "Agile Development Teams prioritize delivering functional software that meets customer needs."
  },
  {
    "id": "agile_2523",
    "question": "How should an Agile Development Team handle technical debt?",
    "options": [
      { "id": "option_1", "text": "Ignore it until the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "Continuously address and refactor it", "isCorrect": true },
      { "id": "option_3", "text": "Only fix it if stakeholders complain", "isCorrect": false },
      { "id": "option_4", "text": "Consider it as a normal part of Agile development", "isCorrect": false }
    ],
    "hint": "Managing technical debt early prevents larger issues later.",
    "answerDescription": "Agile teams should actively manage and reduce technical debt through continuous refactoring and improvement."
  },
  {
    "id": "agile_2524",
    "question": "How does a Development Team ensure high quality in Agile?",
    "options": [
      { "id": "option_1", "text": "By writing detailed requirement documents", "isCorrect": false },
      { "id": "option_2", "text": "By using continuous integration and testing", "isCorrect": true },
      { "id": "option_3", "text": "By relying solely on manual testing at the end", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding code reviews", "isCorrect": false }
    ],
    "hint": "Automated processes help maintain code quality.",
    "answerDescription": "Continuous integration and automated testing ensure software quality by catching issues early in the development cycle."
  },
  {
    "id": "agile_2525",
    "question": "Why is collective code ownership important in Agile teams?",
    "options": [
      { "id": "option_1", "text": "It allows only senior developers to make changes", "isCorrect": false },
      { "id": "option_2", "text": "It enables the whole team to improve and maintain code", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for collaboration", "isCorrect": false },
      { "id": "option_4", "text": "It limits flexibility in development", "isCorrect": false }
    ],
    "hint": "In Agile, any team member should be able to work on any part of the codebase.",
    "answerDescription": "Collective code ownership encourages shared responsibility, improves code quality, and reduces knowledge silos."
  },
  {
    "id": "agile_2526",
    "question": "What is a key characteristic of an effective Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Strictly hierarchical structure", "isCorrect": false },
      { "id": "option_2", "text": "High level of collaboration and communication", "isCorrect": true },
      { "id": "option_3", "text": "Working independently with minimal discussion", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding customer feedback", "isCorrect": false }
    ],
    "hint": "Agile teams thrive on open collaboration.",
    "answerDescription": "Strong communication and teamwork enable Agile Development Teams to efficiently deliver value to customers."
  },
  {
    "id": "agile_2527",
    "question": "Why should Agile teams use Test-Driven Development (TDD)?",
    "options": [
      { "id": "option_1", "text": "To increase the amount of manual testing", "isCorrect": false },
      { "id": "option_2", "text": "To ensure code quality by writing tests first", "isCorrect": true },
      { "id": "option_3", "text": "To delay testing until the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "To avoid automated testing altogether", "isCorrect": false }
    ],
    "hint": "TDD helps teams write better code by defining tests before development.",
    "answerDescription": "Test-Driven Development improves software quality by requiring tests to be written before code implementation."
  },
  {
    "id": "agile_2528",
    "question": "How does pair programming benefit an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "By slowing down the coding process", "isCorrect": false },
      { "id": "option_2", "text": "By improving code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_3", "text": "By reducing team collaboration", "isCorrect": false },
      { "id": "option_4", "text": "By limiting code reviews", "isCorrect": false }
    ],
    "hint": "Pair programming enhances collaboration and reduces bugs.",
    "answerDescription": "Pair programming increases code quality, improves team learning, and reduces defects by having two developers work together."
  },
  {
    "id": "agile_2529",
    "question": "What is an Agile Development Teamâ€™s approach to planning?",
    "options": [
      { "id": "option_1", "text": "Strictly following a fixed plan", "isCorrect": false },
      { "id": "option_2", "text": "Using adaptive and iterative planning", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding planning altogether", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on long-term planning", "isCorrect": false }
    ],
    "hint": "Agile teams plan continuously and adjust based on feedback.",
    "answerDescription": "Agile teams use iterative planning to remain flexible and adapt to changing priorities."
  },
  {
    "id": "agile_2530",
    "question": "What is the primary purpose of a Daily Scrum?",
    "options": [
      { "id": "option_1", "text": "To discuss long-term project goals", "isCorrect": false },
      { "id": "option_2", "text": "To receive instructions from the Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "To inspect progress and adapt the plan for the next 24 hours", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks to team members", "isCorrect": false }
    ],
    "hint": "Daily Scrum is focused on short-term planning and adaptation.",
    "answerDescription": "The Daily Scrum allows the team to inspect progress and make necessary adjustments for the next 24 hours."
  },
  {
    "id": "agile_2531",
    "question": "How does an Agile Development Team handle evolving requirements?",
    "options": [
      { "id": "option_1", "text": "By rejecting changes after Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "By waiting until the end of development to make changes", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change and adjusting iteratively", "isCorrect": true },
      { "id": "option_4", "text": "By requiring formal approval for any changes", "isCorrect": false }
    ],
    "hint": "Agile teams are flexible and responsive to change.",
    "answerDescription": "Agile teams welcome changing requirements, even late in development, to deliver maximum value."
  },
  {
    "id": "agile_2532",
    "question": "What is the best way for an Agile Development Team to ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By sticking to the original process without modifications", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback from stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By conducting regular retrospectives and adapting", "isCorrect": true },
      { "id": "option_4", "text": "By focusing solely on meeting deadlines", "isCorrect": false }
    ],
    "hint": "Agile teams reflect on past performance to improve continuously.",
    "answerDescription": "Retrospectives help Agile teams inspect their process and make incremental improvements."
  },
  {
    "id": "agile_2533",
    "question": "Why is self-organization important in Agile teams?",
    "options": [
      { "id": "option_1", "text": "It allows managers to assign tasks efficiently", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "It empowers teams to make decisions and take ownership", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for a Product Owner", "isCorrect": false }
    ],
    "hint": "Agile values autonomy and team-driven decision-making.",
    "answerDescription": "Self-organizing teams are more effective because they take ownership of their work and adapt to challenges proactively."
  },
  {
    "id": "agile_2534",
    "question": "What should an Agile Development Team do if a Sprint goal is at risk?",
    "options": [
      { "id": "option_1", "text": "Continue working as planned and hope to catch up later", "isCorrect": false },
      { "id": "option_2", "text": "Wait until the Sprint Review to discuss issues", "isCorrect": false },
      { "id": "option_3", "text": "Collaborate to identify solutions and adjust priorities", "isCorrect": true },
      { "id": "option_4", "text": "Ask the Product Owner to change the Sprint scope", "isCorrect": false }
    ],
    "hint": "Agile teams are adaptive and work together to solve problems.",
    "answerDescription": "When facing issues, Agile teams collaborate to find solutions and adapt their approach as needed."
  },
  {
    "id": "agile_2535",
    "question": "How does a Development Team ensure transparency in Agile?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder access to project updates", "isCorrect": false },
      { "id": "option_2", "text": "By keeping progress discussions private", "isCorrect": false },
      { "id": "option_3", "text": "By using information radiators like task boards and burndown charts", "isCorrect": true },
      { "id": "option_4", "text": "By focusing only on internal communication", "isCorrect": false }
    ],
    "hint": "Transparency is achieved through visibility and communication.",
    "answerDescription": "Agile teams use visual tools to ensure transparency and keep all stakeholders informed."
  },
  {
    "id": "agile_2536",
    "question": "What should an Agile Development Team do when a bottleneck is identified?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus on completing other tasks", "isCorrect": false },
      { "id": "option_2", "text": "Wait until the Sprint Retrospective to discuss it", "isCorrect": false },
      { "id": "option_3", "text": "Address it immediately and collaborate on a solution", "isCorrect": true },
      { "id": "option_4", "text": "Escalate the issue to upper management", "isCorrect": false }
    ],
    "hint": "Agile teams proactively address challenges as they arise.",
    "answerDescription": "By quickly identifying and resolving bottlenecks, Agile teams maintain smooth workflow and efficiency."
  },
  {
    "id": "agile_2537",
    "question": "How does an Agile Development Team maintain a shared understanding of work?",
    "options": [
      { "id": "option_1", "text": "By allowing only the Scrum Master to document tasks", "isCorrect": false },
      { "id": "option_2", "text": "By relying on emails for task updates", "isCorrect": false },
      { "id": "option_3", "text": "By holding regular discussions and refining backlog items", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding written documentation", "isCorrect": false }
    ],
    "hint": "Regular discussions keep everyone aligned.",
    "answerDescription": "Frequent communication and backlog refinement ensure that all team members have a clear understanding of work priorities."
  },
  {
    "id": "agile_2538",
    "question": "What is the advantage of limiting Work in Progress (WIP) in Agile?",
    "options": [
      { "id": "option_1", "text": "It slows down development", "isCorrect": false },
      { "id": "option_2", "text": "It increases multitasking", "isCorrect": false },
      { "id": "option_3", "text": "It helps maintain focus and improves flow efficiency", "isCorrect": true },
      { "id": "option_4", "text": "It reduces collaboration between team members", "isCorrect": false }
    ],
    "hint": "Reducing WIP helps teams complete work faster with better quality.",
    "answerDescription": "Limiting WIP ensures that Agile teams focus on completing tasks efficiently before starting new work."
  },
  {
    "id": "agile_2539",
    "question": "How should an Agile Development Team prioritize work?",
    "options": [
      { "id": "option_1", "text": "By selecting tasks based on personal preference", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on tasks with the shortest estimated time", "isCorrect": false },
      { "id": "option_3", "text": "By collaborating with the Product Owner to prioritize value-driven work", "isCorrect": true },
      { "id": "option_4", "text": "By completing all low-effort tasks first", "isCorrect": false }
    ],
    "hint": "Work should be prioritized based on value and business needs.",
    "answerDescription": "Agile teams collaborate with the Product Owner to ensure they are working on the highest-value items first."
  },
  {
    "id": "agile_2540",
    "question": "What is one key responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Defining the project budget", "isCorrect": false },
      { "id": "option_2", "text": "Approving change requests from stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Supervising the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "Delivering a potentially shippable product increment", "isCorrect": true }
    ],
    "hint": "The team's goal is to create working software in each iteration.",
    "answerDescription": "The Development Team is responsible for delivering a potentially shippable product increment at the end of each Sprint."
  },
  {
    "id": "agile_2541",
    "question": "How does a Development Team in Scrum handle task assignments?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master assigns tasks", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner distributes tasks", "isCorrect": false },
      { "id": "option_3", "text": "Tasks are assigned based on seniority", "isCorrect": false },
      { "id": "option_4", "text": "The team self-organizes and selects tasks collaboratively", "isCorrect": true }
    ],
    "hint": "Agile promotes self-organization within teams.",
    "answerDescription": "In Scrum, the Development Team self-organizes by choosing how best to complete the work rather than relying on external task assignment."
  },
  {
    "id": "agile_2542",
    "question": "What is an effective way for a Development Team to track progress in Agile?",
    "options": [
      { "id": "option_1", "text": "Holding long weekly meetings to discuss progress", "isCorrect": false },
      { "id": "option_2", "text": "Relying solely on individual updates via email", "isCorrect": false },
      { "id": "option_3", "text": "Using a static project plan with fixed milestones", "isCorrect": false },
      { "id": "option_4", "text": "Utilizing visual tools like Kanban boards and burndown charts", "isCorrect": true }
    ],
    "hint": "Agile favors transparency and visual progress tracking.",
    "answerDescription": "Visual management tools like Kanban boards and burndown charts help Agile teams maintain transparency and track progress effectively."
  },
  {
    "id": "agile_2543",
    "question": "What should a Development Team do if a Sprint Backlog item becomes irrelevant?",
    "options": [
      { "id": "option_1", "text": "Continue working on it to avoid disrupting the Sprint", "isCorrect": false },
      { "id": "option_2", "text": "Request the Scrum Master to make the decision", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the item and move on to other tasks", "isCorrect": false },
      { "id": "option_4", "text": "Collaborate with the Product Owner to remove or adjust the item", "isCorrect": true }
    ],
    "hint": "Changes in priorities should be addressed through collaboration.",
    "answerDescription": "If an item in the Sprint Backlog becomes irrelevant, the Development Team should work with the Product Owner to adjust or remove it."
  },
  {
    "id": "agile_2544",
    "question": "How does self-organization benefit an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for collaboration", "isCorrect": false },
      { "id": "option_2", "text": "It requires strict control from management", "isCorrect": false },
      { "id": "option_3", "text": "It increases reliance on external decision-makers", "isCorrect": false },
      { "id": "option_4", "text": "It empowers teams to take ownership of their work", "isCorrect": true }
    ],
    "hint": "Agile values team autonomy and responsibility.",
    "answerDescription": "Self-organizing teams make decisions collectively, improving motivation and accountability."
  },
  {
    "id": "agile_2545",
    "question": "What should a Development Team do if they cannot complete all committed Sprint Backlog items?",
    "options": [
      { "id": "option_1", "text": "Extend the Sprint deadline", "isCorrect": false },
      { "id": "option_2", "text": "Have the Scrum Master make the final decision", "isCorrect": false },
      { "id": "option_3", "text": "Ignore the unfinished items and focus on new work", "isCorrect": false },
      { "id": "option_4", "text": "Discuss the issue in the Sprint Review and adapt for future Sprints", "isCorrect": true }
    ],
    "hint": "Agile is about learning and continuous improvement.",
    "answerDescription": "Unfinished backlog items should be reviewed at the Sprint Review, and the team should learn from the experience to improve planning in future Sprints."
  },
  {
    "id": "agile_2632",
    "question": "How can Agile Development Teams minimize technical debt?",
    "options": [
      { "id": "option_1", "text": "By refactoring code regularly and following best practices", "isCorrect": true },
      { "id": "option_2", "text": "By prioritizing speed over quality", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding automated testing", "isCorrect": false },
      { "id": "option_4", "text": "By delaying bug fixes to future sprints", "isCorrect": false }
    ],
    "hint": "Code quality should be maintained over time.",
    "answerDescription": "Regular refactoring and best practices ensure that Agile teams prevent the accumulation of technical debt."
  },
  {
    "id": "agile_2546",
    "question": "Why is collaboration essential in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It ensures that team members share knowledge and solve problems together", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for planning and coordination", "isCorrect": false },
      { "id": "option_3", "text": "It allows team members to work in isolation", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for retrospectives", "isCorrect": false }
    ],
    "hint": "Teamwork improves Agile outcomes.",
    "answerDescription": "Collaboration ensures that Agile teams share insights, resolve blockers quickly, and maintain high productivity."
  },
  {
    "id": "agile_2547",
    "question": "How does continuous feedback help an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It helps teams quickly identify and fix issues", "isCorrect": true },
      { "id": "option_2", "text": "It delays progress by creating unnecessary discussions", "isCorrect": false },
      { "id": "option_3", "text": "It prevents teams from adjusting their workflow", "isCorrect": false },
      { "id": "option_4", "text": "It makes long-term planning impossible", "isCorrect": false }
    ],
    "hint": "Frequent feedback leads to continuous improvement.",
    "answerDescription": "By receiving regular feedback, Agile teams can iterate faster and improve their processes efficiently."
  },
  {
    "id": "agile_2548",
    "question": "What is the main benefit of timeboxing Sprints?",
    "options": [
      { "id": "option_1", "text": "It limits the team's ability to make changes", "isCorrect": false },
      { "id": "option_2", "text": "It forces the team to deliver unfinished work", "isCorrect": false },
      { "id": "option_3", "text": "It discourages frequent releases", "isCorrect": false },
      { "id": "option_4", "text": "It helps teams focus on delivering a working increment within a set period", "isCorrect": true }
    ],
    "hint": "Timeboxing provides structure while allowing flexibility.",
    "answerDescription": "Timeboxing ensures that Agile teams stay focused and deliver incremental progress at a predictable cadence."
  },
  {
    "id": "agile_2549",
    "question": "How does an Agile Development Team handle external dependencies?",
    "options": [
      { "id": "option_1", "text": "Wait until the dependency is resolved before continuing work", "isCorrect": false },
      { "id": "option_2", "text": "Ignore dependencies and proceed with unrelated tasks", "isCorrect": false },
      { "id": "option_3", "text": "Depend on external teams to set priorities", "isCorrect": false },
      { "id": "option_4", "text": "Identify and mitigate risks early to minimize delays", "isCorrect": true }
    ],
    "hint": "Proactive dependency management reduces project delays.",
    "answerDescription": "Agile teams should identify dependencies early and work to mitigate potential risks to ensure smooth development."
  },  {
    "id": "agile_2550",
    "question": "What is the primary responsibility of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Managing stakeholder expectations", "isCorrect": false },
      { "id": "option_3", "text": "Defining the product roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Supervising the Product Owner", "isCorrect": false }
    ],
    "hint": "The team is responsible for creating working software each iteration.",
    "answerDescription": "The Development Team's primary responsibility is to deliver a potentially shippable product increment at the end of each Sprint."
  },
  {
    "id": "agile_2551",
    "question": "How does a Development Team in Scrum decide on the amount of work for a Sprint?",
    "options": [
      { "id": "option_1", "text": "The team collaboratively estimates and commits to a Sprint backlog", "isCorrect": true },
      { "id": "option_2", "text": "The Product Owner assigns the work", "isCorrect": false },
      { "id": "option_3", "text": "The Scrum Master distributes tasks", "isCorrect": false },
      { "id": "option_4", "text": "Management dictates the workload", "isCorrect": false }
    ],
    "hint": "Agile promotes self-organization and collective decision-making.",
    "answerDescription": "The Development Team estimates the effort required and commits to a realistic Sprint backlog based on their capacity."
  },
  {
    "id": "agile_2552",
    "question": "What is a key characteristic of a successful Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Self-organizing and cross-functional", "isCorrect": true },
      { "id": "option_2", "text": "Relies on external guidance for task assignments", "isCorrect": false },
      { "id": "option_3", "text": "Strictly follows hierarchical decision-making", "isCorrect": false },
      { "id": "option_4", "text": "Prioritizes individual performance over teamwork", "isCorrect": false }
    ],
    "hint": "Agile teams function independently and adapt to changes.",
    "answerDescription": "A successful Agile Development Team is self-organizing and cross-functional, allowing it to deliver value efficiently."
  },
  {
    "id": "agile_2553",
    "question": "Why does a Development Team in Agile prefer face-to-face communication?",
    "options": [
      { "id": "option_1", "text": "It enhances collaboration and reduces misunderstandings", "isCorrect": true },
      { "id": "option_2", "text": "It is the only way to document decisions", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for written documentation", "isCorrect": false },
      { "id": "option_4", "text": "It prevents remote teams from participating", "isCorrect": false }
    ],
    "hint": "Agile values individuals and interactions over processes and tools.",
    "answerDescription": "Face-to-face communication helps Agile teams collaborate effectively, reducing misunderstandings and improving decision-making."
  },
  {
    "id": "agile_2554",
    "question": "What should a Development Team do when encountering a roadblock during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Raise the issue in the Daily Scrum and collaborate on a solution", "isCorrect": true },
      { "id": "option_2", "text": "Wait for the Scrum Master to solve it", "isCorrect": false },
      { "id": "option_3", "text": "Continue working on other tasks and ignore the problem", "isCorrect": false },
      { "id": "option_4", "text": "Escalate the issue to upper management immediately", "isCorrect": false }
    ],
    "hint": "Agile promotes quick problem-solving through collaboration.",
    "answerDescription": "The Development Team should discuss roadblocks during the Daily Scrum and work together to find a solution."
  },
  {
    "id": "agile_2555",
    "question": "What is the best way for a Development Team to improve its velocity over time?",
    "options": [
      { "id": "option_1", "text": "Continuously inspect and adapt through retrospectives", "isCorrect": true },
      { "id": "option_2", "text": "Work overtime to complete more tasks", "isCorrect": false },
      { "id": "option_3", "text": "Increase the Sprint duration", "isCorrect": false },
      { "id": "option_4", "text": "Avoid retrospectives to focus more on work", "isCorrect": false }
    ],
    "hint": "Agile encourages continuous learning and improvement.",
    "answerDescription": "Agile teams improve their velocity by reflecting on their processes in retrospectives and making necessary adjustments."
  },
  {
    "id": "agile_2556",
    "question": "Why is backlog refinement important for a Development Team?",
    "options": [
      { "id": "option_1", "text": "It ensures work is well-defined and ready for upcoming Sprints", "isCorrect": true },
      { "id": "option_2", "text": "It replaces the need for Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "It allows the Scrum Master to control the backlog", "isCorrect": false },
      { "id": "option_4", "text": "It prevents changes to the backlog", "isCorrect": false }
    ],
    "hint": "Refining the backlog helps teams plan effectively.",
    "answerDescription": "Backlog refinement helps ensure that work items are clear, prioritized, and ready for development in upcoming Sprints."
  },
  {
    "id": "agile_2557",
    "question": "How does an Agile Development Team ensure quality in their deliverables?",
    "options": [
      { "id": "option_1", "text": "By practicing continuous integration and automated testing", "isCorrect": true },
      { "id": "option_2", "text": "By performing testing only at the end of development", "isCorrect": false },
      { "id": "option_3", "text": "By relying solely on manual testing", "isCorrect": false },
      { "id": "option_4", "text": "By delegating testing to an external QA team", "isCorrect": false }
    ],
    "hint": "Agile promotes frequent testing and integration.",
    "answerDescription": "Continuous integration and automated testing help Agile teams catch defects early and maintain high-quality software."
  },
  {
    "id": "agile_2558",
    "question": "What role does pair programming play in Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "It improves code quality and knowledge sharing", "isCorrect": true },
      { "id": "option_2", "text": "It slows down development by requiring two people for one task", "isCorrect": false },
      { "id": "option_3", "text": "It replaces the need for code reviews", "isCorrect": false },
      { "id": "option_4", "text": "It is only useful for junior developers", "isCorrect": false }
    ],
    "hint": "Pair programming is a technique that enhances collaboration.",
    "answerDescription": "Pair programming helps Agile teams improve code quality, reduce defects, and facilitate knowledge sharing among team members."
  },
  {
    "id": "agile_2559",
    "question": "Why should an Agile Development Team focus on delivering value rather than just completing tasks?",
    "options": [
      { "id": "option_1", "text": "Because delivering value aligns with business and customer needs", "isCorrect": true },
      { "id": "option_2", "text": "Because completing tasks is secondary in Agile", "isCorrect": false },
      { "id": "option_3", "text": "Because the Product Owner takes care of prioritization", "isCorrect": false },
      { "id": "option_4", "text": "Because Agile discourages task-based work", "isCorrect": false }
    ],
    "hint": "Agile aims to maximize customer value.",
    "answerDescription": "An Agile team prioritizes delivering value to customers rather than just completing tasks, ensuring that efforts contribute to business goals."
  },
  {
    "id": "agile_2560",
    "question": "What is one key benefit of a cross-functional Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows team members to specialize in only one area", "isCorrect": false },
      { "id": "option_2", "text": "It enables faster and more efficient collaboration", "isCorrect": true },
      { "id": "option_3", "text": "It increases reliance on external experts", "isCorrect": false },
      { "id": "option_4", "text": "It reduces flexibility in task assignments", "isCorrect": false }
    ],
    "hint": "Cross-functional teams reduce dependencies and speed up work.",
    "answerDescription": "A cross-functional team can collaborate effectively, reducing bottlenecks and increasing efficiency in Agile development."
  },
  {
    "id": "agile_2561",
    "question": "What is the main reason an Agile Development Team should use Test-Driven Development (TDD)?",
    "options": [
      { "id": "option_1", "text": "To avoid writing additional documentation", "isCorrect": false },
      { "id": "option_2", "text": "To ensure high code quality and prevent defects early", "isCorrect": true },
      { "id": "option_3", "text": "To minimize collaboration between developers", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for user testing", "isCorrect": false }
    ],
    "hint": "TDD helps teams catch issues early in development.",
    "answerDescription": "Test-Driven Development (TDD) helps teams write cleaner code and detect defects early, improving software quality."
  },
  {
    "id": "agile_2562",
    "question": "Why should an Agile Development Team limit Work in Progress (WIP)?",
    "options": [
      { "id": "option_1", "text": "To reduce overall work capacity", "isCorrect": false },
      { "id": "option_2", "text": "To increase focus and efficiency in completing tasks", "isCorrect": true },
      { "id": "option_3", "text": "To delay delivery and extend the Sprint timeline", "isCorrect": false },
      { "id": "option_4", "text": "To allow team members to work on multiple items at once", "isCorrect": false }
    ],
    "hint": "Limiting WIP ensures that tasks are completed efficiently.",
    "answerDescription": "By limiting WIP, Agile teams can focus on fewer tasks at a time, improving flow efficiency and reducing context switching."
  },
  {
    "id": "agile_2563",
    "question": "What should an Agile Development Team do if a task is taking longer than expected during a Sprint?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus on other tasks", "isCorrect": false },
      { "id": "option_2", "text": "Discuss it in the Daily Scrum and adjust accordingly", "isCorrect": true },
      { "id": "option_3", "text": "Wait until the Sprint Review to address it", "isCorrect": false },
      { "id": "option_4", "text": "Ask the Product Owner to reassign the task", "isCorrect": false }
    ],
    "hint": "Agile teams adapt to challenges during daily stand-ups.",
    "answerDescription": "In Agile, teams use Daily Scrums to identify blockers and make adjustments to ensure smooth progress during the Sprint."
  },
  {
    "id": "agile_2564",
    "question": "What is the role of test-driven development (TDD) in Agile teams?",
    "options": [
      { "id": "option_1", "text": "To write tests only after code is complete", "isCorrect": false },
      { "id": "option_2", "text": "To avoid spending time on testing", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for automated tests", "isCorrect": false },
      { "id": "option_4", "text": "To write tests first to guide code development", "isCorrect": true }
    ],
    "hint": "TDD helps ensure code quality before implementation.",
    "answerDescription": "Test-driven development improves software quality by writing tests before implementing functionality."
  },
  {
    "id": "agile_2565",
    "question": "What is the purpose of code reviews in Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "To find faults and assign blame", "isCorrect": false },
      { "id": "option_2", "text": "To improve code quality and share knowledge", "isCorrect": true },
      { "id": "option_3", "text": "To delay deployments for quality assurance", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for automated tests", "isCorrect": false }
    ],
    "hint": "Code reviews help improve quality and collaboration.",
    "answerDescription": "Agile teams use code reviews to ensure quality, reduce defects, and promote knowledge-sharing among team members."
  },
  {
    "id": "agile_2566",
    "question": "What principle guides Agile Development Teams in delivering customer value?",
    "options": [
      { "id": "option_1", "text": "Maximizing the number of completed tasks", "isCorrect": false },
      { "id": "option_2", "text": "Delivering working software frequently", "isCorrect": true },
      { "id": "option_3", "text": "Following a rigid development process", "isCorrect": false },
      { "id": "option_4", "text": "Delaying releases for comprehensive documentation", "isCorrect": false }
    ],
    "hint": "Agile values working software over extensive documentation.",
    "answerDescription": "Agile teams prioritize delivering functional software frequently to maximize customer value and gain rapid feedback."
  },
  {
    "id": "agile_2567",
    "question": "How does continuous integration benefit an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It reduces the frequency of software updates", "isCorrect": false },
      { "id": "option_2", "text": "It ensures early detection of integration issues", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "It slows down the development process", "isCorrect": false }
    ],
    "hint": "Continuous integration helps detect problems early.",
    "answerDescription": "By integrating code frequently, teams can identify and fix integration issues early, improving software quality."
  },
  {
    "id": "agile_2568",
    "question": "What role does psychological safety play in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It discourages open communication", "isCorrect": false },
      { "id": "option_2", "text": "It fosters an environment where team members feel safe to take risks and share ideas", "isCorrect": true },
      { "id": "option_3", "text": "It prevents team members from challenging each otherâ€™s ideas", "isCorrect": false },
      { "id": "option_4", "text": "It enforces strict adherence to a predefined plan", "isCorrect": false }
    ],
    "hint": "Teams perform better when members feel safe to speak up.",
    "answerDescription": "Psychological safety allows team members to take risks, ask questions, and challenge ideas without fear, leading to better collaboration."
  },
  {
    "id": "agile_2569",
    "question": "Why is backlog grooming important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "To finalize all work items at the start of a project", "isCorrect": false },
      { "id": "option_2", "text": "To ensure backlog items are well-defined and prioritized", "isCorrect": true },
      { "id": "option_3", "text": "To allow the Scrum Master to manage tasks", "isCorrect": false },
      { "id": "option_4", "text": "To prevent any changes to the Sprint backlog", "isCorrect": false }
    ],
    "hint": "Refining the backlog helps teams work efficiently.",
    "answerDescription": "Backlog grooming ensures that work items are well-defined, estimated, and prioritized, enabling smooth Sprint execution."
  },  {
    "id": "agile_2570",
    "question": "What is a primary characteristic of a self-organizing Development Team?",
    "options": [
      { "id": "option_1", "text": "It relies on a manager for all task assignments", "isCorrect": false },
      { "id": "option_2", "text": "It avoids making decisions collectively", "isCorrect": false },
      { "id": "option_3", "text": "It determines how best to accomplish work independently", "isCorrect": true },
      { "id": "option_4", "text": "It focuses only on individual contributions", "isCorrect": false }
    ],
    "hint": "A self-organizing team makes its own decisions about task execution.",
    "answerDescription": "Self-organizing teams in Agile decide how to complete work without needing direct management intervention."
  },
  {
    "id": "agile_2571",
    "question": "Why is team collaboration important in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for documentation", "isCorrect": false },
      { "id": "option_2", "text": "It limits flexibility in project execution", "isCorrect": false },
      { "id": "option_3", "text": "It enhances problem-solving and innovation", "isCorrect": true },
      { "id": "option_4", "text": "It ensures tasks are done in strict sequence", "isCorrect": false }
    ],
    "hint": "Agile teams work together to find creative solutions.",
    "answerDescription": "Collaboration fosters knowledge-sharing, enhances creativity, and helps Agile teams solve problems more effectively."
  },
  {
    "id": "agile_2572",
    "question": "What is one of the main responsibilities of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "To strictly follow a fixed project plan", "isCorrect": false },
      { "id": "option_2", "text": "To rely on the Scrum Master for decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To deliver high-quality increments of work", "isCorrect": true },
      { "id": "option_4", "text": "To avoid making changes to requirements", "isCorrect": false }
    ],
    "hint": "An Agile team focuses on delivering working solutions.",
    "answerDescription": "Agile teams are responsible for delivering high-quality product increments that provide value to customers."
  },
  {
    "id": "agile_2573",
    "question": "How can an Agile Development Team ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By avoiding process changes", "isCorrect": false },
      { "id": "option_2", "text": "By only reviewing performance at the end of a project", "isCorrect": false },
      { "id": "option_3", "text": "By regularly conducting Sprint Retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "By sticking to the same approach in all sprints", "isCorrect": false }
    ],
    "hint": "Agile teams reflect on their work to improve continuously.",
    "answerDescription": "Sprint Retrospectives allow teams to evaluate their work, identify areas for improvement, and enhance performance."
  },
  {
    "id": "agile_2574",
    "question": "What should an Agile Development Team do if they encounter an impediment?",
    "options": [
      { "id": "option_1", "text": "Ignore it and focus on other work", "isCorrect": false },
      { "id": "option_2", "text": "Wait for the next Sprint Review to discuss it", "isCorrect": false },
      { "id": "option_3", "text": "Raise the issue in the Daily Scrum for resolution", "isCorrect": true },
      { "id": "option_4", "text": "Rely on external managers to solve the problem", "isCorrect": false }
    ],
    "hint": "Impediments should be addressed as soon as possible.",
    "answerDescription": "Agile teams discuss impediments in Daily Scrums to find solutions quickly and keep work flowing."
  },
  {
    "id": "agile_2575",
    "question": "What is a key benefit of having a stable Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "It reduces team accountability", "isCorrect": false },
      { "id": "option_2", "text": "It limits knowledge-sharing", "isCorrect": false },
      { "id": "option_3", "text": "It enhances productivity and team cohesion", "isCorrect": true },
      { "id": "option_4", "text": "It prevents changes to team composition", "isCorrect": false }
    ],
    "hint": "Stable teams work better together over time.",
    "answerDescription": "A stable Agile team builds trust, improves communication, and increases productivity over multiple sprints."
  },
  {
    "id": "agile_2576",
    "question": "Why is frequent feedback important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It allows teams to delay project reviews", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for user testing", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams make continuous improvements", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the importance of Sprint Planning", "isCorrect": false }
    ],
    "hint": "Feedback drives incremental improvements in Agile.",
    "answerDescription": "Regular feedback from stakeholders helps Agile teams refine their work and continuously improve their product."
  },
  {
    "id": "agile_2577",
    "question": "How can an Agile Development Team ensure high software quality?",
    "options": [
      { "id": "option_1", "text": "By delaying testing until the final Sprint", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding frequent code changes", "isCorrect": false },
      { "id": "option_3", "text": "By using automated testing and continuous integration", "isCorrect": true },
      { "id": "option_4", "text": "By relying solely on manual reviews", "isCorrect": false }
    ],
    "hint": "Automation helps Agile teams maintain software quality.",
    "answerDescription": "Agile teams use automated testing and continuous integration to catch defects early and maintain high-quality software."
  },
  {
    "id": "agile_2578",
    "question": "What is the primary purpose of Sprint Planning in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "To review the completed work from the previous Sprint", "isCorrect": false },
      { "id": "option_2", "text": "To set long-term goals for the entire project", "isCorrect": false },
      { "id": "option_3", "text": "To define what can be accomplished in the next Sprint", "isCorrect": true },
      { "id": "option_4", "text": "To assign work to individual team members", "isCorrect": false }
    ],
    "hint": "Sprint Planning sets the direction for the upcoming Sprint.",
    "answerDescription": "Sprint Planning ensures that Agile teams agree on the scope and priorities for the next Sprint."
  },
  {
    "id": "agile_2579",
    "question": "How the Agile Development Team gets benefits from pair programming? ",
      "options": [
      { "id": "option_1", "text": "By reduces team collaboration", "isCorrect": false },
      { "id": "option_2", "text": "By increases the chances of coding errors", "isCorrect": false },
      { "id": "option_3", "text": "By enhances code quality and knowledge-sharing", "isCorrect": true },
      { "id": "option_4", "text": "By slows down the development process", "isCorrect": false }
    ],
    "hint": "Pair programming improves both quality and learning.",
    "answerDescription": "Pair programming helps Agile teams catch errors early, share knowledge, and improve overall code quality."
  },
  {
    "id": "agile_2580",
    "question": "What is a key characteristic of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "They follow a strict hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "They depend on external approvals for all decisions", "isCorrect": false },
      { "id": "option_3", "text": "They avoid close collaboration", "isCorrect": false },
      { "id": "option_4", "text": "They are self-organizing and cross-functional", "isCorrect": true }
    ],
    "hint": "Agile teams have autonomy and diverse skills.",
    "answerDescription": "Agile Development Teams are self-organizing and cross-functional, meaning they manage their own work and have a range of skills to complete tasks."
  },
  {
    "id": "agile_2581",
    "question": "Why is cross-functionality important in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It ensures tasks are assigned based on job titles", "isCorrect": false },
      { "id": "option_2", "text": "It limits team members to specialized roles", "isCorrect": false },
      { "id": "option_3", "text": "It prevents team members from learning new skills", "isCorrect": false },
      { "id": "option_4", "text": "It allows teams to deliver end-to-end solutions", "isCorrect": true }
    ],
    "hint": "A cross-functional team can complete work independently.",
    "answerDescription": "Cross-functional teams have all the necessary skills to deliver a complete product increment without dependencies on external teams."
  },
  {
    "id": "agile_2582",
    "question": "What is the role of a Development Team in Agile?",
    "options": [
      { "id": "option_1", "text": "To follow only high-level directions from the Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "To work independently without collaboration", "isCorrect": false },
      { "id": "option_3", "text": "To escalate all decisions to management", "isCorrect": false },
      { "id": "option_4", "text": "To deliver potentially shippable increments", "isCorrect": true }
    ],
    "hint": "A Development Team's focus is on delivering value iteratively.",
    "answerDescription": "An Agile Development Team is responsible for delivering potentially shippable increments of the product at the end of each Sprint."
  },
  {
    "id": "agile_2583",
    "question": "How can Agile Development Teams prevent burnout?",
    "options": [
      { "id": "option_1", "text": "By working long hours to complete sprints", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding team retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "By ignoring individual workloads", "isCorrect": false },
      { "id": "option_4", "text": "By balancing workloads and promoting sustainable pacing", "isCorrect": true }
    ],
    "hint": "Agile promotes sustainable development.",
    "answerDescription": "Burnout is avoided by maintaining a steady pace, distributing workload evenly, and encouraging breaks."
  },
  {
    "id": "agile_2584",
    "question": "What best describes the interaction within an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Team members work in isolation to complete their tasks", "isCorrect": false },
      { "id": "option_2", "text": "Communication is primarily handled by the Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Only senior members contribute to decisions", "isCorrect": false },
      { "id": "option_4", "text": "Frequent collaboration and shared ownership", "isCorrect": true }
    ],
    "hint": "Agile teams emphasize open communication and teamwork.",
    "answerDescription": "Agile Development Teams work closely together, share knowledge, and collaborate frequently to achieve their goals."
  },
  {
    "id": "agile_2585",
    "question": "What is the expected outcome of a Sprint?",
    "options": [
      { "id": "option_1", "text": "A detailed project report", "isCorrect": false },
      { "id": "option_2", "text": "A list of unfinished tasks", "isCorrect": false },
      { "id": "option_3", "text": "A fully documented plan for the next Sprint", "isCorrect": false },
      { "id": "option_4", "text": "A potentially shippable product increment", "isCorrect": true }
    ],
    "hint": "The goal of a Sprint is to produce something valuable.",
    "answerDescription": "Each Sprint should result in a usable, potentially shippable product increment that adds value to the customer."
  },
  {
    "id": "agile_2586",
    "question": "How does an Agile Development Team foster continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By maintaining the same process without review", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback to prevent conflicts", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing speed over quality", "isCorrect": false },
      { "id": "option_4", "text": "By reflecting and making incremental process improvements", "isCorrect": true }
    ],
    "hint": "Regular reflection helps teams improve over time.",
    "answerDescription": "Agile teams conduct retrospectives to identify ways to improve and refine their processes in each Sprint."
  },
  {
    "id": "agile_2587",
    "question": "What is a fundamental principle of Agile teamwork?",
    "options": [
      { "id": "option_1", "text": "Following fixed roles with minimal collaboration", "isCorrect": false },
      { "id": "option_2", "text": "Focusing solely on individual performance", "isCorrect": false },
      { "id": "option_3", "text": "Relying on extensive documentation instead of communication", "isCorrect": false },
      { "id": "option_4", "text": "Delivering value through collaboration and feedback", "isCorrect": true }
    ],
    "hint": "Agile values teamwork and interaction over rigid structures.",
    "answerDescription": "Collaboration and feedback are essential for Agile teams to ensure high-quality product delivery."
  },
  {
    "id": "agile_2588",
    "question": "Why is accountability important in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It ensures that only one person is responsible for the project", "isCorrect": false },
      { "id": "option_2", "text": "It allows team members to avoid responsibility for issues", "isCorrect": false },
      { "id": "option_3", "text": "It limits collaboration by assigning strict ownership", "isCorrect": false },
      { "id": "option_4", "text": "It encourages ownership and shared responsibility", "isCorrect": true }
    ],
    "hint": "Agile teams thrive on shared ownership and trust.",
    "answerDescription": "Accountability in Agile ensures that all team members take responsibility for delivering value and maintaining quality."
  },
  {
    "id": "agile_2589",
    "question": "How does an Agile Development Team ensure transparency?",
    "options": [
      { "id": "option_1", "text": "By keeping decisions limited to leadership", "isCorrect": false },
      { "id": "option_2", "text": "By restricting access to project updates", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining open communication and visibility", "isCorrect": true }
    ],
    "hint": "Agile promotes openness at all levels.",
    "answerDescription": "Agile teams ensure transparency through open discussions, regular updates, and continuous stakeholder involvement."
  }, {
    "id": "agile_2590",
    "question": "What is the primary responsibility of an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Delivering a potentially shippable product increment", "isCorrect": true },
      { "id": "option_2", "text": "Creating extensive documentation before development starts", "isCorrect": false },
      { "id": "option_3", "text": "Waiting for instructions from management before making decisions", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on individual contributions instead of teamwork", "isCorrect": false }
    ],
    "hint": "An Agile team's goal is to create working software in each iteration.",
    "answerDescription": "Agile Development Teams are responsible for delivering a usable product increment at the end of each Sprint."
  },
  {
    "id": "agile_2591",
    "question": "Why do Agile Development Teams prefer working in iterations?",
    "options": [
      { "id": "option_1", "text": "It allows for continuous feedback and adaptation", "isCorrect": true },
      { "id": "option_2", "text": "It ensures all planning is done upfront", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for customer involvement", "isCorrect": false },
      { "id": "option_4", "text": "It prevents changes from being made mid-project", "isCorrect": false }
    ],
    "hint": "Iterations help teams improve and adjust based on feedback.",
    "answerDescription": "By working in iterations, Agile teams can quickly respond to feedback, ensuring continuous improvement and customer satisfaction."
  },
  {
    "id": "agile_2592",
    "question": "What is a key benefit of having a self-organizing Development Team?",
    "options": [
      { "id": "option_1", "text": "It increases team accountability and efficiency", "isCorrect": true },
      { "id": "option_2", "text": "It ensures strict control by management", "isCorrect": false },
      { "id": "option_3", "text": "It minimizes collaboration between team members", "isCorrect": false },
      { "id": "option_4", "text": "It relies on a single person to make all decisions", "isCorrect": false }
    ],
    "hint": "Self-organizing teams take ownership of their work.",
    "answerDescription": "Self-organizing teams are more accountable and efficient because they make decisions collectively and adapt quickly."
  },
  {
    "id": "agile_2593",
    "question": "How does an Agile Development Team handle dependencies on other teams?",
    "options": [
      { "id": "option_1", "text": "By proactively collaborating and reducing bottlenecks", "isCorrect": true },
      { "id": "option_2", "text": "By waiting for external teams to complete their tasks first", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding communication with other teams", "isCorrect": false },
      { "id": "option_4", "text": "By escalating issues to management instead of resolving them", "isCorrect": false }
    ],
    "hint": "Agile teams aim to reduce dependencies through communication and planning.",
    "answerDescription": "Agile teams work closely with other teams, plan dependencies in advance, and communicate effectively to minimize delays."
  },
  {
    "id": "agile_2594",
    "question": "What makes an Agile Development Team effective?",
    "options": [
      { "id": "option_1", "text": "Collaboration, adaptability, and continuous improvement", "isCorrect": true },
      { "id": "option_2", "text": "A rigid hierarchical structure", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding customer feedback until the final product is ready", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on individual tasks rather than team goals", "isCorrect": false }
    ],
    "hint": "Agile teams thrive on teamwork and adaptability.",
    "answerDescription": "Effective Agile teams collaborate, continuously improve, and adapt based on feedback to deliver high-quality products."
  },
  {
    "id": "agile_2595",
    "question": "What is the best way for an Agile Development Team to ensure quality?",
    "options": [
      { "id": "option_1", "text": "By integrating testing into each iteration", "isCorrect": true },
      { "id": "option_2", "text": "By testing only at the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "By assigning testing to a separate department", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing testing to save time", "isCorrect": false }
    ],
    "hint": "Agile teams ensure quality through continuous testing.",
    "answerDescription": "Testing in Agile is an ongoing process, integrated into each Sprint to maintain quality and catch defects early."
  },
  {
    "id": "agile_2596",
    "question": "How does an Agile Development Team measure success?",
    "options": [
      { "id": "option_1", "text": "By delivering working software that meets customer needs", "isCorrect": true },
      { "id": "option_2", "text": "By completing all assigned tasks, regardless of value", "isCorrect": false },
      { "id": "option_3", "text": "By following the plan without deviation", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding interactions with stakeholders", "isCorrect": false }
    ],
    "hint": "Success in Agile is based on value delivery.",
    "answerDescription": "The primary measure of success in Agile is working software that provides value to customers and stakeholders."
  },
  {
    "id": "agile_2587",
    "question": "What is the primary advantage of a self-organizing Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It allows the team to take ownership and make decisions independently", "isCorrect": true },
      { "id": "option_2", "text": "It removes the need for collaboration within the team", "isCorrect": false },
      { "id": "option_3", "text": "It ensures that management dictates all work priorities", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for a Scrum Master", "isCorrect": false }
    ],
    "hint": "Self-organizing teams take responsibility for their work.",
    "answerDescription": "Agile teams thrive by making independent decisions, leading to higher engagement and accountability."
  },
  {
    "id": "agile_2598",
    "question": "Why do Agile Development Teams conduct retrospectives?",
    "options": [
      { "id": "option_1", "text": "To reflect on the Sprint and improve processes", "isCorrect": true },
      { "id": "option_2", "text": "To assign blame for issues", "isCorrect": false },
      { "id": "option_3", "text": "To finalize the project plan for the next release", "isCorrect": false },
      { "id": "option_4", "text": "To document everything in detail before moving forward", "isCorrect": false }
    ],
    "hint": "Retrospectives help teams learn and improve continuously.",
    "answerDescription": "Agile retrospectives allow teams to reflect on what worked well and what can be improved for future Sprints."
  },
  {
    "id": "agile_2599",
    "question": "What is the best way for an Agile Development Team to maintain focus during a Sprint?",
    "options": [
      { "id": "option_1", "text": "By limiting work-in-progress and staying aligned with the Sprint Goal", "isCorrect": true },
      { "id": "option_2", "text": "By working on as many tasks as possible simultaneously", "isCorrect": false },
      { "id": "option_3", "text": "By continuously switching priorities throughout the Sprint", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring the Sprint Backlog and working on ad-hoc tasks", "isCorrect": false }
    ],
    "hint": "Keeping work limited helps teams stay productive.",
    "answerDescription": "By focusing on the Sprint Goal and limiting work-in-progress, Agile teams maintain efficiency and deliver value consistently."
  },  {
    "id": "agile_2600",
    "question": "What is the main advantage of cross-functional Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "They focus only on coding tasks", "isCorrect": false },
      { "id": "option_2", "text": "They have all the necessary skills to complete a feature independently", "isCorrect": true },
      { "id": "option_3", "text": "They rely on external teams for most tasks", "isCorrect": false },
      { "id": "option_4", "text": "They follow a strict hierarchical structure", "isCorrect": false }
    ],
    "hint": "Agile teams should be self-sufficient in delivering working software.",
    "answerDescription": "Cross-functional teams have developers, testers, designers, and other roles needed to complete work independently."
  },
  {
    "id": "agile_2601",
    "question": "How do Agile Development Teams ensure continuous improvement?",
    "options": [
      { "id": "option_1", "text": "By following a fixed process without change", "isCorrect": false },
      { "id": "option_2", "text": "By regularly holding retrospectives and adapting based on feedback", "isCorrect": true },
      { "id": "option_3", "text": "By focusing only on delivering code", "isCorrect": false },
      { "id": "option_4", "text": "By making changes only when issues arise", "isCorrect": false }
    ],
    "hint": "Regular team reflection helps Agile teams improve.",
    "answerDescription": "Agile teams conduct retrospectives to analyze what went well and what needs improvement, ensuring continuous learning."
  },
  {
    "id": "agile_2602",
    "question": "What role does collaboration play in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It slows down development by increasing meetings", "isCorrect": false },
      { "id": "option_2", "text": "It enhances problem-solving and innovation", "isCorrect": true },
      { "id": "option_3", "text": "It is only needed when issues arise", "isCorrect": false },
      { "id": "option_4", "text": "It is optional for Agile teams", "isCorrect": false }
    ],
    "hint": "Agile thrives on teamwork and shared knowledge.",
    "answerDescription": "Collaboration improves decision-making, speeds up problem resolution, and encourages knowledge sharing within teams."
  },
  {
    "id": "agile_2603",
    "question": "Why do Agile teams aim for sustainable development?",
    "options": [
      { "id": "option_1", "text": "To complete projects as fast as possible, regardless of quality", "isCorrect": false },
      { "id": "option_2", "text": "To maintain a steady pace without burnout", "isCorrect": true },
      { "id": "option_3", "text": "To work long hours to meet deadlines", "isCorrect": false },
      { "id": "option_4", "text": "To avoid adapting to changes", "isCorrect": false }
    ],
    "hint": "Sustainable teams avoid excessive overtime and burnout.",
    "answerDescription": "Agile promotes sustainable development to maintain team productivity and long-term project success."
  },
  {
    "id": "agile_2604",
    "question": "What is a key characteristic of a high-performing Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "Following instructions without questioning", "isCorrect": false },
      { "id": "option_2", "text": "Self-organization and proactive problem-solving", "isCorrect": true },
      { "id": "option_3", "text": "Working in isolation from other team members", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on technical skills", "isCorrect": false }
    ],
    "hint": "High-performing Agile teams take ownership of their work.",
    "answerDescription": "A high-performing Agile team is self-organizing, communicates effectively, and proactively finds solutions to challenges."
  },
  {
    "id": "agile_2605",
    "question": "How should an Agile Development Team handle changing requirements?",
    "options": [
      { "id": "option_1", "text": "By rejecting changes to stay on schedule", "isCorrect": false },
      { "id": "option_2", "text": "By embracing changes and adapting iteratively", "isCorrect": true },
      { "id": "option_3", "text": "By freezing requirements after planning", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding direct communication with stakeholders", "isCorrect": false }
    ],
    "hint": "Agile values flexibility and responsiveness to change.",
    "answerDescription": "Agile teams adapt to changing requirements through iterative development and continuous feedback."
  },
  {
    "id": "agile_2606",
    "question": "Why is transparency important for Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "It allows managers to micromanage the team", "isCorrect": false },
      { "id": "option_2", "text": "It helps build trust and enables better decision-making", "isCorrect": true },
      { "id": "option_3", "text": "It forces the team to share all details publicly", "isCorrect": false },
      { "id": "option_4", "text": "It ensures that only leadership knows the project status", "isCorrect": false }
    ],
    "hint": "Transparency promotes trust and collaboration in Agile.",
    "answerDescription": "Transparency in Agile fosters collaboration, accountability, and informed decision-making within teams."
  },
  {
    "id": "agile_2607",
    "question": "What is the benefit of frequent releases in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows teams to complete projects faster without feedback", "isCorrect": false },
      { "id": "option_2", "text": "It provides early value to customers and gathers feedback", "isCorrect": true },
      { "id": "option_3", "text": "It ensures that changes can only be made at the end of the project", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for testing", "isCorrect": false }
    ],
    "hint": "Agile focuses on delivering value early and often.",
    "answerDescription": "Frequent releases enable customer feedback, allowing Agile teams to refine and improve products iteratively."
  },
  {
    "id": "agile_2608",
    "question": "How does an Agile Development Team ensure stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder involvement until the final release", "isCorrect": false },
      { "id": "option_2", "text": "By involving stakeholders in reviews and feedback sessions", "isCorrect": true },
      { "id": "option_3", "text": "By focusing only on internal team decisions", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring customer input until after development is complete", "isCorrect": false }
    ],
    "hint": "Regular feedback from stakeholders improves Agile projects.",
    "answerDescription": "Stakeholder engagement is critical in Agile, and teams achieve this through regular reviews and collaboration."
  },
  {
    "id": "agile_2609",
    "question": "What should an Agile Development Team do when facing an unexpected challenge?",
    "options": [
      { "id": "option_1", "text": "Wait for external guidance before acting", "isCorrect": false },
      { "id": "option_2", "text": "Collaborate and find a solution through teamwork", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the issue and focus on existing tasks", "isCorrect": false },
      { "id": "option_4", "text": "Escalate the problem without attempting a solution", "isCorrect": false }
    ],
    "hint": "Agile teams handle challenges through collaboration.",
    "answerDescription": "Agile teams tackle challenges by working together, experimenting, and adapting solutions based on feedback."
  },
  {
    "id": "agile_2610",
    "question": "What is the purpose of sprint retrospectives in Agile?",
    "options": [
      { "id": "option_1", "text": "To reflect on what went well and what can be improved", "isCorrect": true },
      { "id": "option_2", "text": "To assign blame for sprint failures", "isCorrect": false },
      { "id": "option_3", "text": "To extend the sprint duration when tasks are incomplete", "isCorrect": false },
      { "id": "option_4", "text": "To review only individual performances", "isCorrect": false }
    ],
    "hint": "Retrospectives focus on continuous team improvement.",
    "answerDescription": "Sprint retrospectives help Agile teams identify successes and areas for improvement to enhance future sprints."
  },
  {
    "id": "agile_2611",
    "question": "How does an Agile Development Team handle conflicting opinions?",
    "options": [
      { "id": "option_1", "text": "By allowing the manager to make the final decision", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring disagreements and proceeding as planned", "isCorrect": false },
      { "id": "option_3", "text": "By fostering open discussions and reaching consensus", "isCorrect": true },
      { "id": "option_4", "text": "By following the opinion of the most senior team member", "isCorrect": false }
    ],
    "hint": "Agile values collaboration and collective decision-making.",
    "answerDescription": "Agile teams encourage open communication and teamwork to resolve conflicts effectively."
  },
  {
    "id": "agile_2612",
    "question": "What is the advantage of limiting work in progress (WIP) for Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "It reduces collaboration between team members", "isCorrect": false },
      { "id": "option_2", "text": "It increases task switching and multitasking", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams focus and improve efficiency", "isCorrect": true },
      { "id": "option_4", "text": "It slows down development significantly", "isCorrect": false }
    ],
    "hint": "Reducing WIP minimizes multitasking and improves workflow.",
    "answerDescription": "By limiting work in progress, Agile teams can focus on completing tasks efficiently, reducing bottlenecks."
  },
  {
    "id": "agile_2613",
    "question": "Why is continuous feedback important for an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It slows down development by requiring more meetings", "isCorrect": false },
      { "id": "option_2", "text": "It ensures only leadership has visibility into progress", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to adjust and improve iteratively", "isCorrect": true },
      { "id": "option_4", "text": "It is only useful at the end of a project", "isCorrect": false }
    ],
    "hint": "Feedback loops help teams continuously improve their work.",
    "answerDescription": "Continuous feedback enables Agile teams to refine their work and respond quickly to changes."
  },
  {
    "id": "agile_2614",
    "question": "How does an Agile Development Team ensure high product quality?",
    "options": [
      { "id": "option_1", "text": "By using test-driven development and continuous testing", "isCorrect": true },
      { "id": "option_2", "text": "By delaying testing until the final stages", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on speed rather than quality", "isCorrect": false },
      { "id": "option_4", "text": "By relying on manual testing alone", "isCorrect": false }
    ],
    "hint": "Agile promotes early and frequent testing.",
    "answerDescription": "By using TDD and continuous testing, Agile teams prevent defects and maintain high-quality software."
  },
  {
    "id": "agile_2615",
    "question": "What should an Agile Development Team do when a sprint goal becomes unachievable?",
    "options": [
      { "id": "option_1", "text": "Continue working without making any changes", "isCorrect": false },
      { "id": "option_2", "text": "Immediately abandon the sprint and start over", "isCorrect": false },
      { "id": "option_3", "text": "Discuss challenges with the Product Owner and adjust the plan", "isCorrect": true },
      { "id": "option_4", "text": "Ignore the issue and work on unrelated tasks", "isCorrect": false }
    ],
    "hint": "Agile teams adapt to challenges through collaboration.",
    "answerDescription": "When a sprint goal becomes unrealistic, Agile teams collaborate with stakeholders to adjust the plan effectively."
  },
  {
    "id": "agile_2616",
    "question": "Why is technical debt a concern for Agile Development Teams?",
    "options": [
      { "id": "option_1", "text": "It improves development speed in the long run", "isCorrect": false },
      { "id": "option_2", "text": "It only affects non-Agile teams", "isCorrect": false },
      { "id": "option_3", "text": "It can slow down future development and reduce quality", "isCorrect": true },
      { "id": "option_4", "text": "It is not a priority in Agile methodologies", "isCorrect": false }
    ],
    "hint": "Technical debt impacts future maintainability and agility.",
    "answerDescription": "Excessive technical debt makes it harder to add new features and increases maintenance effort over time."
  },
  {
    "id": "agile_2617",
    "question": "What is a characteristic of a self-organizing Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It requires a manager to assign tasks", "isCorrect": false },
      { "id": "option_2", "text": "It waits for direction before taking action", "isCorrect": false },
      { "id": "option_3", "text": "It takes ownership of tasks and makes decisions collectively", "isCorrect": true },
      { "id": "option_4", "text": "It follows a strict hierarchy", "isCorrect": false }
    ],
    "hint": "Agile teams are empowered to make decisions autonomously.",
    "answerDescription": "Self-organizing teams plan their work, take ownership, and adapt without needing constant external direction."
  },
  {
    "id": "agile_2618",
    "question": "How does an Agile Development Team ensure code quality?",
    "options": [
      { "id": "option_1", "text": "By focusing only on speed and delivery", "isCorrect": false },
      { "id": "option_2", "text": "By skipping reviews to save time", "isCorrect": false },
      { "id": "option_3", "text": "By implementing automated testing and peer reviews", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding technical discussions", "isCorrect": false }
    ],
    "hint": "Quality in Agile is maintained through automated and manual reviews.",
    "answerDescription": "Agile teams use test automation, code reviews, and continuous integration to ensure high-quality code."
  },
  {
    "id": "agile_2619",
    "question": "What is the impact of having a psychologically safe environment in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "It discourages open discussions", "isCorrect": false },
      { "id": "option_2", "text": "It leads to teams avoiding risks", "isCorrect": false },
      { "id": "option_3", "text": "It fosters innovation and team collaboration", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the need for feedback", "isCorrect": false }
    ],
    "hint": "Psychological safety encourages open communication.",
    "answerDescription": "Teams that feel safe to express ideas and take risks innovate better and work more effectively together."
  },
  {
    "id": "agile_2620",
    "question": "What is the main benefit of cross-functional teams in Agile development?",
    "options": [
      { "id": "option_1", "text": "They focus only on a single expertise per team", "isCorrect": false },
      { "id": "option_2", "text": "They depend on external specialists for most tasks", "isCorrect": false },
      { "id": "option_3", "text": "They work in isolation from other teams", "isCorrect": false },
      { "id": "option_4", "text": "They can independently complete work without dependencies", "isCorrect": true }
    ],
    "hint": "Agile teams aim for self-sufficiency in delivering value.",
    "answerDescription": "Cross-functional teams reduce bottlenecks and improve efficiency by handling multiple aspects of development within the team."
  },
  {
    "id": "agile_2621",
    "question": "What role does a Scrum Master play in an Agile Development Team?",
    "options": [
      { "id": "option_1", "text": "They facilitate Agile processes and remove obstacles for the team", "isCorrect": true },
      { "id": "option_2", "text": "They dictate how team members should work", "isCorrect": false },
      { "id": "option_3", "text": "They directly assign tasks to individuals", "isCorrect": false },
      { "id": "option_4", "text": "They control the product backlog", "isCorrect": false }
    ],
    "hint": "Scrum Masters enable team efficiency and Agile adherence.",
    "answerDescription": "Scrum Masters help Agile teams stay productive by guiding them in Scrum best practices and removing blockers."
  },
  {
    "id": "agile_2622",
    "question": "Why should Agile Development Teams conduct daily stand-ups?",
    "options": [
      { "id": "option_1", "text": "To have long discussions about technical challenges", "isCorrect": false },
      { "id": "option_2", "text": "To track individual performance closely", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the Product Owner controls all decisions", "isCorrect": false },
      { "id": "option_4", "text": "To align the team and identify roadblocks early", "isCorrect": true }
    ],
    "hint": "Stand-ups are short, focused, and improve team coordination.",
    "answerDescription": "Daily stand-ups help teams stay aligned, communicate blockers, and adjust priorities effectively."
  },
  {
    "id": "agile_2623",
    "question": "Why is stakeholder engagement important in Agile projects?",
    "options": [
      { "id": "option_1", "text": "It helps avoid any feedback until the project is completed", "isCorrect": false },
      { "id": "option_2", "text": "It ensures continuous collaboration and alignment with business goals", "isCorrect": true },
      { "id": "option_3", "text": "It allows stakeholders to dictate all project decisions", "isCorrect": false },
      { "id": "option_4", "text": "It minimizes the need for iterative development", "isCorrect": false }
    ],
    "hint": "Active stakeholder involvement leads to better project alignment.",
    "answerDescription": "Engaging stakeholders throughout the Agile process ensures continuous feedback and better business alignment."
  },
  {
    "id": "agile_2624",
    "question": "Which of the following is a key responsibility of stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Developing and testing the product", "isCorrect": false },
      { "id": "option_2", "text": "Providing feedback and clarifying requirements", "isCorrect": true },
      { "id": "option_3", "text": "Managing the Agile teamâ€™s daily tasks", "isCorrect": false },
      { "id": "option_4", "text": "Defining technical implementation details", "isCorrect": false }
    ],
    "hint": "Stakeholders play a role in shaping the product direction.",
    "answerDescription": "Stakeholders provide valuable input on requirements and feedback to ensure the product meets business needs."
  },
  {
    "id": "agile_2625",
    "question": "How does Agile ensure continuous stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "By limiting their involvement to project kickoff meetings", "isCorrect": false },
      { "id": "option_2", "text": "By involving them in sprint reviews and feedback sessions", "isCorrect": true },
      { "id": "option_3", "text": "By allowing stakeholders to make all sprint planning decisions", "isCorrect": false },
      { "id": "option_4", "text": "By requiring them to manage the development team directly", "isCorrect": false }
    ],
    "hint": "Agile encourages ongoing collaboration with stakeholders.",
    "answerDescription": "Regular sprint reviews and feedback loops keep stakeholders engaged throughout the project."
  },
  {
    "id": "agile_2626",
    "question": "What is the primary role of stakeholders in Agile backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To prioritize and refine backlog items based on business value", "isCorrect": true },
      { "id": "option_2", "text": "To write and estimate user stories", "isCorrect": false },
      { "id": "option_3", "text": "To manage team velocity and sprint capacity", "isCorrect": false },
      { "id": "option_4", "text": "To approve every technical change in the system", "isCorrect": false }
    ],
    "hint": "Stakeholders influence the prioritization of work.",
    "answerDescription": "Stakeholders help prioritize backlog items based on business needs and value delivery."
  },
  {
    "id": "agile_2627",
    "question": "How can stakeholders best support an Agile development team?",
    "options": [
      { "id": "option_1", "text": "By defining all tasks for the team", "isCorrect": false },
      { "id": "option_2", "text": "By frequently changing project goals", "isCorrect": false },
      { "id": "option_3", "text": "By providing clear feedback and timely decisions", "isCorrect": true },
      { "id": "option_4", "text": "By micromanaging the teamâ€™s workflow", "isCorrect": false }
    ],
    "hint": "Stakeholders should offer valuable input without disrupting workflows.",
    "answerDescription": "Timely feedback and clear decision-making help the Agile team stay aligned with business objectives."
  },
  {
    "id": "agile_2628",
    "question": "Why is transparency important for stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows stakeholders to take control of development", "isCorrect": false },
      { "id": "option_2", "text": "It builds trust and enables informed decision-making", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for product backlog reviews", "isCorrect": false }
    ],
    "hint": "Transparency fosters trust and collaboration.",
    "answerDescription": "Sharing progress and challenges openly helps stakeholders make informed decisions and maintain trust."
  },
  {
    "id": "agile_2629",
    "question": "What is the main benefit of stakeholder feedback in Agile?",
    "options": [
      { "id": "option_1", "text": "It speeds up development by removing testing phases", "isCorrect": false },
      { "id": "option_2", "text": "It helps refine requirements and improve product quality", "isCorrect": true },
      { "id": "option_3", "text": "It replaces the need for user stories", "isCorrect": false },
      { "id": "option_4", "text": "It allows stakeholders to control development timelines", "isCorrect": false }
    ],
    "hint": "Frequent feedback leads to better alignment with user needs.",
    "answerDescription": "Stakeholder feedback ensures the product evolves in alignment with business and customer expectations."
  },
  {
    "id": "agile_2630",
    "question": "What is the best way to keep stakeholders engaged in Agile?",
    "options": [
      { "id": "option_1", "text": "By involving them in every daily stand-up", "isCorrect": false },
      { "id": "option_2", "text": "By keeping them informed through sprint reviews and demos", "isCorrect": true },
      { "id": "option_3", "text": "By reducing transparency on project progress", "isCorrect": false },
      { "id": "option_4", "text": "By limiting their role to initial project planning", "isCorrect": false }
    ],
    "hint": "Regular updates keep stakeholders involved.",
    "answerDescription": "Sprint reviews and product demos help stakeholders stay informed and provide valuable input."
  },
  {
    "id": "agile_2631",
    "question": "Which Agile practice helps maintain a strong relationship with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint reviews", "isCorrect": true },
      { "id": "option_4", "text": "Pair programming", "isCorrect": false }
    ],
    "hint": "This event provides stakeholders with an overview of progress.",
    "answerDescription": "Sprint reviews allow stakeholders to see progress and give feedback, ensuring alignment with goals."
  },
  {
    "id": "agile_2632",
    "question": "What should be the main focus of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Ensuring the team adheres to a strict plan", "isCorrect": false },
      { "id": "option_2", "text": "Maximizing product value and business impact", "isCorrect": true },
      { "id": "option_3", "text": "Approving every technical decision", "isCorrect": false },
      { "id": "option_4", "text": "Monitoring team productivity daily", "isCorrect": false }
    ],
    "hint": "Stakeholders should focus on value delivery.",
    "answerDescription": "Stakeholders help ensure that the Agile team delivers maximum value aligned with business priorities."
  }, 
  {
    "id": "agile_2633",
    "question": "Why is stakeholder alignment important in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the team works towards shared goals", "isCorrect": true },
      { "id": "option_3", "text": "To avoid involving stakeholders in product decisions", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for backlog grooming", "isCorrect": false }
    ],
    "hint": "Alignment ensures consistency in priorities and expectations.",
    "answerDescription": "Stakeholder alignment helps Agile teams focus on delivering value in a unified direction."
  },
  {
    "id": "agile_2634",
    "question": "What is a stakeholder's primary role in Agile development?",
    "options": [
      { "id": "option_1", "text": "To assign daily tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To provide feedback and validate progress", "isCorrect": true },
      { "id": "option_3", "text": "To approve all technical decisions", "isCorrect": false },
      { "id": "option_4", "text": "To finalize requirements before development starts", "isCorrect": false }
    ],
    "hint": "Stakeholders influence project direction through feedback.",
    "answerDescription": "Providing feedback ensures that Agile teams remain on track to deliver value aligned with business needs."
  },
  {
    "id": "agile_2635",
    "question": "How does stakeholder feedback improve Agile project outcomes?",
    "options": [
      { "id": "option_1", "text": "By reducing team autonomy", "isCorrect": false },
      { "id": "option_2", "text": "By refining priorities and enhancing product value", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing rigid deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By preventing iteration and flexibility", "isCorrect": false }
    ],
    "hint": "Continuous feedback helps teams adapt to business needs.",
    "answerDescription": "Regular stakeholder feedback allows Agile teams to make necessary adjustments to maximize product success."
  },
  {
    "id": "agile_2636",
    "question": "Which activity helps stakeholders stay informed about Agile project progress?",
    "options": [
      { "id": "option_1", "text": "Restricting stakeholder involvement to planning meetings", "isCorrect": false },
      { "id": "option_2", "text": "Participating in sprint reviews and demos", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding backlog discussions", "isCorrect": false },
      { "id": "option_4", "text": "Finalizing all project details at the start", "isCorrect": false }
    ],
    "hint": "Stakeholders benefit from visibility into incremental progress.",
    "answerDescription": "Sprint reviews and demos offer transparency, allowing stakeholders to provide timely feedback."
  },
  {
    "id": "agile_2637",
    "question": "What is a challenge when managing stakeholder expectations in Agile?",
    "options": [
      { "id": "option_1", "text": "Stakeholders always understand Agile processes", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders may have conflicting priorities", "isCorrect": true },
      { "id": "option_3", "text": "Agile teams do not require stakeholder input", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders do not influence project direction", "isCorrect": false }
    ],
    "hint": "Different stakeholders may prioritize different features.",
    "answerDescription": "Managing stakeholder expectations requires balancing diverse needs while maintaining Agile flexibility."
  },
  {
    "id": "agile_2638",
    "question": "How can Agile teams keep stakeholders engaged throughout the project?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder interaction to project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "By fostering ongoing collaboration and communication", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding transparency in development progress", "isCorrect": false },
      { "id": "option_4", "text": "By finalizing all requirements upfront", "isCorrect": false }
    ],
    "hint": "Consistent collaboration strengthens stakeholder relationships.",
    "answerDescription": "Engaged stakeholders contribute valuable insights, helping Agile teams deliver better results."
  },
  {
    "id": "agile_2639",
    "question": "What is the benefit of involving stakeholders in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "It allows teams to ignore changing requirements", "isCorrect": false },
      { "id": "option_2", "text": "It helps prioritize work based on business needs", "isCorrect": true },
      { "id": "option_3", "text": "It removes flexibility from Agile processes", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for iteration", "isCorrect": false }
    ],
    "hint": "Stakeholders provide valuable insights into business priorities.",
    "answerDescription": "Regular backlog refinement with stakeholders ensures that the team is always working on the highest-value tasks."
  },
  {
    "id": "agile_2640",
    "question": "Why should Agile teams educate stakeholders on Agile principles?",
    "options": [
      { "id": "option_1", "text": "To prevent stakeholder involvement in decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To align expectations with Agile ways of working", "isCorrect": true },
      { "id": "option_3", "text": "To make stakeholders responsible for technical solutions", "isCorrect": false },
      { "id": "option_4", "text": "To remove flexibility from the project", "isCorrect": false }
    ],
    "hint": "Understanding Agile helps stakeholders collaborate effectively.",
    "answerDescription": "Educating stakeholders fosters smoother collaboration and better alignment with Agile values."
  },
  {
    "id": "agile_2641",
    "question": "What is a key factor in ensuring productive stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "Minimizing communication between stakeholders and the team", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging open dialogue and shared goals", "isCorrect": true },
      { "id": "option_3", "text": "Making decisions without stakeholder input", "isCorrect": false },
      { "id": "option_4", "text": "Setting fixed, unchangeable requirements", "isCorrect": false }
    ],
    "hint": "Collaboration fosters shared success in Agile projects.",
    "answerDescription": "Effective communication and goal alignment lead to better stakeholder relationships and project success."
  },
  {
    "id": "agile_2642",
    "question": "What should Agile teams do when stakeholders request urgent changes?",
    "options": [
      { "id": "option_1", "text": "Reject all changes to maintain sprint focus", "isCorrect": false },
      { "id": "option_2", "text": "Assess and integrate the changes through backlog updates", "isCorrect": true },
      { "id": "option_3", "text": "Immediately disrupt the sprint to implement changes", "isCorrect": false },
      { "id": "option_4", "text": "Ignore stakeholder input during development", "isCorrect": false }
    ],
    "hint": "Agile teams embrace change while maintaining focus.",
    "answerDescription": "Using backlog updates allows teams to accommodate necessary changes without disrupting workflow."
  },
 {
    "id": "agile_2643",
    "question": "What is a key expectation from stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Providing timely feedback and clarifications", "isCorrect": true },
      { "id": "option_2", "text": "Defining all technical implementations", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding involvement until project completion", "isCorrect": false },
      { "id": "option_4", "text": "Micromanaging the development process", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute to refining requirements and guiding the project.",
    "answerDescription": "Active engagement from stakeholders ensures that the Agile team delivers a product aligned with business needs."
  },
  {
    "id": "agile_2644",
    "question": "Which Agile event is designed to keep stakeholders informed about progress?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Pair Programming", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to review completed work and provide feedback.",
    "answerDescription": "Sprint reviews provide a platform for stakeholders to see progress, give input, and align expectations."
  },
  {
    "id": "agile_2645",
    "question": "How do stakeholders contribute to Agile success?",
    "options": [
      { "id": "option_1", "text": "By ensuring alignment between business needs and development efforts", "isCorrect": true },
      { "id": "option_2", "text": "By strictly controlling the teamâ€™s daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding interactions with the Agile team", "isCorrect": false },
      { "id": "option_4", "text": "By enforcing rigid project timelines without flexibility", "isCorrect": false }
    ],
    "hint": "Stakeholders play a crucial role in prioritization and value delivery.",
    "answerDescription": "Stakeholders ensure that Agile teams focus on high-value features that align with business priorities."
  },
  {
    "id": "agile_2646",
    "question": "What is an essential quality of an effective Agile stakeholder?",
    "options": [
      { "id": "option_1", "text": "Being open to collaboration and iterative development", "isCorrect": true },
      { "id": "option_2", "text": "Requiring all requirements to be fixed upfront", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding participation in sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "Demanding complete project control", "isCorrect": false }
    ],
    "hint": "Successful stakeholders embrace adaptability.",
    "answerDescription": "Agile stakeholders must be collaborative and open to evolving requirements to support iterative development."
  },
  {
    "id": "agile_2647",
    "question": "Why is it important for stakeholders to prioritize the product backlog?",
    "options": [
      { "id": "option_1", "text": "To ensure the highest-value features are developed first", "isCorrect": true },
      { "id": "option_2", "text": "To dictate technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "To minimize team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "To reduce transparency in decision-making", "isCorrect": false }
    ],
    "hint": "Backlog prioritization aligns development with business value.",
    "answerDescription": "Prioritizing backlog items ensures that the Agile team focuses on delivering the most valuable features first."
  },
  {
    "id": "agile_2648",
    "question": "How should Agile teams handle conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "Facilitate discussions to align goals and reach consensus", "isCorrect": true },
      { "id": "option_2", "text": "Ignore lower-priority stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Let the development team decide independently", "isCorrect": false },
      { "id": "option_4", "text": "Follow the highest-ranking stakeholderâ€™s demands", "isCorrect": false }
    ],
    "hint": "Alignment among stakeholders ensures smooth progress.",
    "answerDescription": "Facilitating discussions helps resolve conflicts and align stakeholder expectations with business objectives."
  },
  {
    "id": "agile_2649",
    "question": "What is the benefit of involving stakeholders early in Agile projects?",
    "options": [
      { "id": "option_1", "text": "It ensures a shared understanding of goals and expectations", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "It allows the team to avoid stakeholder input later", "isCorrect": false },
      { "id": "option_4", "text": "It guarantees a fixed project scope", "isCorrect": false }
    ],
    "hint": "Early involvement helps set clear expectations.",
    "answerDescription": "When stakeholders are engaged early, teams can better align on priorities and avoid misunderstandings."
  },
  {
    "id": "agile_2650",
    "question": "Which Agile principle supports continuous stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_2", "text": "Comprehensive documentation over working software", "isCorrect": false },
      { "id": "option_3", "text": "Processes and tools over individuals and interactions", "isCorrect": false },
      { "id": "option_4", "text": "Following a plan over responding to change", "isCorrect": false }
    ],
    "hint": "Agile prioritizes engagement with stakeholders.",
    "answerDescription": "This principle emphasizes the importance of collaboration between stakeholders and Agile teams to achieve project success."
  },
  {
    "id": "agile_2651",
    "question": "What is the primary concern of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Ensuring the product delivers business value", "isCorrect": true },
      { "id": "option_2", "text": "Managing team velocity", "isCorrect": false },
      { "id": "option_3", "text": "Enforcing strict deadlines over quality", "isCorrect": false },
      { "id": "option_4", "text": "Controlling day-to-day development tasks", "isCorrect": false }
    ],
    "hint": "Stakeholders focus on value delivery.",
    "answerDescription": "The primary concern of stakeholders is ensuring that Agile teams deliver a product that meets business needs."
  },
  {
    "id": "agile_2652",
    "question": "What role does a stakeholder play in risk management for Agile projects?",
    "options": [
      { "id": "option_1", "text": "Identifying potential business risks and providing guidance", "isCorrect": true },
      { "id": "option_2", "text": "Eliminating all risks before development begins", "isCorrect": false },
      { "id": "option_3", "text": "Dictating how the development team mitigates technical risks", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding involvement in risk discussions", "isCorrect": false }
    ],
    "hint": "Stakeholders help manage business-related risks.",
    "answerDescription": "Stakeholders contribute by identifying business risks early and collaborating with the team to mitigate them."
  },
  {
    "id": "agile_2653",
    "question": "What is a primary way stakeholders can support an Agile team?",
    "options": [
      { "id": "option_1", "text": "By setting strict deadlines without flexibility", "isCorrect": false },
      { "id": "option_2", "text": "By providing continuous feedback and clarifications", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding participation in sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "By dictating technical implementation details", "isCorrect": false }
    ],
    "hint": "Engaged stakeholders contribute by offering insights throughout development.",
    "answerDescription": "Stakeholders who actively provide feedback help Agile teams stay aligned with business goals and user needs."
  },
  {
    "id": "agile_2654",
    "question": "How does stakeholder involvement impact Agile project success?",
    "options": [
      { "id": "option_1", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_2", "text": "It ensures business objectives are met effectively", "isCorrect": true },
      { "id": "option_3", "text": "It creates unnecessary distractions for the team", "isCorrect": false },
      { "id": "option_4", "text": "It removes the need for iterative development", "isCorrect": false }
    ],
    "hint": "Stakeholders help teams align with business priorities.",
    "answerDescription": "By staying engaged, stakeholders help Agile teams focus on features and goals that bring the most value."
  },
  {
    "id": "agile_2655",
    "question": "What is an effective way for stakeholders to communicate priorities to an Agile team?",
    "options": [
      { "id": "option_1", "text": "By micromanaging daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "By collaborating on backlog refinement", "isCorrect": true },
      { "id": "option_3", "text": "By insisting on detailed upfront requirements", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding discussions until the product is finished", "isCorrect": false }
    ],
    "hint": "Stakeholders shape priorities through backlog interactions.",
    "answerDescription": "Backlog refinement sessions allow stakeholders to guide development by prioritizing high-value work."
  },
  {
    "id": "agile_2656",
    "question": "Why should stakeholders participate in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To approve or reject individual tasks", "isCorrect": false },
      { "id": "option_2", "text": "To provide feedback on the completed work", "isCorrect": true },
      { "id": "option_3", "text": "To control the technical decisions of the team", "isCorrect": false },
      { "id": "option_4", "text": "To set fixed deadlines for all features", "isCorrect": false }
    ],
    "hint": "Sprint Reviews allow stakeholders to ensure the product is meeting expectations.",
    "answerDescription": "Stakeholder feedback during Sprint Reviews helps Agile teams align their work with business needs."
  },
  {
    "id": "agile_2657",
    "question": "How can Agile teams ensure stakeholders remain engaged throughout development?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication", "isCorrect": false },
      { "id": "option_2", "text": "By involving them in regular feedback loops", "isCorrect": true },
      { "id": "option_3", "text": "By finalizing all requirements before development starts", "isCorrect": false },
      { "id": "option_4", "text": "By restricting their access to the product backlog", "isCorrect": false }
    ],
    "hint": "Continuous collaboration strengthens Agile development.",
    "answerDescription": "Regular feedback sessions keep stakeholders involved and ensure alignment with evolving priorities."
  },
  {
    "id": "agile_2658",
    "question": "What is a key benefit of having transparent stakeholder communication in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows teams to work without stakeholder input", "isCorrect": false },
      { "id": "option_2", "text": "It helps manage expectations and priorities effectively", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "It ensures that requirements never change", "isCorrect": false }
    ],
    "hint": "Clear communication prevents misunderstandings in Agile projects.",
    "answerDescription": "Transparent communication keeps all stakeholders aligned, reducing confusion and conflicts."
  },
  {
    "id": "agile_2659",
    "question": "What is a common challenge when working with multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Stakeholders always agree on priorities", "isCorrect": false },
      { "id": "option_2", "text": "Conflicting priorities and expectations", "isCorrect": true },
      { "id": "option_3", "text": "Stakeholders never request changes", "isCorrect": false },
      { "id": "option_4", "text": "There is no need to align business goals", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different perspectives on priorities.",
    "answerDescription": "Managing conflicting priorities requires facilitation and collaboration to ensure business objectives are met."
  },
  {
    "id": "agile_2660",
    "question": "How can Agile teams handle changes in stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By refusing to accommodate any changes", "isCorrect": false },
      { "id": "option_2", "text": "By incorporating feedback through backlog updates", "isCorrect": true },
      { "id": "option_3", "text": "By locking requirements at project start", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring stakeholder input until project completion", "isCorrect": false }
    ],
    "hint": "Agile embraces change through an iterative approach.",
    "answerDescription": "Updating the backlog with stakeholder feedback ensures Agile teams remain responsive to evolving needs."
  },
  {
    "id": "agile_2661",
    "question": "What is the role of a Product Owner in stakeholder management?",
    "options": [
      { "id": "option_1", "text": "To ensure all stakeholders have the same priorities", "isCorrect": false },
      { "id": "option_2", "text": "To act as a bridge between stakeholders and the Agile team", "isCorrect": true },
      { "id": "option_3", "text": "To prevent stakeholders from influencing backlog prioritization", "isCorrect": false },
      { "id": "option_4", "text": "To avoid engaging with stakeholders during development", "isCorrect": false }
    ],
    "hint": "The Product Owner represents stakeholder interests in Agile projects.",
    "answerDescription": "The Product Owner helps balance stakeholder needs while ensuring the Agile team delivers value efficiently."
  },
  {
    "id": "agile_2662",
    "question": "Why should stakeholders avoid dictating technical solutions in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Because Agile teams rely on stakeholder direction for technical decisions", "isCorrect": false },
      { "id": "option_2", "text": "Because technical decisions should be left to development experts", "isCorrect": true },
      { "id": "option_3", "text": "Because stakeholders do not contribute to the projectâ€™s success", "isCorrect": false },
      { "id": "option_4", "text": "Because Agile does not allow stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Stakeholders focus on business needs, while teams handle implementation.",
    "answerDescription": "Allowing development teams to make technical decisions ensures efficiency and maintains Agile principles."
  },
  {
    "id": "agile_2663",
    "question": "How can Agile teams ensure stakeholder expectations are effectively managed?",
    "options": [
      { "id": "option_1", "text": "By avoiding discussions about project changes", "isCorrect": false },
      { "id": "option_2", "text": "By limiting stakeholder involvement to sprint reviews", "isCorrect": false },
      { "id": "option_3", "text": "By maintaining open and transparent communication", "isCorrect": true },
      { "id": "option_4", "text": "By strictly following initial project requirements without adjustments", "isCorrect": false }
    ],
    "hint": "Transparency and communication help align expectations.",
    "answerDescription": "Clear and ongoing communication with stakeholders helps teams align priorities and expectations effectively."
  },
  {
    "id": "agile_2664",
    "question": "Why should stakeholders be regularly involved in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To micromanage the development process", "isCorrect": false },
      { "id": "option_2", "text": "To enforce strict deadlines regardless of team capacity", "isCorrect": false },
      { "id": "option_3", "text": "To provide feedback and ensure business alignment", "isCorrect": true },
      { "id": "option_4", "text": "To prevent developers from making technical decisions", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback is crucial for Agile success.",
    "answerDescription": "Regular stakeholder involvement ensures that the product remains aligned with business goals and user needs."
  },
  {
    "id": "agile_2665",
    "question": "Which Agile event provides stakeholders with visibility into product progress?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event showcases the product increment.",
    "answerDescription": "Sprint Reviews allow stakeholders to see completed work and provide feedback on the product increment."
  },
  {
    "id": "agile_2666",
    "question": "What challenge might arise from having multiple stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Stakeholders never disagree on priorities", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders always fully understand Agile principles", "isCorrect": false },
      { "id": "option_3", "text": "Conflicting priorities can make decision-making difficult", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders should not be involved in backlog refinement", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different priorities.",
    "answerDescription": "Balancing the needs and priorities of multiple stakeholders requires effective negotiation and alignment strategies."
  },
  {
    "id": "agile_2667",
    "question": "How can Agile teams handle changing stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By ignoring all changes after sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "By implementing changes immediately without review", "isCorrect": false },
      { "id": "option_3", "text": "By evaluating changes and incorporating them into the backlog", "isCorrect": true },
      { "id": "option_4", "text": "By rejecting changes to maintain a fixed project scope", "isCorrect": false }
    ],
    "hint": "Agile embraces change but requires structured handling.",
    "answerDescription": "Backlog updates allow teams to manage changing requirements while maintaining development flow."
  },
  {
    "id": "agile_2668",
    "question": "Which approach helps build trust between Agile teams and stakeholders?",
    "options": [
      { "id": "option_1", "text": "Providing minimal updates to avoid unnecessary discussions", "isCorrect": false },
      { "id": "option_2", "text": "Restricting stakeholder access to Agile events", "isCorrect": false },
      { "id": "option_3", "text": "Delivering working software frequently and maintaining transparency", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on technical excellence without considering business value", "isCorrect": false }
    ],
    "hint": "Consistent delivery builds confidence in Agile teams.",
    "answerDescription": "Regular delivery of working software and transparency in progress help establish trust with stakeholders."
  },
  {
    "id": "agile_2669",
    "question": "What is a key benefit of engaging stakeholders early in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Reduces the need for iterative development", "isCorrect": false },
      { "id": "option_2", "text": "Ensures a rigid, unchangeable project scope", "isCorrect": false },
      { "id": "option_3", "text": "Aligns the product vision with business goals from the start", "isCorrect": true },
      { "id": "option_4", "text": "Eliminates the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Early involvement prevents misalignment later.",
    "answerDescription": "Engaging stakeholders early ensures that the Agile team is working toward a product that meets business and customer needs."
  },
  {
    "id": "agile_2670",
    "question": "Which strategy helps avoid stakeholder misalignment in Agile?",
    "options": [
      { "id": "option_1", "text": "Keeping all stakeholder discussions informal", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding backlog discussions with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Setting clear priorities and maintaining regular engagement", "isCorrect": true },
      { "id": "option_4", "text": "Focusing only on technical decisions without business input", "isCorrect": false }
    ],
    "hint": "Clarity in priorities helps prevent confusion.",
    "answerDescription": "Regular engagement and priority setting help ensure that all stakeholders are aligned with the project direction."
  },
  {
    "id": "agile_2671",
    "question": "What role do stakeholders play in Agile risk management?",
    "options": [
      { "id": "option_1", "text": "They do not participate in risk discussions", "isCorrect": false },
      { "id": "option_2", "text": "They are responsible for solving all technical risks", "isCorrect": false },
      { "id": "option_3", "text": "They help identify and mitigate business risks", "isCorrect": true },
      { "id": "option_4", "text": "They only provide funding without project involvement", "isCorrect": false }
    ],
    "hint": "Business risks can be better managed with stakeholder insights.",
    "answerDescription": "Stakeholders contribute to risk management by providing insights on business risks and helping mitigate them early."
  },
  {
    "id": "agile_2672",
    "question": "How can Agile teams address stakeholder concerns effectively?",
    "options": [
      { "id": "option_1", "text": "By focusing only on development and ignoring concerns", "isCorrect": false },
      { "id": "option_2", "text": "By postponing discussions until after product launch", "isCorrect": false },
      { "id": "option_3", "text": "By actively listening and incorporating feedback into planning", "isCorrect": true },
      { "id": "option_4", "text": "By insisting that all decisions are final", "isCorrect": false }
    ],
    "hint": "Stakeholder concerns should be addressed proactively.",
    "answerDescription": "Listening to stakeholders and acting on their feedback improves collaboration and project outcomes."
  },
  {
    "id": "agile_2673",
    "question": "Why is stakeholder feedback critical in Agile development?",
    "options": [
      { "id": "option_1", "text": "It allows the team to avoid making decisions independently", "isCorrect": false },
      { "id": "option_2", "text": "It ensures the team follows a fixed project scope", "isCorrect": false },
      { "id": "option_3", "text": "It helps minimize communication with the team", "isCorrect": false },
      { "id": "option_4", "text": "It ensures the product aligns with business and user needs", "isCorrect": true }
    ],
    "hint": "Stakeholder input helps refine the product vision.",
    "answerDescription": "Continuous stakeholder feedback helps Agile teams build a product that meets business and user expectations."
  },
  {
    "id": "agile_2674",
    "question": "How does Agile promote stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication to the project's final phase", "isCorrect": false },
      { "id": "option_2", "text": "By discouraging feedback that could change the scope", "isCorrect": false },
      { "id": "option_3", "text": "By making stakeholders responsible for daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "By encouraging regular interaction and feedback loops", "isCorrect": true }
    ],
    "hint": "Agile thrives on continuous collaboration.",
    "answerDescription": "Frequent communication and feedback help stakeholders stay engaged and contribute to project success."
  },
  {
    "id": "agile_2675",
    "question": "What is an effective way to prioritize stakeholder requirements in Agile?",
    "options": [
      { "id": "option_1", "text": "By addressing only the needs of the most vocal stakeholder", "isCorrect": false },
      { "id": "option_2", "text": "By disregarding changes after sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "By using a fixed-priority list that never changes", "isCorrect": false },
      { "id": "option_4", "text": "By evaluating requirements based on business value and feasibility", "isCorrect": true }
    ],
    "hint": "Agile prioritization is based on value delivery.",
    "answerDescription": "Using business value and feasibility as criteria helps teams focus on high-impact requirements."
  },
  {
    "id": "agile_2676",
    "question": "Which technique helps Agile teams gather stakeholder feedback effectively?",
    "options": [
      { "id": "option_1", "text": "Avoiding regular meetings to minimize disruptions", "isCorrect": false },
      { "id": "option_2", "text": "Only collecting feedback at the end of development", "isCorrect": false },
      { "id": "option_3", "text": "Limiting feedback collection to senior management", "isCorrect": false },
      { "id": "option_4", "text": "Using sprint reviews and informal discussions", "isCorrect": true }
    ],
    "hint": "Stakeholder feedback should be collected throughout the process.",
    "answerDescription": "Sprint reviews and informal discussions provide ongoing opportunities for stakeholder input and alignment."
  },
  {
    "id": "agile_2677",
    "question": "How can Agile teams ensure stakeholders understand project progress?",
    "options": [
      { "id": "option_1", "text": "By providing minimal updates to avoid distractions", "isCorrect": false },
      { "id": "option_2", "text": "By keeping reports limited to technical details", "isCorrect": false },
      { "id": "option_3", "text": "By only sharing completed features without explanation", "isCorrect": false },
      { "id": "option_4", "text": "By using visual dashboards and regular progress reports", "isCorrect": true }
    ],
    "hint": "Transparency and visibility help stakeholders stay informed.",
    "answerDescription": "Visual dashboards and reports provide stakeholders with clear insights into project status and progress."
  },
  {
    "id": "agile_2678",
    "question": "Why is stakeholder alignment important in Agile projects?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for backlog refinement", "isCorrect": false },
      { "id": "option_2", "text": "It ensures all decisions are made by the product owner alone", "isCorrect": false },
      { "id": "option_3", "text": "It minimizes the importance of user feedback", "isCorrect": false },
      { "id": "option_4", "text": "It ensures the team builds a product that meets business needs", "isCorrect": true }
    ],
    "hint": "Stakeholder alignment leads to a more valuable product.",
    "answerDescription": "Clear alignment ensures that Agile teams are working toward a product that delivers value to both business and users."
  },
  {
    "id": "agile_2679",
    "question": "Which Agile principle encourages continuous stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "Working in complete isolation to avoid distractions", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding frequent feedback to maintain a stable plan", "isCorrect": false },
      { "id": "option_3", "text": "Making major decisions without consulting stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Welcoming changing requirements, even late in development", "isCorrect": true }
    ],
    "hint": "Agile embraces change and stakeholder input.",
    "answerDescription": "Stakeholder involvement is crucial for adapting to changes and delivering value-driven products."
  },
  {
    "id": "agile_2680",
    "question": "How does early stakeholder involvement benefit Agile projects?",
    "options": [
      { "id": "option_1", "text": "It prevents teams from making independent decisions", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for iterative development", "isCorrect": false },
      { "id": "option_3", "text": "It ensures that project requirements remain fixed", "isCorrect": false },
      { "id": "option_4", "text": "It helps define a clear vision and avoid costly rework", "isCorrect": true }
    ],
    "hint": "Early involvement ensures better project alignment.",
    "answerDescription": "Engaging stakeholders early helps Agile teams define goals and reduce the risk of misunderstandings or late-stage changes."
  },
  {
    "id": "agile_2681",
    "question": "What is the key role of stakeholders in Agile product development?",
    "options": [
      { "id": "option_1", "text": "To dictate every detail of the implementation process", "isCorrect": false },
      { "id": "option_2", "text": "To focus only on financial aspects and ignore development", "isCorrect": false },
      { "id": "option_3", "text": "To approve the final product without involvement in iterations", "isCorrect": false },
      { "id": "option_4", "text": "To provide feedback, set priorities, and define business goals", "isCorrect": true }
    ],
    "hint": "Stakeholders help guide business and user needs.",
    "answerDescription": "Stakeholders contribute by defining priorities and providing continuous feedback to ensure business objectives are met."
  },
  {
    "id": "agile_2682",
    "question": "How can Agile teams encourage active stakeholder participation?",
    "options": [
      { "id": "option_1", "text": "By limiting communication to avoid unnecessary input", "isCorrect": false },
      { "id": "option_2", "text": "By waiting until the end of the project to involve them", "isCorrect": false },
      { "id": "option_3", "text": "By restricting stakeholder access to team discussions", "isCorrect": false },
      { "id": "option_4", "text": "By inviting stakeholders to sprint reviews and backlog refinements", "isCorrect": true }
    ],
    "hint": "Stakeholder involvement should be regular and structured.",
    "answerDescription": "Including stakeholders in key Agile ceremonies ensures they remain engaged and aligned with project goals."
  },
  {
    "id": "agile_2683",
    "question": "What is the primary responsibility of stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "To provide input and feedback throughout the project", "isCorrect": true },
      { "id": "option_2", "text": "To avoid interaction until the final product is ready", "isCorrect": false },
      { "id": "option_3", "text": "To control all technical decisions made by the team", "isCorrect": false },
      { "id": "option_4", "text": "To oversee daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "Stakeholders help shape the product direction.",
    "answerDescription": "Stakeholders play a critical role in providing ongoing feedback to ensure the product meets business and user needs."
  },
  {
    "id": "agile_2684",
    "question": "Why should Agile teams engage stakeholders early in the project?",
    "options": [
      { "id": "option_1", "text": "To ensure project goals align with business needs", "isCorrect": true },
      { "id": "option_2", "text": "To prevent stakeholders from influencing requirements", "isCorrect": false },
      { "id": "option_3", "text": "To delay decision-making until the last sprint", "isCorrect": false },
      { "id": "option_4", "text": "To minimize changes in the project scope", "isCorrect": false }
    ],
    "hint": "Early stakeholder involvement reduces misalignment.",
    "answerDescription": "Engaging stakeholders early helps define clear objectives and avoids costly rework later in the development process."
  },
  {
    "id": "agile_2685",
    "question": "How do stakeholders contribute to Agile backlog refinement?",
    "options": [
      { "id": "option_1", "text": "By prioritizing user stories based on business value", "isCorrect": true },
      { "id": "option_2", "text": "By writing all technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "By approving the backlog only after development is complete", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring the backlog remains unchanged throughout the project", "isCorrect": false }
    ],
    "hint": "Stakeholders help guide the prioritization process.",
    "answerDescription": "Their input ensures that the most valuable features are developed first, maximizing business and user impact."
  },
  {
    "id": "agile_2686",
    "question": "Which Agile practice ensures continuous stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Regular sprint reviews and demos", "isCorrect": true },
      { "id": "option_2", "text": "Holding all discussions until project completion", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing stakeholder involvement to reduce distractions", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding feedback to maintain development speed", "isCorrect": false }
    ],
    "hint": "Agile fosters ongoing communication with stakeholders.",
    "answerDescription": "Sprint reviews and demos allow stakeholders to see progress, provide feedback, and align expectations."
  },
  {
    "id": "agile_2687",
    "question": "What is a key challenge of managing multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Balancing conflicting priorities and expectations", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring only one stakeholder has decision-making power", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding all feedback to maintain a stable plan", "isCorrect": false },
      { "id": "option_4", "text": "Limiting stakeholder communication to avoid complexity", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different goals.",
    "answerDescription": "Agile teams must navigate varying needs and find a balance that aligns with business objectives and user value."
  },
  {
    "id": "agile_2688",
    "question": "How does stakeholder feedback improve Agile product development?",
    "options": [
      { "id": "option_1", "text": "By identifying issues early and refining requirements", "isCorrect": true },
      { "id": "option_2", "text": "By limiting development to predefined specifications", "isCorrect": false },
      { "id": "option_3", "text": "By reducing the need for iterations", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring all decisions are made only by the development team", "isCorrect": false }
    ],
    "hint": "Feedback helps refine the product continuously.",
    "answerDescription": "Stakeholder input allows Agile teams to make adjustments and enhance product value throughout the development cycle."
  },
  {
    "id": "agile_2689",
    "question": "Why is transparency important in stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "It builds trust and aligns expectations", "isCorrect": true },
      { "id": "option_2", "text": "It limits stakeholder involvement to reduce feedback", "isCorrect": false },
      { "id": "option_3", "text": "It helps teams control project decisions without input", "isCorrect": false },
      { "id": "option_4", "text": "It prevents stakeholders from making scope changes", "isCorrect": false }
    ],
    "hint": "Open communication fosters collaboration and trust.",
    "answerDescription": "When teams are transparent, stakeholders remain engaged and aligned with project progress and goals."
  },
  {
    "id": "agile_2690",
    "question": "How can Agile teams effectively manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By setting clear goals and maintaining open communication", "isCorrect": true },
      { "id": "option_2", "text": "By making all product decisions without consulting stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding discussions about changing requirements", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring stakeholders do not participate in backlog refinement", "isCorrect": false }
    ],
    "hint": "Expectation management requires clarity and collaboration.",
    "answerDescription": "Clear goals, transparency, and ongoing discussions help Agile teams align expectations with stakeholders effectively."
  },
  {
    "id": "agile_2691",
    "question": "What role do stakeholders play in Agile risk management?",
    "options": [
      { "id": "option_1", "text": "They identify potential business risks early", "isCorrect": true },
      { "id": "option_2", "text": "They avoid discussing risks to maintain focus on development", "isCorrect": false },
      { "id": "option_3", "text": "They ensure that technical risks are ignored", "isCorrect": false },
      { "id": "option_4", "text": "They provide feedback only after product launch", "isCorrect": false }
    ],
    "hint": "Stakeholders help foresee business and market risks.",
    "answerDescription": "By engaging stakeholders in discussions about risks, Agile teams can proactively address potential challenges."
  },
  {
    "id": "agile_2692",
    "question": "How does Agile help stakeholders make informed decisions?",
    "options": [
      { "id": "option_1", "text": "By providing regular updates and empirical data", "isCorrect": true },
      { "id": "option_2", "text": "By limiting visibility into the development process", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding discussions about project changes", "isCorrect": false },
      { "id": "option_4", "text": "By finalizing requirements without stakeholder input", "isCorrect": false }
    ],
    "hint": "Agile relies on data-driven decision-making.",
    "answerDescription": "Frequent updates, sprint reviews, and data-driven insights allow stakeholders to make better-informed decisions."
  },{
    "id": "agile_2693",
    "question": "Why is it important for stakeholders to participate in Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To ensure that developers follow a strict hierarchy", "isCorrect": false },
      { "id": "option_2", "text": "To provide feedback and align expectations", "isCorrect": true },
      { "id": "option_3", "text": "To make last-minute changes without team involvement", "isCorrect": false },
      { "id": "option_4", "text": "To finalize all project decisions in a single meeting", "isCorrect": false }
    ],
    "hint": "Sprint reviews allow stakeholders to guide the product direction.",
    "answerDescription": "Regular stakeholder participation in sprint reviews ensures the product meets business and user needs while avoiding costly misalignment."
  },
  {
    "id": "agile_2694",
    "question": "How do Agile teams ensure stakeholders remain engaged throughout development?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder interactions to project kickoff meetings", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining open communication and frequent updates", "isCorrect": true },
      { "id": "option_3", "text": "By restricting access to backlog refinement sessions", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding stakeholder feedback to prevent scope changes", "isCorrect": false }
    ],
    "hint": "Consistent communication is key to engagement.",
    "answerDescription": "Regular updates, demos, and discussions keep stakeholders informed and invested in the project's progress."
  },
  {
    "id": "agile_2695",
    "question": "What is a key benefit of involving stakeholders in Agile backlog refinement?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for any future backlog adjustments", "isCorrect": false },
      { "id": "option_2", "text": "It helps prioritize work based on business value", "isCorrect": true },
      { "id": "option_3", "text": "It ensures that developers work without external input", "isCorrect": false },
      { "id": "option_4", "text": "It prevents the product backlog from evolving", "isCorrect": false }
    ],
    "hint": "Stakeholder input guides prioritization.",
    "answerDescription": "By refining the backlog with stakeholder involvement, teams can ensure they focus on the most impactful features."
  },
  {
    "id": "agile_2696",
    "question": "How does Agile encourage stakeholder trust in the development process?",
    "options": [
      { "id": "option_1", "text": "By limiting transparency to avoid external pressure", "isCorrect": false },
      { "id": "option_2", "text": "By demonstrating progress through working software", "isCorrect": true },
      { "id": "option_3", "text": "By minimizing stakeholder involvement in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "By delaying feedback until after product release", "isCorrect": false }
    ],
    "hint": "Visible progress builds trust with stakeholders.",
    "answerDescription": "Agile emphasizes working software as the primary measure of progress, ensuring stakeholders see real results."
  },
  {
    "id": "agile_2697",
    "question": "What is a common challenge when managing Agile stakeholders?",
    "options": [
      { "id": "option_1", "text": "Lack of access to Agile teams", "isCorrect": false },
      { "id": "option_2", "text": "Conflicting priorities among different stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "Having too much alignment in expectations", "isCorrect": false },
      { "id": "option_4", "text": "Stakeholders making all technical decisions", "isCorrect": false }
    ],
    "hint": "Stakeholders may have varying business goals.",
    "answerDescription": "Managing diverse expectations requires clear communication, prioritization, and collaboration to balance different needs."
  },
  {
    "id": "agile_2698",
    "question": "Why is stakeholder collaboration critical in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To prevent the team from making independent decisions", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the product delivers real business value", "isCorrect": true },
      { "id": "option_3", "text": "To maintain rigid documentation requirements", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Stakeholders help align development with business needs.",
    "answerDescription": "Ongoing collaboration ensures the final product effectively serves its intended purpose and meets user expectations."
  },
  {
    "id": "agile_2699",
    "question": "Why should Agile teams regularly communicate risks to stakeholders?",
    "options": [
      { "id": "option_1", "text": "To shift responsibility for risk management", "isCorrect": false },
      { "id": "option_2", "text": "To ensure stakeholders can make informed trade-offs", "isCorrect": true },
      { "id": "option_3", "text": "To create unnecessary concerns", "isCorrect": false },
      { "id": "option_4", "text": "To reduce transparency in project updates", "isCorrect": false }
    ],
    "hint": "Risk management is a shared responsibility in Agile projects.",
    "answerDescription": "Keeping stakeholders informed about risks enables proactive decision-making and risk mitigation strategies."
  },
  {
    "id": "agile_2700",
    "question": "What is the purpose of stakeholder personas in Agile development?",
    "options": [
      { "id": "option_1", "text": "To limit stakeholder involvement to predefined roles", "isCorrect": false },
      { "id": "option_2", "text": "To identify key stakeholder needs and expectations", "isCorrect": true },
      { "id": "option_3", "text": "To replace real stakeholder interactions", "isCorrect": false },
      { "id": "option_4", "text": "To focus only on internal team feedback", "isCorrect": false }
    ],
    "hint": "Personas help teams understand different perspectives.",
    "answerDescription": "Creating stakeholder personas allows Agile teams to address diverse business and user needs effectively."
  },
  {
    "id": "agile_2701",
    "question": "Why is it important for Agile teams to set clear stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "To ensure stakeholders have full control over sprints", "isCorrect": false },
      { "id": "option_2", "text": "To avoid misunderstandings and scope creep", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the frequency of stakeholder communication", "isCorrect": false },
      { "id": "option_4", "text": "To limit stakeholder feedback to the final stages", "isCorrect": false }
    ],
    "hint": "Clear expectations reduce uncertainty.",
    "answerDescription": "When stakeholders understand timelines, deliverables, and constraints, Agile projects run more smoothly."
  },
  {
    "id": "agile_2702",
    "question": "How can Agile teams measure stakeholder satisfaction?",
    "options": [
      { "id": "option_1", "text": "By tracking the number of meetings attended", "isCorrect": false },
      { "id": "option_2", "text": "By using feedback surveys and engagement metrics", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding stakeholder involvement in metrics discussions", "isCorrect": false },
      { "id": "option_4", "text": "By focusing solely on team velocity", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback is key to measuring satisfaction.",
    "answerDescription": "Surveys, feedback loops, and participation levels help gauge stakeholder engagement and satisfaction with the Agile process."
  },
  {
    "id": "agile_2703",
    "question": "What is the main responsibility of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To control the development team's daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "To approve each user story before implementation", "isCorrect": false },
      { "id": "option_3", "text": "To provide input and validate business value", "isCorrect": true },
      { "id": "option_4", "text": "To dictate technical implementation details", "isCorrect": false }
    ],
    "hint": "Stakeholders ensure the product aligns with business goals.",
    "answerDescription": "Stakeholders provide guidance on business priorities and validate the product's value through continuous feedback."
  },
  {
    "id": "agile_2704",
    "question": "How do Agile teams ensure effective stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "By limiting updates to only major milestones", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback that could change sprint goals", "isCorrect": false },
      { "id": "option_3", "text": "By maintaining regular touchpoints and transparency", "isCorrect": true },
      { "id": "option_4", "text": "By restricting communication to the product owner", "isCorrect": false }
    ],
    "hint": "Consistent communication fosters stakeholder trust.",
    "answerDescription": "Frequent updates, demos, and open dialogue help keep stakeholders informed and engaged throughout the project."
  },
  {
    "id": "agile_2705",
    "question": "What challenge do Agile teams face when dealing with multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Stakeholders always agree on priorities", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders rarely provide feedback", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders may have conflicting requirements", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders avoid participating in sprint reviews", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different goals.",
    "answerDescription": "Agile teams must balance varying stakeholder interests by aligning requirements with business objectives."
  },
  {
    "id": "agile_2706",
    "question": "Why should Agile teams involve stakeholders in backlog prioritization?",
    "options": [
      { "id": "option_1", "text": "To allow stakeholders to control team assignments", "isCorrect": false },
      { "id": "option_2", "text": "To ensure backlog items are completed in order", "isCorrect": false },
      { "id": "option_3", "text": "To align work with business objectives", "isCorrect": true },
      { "id": "option_4", "text": "To finalize all project details upfront", "isCorrect": false }
    ],
    "hint": "Business value should drive backlog priorities.",
    "answerDescription": "By involving stakeholders, Agile teams can ensure development efforts focus on the most valuable features."
  },
  {
    "id": "agile_2707",
    "question": "How do stakeholders contribute to Agile risk management?",
    "options": [
      { "id": "option_1", "text": "By approving risks only at the start of the project", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating the need for iterative development", "isCorrect": false },
      { "id": "option_3", "text": "By identifying and mitigating business risks early", "isCorrect": true },
      { "id": "option_4", "text": "By preventing changes to initial project plans", "isCorrect": false }
    ],
    "hint": "Stakeholders help assess business risks.",
    "answerDescription": "Active stakeholder involvement allows teams to address risks early, reducing potential negative impacts on the project."
  },
  {
    "id": "agile_2708",
    "question": "What is a key reason for involving stakeholders in Agile retrospectives?",
    "options": [
      { "id": "option_1", "text": "To allow stakeholders to manage team workflows", "isCorrect": false },
      { "id": "option_2", "text": "To set fixed rules for the development team", "isCorrect": false },
      { "id": "option_3", "text": "To gain insights on how Agile processes impact business", "isCorrect": true },
      { "id": "option_4", "text": "To ensure stakeholders approve sprint results", "isCorrect": false }
    ],
    "hint": "Stakeholders can provide valuable external perspectives.",
    "answerDescription": "Their feedback helps Agile teams refine processes and ensure alignment with business needs."
  },
  {
    "id": "agile_2709",
    "question": "What is an effective way for Agile teams to manage stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "By implementing all feedback immediately", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding feedback to maintain sprint focus", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing feedback based on value and feasibility", "isCorrect": true },
      { "id": "option_4", "text": "By allowing stakeholders to dictate sprint goals", "isCorrect": false }
    ],
    "hint": "Not all feedback is equally valuable or feasible.",
    "answerDescription": "Teams should assess stakeholder feedback based on its impact on the product and business objectives."
  },
  {
    "id": "agile_2710",
    "question": "Why should Agile teams keep stakeholders informed of development progress?",
    "options": [
      { "id": "option_1", "text": "To allow stakeholders to approve each technical decision", "isCorrect": false },
      { "id": "option_2", "text": "To avoid surprises and maintain alignment", "isCorrect": true },
      { "id": "option_3", "text": "To allow stakeholders to revise sprint goals frequently", "isCorrect": false },
      { "id": "option_4", "text": "To prevent stakeholders from questioning project direction", "isCorrect": false }
    ],
    "hint": "Transparency helps build trust.",
    "answerDescription": "Regular updates ensure that stakeholders remain aligned with the team's progress and expectations."
  },
  {
    "id": "agile_2711",
    "question": "What is the benefit of Agile teams using stakeholder personas?",
    "options": [
      { "id": "option_1", "text": "To replace direct stakeholder engagement", "isCorrect": false },
      { "id": "option_2", "text": "To make assumptions about stakeholder needs", "isCorrect": false },
      { "id": "option_3", "text": "To better understand stakeholder motivations", "isCorrect": true },
      { "id": "option_4", "text": "To limit project scope based on predefined roles", "isCorrect": false }
    ],
    "hint": "Personas help teams empathize with stakeholders.",
    "answerDescription": "Stakeholder personas help Agile teams align features with business needs and user expectations."
  },
  {
    "id": "agile_2712",
    "question": "How can Agile teams encourage active stakeholder participation?",
    "options": [
      { "id": "option_1", "text": "By requiring stakeholders to attend daily standups", "isCorrect": false },
      { "id": "option_2", "text": "By making stakeholder involvement optional", "isCorrect": false },
      { "id": "option_3", "text": "By showing how their input directly impacts outcomes", "isCorrect": true },
      { "id": "option_4", "text": "By limiting stakeholder meetings to project milestones", "isCorrect": false }
    ],
    "hint": "Stakeholders need to see the value of their input.",
    "answerDescription": "Demonstrating how stakeholder feedback influences decisions encourages ongoing engagement and collaboration."
  },
  {
    "id": "agile_2713",
    "question": "Why is stakeholder engagement critical in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To allow stakeholders to control daily development tasks", "isCorrect": false },
      { "id": "option_2", "text": "To finalize project scope at the beginning", "isCorrect": false },
      { "id": "option_3", "text": "To prevent unexpected feedback during sprints", "isCorrect": false },
      { "id": "option_4", "text": "To ensure continuous alignment with business needs", "isCorrect": true }
    ],
    "hint": "Stakeholders help maintain the relevance of the project.",
    "answerDescription": "Regular engagement ensures that Agile teams build products that align with evolving business priorities."
  },
  {
    "id": "agile_2714",
    "question": "What is the primary benefit of frequent stakeholder feedback in Agile?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for backlog refinement", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the development team's autonomy", "isCorrect": false },
      { "id": "option_3", "text": "It prevents scope changes after sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "It allows early identification of business needs", "isCorrect": true }
    ],
    "hint": "Early feedback helps teams course-correct effectively.",
    "answerDescription": "Frequent stakeholder feedback ensures that the product remains relevant and valuable throughout development."
  },
  {
    "id": "agile_2715",
    "question": "How does Agile facilitate better stakeholder relationships?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder input to project milestones", "isCorrect": false },
      { "id": "option_2", "text": "By reducing transparency in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "By discouraging changes once development starts", "isCorrect": false },
      { "id": "option_4", "text": "By promoting collaboration and continuous communication", "isCorrect": true }
    ],
    "hint": "Agile thrives on open and ongoing stakeholder engagement.",
    "answerDescription": "Maintaining regular interaction with stakeholders helps build trust and ensures alignment with business goals."
  },
  {
    "id": "agile_2716",
    "question": "What role does a stakeholder play in Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To manage team velocity and technical decisions", "isCorrect": false },
      { "id": "option_2", "text": "To assign daily tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To define sprint goals before development begins", "isCorrect": false },
      { "id": "option_4", "text": "To provide feedback on the delivered increment", "isCorrect": true }
    ],
    "hint": "Stakeholders review progress at the end of each sprint.",
    "answerDescription": "Sprint reviews allow stakeholders to validate progress and suggest necessary adjustments to meet business needs."
  },
  {
    "id": "agile_2717",
    "question": "How can Agile teams handle conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "By implementing every stakeholder request", "isCorrect": false },
      { "id": "option_2", "text": "By disregarding lower-priority stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By allowing only the highest-ranking stakeholder to decide", "isCorrect": false },
      { "id": "option_4", "text": "By aligning priorities with business objectives", "isCorrect": true }
    ],
    "hint": "Decisions should be based on business value.",
    "answerDescription": "Teams should evaluate stakeholder inputs based on the impact they have on product value and organizational goals."
  },
  {
    "id": "agile_2718",
    "question": "What is a key factor in maintaining stakeholder trust in Agile?",
    "options": [
      { "id": "option_1", "text": "Delivering only what was initially planned", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing communication to avoid distractions", "isCorrect": false },
      { "id": "option_3", "text": "Rejecting late-stage stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "Being transparent about progress and challenges", "isCorrect": true }
    ],
    "hint": "Trust is built through openness and honesty.",
    "answerDescription": "Keeping stakeholders informed about successes and challenges fosters transparency and strengthens trust."
  },
  {
    "id": "agile_2719",
    "question": "Why should Agile teams seek early stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "To finalize all requirements before development begins", "isCorrect": false },
      { "id": "option_2", "text": "To avoid scope changes later in the project", "isCorrect": false },
      { "id": "option_3", "text": "To limit stakeholder influence on sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "To validate business priorities from the start", "isCorrect": true }
    ],
    "hint": "Engagement from the start helps guide development direction.",
    "answerDescription": "Early involvement ensures that the product direction aligns with stakeholder needs and market demands."
  },
  {
    "id": "agile_2720",
    "question": "What should an Agile team do if a stakeholder is disengaged?",
    "options": [
      { "id": "option_1", "text": "Continue without stakeholder input", "isCorrect": false },
      { "id": "option_2", "text": "Avoid discussing business-related decisions", "isCorrect": false },
      { "id": "option_3", "text": "Exclude the stakeholder from sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Actively re-engage them through collaboration", "isCorrect": true }
    ],
    "hint": "Stakeholders are key to delivering business value.",
    "answerDescription": "Regular communication and demonstrating the impact of their input can help re-engage stakeholders in the process."
  },
  {
    "id": "agile_2721",
    "question": "Why should Agile teams educate stakeholders about Agile practices?",
    "options": [
      { "id": "option_1", "text": "To shift control of sprints to stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "To make stakeholders responsible for technical decisions", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for continuous feedback", "isCorrect": false },
      { "id": "option_4", "text": "To set realistic expectations about Agile processes", "isCorrect": true }
    ],
    "hint": "Stakeholders must understand Agile to collaborate effectively.",
    "answerDescription": "Educating stakeholders helps them understand the iterative nature of Agile and fosters better collaboration."
  },
  {
    "id": "agile_2722",
    "question": "What is the best way to ensure stakeholder feedback is actionable?",
    "options": [
      { "id": "option_1", "text": "By collecting feedback only at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "By gathering feedback frequently and prioritizing it", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding feedback that requires changes", "isCorrect": false },
      { "id": "option_4", "text": "By implementing all feedback immediately", "isCorrect": false }
    ],
    "hint": "Frequent feedback allows for continuous improvements.",
    "answerDescription": "Regular feedback collection ensures that changes are prioritized based on their impact and feasibility."
  },
  {
    "id": "agile_2723",
    "question": "What is the primary reason for engaging stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "To ensure the product meets business needs", "isCorrect": true },
      { "id": "option_2", "text": "To limit changes once development starts", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "To finalize requirements before development begins", "isCorrect": false }
    ],
    "hint": "Stakeholders help define the product direction.",
    "answerDescription": "Regular stakeholder engagement ensures that Agile teams build a product that aligns with evolving business priorities."
  },
  {
    "id": "agile_2724",
    "question": "How can Agile teams ensure effective stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "By holding regular feedback sessions", "isCorrect": true },
      { "id": "option_2", "text": "By limiting interactions to sprint retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "By only involving stakeholders in release planning", "isCorrect": false },
      { "id": "option_4", "text": "By requiring stakeholders to review technical documentation", "isCorrect": false }
    ],
    "hint": "Consistent communication improves alignment.",
    "answerDescription": "Regular feedback sessions ensure that stakeholders stay informed and provide input throughout the development process."
  },
  {
    "id": "agile_2725",
    "question": "What is a key responsibility of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To provide feedback on product increments", "isCorrect": true },
      { "id": "option_2", "text": "To manage the development teamâ€™s tasks", "isCorrect": false },
      { "id": "option_3", "text": "To define sprint backlog items", "isCorrect": false },
      { "id": "option_4", "text": "To approve daily stand-up meetings", "isCorrect": false }
    ],
    "hint": "Stakeholders influence product evolution.",
    "answerDescription": "Providing feedback helps ensure that the product aligns with business goals and customer needs."
  },
  {
    "id": "agile_2726",
    "question": "Why is it important for stakeholders to attend Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To validate progress and provide feedback", "isCorrect": true },
      { "id": "option_2", "text": "To assign new tasks to the development team", "isCorrect": false },
      { "id": "option_3", "text": "To approve the sprint backlog", "isCorrect": false },
      { "id": "option_4", "text": "To adjust team velocity estimates", "isCorrect": false }
    ],
    "hint": "Sprint reviews are a key opportunity for feedback.",
    "answerDescription": "Stakeholder participation in sprint reviews ensures alignment with business priorities and improves product quality."
  },
  {
    "id": "agile_2727",
    "question": "How do Agile teams handle conflicting stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By prioritizing based on business value", "isCorrect": true },
      { "id": "option_2", "text": "By implementing every request equally", "isCorrect": false },
      { "id": "option_3", "text": "By assigning priority based on stakeholder hierarchy", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding changes once development starts", "isCorrect": false }
    ],
    "hint": "Not all requests have the same impact on business goals.",
    "answerDescription": "Agile teams work with stakeholders to align priorities with the most valuable business outcomes."
  },
  {
    "id": "agile_2728",
    "question": "What is one way to increase stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "By demonstrating value through working software", "isCorrect": true },
      { "id": "option_2", "text": "By reducing the number of stakeholder meetings", "isCorrect": false },
      { "id": "option_3", "text": "By finalizing all requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "By restricting stakeholder input to the product owner", "isCorrect": false }
    ],
    "hint": "Stakeholders engage more when they see results.",
    "answerDescription": "Delivering working software regularly helps stakeholders see progress and remain actively involved in development."
  },
  {
    "id": "agile_2729",
    "question": "Why should Agile teams proactively seek stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "To align development with business goals", "isCorrect": true },
      { "id": "option_2", "text": "To avoid modifying product features", "isCorrect": false },
      { "id": "option_3", "text": "To finalize requirements before the project starts", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for sprint planning", "isCorrect": false }
    ],
    "hint": "Stakeholder input guides product success.",
    "answerDescription": "Regular feedback ensures that development stays aligned with business needs and market demands."
  },
  {
    "id": "agile_2730",
    "question": "What is an effective way to manage stakeholder expectations in Agile?",
    "options": [
      { "id": "option_1", "text": "By maintaining transparency about progress", "isCorrect": true },
      { "id": "option_2", "text": "By limiting access to sprint demos", "isCorrect": false },
      { "id": "option_3", "text": "By preventing scope changes after sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "By allowing stakeholders to define team velocity", "isCorrect": false }
    ],
    "hint": "Clear communication prevents misunderstandings.",
    "answerDescription": "Keeping stakeholders informed about progress and challenges helps set realistic expectations."
  },
  {
    "id": "agile_2731",
    "question": "How can Agile teams handle disengaged stakeholders?",
    "options": [
      { "id": "option_1", "text": "By actively seeking their input and demonstrating value", "isCorrect": true },
      { "id": "option_2", "text": "By excluding them from sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "By proceeding without their feedback", "isCorrect": false },
      { "id": "option_4", "text": "By restricting them to final approval meetings", "isCorrect": false }
    ],
    "hint": "Stakeholder involvement is key to Agile success.",
    "answerDescription": "Encouraging collaboration and showing tangible results can help re-engage stakeholders in the Agile process."
  },
  {
    "id": "agile_2732",
    "question": "Why is it beneficial for Agile teams to educate stakeholders on Agile principles?",
    "options": [
      { "id": "option_1", "text": "To foster better collaboration and understanding", "isCorrect": true },
      { "id": "option_2", "text": "To give stakeholders control over sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for frequent feedback", "isCorrect": false },
      { "id": "option_4", "text": "To ensure stakeholders follow strict project timelines", "isCorrect": false }
    ],
    "hint": "Shared understanding improves collaboration.",
    "answerDescription": "When stakeholders understand Agile principles, they can provide more effective input and align better with development teams."
  },
  {
    "id": "agile_2733",
    "question": "Why is it important to involve stakeholders early in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To finalize the product roadmap before development", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment with business objectives", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the need for sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "To define all features upfront", "isCorrect": false }
    ],
    "hint": "Early stakeholder involvement helps guide project goals.",
    "answerDescription": "Engaging stakeholders early ensures that the product aligns with business needs and expectations."
  },
  {
    "id": "agile_2734",
    "question": "What is a key benefit of regular stakeholder feedback in Agile?",
    "options": [
      { "id": "option_1", "text": "It helps developers work in isolation", "isCorrect": false },
      { "id": "option_2", "text": "It ensures continuous improvement of the product", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "It minimizes stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Ongoing feedback helps refine the product over time.",
    "answerDescription": "Regular stakeholder input allows Agile teams to adapt and improve the product based on real needs."
  },
  {
    "id": "agile_2735",
    "question": "How should Agile teams manage multiple stakeholders with conflicting priorities?",
    "options": [
      { "id": "option_1", "text": "By implementing all stakeholder requests equally", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing work based on business value", "isCorrect": true },
      { "id": "option_3", "text": "By allowing the most senior stakeholder to decide", "isCorrect": false },
      { "id": "option_4", "text": "By delaying development until all conflicts are resolved", "isCorrect": false }
    ],
    "hint": "Business value should guide prioritization.",
    "answerDescription": "Agile teams use business value as a key factor in deciding which stakeholder requests to implement first."
  },
  {
    "id": "agile_2736",
    "question": "What is an effective way to keep stakeholders engaged throughout the Agile process?",
    "options": [
      { "id": "option_1", "text": "By limiting their involvement to project kickoff meetings", "isCorrect": false },
      { "id": "option_2", "text": "By providing regular updates and demos", "isCorrect": true },
      { "id": "option_3", "text": "By assigning them detailed technical tasks", "isCorrect": false },
      { "id": "option_4", "text": "By requiring them to approve each sprint backlog", "isCorrect": false }
    ],
    "hint": "Frequent visibility into progress helps engagement.",
    "answerDescription": "Regular updates and demos ensure stakeholders remain informed and invested in the projectâ€™s success."
  },
  {
    "id": "agile_2737",
    "question": "Why should Agile teams clearly communicate project risks to stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure risks are ignored until they become critical", "isCorrect": false },
      { "id": "option_2", "text": "To allow stakeholders to help mitigate them proactively", "isCorrect": true },
      { "id": "option_3", "text": "To transfer risk management to external consultants", "isCorrect": false },
      { "id": "option_4", "text": "To justify delays in project delivery", "isCorrect": false }
    ],
    "hint": "Stakeholders can play a role in risk mitigation.",
    "answerDescription": "Keeping stakeholders informed about risks allows for collaborative problem-solving and better decision-making."
  },
  {
    "id": "agile_2738",
    "question": "How can Agile teams ensure that stakeholders understand product progress?",
    "options": [
      { "id": "option_1", "text": "By sharing technical documentation only", "isCorrect": false },
      { "id": "option_2", "text": "By demonstrating working software frequently", "isCorrect": true },
      { "id": "option_3", "text": "By restricting access to sprint retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding non-technical discussions", "isCorrect": false }
    ],
    "hint": "Seeing results in action helps understanding.",
    "answerDescription": "Frequent demos of working software provide stakeholders with tangible proof of progress."
  },
  {
    "id": "agile_2739",
    "question": "What is the main reason for aligning stakeholder expectations in Agile?",
    "options": [
      { "id": "option_1", "text": "To finalize all requirements before development", "isCorrect": false },
      { "id": "option_2", "text": "To prevent misunderstandings about project scope and timelines", "isCorrect": true },
      { "id": "option_3", "text": "To avoid changes during development", "isCorrect": false },
      { "id": "option_4", "text": "To limit stakeholder involvement in decision-making", "isCorrect": false }
    ],
    "hint": "Clear expectations reduce surprises.",
    "answerDescription": "Aligning expectations helps ensure stakeholders and development teams share a common understanding of goals and timelines."
  },
  {
    "id": "agile_2740",
    "question": "Why should Agile teams educate stakeholders about Agile methodologies?",
    "options": [
      { "id": "option_1", "text": "To make them responsible for sprint execution", "isCorrect": false },
      { "id": "option_2", "text": "To foster collaboration and set realistic expectations", "isCorrect": true },
      { "id": "option_3", "text": "To shift decision-making away from the product owner", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate the need for frequent meetings", "isCorrect": false }
    ],
    "hint": "Understanding Agile improves collaboration.",
    "answerDescription": "When stakeholders understand Agile principles, they can provide more meaningful input and set realistic expectations."
  },
  {
    "id": "agile_2741",
    "question": "How can Agile teams effectively incorporate stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "By applying all feedback immediately", "isCorrect": false },
      { "id": "option_2", "text": "By evaluating feedback and prioritizing it based on impact", "isCorrect": true },
      { "id": "option_3", "text": "By collecting feedback only at project completion", "isCorrect": false },
      { "id": "option_4", "text": "By requiring all stakeholders to approve each sprint", "isCorrect": false }
    ],
    "hint": "Not all feedback carries the same weight.",
    "answerDescription": "Agile teams assess feedback carefully, ensuring changes align with business goals and user needs."
  },
  {
    "id": "agile_2742",
    "question": "What is a good practice for ensuring productive stakeholder meetings in Agile?",
    "options": [
      { "id": "option_1", "text": "By keeping meetings informal and unstructured", "isCorrect": false },
      { "id": "option_2", "text": "By setting clear objectives and agendas", "isCorrect": true },
      { "id": "option_3", "text": "By limiting participation to developers only", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding discussions about risks and challenges", "isCorrect": false }
    ],
    "hint": "Structured discussions lead to better outcomes.",
    "answerDescription": "Clear objectives and structured meetings help ensure productive conversations with stakeholders."
  },
  {
    "id": "agile_2743",
    "question": "What is the primary role of stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "To write and test code", "isCorrect": false },
      { "id": "option_2", "text": "To manage team workflows", "isCorrect": false },
      { "id": "option_3", "text": "To provide feedback and set business priorities", "isCorrect": true },
      { "id": "option_4", "text": "To approve daily task assignments", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute to business alignment and product direction.",
    "answerDescription": "Stakeholders play a crucial role in defining priorities and ensuring that the product meets business needs."
  },
  {
    "id": "agile_2744",
    "question": "How can Agile teams ensure effective collaboration with stakeholders?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder input to project initiation", "isCorrect": false },
      { "id": "option_2", "text": "By providing only high-level progress reports", "isCorrect": false },
      { "id": "option_3", "text": "By engaging them regularly through reviews and feedback loops", "isCorrect": true },
      { "id": "option_4", "text": "By assigning them direct responsibility for backlog management", "isCorrect": false }
    ],
    "hint": "Regular communication strengthens collaboration.",
    "answerDescription": "Frequent engagement ensures that stakeholder insights contribute to product improvements and alignment."
  },
  {
    "id": "agile_2745",
    "question": "Why should Agile teams prioritize transparency with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To allow stakeholders to control daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "To minimize stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "To build trust and ensure shared understanding", "isCorrect": true },
      { "id": "option_4", "text": "To avoid revealing project risks", "isCorrect": false }
    ],
    "hint": "Trust is built on open communication.",
    "answerDescription": "Transparency helps stakeholders stay informed and aligned with project goals, leading to better collaboration."
  },
  {
    "id": "agile_2746",
    "question": "What is the best way for Agile teams to handle conflicting stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By accepting all stakeholder demands equally", "isCorrect": false },
      { "id": "option_2", "text": "By ignoring less influential stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "By aligning priorities based on business value and feasibility", "isCorrect": true },
      { "id": "option_4", "text": "By delaying development until all conflicts are resolved", "isCorrect": false }
    ],
    "hint": "Business value should guide prioritization.",
    "answerDescription": "Stakeholders may have competing interests, so Agile teams must prioritize work based on the highest business impact."
  },
  {
    "id": "agile_2747",
    "question": "Which Agile event is most useful for keeping stakeholders engaged?",
    "options": [
      { "id": "option_1", "text": "Daily stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "Sprint reviews", "isCorrect": true },
      { "id": "option_4", "text": "Backlog refinement sessions", "isCorrect": false }
    ],
    "hint": "This event showcases progress and gathers feedback.",
    "answerDescription": "Sprint reviews provide stakeholders with opportunities to see working software and give valuable feedback."
  },
  {
    "id": "agile_2748",
    "question": "Why is stakeholder alignment crucial for Agile projects?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for frequent feedback", "isCorrect": false },
      { "id": "option_2", "text": "To finalize all requirements upfront", "isCorrect": false },
      { "id": "option_3", "text": "To ensure a shared vision and prevent scope misalignment", "isCorrect": true },
      { "id": "option_4", "text": "To allow developers to work independently", "isCorrect": false }
    ],
    "hint": "A shared vision minimizes project risks.",
    "answerDescription": "When stakeholders and Agile teams are aligned, the project stays on track and meets the intended business goals."
  },
  {
    "id": "agile_2749",
    "question": "What is the primary challenge of managing multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Lack of technical expertise among stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Overreliance on Agile ceremonies", "isCorrect": false },
      { "id": "option_3", "text": "Conflicting priorities and expectations", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders resisting project updates", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different needs.",
    "answerDescription": "Agile teams must manage diverse stakeholder interests and ensure that priorities align with business goals."
  },
  {
    "id": "agile_2750",
    "question": "How should Agile teams communicate project risks to stakeholders?",
    "options": [
      { "id": "option_1", "text": "By sharing only positive updates", "isCorrect": false },
      { "id": "option_2", "text": "By presenting risks only after they become critical", "isCorrect": false },
      { "id": "option_3", "text": "By proactively discussing risks and mitigation strategies", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding risk discussions to prevent concerns", "isCorrect": false }
    ],
    "hint": "Transparency in risk management leads to better decisions.",
    "answerDescription": "Proactive risk discussions help stakeholders support mitigation efforts and align expectations."
  },
  {
    "id": "agile_2751",
    "question": "What role do stakeholders play in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "They assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "They approve technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "They provide input on priorities and requirements", "isCorrect": true },
      { "id": "option_4", "text": "They determine sprint velocity", "isCorrect": false }
    ],
    "hint": "Stakeholders influence what gets built and when.",
    "answerDescription": "Stakeholders help shape backlog priorities by providing insights into business needs and customer expectations."
  },
  {
    "id": "agile_2752",
    "question": "Why is it important for stakeholders to attend Agile demos?",
    "options": [
      { "id": "option_1", "text": "To ensure that all completed tasks match the original plan", "isCorrect": false },
      { "id": "option_2", "text": "To dictate changes to the Agile process", "isCorrect": false },
      { "id": "option_3", "text": "To provide timely feedback and validate progress", "isCorrect": true },
      { "id": "option_4", "text": "To approve every user story before release", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback helps refine the product.",
    "answerDescription": "Stakeholders attending demos can provide immediate feedback, ensuring that the product evolves in the right direction."
  },
  {
    "id": "agile_2753",
    "question": "What is the main benefit of involving stakeholders early in Agile projects?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for Agile ceremonies", "isCorrect": false },
      { "id": "option_2", "text": "It speeds up coding and testing phases", "isCorrect": false },
      { "id": "option_3", "text": "It ensures minimal changes during development", "isCorrect": false },
      { "id": "option_4", "text": "It aligns business objectives with project goals", "isCorrect": true }
    ],
    "hint": "Early involvement leads to better alignment.",
    "answerDescription": "Stakeholders provide critical insights that help shape priorities and ensure the project delivers business value."
  },
  {
    "id": "agile_2754",
    "question": "How can Agile teams manage changing stakeholder expectations effectively?",
    "options": [
      { "id": "option_1", "text": "By freezing requirements after sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "By limiting stakeholder communication to sprint reviews", "isCorrect": false },
      { "id": "option_3", "text": "By following a rigid change control process", "isCorrect": false },
      { "id": "option_4", "text": "By using backlog refinement and iterative feedback", "isCorrect": true }
    ],
    "hint": "Frequent feedback helps adapt to changes.",
    "answerDescription": "Regular refinement sessions help Agile teams adjust priorities based on evolving stakeholder needs."
  },
  {
    "id": "agile_2755",
    "question": "What is a key indicator of strong stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "Minimal interaction with development teams", "isCorrect": false },
      { "id": "option_2", "text": "Approval of project scope before development begins", "isCorrect": false },
      { "id": "option_3", "text": "Involvement only during final testing", "isCorrect": false },
      { "id": "option_4", "text": "Active participation in sprint reviews and planning", "isCorrect": true }
    ],
    "hint": "Stakeholders should be actively involved throughout development.",
    "answerDescription": "When stakeholders engage in sprint reviews and planning, they help align the project with business needs."
  },
  {
    "id": "agile_2756",
    "question": "Why is it important to define stakeholder roles in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To ensure that only senior executives provide feedback", "isCorrect": false },
      { "id": "option_2", "text": "To prevent stakeholders from interfering with development", "isCorrect": false },
      { "id": "option_3", "text": "To limit stakeholder involvement to high-priority tasks", "isCorrect": false },
      { "id": "option_4", "text": "To clarify expectations and streamline decision-making", "isCorrect": true }
    ],
    "hint": "Clear roles help avoid confusion.",
    "answerDescription": "Defining stakeholder roles ensures that responsibilities are well understood and decision-making is efficient."
  },
  {
    "id": "agile_2757",
    "question": "What is one way Agile teams can demonstrate value to stakeholders?",
    "options": [
      { "id": "option_1", "text": "By delivering all features at once", "isCorrect": false },
      { "id": "option_2", "text": "By focusing only on technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By delivering incremental, working software frequently", "isCorrect": true }
    ],
    "hint": "Frequent delivery keeps stakeholders engaged.",
    "answerDescription": "Agile teams showcase progress by delivering functional increments, ensuring transparency and value realization."
  },
  {
    "id": "agile_2758",
    "question": "How can Agile teams prevent misunderstandings with stakeholders?",
    "options": [
      { "id": "option_1", "text": "By documenting all requirements upfront", "isCorrect": false },
      { "id": "option_2", "text": "By limiting stakeholder input", "isCorrect": false },
      { "id": "option_3", "text": "By relying solely on automated reports", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining open and continuous communication", "isCorrect": true }
    ],
    "hint": "Regular discussions improve clarity.",
    "answerDescription": "Frequent communication ensures that stakeholders and teams stay aligned, reducing the risk of misunderstandings."
  },
  {
    "id": "agile_2759",
    "question": "What challenge do Agile teams often face when working with multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Stakeholders always have identical priorities", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders rarely need updates", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders prefer a waterfall approach", "isCorrect": false },
      { "id": "option_4", "text": "Conflicting interests and shifting priorities", "isCorrect": true }
    ],
    "hint": "Different stakeholders may have competing goals.",
    "answerDescription": "Agile teams must balance multiple stakeholder expectations and focus on the highest-value priorities."
  },
  {
    "id": "agile_2760",
    "question": "Which Agile principle supports continuous stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Processes and tools over individuals and interactions", "isCorrect": false },
      { "id": "option_2", "text": "Responding to change over following a plan", "isCorrect": false },
      { "id": "option_3", "text": "Comprehensive documentation over working software", "isCorrect": false },
      { "id": "option_4", "text": "Customer collaboration over contract negotiation", "isCorrect": true }
    ],
    "hint": "Agile values strong collaboration with stakeholders.",
    "answerDescription": "Agile prioritizes working closely with stakeholders to ensure product success and adaptability."
  },
  {
    "id": "agile_2761",
    "question": "What is the main reason for involving stakeholders in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To finalize all sprint tasks in advance", "isCorrect": false },
      { "id": "option_2", "text": "To reduce team autonomy in decision-making", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate the need for product owner involvement", "isCorrect": false },
      { "id": "option_4", "text": "To ensure priorities align with business needs", "isCorrect": true }
    ],
    "hint": "Stakeholders influence product direction.",
    "answerDescription": "Backlog refinement ensures that stakeholders' needs and priorities are reflected in the product roadmap."
  },
  {
    "id": "agile_2762",
    "question": "How can Agile teams encourage stakeholder participation in Agile ceremonies?",
    "options": [
      { "id": "option_1", "text": "By making attendance optional without engagement", "isCorrect": false },
      { "id": "option_2", "text": "By restricting access to team discussions", "isCorrect": false },
      { "id": "option_3", "text": "By limiting their involvement to reporting", "isCorrect": false },
      { "id": "option_4", "text": "By showing how their input directly impacts outcomes", "isCorrect": true }
    ],
    "hint": "Stakeholders engage when they see value.",
    "answerDescription": "Demonstrating how stakeholder feedback influences decisions encourages active participation in Agile events."
  },
  {
    "id": "agile_2763",
    "question": "Why is stakeholder involvement crucial in Agile development?",
    "options": [
      { "id": "option_1", "text": "It helps align project goals with business needs", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for product backlog updates", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to avoid changing requirements", "isCorrect": false },
      { "id": "option_4", "text": "It minimizes communication between teams and customers", "isCorrect": false }
    ],
    "hint": "Agile emphasizes business alignment.",
    "answerDescription": "Active stakeholder engagement ensures the product meets business needs and delivers value."
  },
  {
    "id": "agile_2764",
    "question": "What is the best way to ensure stakeholder expectations are met in Agile?",
    "options": [
      { "id": "option_1", "text": "Frequent communication and feedback loops", "isCorrect": true },
      { "id": "option_2", "text": "Finalizing all requirements before development begins", "isCorrect": false },
      { "id": "option_3", "text": "Restricting stakeholder involvement to sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing requirement changes", "isCorrect": false }
    ],
    "hint": "Regular collaboration reduces misalignment.",
    "answerDescription": "Continuous stakeholder engagement ensures the product evolves to meet their expectations."
  },
  {
    "id": "agile_2765",
    "question": "How does stakeholder feedback influence Agile product development?",
    "options": [
      { "id": "option_1", "text": "It helps prioritize features based on business value", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "It ensures that the initial plan remains unchanged", "isCorrect": false },
      { "id": "option_4", "text": "It limits the flexibility of Agile teams", "isCorrect": false }
    ],
    "hint": "Stakeholders influence product direction.",
    "answerDescription": "Stakeholder feedback helps teams focus on the most valuable features, improving product relevance."
  },
  {
    "id": "agile_2766",
    "question": "What is a key way Agile teams build trust with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Delivering working software frequently", "isCorrect": true },
      { "id": "option_2", "text": "Avoiding stakeholder involvement until release", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing feedback cycles", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on technical excellence", "isCorrect": false }
    ],
    "hint": "Transparency builds trust.",
    "answerDescription": "Frequent software deliveries allow stakeholders to see progress and provide input regularly."
  },
  {
    "id": "agile_2767",
    "question": "Why should stakeholders participate in sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To provide feedback and adjust priorities", "isCorrect": true },
      { "id": "option_2", "text": "To finalize product requirements", "isCorrect": false },
      { "id": "option_3", "text": "To approve team velocity", "isCorrect": false },
      { "id": "option_4", "text": "To limit development changes", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback ensures relevance.",
    "answerDescription": "Sprint reviews allow stakeholders to review progress and suggest changes to maximize business value."
  },
  {
    "id": "agile_2768",
    "question": "What is the primary role of stakeholders in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "Helping prioritize features based on business needs", "isCorrect": true },
      { "id": "option_2", "text": "Defining all user stories in advance", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding changes to backlog items", "isCorrect": false },
      { "id": "option_4", "text": "Approving technical decisions", "isCorrect": false }
    ],
    "hint": "Stakeholders guide prioritization.",
    "answerDescription": "By participating in backlog refinement, stakeholders ensure features align with strategic goals."
  },
  {
    "id": "agile_2769",
    "question": "How can Agile teams ensure continuous stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By involving them in regular Agile ceremonies", "isCorrect": true },
      { "id": "option_2", "text": "By limiting their access to project updates", "isCorrect": false },
      { "id": "option_3", "text": "By finalizing all features before development starts", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding changes to the product roadmap", "isCorrect": false }
    ],
    "hint": "Engagement happens through regular interactions.",
    "answerDescription": "Regular involvement in Agile ceremonies keeps stakeholders informed and engaged throughout the project."
  },
  {
    "id": "agile_2770",
    "question": "Why is transparency important in Agile stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "It helps build trust and align expectations", "isCorrect": true },
      { "id": "option_2", "text": "It eliminates the need for sprint retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "It allows teams to work in isolation", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the importance of stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Openness fosters collaboration.",
    "answerDescription": "Clear communication ensures stakeholders understand progress and contribute effectively."
  },
  {
    "id": "agile_2771",
    "question": "What should Agile teams do when stakeholders have conflicting priorities?",
    "options": [
      { "id": "option_1", "text": "Facilitate discussions to align goals", "isCorrect": true },
      { "id": "option_2", "text": "Choose the highest-paying stakeholder's priority", "isCorrect": false },
      { "id": "option_3", "text": "Ignore lower-priority stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Follow the product owner's personal preference", "isCorrect": false }
    ],
    "hint": "Collaboration resolves conflicts.",
    "answerDescription": "Aligning stakeholder priorities through open discussions ensures the best outcomes for the project."
  },
  {
    "id": "agile_2772",
    "question": "How can Agile teams demonstrate progress to stakeholders?",
    "options": [
      { "id": "option_1", "text": "By showcasing working software in iterations", "isCorrect": true },
      { "id": "option_2", "text": "By delivering all features at project completion", "isCorrect": false },
      { "id": "option_3", "text": "By providing extensive documentation", "isCorrect": false },
      { "id": "option_4", "text": "By limiting stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Working software is the best progress indicator.",
    "answerDescription": "Demonstrating working software allows stakeholders to see value early and provide timely feedback."
  },
  {
    "id": "agile_2773",
    "question": "What is the impact of poor stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "Reduced alignment with business needs", "isCorrect": true },
      { "id": "option_2", "text": "Faster product development", "isCorrect": false },
      { "id": "option_3", "text": "More efficient technical decision-making", "isCorrect": false },
      { "id": "option_4", "text": "Better team autonomy", "isCorrect": false }
    ],
    "hint": "Lack of engagement affects product relevance.",
    "answerDescription": "Without stakeholder involvement, Agile teams may develop solutions that do not fully align with business priorities."
  },
  {
    "id": "agile_2774",
    "question": "How can Agile teams ensure effective collaboration with stakeholders?",
    "options": [
      { "id": "option_1", "text": "By maintaining open and frequent communication", "isCorrect": true },
      { "id": "option_2", "text": "By limiting stakeholder access to updates", "isCorrect": false },
      { "id": "option_3", "text": "By only involving stakeholders at project completion", "isCorrect": false },
      { "id": "option_4", "text": "By assigning technical tasks to stakeholders", "isCorrect": false }
    ],
    "hint": "Regular engagement keeps stakeholders aligned.",
    "answerDescription": "Frequent communication with stakeholders ensures they remain informed and engaged throughout the project."
  },
  {
    "id": "agile_2775",
    "question": "Why should stakeholders be involved throughout the Agile development process?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the product meets their needs", "isCorrect": true },
      { "id": "option_3", "text": "To finalize all project requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "To approve each sprint backlog", "isCorrect": false }
    ],
    "hint": "Continuous involvement improves outcomes.",
    "answerDescription": "Engaging stakeholders throughout development ensures the product remains relevant and valuable."
  },
  {
    "id": "agile_2776",
    "question": "What role do stakeholders play in Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "They dictate team velocity", "isCorrect": false },
      { "id": "option_2", "text": "They provide feedback on completed work", "isCorrect": true },
      { "id": "option_3", "text": "They approve all sprint deliverables", "isCorrect": false },
      { "id": "option_4", "text": "They define sprint goals", "isCorrect": false }
    ],
    "hint": "Sprint reviews are for feedback.",
    "answerDescription": "Stakeholders give valuable input in sprint reviews, helping refine the product direction."
  },
  {
    "id": "agile_2777",
    "question": "Which Agile artifact ensures transparency between the development team and stakeholders?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This artifact provides a prioritized list of work items visible to all.",
    "answerDescription": "The Product Backlog is a transparent artifact that helps stakeholders understand priorities and upcoming work."
  },
  {
    "id": "agile_2778",
    "question": "What is the best way to keep stakeholders informed in Agile?",
    "options": [
      { "id": "option_1", "text": "By providing only end-of-project reports", "isCorrect": false },
      { "id": "option_2", "text": "By giving regular updates through Agile ceremonies", "isCorrect": true },
      { "id": "option_3", "text": "By keeping all project details confidential", "isCorrect": false },
      { "id": "option_4", "text": "By only sharing success stories", "isCorrect": false }
    ],
    "hint": "Frequent updates prevent misalignment.",
    "answerDescription": "Regular updates in stand-ups, sprint reviews, and demos help keep stakeholders engaged and informed."
  },
  {
    "id": "agile_2779",
    "question": "How does stakeholder feedback impact Agile backlog management?",
    "options": [
      { "id": "option_1", "text": "It reduces the need for backlog refinement", "isCorrect": false },
      { "id": "option_2", "text": "It helps prioritize items based on business value", "isCorrect": true },
      { "id": "option_3", "text": "It prevents changes to the backlog", "isCorrect": false },
      { "id": "option_4", "text": "It delays the development process", "isCorrect": false }
    ],
    "hint": "Feedback ensures backlog relevance.",
    "answerDescription": "Stakeholder feedback helps refine backlog items to ensure they align with evolving business needs."
  },
  {
    "id": "agile_2780",
    "question": "What is the purpose of stakeholder collaboration in Agile?",
    "options": [
      { "id": "option_1", "text": "To enforce strict requirements", "isCorrect": false },
      { "id": "option_2", "text": "To ensure business and development alignment", "isCorrect": true },
      { "id": "option_3", "text": "To limit product changes", "isCorrect": false },
      { "id": "option_4", "text": "To accelerate software delivery without feedback", "isCorrect": false }
    ],
    "hint": "Collaboration ensures a shared vision.",
    "answerDescription": "Stakeholder collaboration ensures that the product meets both business goals and user needs."
  },
  {
    "id": "agile_2781",
    "question": "Why is stakeholder trust important in Agile projects?",
    "options": [
      { "id": "option_1", "text": "It fosters collaboration and reduces conflicts", "isCorrect": true },
      { "id": "option_2", "text": "It allows teams to ignore feedback", "isCorrect": false },
      { "id": "option_3", "text": "It removes the need for sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for retrospectives", "isCorrect": false }
    ],
    "hint": "Trust improves teamwork and alignment.",
    "answerDescription": "Stakeholder trust ensures smoother collaboration, leading to better decision-making and project success."
  },
  {
    "id": "agile_2782",
    "question": "What is the benefit of involving stakeholders in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "It locks down requirements permanently", "isCorrect": false },
      { "id": "option_2", "text": "It ensures backlog items align with business needs", "isCorrect": true },
      { "id": "option_3", "text": "It removes the need for sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "It limits the influence of changing priorities", "isCorrect": false }
    ],
    "hint": "Stakeholder input improves prioritization.",
    "answerDescription": "Involving stakeholders in backlog refinement helps keep development aligned with business objectives."
  },
  {
    "id": "agile_2783",
    "question": "Why is stakeholder feedback crucial in Agile development?",
    "options": [
      { "id": "option_1", "text": "It prevents scope changes", "isCorrect": false },
      { "id": "option_2", "text": "It eliminates the need for user testing", "isCorrect": false },
      { "id": "option_3", "text": "It helps refine and improve the product", "isCorrect": true },
      { "id": "option_4", "text": "It ensures faster delivery without changes", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback enhances the final product.",
    "answerDescription": "Continuous feedback from stakeholders ensures the product evolves in alignment with user needs and business goals."
  },
  {
    "id": "agile_2784",
    "question": "How should Agile teams handle changing stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By rejecting changes after sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "By finalizing all requirements upfront", "isCorrect": false },
      { "id": "option_3", "text": "By embracing change and adjusting priorities", "isCorrect": true },
      { "id": "option_4", "text": "By freezing the backlog to prevent changes", "isCorrect": false }
    ],
    "hint": "Agile values responding to change.",
    "answerDescription": "Agile teams welcome changing requirements to ensure the product remains relevant and valuable."
  },
  {
    "id": "agile_2785",
    "question": "What is a key responsibility of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Managing the development teamâ€™s daily work", "isCorrect": false },
      { "id": "option_2", "text": "Defining technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "Providing business insights and feedback", "isCorrect": true },
      { "id": "option_4", "text": "Approving every code commit", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute business knowledge.",
    "answerDescription": "Stakeholders help shape the product by providing feedback, setting priorities, and aligning the product with business goals."
  },
  {
    "id": "agile_2786",
    "question": "Why should Agile teams regularly engage with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To get approval for daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "To avoid any modifications to the backlog", "isCorrect": false },
      { "id": "option_3", "text": "To ensure alignment with business objectives", "isCorrect": true },
      { "id": "option_4", "text": "To finalize requirements early", "isCorrect": false }
    ],
    "hint": "Continuous engagement improves business alignment.",
    "answerDescription": "Regular stakeholder interactions help ensure that the Agile teamâ€™s work remains relevant and valuable to the business."
  },
  {
    "id": "agile_2787",
    "question": "Which Agile event is most effective for gathering stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "Daily stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Backlog grooming", "isCorrect": false },
      { "id": "option_3", "text": "Sprint review", "isCorrect": true },
      { "id": "option_4", "text": "Sprint retrospective", "isCorrect": false }
    ],
    "hint": "Stakeholders review completed work in this event.",
    "answerDescription": "Sprint reviews allow stakeholders to see progress and provide feedback to refine future iterations."
  },
  {
    "id": "agile_2788",
    "question": "What is the best way for stakeholders to support Agile teams?",
    "options": [
      { "id": "option_1", "text": "By dictating development priorities without discussion", "isCorrect": false },
      { "id": "option_2", "text": "By reviewing only the final product", "isCorrect": false },
      { "id": "option_3", "text": "By actively engaging and providing timely feedback", "isCorrect": true },
      { "id": "option_4", "text": "By approving all tasks before execution", "isCorrect": false }
    ],
    "hint": "Active engagement helps teams adapt.",
    "answerDescription": "Regular communication and feedback from stakeholders ensure that development stays aligned with business needs."
  },
  {
    "id": "agile_2789",
    "question": "How does stakeholder collaboration impact Agile project success?",
    "options": [
      { "id": "option_1", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_2", "text": "It increases project complexity", "isCorrect": false },
      { "id": "option_3", "text": "It enhances alignment and product relevance", "isCorrect": true },
      { "id": "option_4", "text": "It removes the need for Agile ceremonies", "isCorrect": false }
    ],
    "hint": "Collaboration ensures business alignment.",
    "answerDescription": "Effective stakeholder collaboration helps teams develop products that meet user and business needs."
  },
  {
    "id": "agile_2790",
    "question": "What challenge can arise from stakeholder involvement in Agile projects?",
    "options": [
      { "id": "option_1", "text": "A lack of necessary feedback", "isCorrect": false },
      { "id": "option_2", "text": "Reduced team productivity", "isCorrect": false },
      { "id": "option_3", "text": "Conflicting priorities that need alignment", "isCorrect": true },
      { "id": "option_4", "text": "Elimination of user testing", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different goals.",
    "answerDescription": "Conflicting stakeholder priorities require collaboration and negotiation to ensure alignment with project goals."
  },
  {
    "id": "agile_2791",
    "question": "How can Agile teams ensure stakeholder involvement is productive?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication", "isCorrect": false },
      { "id": "option_2", "text": "By following a rigid set of requirements", "isCorrect": false },
      { "id": "option_3", "text": "By defining clear roles and expectations", "isCorrect": true },
      { "id": "option_4", "text": "By assigning stakeholders to development tasks", "isCorrect": false }
    ],
    "hint": "Well-defined roles prevent confusion.",
    "answerDescription": "Setting clear expectations ensures stakeholders contribute effectively without disrupting Agile processes."
  },
  {
    "id": "agile_2792",
    "question": "What is the primary reason stakeholders should attend sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To approve the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "To evaluate team velocity", "isCorrect": false },
      { "id": "option_3", "text": "To provide feedback on completed work", "isCorrect": true },
      { "id": "option_4", "text": "To define team roles", "isCorrect": false }
    ],
    "hint": "Sprint reviews focus on showcasing work done.",
    "answerDescription": "Stakeholder feedback in sprint reviews helps refine the product and improve future development efforts."
  },
  {
    "id": "agile_2793",
    "question": "Why is it important for Agile teams to keep stakeholders informed?",
    "options": [
      { "id": "option_1", "text": "To reduce the need for product iterations", "isCorrect": false },
      { "id": "option_2", "text": "To avoid changes to the product vision", "isCorrect": false },
      { "id": "option_3", "text": "To finalize requirements early", "isCorrect": false },
      { "id": "option_4", "text": "To ensure alignment and continuous feedback", "isCorrect": true }
    ],
    "hint": "Regular updates help stakeholders guide the project.",
    "answerDescription": "Keeping stakeholders informed allows them to provide feedback, ensuring the project stays on track and meets expectations."
  },
  {
    "id": "agile_2794",
    "question": "How can stakeholders best contribute to Agile development?",
    "options": [
      { "id": "option_1", "text": "By defining technical architecture", "isCorrect": false },
      { "id": "option_2", "text": "By approving daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "By setting strict deadlines", "isCorrect": false },
      { "id": "option_4", "text": "By offering insights on business needs and priorities", "isCorrect": true }
    ],
    "hint": "Stakeholders provide business value, not technical details.",
    "answerDescription": "Stakeholders help guide development by sharing business insights, market trends, and user expectations."
  },
  {
    "id": "agile_2795",
    "question": "Which Agile principle highlights the role of stakeholders?",
    "options": [
      { "id": "option_1", "text": "Working software over comprehensive documentation", "isCorrect": false },
      { "id": "option_2", "text": "Responding to change over following a plan", "isCorrect": false },
      { "id": "option_3", "text": "Simplicityâ€”the art of maximizing the amount of work not done", "isCorrect": false },
      { "id": "option_4", "text": "Business people and developers must work together daily", "isCorrect": true }
    ],
    "hint": "Collaboration is key in Agile.",
    "answerDescription": "Agile emphasizes frequent interaction between stakeholders and teams to ensure business goals are met effectively."
  },
  {
    "id": "agile_2796",
    "question": "What is a common challenge in stakeholder management in Agile?",
    "options": [
      { "id": "option_1", "text": "Stakeholders demanding unrealistic deadlines", "isCorrect": false },
      { "id": "option_2", "text": "Lack of stakeholder interest in the product", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholders making technical decisions", "isCorrect": false },
      { "id": "option_4", "text": "Conflicting priorities among stakeholders", "isCorrect": true }
    ],
    "hint": "Different stakeholders have different expectations.",
    "answerDescription": "Agile teams must manage conflicting stakeholder needs through collaboration and prioritization techniques."
  },
  {
    "id": "agile_2797",
    "question": "How does Agile address stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By setting fixed requirements at the start", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding frequent interactions", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing speed over quality", "isCorrect": false },
      { "id": "option_4", "text": "By involving stakeholders in iterative feedback loops", "isCorrect": true }
    ],
    "hint": "Stakeholders contribute throughout the project.",
    "answerDescription": "Continuous stakeholder engagement ensures evolving business needs are addressed and expectations are met."
  },
  {
    "id": "agile_2798",
    "question": "What is the purpose of stakeholder feedback in Agile retrospectives?",
    "options": [
      { "id": "option_1", "text": "To define new feature requests", "isCorrect": false },
      { "id": "option_2", "text": "To assess team velocity", "isCorrect": false },
      { "id": "option_3", "text": "To allocate new project budgets", "isCorrect": false },
      { "id": "option_4", "text": "To improve collaboration and processes", "isCorrect": true }
    ],
    "hint": "Retrospectives focus on continuous improvement.",
    "answerDescription": "Stakeholder feedback in retrospectives helps teams refine their approach to collaboration and process efficiency."
  },
  {
    "id": "agile_2799",
    "question": "Which Agile framework emphasizes close stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Waterfall", "isCorrect": false },
      { "id": "option_2", "text": "Prince2", "isCorrect": false },
      { "id": "option_3", "text": "V-Model", "isCorrect": false },
      { "id": "option_4", "text": "Scrum", "isCorrect": true }
    ],
    "hint": "This framework includes Product Owners as key stakeholders.",
    "answerDescription": "Scrum ensures stakeholders are engaged through events like Sprint Reviews and Backlog Refinement."
  },
  {
    "id": "agile_2800",
    "question": "Why should stakeholders attend backlog refinement meetings?",
    "options": [
      { "id": "option_1", "text": "To dictate task assignments", "isCorrect": false },
      { "id": "option_2", "text": "To review daily stand-up discussions", "isCorrect": false },
      { "id": "option_3", "text": "To approve completed work", "isCorrect": false },
      { "id": "option_4", "text": "To help prioritize and clarify requirements", "isCorrect": true }
    ],
    "hint": "These meetings refine upcoming work.",
    "answerDescription": "Stakeholder participation ensures backlog items align with business goals and expectations."
  },
  {
    "id": "agile_2801",
    "question": "What is a key benefit of maintaining a strong relationship with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Fewer software releases", "isCorrect": false },
      { "id": "option_2", "text": "Reduced need for team communication", "isCorrect": false },
      { "id": "option_3", "text": "Less time spent on product development", "isCorrect": false },
      { "id": "option_4", "text": "Better alignment with business goals", "isCorrect": true }
    ],
    "hint": "Alignment ensures a valuable product.",
    "answerDescription": "A strong stakeholder relationship helps Agile teams create products that match business needs and user expectations."
  },
  {
    "id": "agile_2802",
    "question": "How do Agile teams prioritize stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By using techniques like MoSCoW and backlog refinement", "isCorrect": true },
      { "id": "option_2", "text": "By implementing all requirements immediately", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on technical improvements", "isCorrect": false },
      { "id": "option_4", "text": "By delaying less urgent requests indefinitely", "isCorrect": false }
    ],
    "hint": "Prioritization frameworks help teams manage stakeholder needs.",
    "answerDescription": "Techniques like MoSCoW and backlog refinement help Agile teams prioritize stakeholder requirements effectively."
  },
  {
    "id": "agile_2803",
    "question": "What is the primary role of stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To provide feedback and ensure business alignment", "isCorrect": true },
      { "id": "option_2", "text": "To assign technical tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "To create the Agile framework", "isCorrect": false },
      { "id": "option_4", "text": "To enforce deadlines without flexibility", "isCorrect": false }
    ],
    "hint": "Stakeholders influence project direction through feedback.",
    "answerDescription": "Stakeholders help guide Agile projects by providing business insights, setting priorities, and ensuring alignment with organizational goals."
  },
  {
    "id": "agile_2804",
    "question": "Why should stakeholders be actively involved throughout an Agile project?",
    "options": [
      { "id": "option_1", "text": "To ensure the product meets business needs", "isCorrect": true },
      { "id": "option_2", "text": "To micromanage development tasks", "isCorrect": false },
      { "id": "option_3", "text": "To define the technical architecture", "isCorrect": false },
      { "id": "option_4", "text": "To set fixed project requirements upfront", "isCorrect": false }
    ],
    "hint": "Continuous involvement ensures business value.",
    "answerDescription": "Active stakeholder participation ensures Agile teams stay aligned with evolving business requirements and user expectations."
  },
  {
    "id": "agile_2805",
    "question": "How do stakeholders contribute to Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "By providing feedback on the increment", "isCorrect": true },
      { "id": "option_2", "text": "By assigning tasks for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "By finalizing the backlog for the entire project", "isCorrect": false },
      { "id": "option_4", "text": "By making technical decisions for the team", "isCorrect": false }
    ],
    "hint": "Sprint reviews focus on feedback and improvement.",
    "answerDescription": "Stakeholders provide feedback on completed work during sprint reviews, ensuring alignment with business objectives."
  },
  {
    "id": "agile_2806",
    "question": "What is a key benefit of involving stakeholders in Agile planning?",
    "options": [
      { "id": "option_1", "text": "Ensures priorities align with business goals", "isCorrect": true },
      { "id": "option_2", "text": "Reduces the need for team collaboration", "isCorrect": false },
      { "id": "option_3", "text": "Eliminates the need for iteration", "isCorrect": false },
      { "id": "option_4", "text": "Speeds up code deployment", "isCorrect": false }
    ],
    "hint": "Stakeholders help set business priorities.",
    "answerDescription": "Stakeholder involvement in Agile planning ensures the team focuses on the most valuable features and requirements."
  },
  {
    "id": "agile_2807",
    "question": "Which Agile event allows stakeholders to inspect progress and provide feedback?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event happens at the end of each sprint.",
    "answerDescription": "The Sprint Review allows stakeholders to review progress, provide feedback, and help shape future development efforts."
  },
  {
    "id": "agile_2808",
    "question": "Why is stakeholder feedback important in Agile development?",
    "options": [
      { "id": "option_1", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_2", "text": "It ensures the product aligns with business goals", "isCorrect": true },
      { "id": "option_3", "text": "It reduces the need for testing and quality checks", "isCorrect": false },
      { "id": "option_4", "text": "It eliminates the need for sprint planning", "isCorrect": false }
    ],
    "hint": "Stakeholder input helps in aligning development with business needs.",
    "answerDescription": "Regular stakeholder feedback helps Agile teams ensure that the product meets expectations and business goals."
  },
  {
    "id": "agile_2809",
    "question": "Which method is most effective for keeping stakeholders engaged in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Providing them with a final product demo only", "isCorrect": false },
      { "id": "option_2", "text": "Involving them in sprint reviews and feedback loops", "isCorrect": true },
      { "id": "option_3", "text": "Restricting their involvement to planning phases", "isCorrect": false },
      { "id": "option_4", "text": "Sending them occasional project status reports", "isCorrect": false }
    ],
    "hint": "Regular interaction ensures stakeholder involvement.",
    "answerDescription": "Involving stakeholders in sprint reviews allows for continuous feedback and better alignment with project goals."
  },
  {
    "id": "agile_2810",
    "question": "What is a primary responsibility of a stakeholder in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To manage the development team's daily tasks", "isCorrect": false },
      { "id": "option_2", "text": "To provide feedback on product increments", "isCorrect": true },
      { "id": "option_3", "text": "To dictate all project requirements without flexibility", "isCorrect": false },
      { "id": "option_4", "text": "To create and estimate user stories", "isCorrect": false }
    ],
    "hint": "Stakeholders play a key role in providing feedback on product progress.",
    "answerDescription": "Stakeholders contribute to Agile projects by offering feedback on iterations and ensuring the product meets expectations."
  },
  {
    "id": "agile_2811",
    "question": "How can Agile teams ensure they meet stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By delivering the full product at the end of development", "isCorrect": false },
      { "id": "option_2", "text": "By frequently demonstrating working increments", "isCorrect": true },
      { "id": "option_3", "text": "By avoiding direct interactions with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By prioritizing technical perfection over user needs", "isCorrect": false }
    ],
    "hint": "Stakeholders need to see progress frequently.",
    "answerDescription": "Regular product demos and iterations help stakeholders see progress and provide necessary adjustments."
  },
  {
    "id": "agile_2812",
    "question": "Which Agile event is specifically designed for stakeholder involvement?",
    "options": [
      { "id": "option_1", "text": "Daily Standups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event showcases completed work to stakeholders.",
    "answerDescription": "The Sprint Review allows stakeholders to review progress and provide feedback on deliverables."
  },
  {
    "id": "agile_2813",
    "question": "What should Agile teams do if stakeholders have conflicting requirements?",
    "options": [
      { "id": "option_1", "text": "Follow the highest-ranking stakeholderâ€™s request", "isCorrect": false },
      { "id": "option_2", "text": "Facilitate discussions to reach a consensus", "isCorrect": true },
      { "id": "option_3", "text": "Ignore conflicting feedback and proceed as planned", "isCorrect": false },
      { "id": "option_4", "text": "Revert to a traditional project management approach", "isCorrect": false }
    ],
    "hint": "Collaboration is key to resolving conflicts.",
    "answerDescription": "Agile teams should encourage discussions among stakeholders to align on project priorities."
  },
  {
    "id": "agile_2814",
    "question": "Why is early stakeholder involvement crucial in Agile development?",
    "options": [
      { "id": "option_1", "text": "To ensure all features are finalized before development starts", "isCorrect": false },
      { "id": "option_2", "text": "To align development with business needs from the beginning", "isCorrect": true },
      { "id": "option_3", "text": "To avoid changes later in the process", "isCorrect": false },
      { "id": "option_4", "text": "To allow stakeholders to micromanage the development team", "isCorrect": false }
    ],
    "hint": "Stakeholders help shape the project vision early on.",
    "answerDescription": "Engaging stakeholders early helps Agile teams build products that align with business goals and user needs."
  },
  {
    "id": "agile_2815",
    "question": "How does Agile ensure continuous stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "By having stakeholders review the product only at the end", "isCorrect": false },
      { "id": "option_2", "text": "By encouraging ongoing feedback through iterative cycles", "isCorrect": true },
      { "id": "option_3", "text": "By limiting stakeholder interaction to the planning phase", "isCorrect": false },
      { "id": "option_4", "text": "By keeping stakeholders informed but not engaged", "isCorrect": false }
    ],
    "hint": "Frequent interaction keeps stakeholders engaged.",
    "answerDescription": "Agile methodologies emphasize continuous feedback loops to align development with stakeholder needs."
  },
  {
    "id": "agile_2816",
    "question": "What is the primary way stakeholders influence an Agile project?",
    "options": [
      { "id": "option_1", "text": "By determining team velocity", "isCorrect": false },
      { "id": "option_2", "text": "By providing feedback on the evolving product", "isCorrect": true },
      { "id": "option_3", "text": "By managing sprint backlogs directly", "isCorrect": false },
      { "id": "option_4", "text": "By assigning tasks to the development team", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute by assessing progress and guiding improvements.",
    "answerDescription": "Stakeholders provide essential feedback on product increments, helping teams refine and improve the final product."
  },
  {
    "id": "agile_2817",
    "question": "What role do stakeholders play in Agile backlog refinement?",
    "options": [
      { "id": "option_1", "text": "They directly manage and prioritize tasks", "isCorrect": false },
      { "id": "option_2", "text": "They provide input to refine requirements and priorities", "isCorrect": true },
      { "id": "option_3", "text": "They approve every sprint's backlog", "isCorrect": false },
      { "id": "option_4", "text": "They dictate the technical approach to development", "isCorrect": false }
    ],
    "hint": "Stakeholders help shape what gets built by offering insights.",
    "answerDescription": "In backlog refinement, stakeholders give input to ensure the backlog aligns with business needs and priorities."
  },
  {
    "id": "agile_2818",
    "question": "What is the main benefit of involving stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Faster coding and development", "isCorrect": false },
      { "id": "option_2", "text": "Less need for documentation", "isCorrect": false },
      { "id": "option_3", "text": "Better alignment with business goals", "isCorrect": true },
      { "id": "option_4", "text": "More control over team decisions", "isCorrect": false }
    ],
    "hint": "Stakeholders help ensure the project meets business needs.",
    "answerDescription": "Regular stakeholder involvement helps align product development with business goals and user expectations."
  },
  {
    "id": "agile_2819",
    "question": "How can Agile teams improve communication with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Sending stakeholders detailed reports only at project completion", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing stakeholder involvement to speed up work", "isCorrect": false },
      { "id": "option_3", "text": "Holding regular sprint reviews and feedback sessions", "isCorrect": true },
      { "id": "option_4", "text": "Allowing stakeholders to manage the development team", "isCorrect": false }
    ],
    "hint": "Frequent interaction ensures better alignment.",
    "answerDescription": "Sprint reviews and feedback loops help Agile teams keep stakeholders engaged and informed."
  },
  {
    "id": "agile_2820",
    "question": "Which Agile artifact helps stakeholders understand project progress?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_3", "text": "Product Backlog", "isCorrect": true },
      { "id": "option_4", "text": "Team Velocity Chart", "isCorrect": false }
    ],
    "hint": "This artifact contains prioritized work items.",
    "answerDescription": "The Product Backlog helps stakeholders track upcoming work and priorities in Agile projects."
  },
  {
    "id": "agile_2821",
    "question": "Why should stakeholders participate in backlog refinement sessions?",
    "options": [
      { "id": "option_1", "text": "To dictate development methodologies", "isCorrect": false },
      { "id": "option_2", "text": "To ensure developers follow strict requirements", "isCorrect": false },
      { "id": "option_3", "text": "To clarify priorities and refine requirements", "isCorrect": true },
      { "id": "option_4", "text": "To set daily coding tasks", "isCorrect": false }
    ],
    "hint": "Stakeholders help define what should be built.",
    "answerDescription": "By participating in backlog refinement, stakeholders ensure that priorities and requirements remain clear."
  },
  {
    "id": "agile_2822",
    "question": "Which Agile principle emphasizes stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Simplicityâ€”the art of maximizing work not done", "isCorrect": false },
      { "id": "option_2", "text": "Responding to change over following a plan", "isCorrect": false },
      { "id": "option_3", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_4", "text": "Continuous delivery of valuable software", "isCorrect": false }
    ],
    "hint": "It contrasts rigid contract terms with ongoing interaction.",
    "answerDescription": "Agile values customer collaboration to ensure project success and adaptability."
  },
  {
    "id": "agile_2823",
    "question": "What should teams do when stakeholders provide conflicting feedback?",
    "options": [
      { "id": "option_1", "text": "Ignore the feedback and follow their own plan", "isCorrect": false },
      { "id": "option_2", "text": "Implement changes based on the most senior stakeholderâ€™s opinion", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate discussions to align priorities", "isCorrect": true },
      { "id": "option_4", "text": "Pause development until an agreement is reached", "isCorrect": false }
    ],
    "hint": "Communication is key to resolving conflicts.",
    "answerDescription": "Agile teams should help stakeholders reach a consensus to ensure smooth project progress."
  },
  {
    "id": "agile_2824",
    "question": "What is the key reason for engaging stakeholders early in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To lock down all project requirements upfront", "isCorrect": false },
      { "id": "option_2", "text": "To prevent developers from making key decisions", "isCorrect": false },
      { "id": "option_3", "text": "To ensure alignment with business needs from the start", "isCorrect": true },
      { "id": "option_4", "text": "To reduce the number of iterations needed", "isCorrect": false }
    ],
    "hint": "Stakeholders shape the project vision.",
    "answerDescription": "Early stakeholder engagement helps Agile teams align with business objectives and avoid misalignment."
  },
  {
    "id": "agile_2825",
    "question": "What should stakeholders expect from a Sprint Review?",
    "options": [
      { "id": "option_1", "text": "A list of tasks completed without demonstration", "isCorrect": false },
      { "id": "option_2", "text": "A high-level presentation without interaction", "isCorrect": false },
      { "id": "option_3", "text": "A demonstration of working software and discussion", "isCorrect": true },
      { "id": "option_4", "text": "A finalized product ready for release", "isCorrect": false }
    ],
    "hint": "This meeting focuses on showing progress.",
    "answerDescription": "Sprint Reviews allow stakeholders to see the latest work and provide feedback before the next iteration."
  },
  {
    "id": "agile_2826",
    "question": "Which challenge can arise when stakeholders are not actively involved in Agile projects?",
    "options": [
      { "id": "option_1", "text": "The project will have too many iterations", "isCorrect": false },
      { "id": "option_2", "text": "Teams will spend too much time on documentation", "isCorrect": false },
      { "id": "option_3", "text": "Project goals may not align with business needs", "isCorrect": true },
      { "id": "option_4", "text": "Development teams will work too fast", "isCorrect": false }
    ],
    "hint": "Misalignment with business objectives can occur.",
    "answerDescription": "Lack of stakeholder involvement can result in products that do not fully meet business or customer needs."
  },
  {
    "id": "agile_2827",
    "question": "Why is transparency important in Agile stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "It helps reduce the number of meetings", "isCorrect": false },
      { "id": "option_2", "text": "It allows teams to hide delays until the last moment", "isCorrect": false },
      { "id": "option_3", "text": "It ensures stakeholders have clear visibility into progress", "isCorrect": true },
      { "id": "option_4", "text": "It allows stakeholders to directly control sprint tasks", "isCorrect": false }
    ],
    "hint": "Stakeholders need clear insights into the project.",
    "answerDescription": "Transparency ensures that stakeholders stay informed, reducing surprises and misalignment."
  },
  {
    "id": "agile_2828",
    "question": "What is the primary role of stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To assign daily tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To write code and develop features", "isCorrect": false },
      { "id": "option_3", "text": "To manage the Agile ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "To provide feedback and ensure business alignment", "isCorrect": true }
    ],
    "hint": "Stakeholders play a key role in guiding the project vision.",
    "answerDescription": "Stakeholders ensure that Agile teams build solutions that align with business needs by providing continuous feedback."
  },
  {
    "id": "agile_2829",
    "question": "Which Agile event is most important for gathering stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": true }
    ],
    "hint": "This event is focused on demonstrating completed work.",
    "answerDescription": "The Sprint Review allows stakeholders to see the progress made during the sprint and provide feedback for future iterations."
  },
  {
    "id": "agile_2830",
    "question": "Why is stakeholder buy-in crucial for Agile project success?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "It allows teams to bypass backlog grooming", "isCorrect": false },
      { "id": "option_3", "text": "It ensures stakeholders micromanage the team", "isCorrect": false },
      { "id": "option_4", "text": "It increases support and commitment to project outcomes", "isCorrect": true }
    ],
    "hint": "Support from key decision-makers strengthens project execution.",
    "answerDescription": "When stakeholders are fully engaged, they provide valuable input and ensure that Agile teams receive the necessary resources and approvals."
  },
  {
    "id": "agile_2831",
    "question": "How can Agile teams handle stakeholders with unrealistic expectations?",
    "options": [
      { "id": "option_1", "text": "Agree to all their requests to maintain a good relationship", "isCorrect": false },
      { "id": "option_2", "text": "Avoid communicating with them to prevent conflict", "isCorrect": false },
      { "id": "option_3", "text": "Ignore their feedback and follow their own roadmap", "isCorrect": false },
      { "id": "option_4", "text": "Educate them on Agile constraints and prioritization", "isCorrect": true }
    ],
    "hint": "Managing expectations requires open and informed discussions.",
    "answerDescription": "By explaining Agile principles and limitations, teams can align stakeholder expectations with realistic project capabilities."
  },
  {
    "id": "agile_2832",
    "question": "What is a key way to keep stakeholders engaged throughout an Agile project?",
    "options": [
      { "id": "option_1", "text": "Providing them with extensive documentation instead of meetings", "isCorrect": false },
      { "id": "option_2", "text": "Giving them direct control over sprint execution", "isCorrect": false },
      { "id": "option_3", "text": "Allowing them to dictate technical implementations", "isCorrect": false },
      { "id": "option_4", "text": "Regular updates, reviews, and transparent communication", "isCorrect": true }
    ],
    "hint": "Frequent collaboration builds strong stakeholder relationships.",
    "answerDescription": "By involving stakeholders in continuous updates and feedback loops, Agile teams ensure alignment and support."
  },
  {
    "id": "agile_2833",
    "question": "What is the risk of not involving stakeholders in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "The development team will have too many meetings", "isCorrect": false },
      { "id": "option_2", "text": "The backlog will become too detailed", "isCorrect": false },
      { "id": "option_3", "text": "The team will have complete autonomy over requirements", "isCorrect": false },
      { "id": "option_4", "text": "The product may not meet business needs", "isCorrect": true }
    ],
    "hint": "Lack of business input can lead to misaligned priorities.",
    "answerDescription": "Stakeholder involvement in backlog refinement helps ensure the highest priority items align with business goals and user needs."
  },
  {
    "id": "agile_2834",
    "question": "Which technique can Agile teams use to gain deeper insights from stakeholders?",
    "options": [
      { "id": "option_1", "text": "Only engaging them at project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "Using detailed contracts instead of discussions", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding their input to prevent unnecessary changes", "isCorrect": false },
      { "id": "option_4", "text": "Conducting stakeholder interviews and workshops", "isCorrect": true }
    ],
    "hint": "Direct engagement provides better understanding of needs.",
    "answerDescription": "Interviews and workshops allow teams to gather detailed insights on business priorities and customer needs."
  },
  {
    "id": "agile_2835",
    "question": "How does stakeholder feedback improve Agile product development?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict requirements that never change", "isCorrect": false },
      { "id": "option_2", "text": "By eliminating the need for retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring that teams focus only on technical improvements", "isCorrect": false },
      { "id": "option_4", "text": "By enabling teams to adapt to changing market needs", "isCorrect": true }
    ],
    "hint": "Agility is all about responding to change effectively.",
    "answerDescription": "Stakeholder feedback ensures that products remain relevant and aligned with evolving business and customer demands."
  },
  {
    "id": "agile_2836",
    "question": "What should teams do if stakeholders frequently change project priorities?",
    "options": [
      { "id": "option_1", "text": "Ignore the changes and continue the original plan", "isCorrect": false },
      { "id": "option_2", "text": "Adopt a rigid workflow to prevent modifications", "isCorrect": false },
      { "id": "option_3", "text": "Stop development until priorities are finalized", "isCorrect": false },
      { "id": "option_4", "text": "Continuously reassess backlog priorities and adjust accordingly", "isCorrect": true }
    ],
    "hint": "Flexibility is key to Agile success.",
    "answerDescription": "By continuously prioritizing the backlog based on new insights, Agile teams can remain responsive to business needs."
  },
  {
    "id": "agile_2837",
    "question": "Which stakeholder role is most crucial in defining the product vision?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Quality Assurance Tester", "isCorrect": false },
      { "id": "option_4", "text": "Product Owner", "isCorrect": true }
    ],
    "hint": "This role acts as the bridge between business and development.",
    "answerDescription": "The Product Owner is responsible for defining and communicating the product vision based on stakeholder input."
  },
  {
    "id": "agile_2838",
    "question": "Why is stakeholder communication crucial in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To ensure alignment between business goals and development", "isCorrect": true },
      { "id": "option_2", "text": "To allow stakeholders to dictate sprint tasks", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for team retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To replace backlog refinement meetings", "isCorrect": false }
    ],
    "hint": "Effective communication ensures business needs are met.",
    "answerDescription": "Regular communication with stakeholders ensures that Agile teams build solutions aligned with business objectives."
  },
  {
    "id": "agile_2839",
    "question": "What is a key responsibility of stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "Providing feedback on product increments", "isCorrect": true },
      { "id": "option_2", "text": "Managing sprint backlog directly", "isCorrect": false },
      { "id": "option_3", "text": "Defining the technical implementation", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating the need for a Product Owner", "isCorrect": false }
    ],
    "hint": "Stakeholders play an active role in guiding the product.",
    "answerDescription": "Stakeholders provide valuable feedback during reviews, helping to shape the product based on business needs."
  },
  {
    "id": "agile_2840",
    "question": "How can Agile teams effectively manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By setting clear priorities and maintaining transparency", "isCorrect": true },
      { "id": "option_2", "text": "By committing to all stakeholder demands", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding stakeholder involvement until the project is complete", "isCorrect": false },
      { "id": "option_4", "text": "By limiting communication to only the project sponsor", "isCorrect": false }
    ],
    "hint": "Transparency and prioritization help align expectations.",
    "answerDescription": "Clear priorities and open communication prevent misunderstandings and keep stakeholders engaged."
  },
  {
    "id": "agile_2841",
    "question": "Which Agile event allows stakeholders to assess progress and provide input?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Standup", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event showcases completed work to stakeholders.",
    "answerDescription": "Sprint Reviews provide stakeholders an opportunity to see progress and offer feedback for future development."
  },
  {
    "id": "agile_2842",
    "question": "What should Agile teams do if stakeholders frequently change requirements?",
    "options": [
      { "id": "option_1", "text": "Emphasize backlog refinement and reprioritization", "isCorrect": true },
      { "id": "option_2", "text": "Ignore the changes and continue with the original plan", "isCorrect": false },
      { "id": "option_3", "text": "Completely stop development until priorities are finalized", "isCorrect": false },
      { "id": "option_4", "text": "Allow stakeholders to micromanage the sprint backlog", "isCorrect": false }
    ],
    "hint": "Frequent prioritization helps teams stay on track.",
    "answerDescription": "Backlog refinement ensures that the most valuable features are always prioritized, even if requirements evolve."
  },
  {
    "id": "agile_2843",
    "question": "How does stakeholder involvement benefit Agile teams?",
    "options": [
      { "id": "option_1", "text": "By ensuring alignment with customer and business needs", "isCorrect": true },
      { "id": "option_2", "text": "By replacing the need for a Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "By reducing the need for sprint retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By giving stakeholders full control over development tasks", "isCorrect": false }
    ],
    "hint": "Stakeholders help ensure product-market fit.",
    "answerDescription": "Engaged stakeholders provide valuable insights that align the product with customer and business expectations."
  },
  {
    "id": "agile_2844",
    "question": "Why should Agile teams regularly update stakeholders on progress?",
    "options": [
      { "id": "option_1", "text": "To keep them engaged and informed on developments", "isCorrect": true },
      { "id": "option_2", "text": "To get approval for every minor change", "isCorrect": false },
      { "id": "option_3", "text": "To avoid involving them in decision-making", "isCorrect": false },
      { "id": "option_4", "text": "To replace the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Regular updates help maintain stakeholder trust.",
    "answerDescription": "By keeping stakeholders informed, teams ensure continued alignment and support for the project."
  },
  {
    "id": "agile_2845",
    "question": "What is a common challenge when dealing with multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Balancing conflicting interests and priorities", "isCorrect": true },
      { "id": "option_2", "text": "Allowing all stakeholders to dictate development", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding stakeholder input to maintain team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "Ignoring stakeholder concerns until the project ends", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different objectives.",
    "answerDescription": "Agile teams must navigate conflicting priorities to ensure the best outcome for the project."
  },
  {
    "id": "agile_2846",
    "question": "How can Agile teams ensure that stakeholder feedback is actionable?",
    "options": [
      { "id": "option_1", "text": "By clarifying requirements and defining priorities", "isCorrect": true },
      { "id": "option_2", "text": "By implementing every suggestion immediately", "isCorrect": false },
      { "id": "option_3", "text": "By limiting stakeholder involvement to planning", "isCorrect": false },
      { "id": "option_4", "text": "By treating all feedback as equally urgent", "isCorrect": false }
    ],
    "hint": "Understanding priorities helps teams focus on key improvements.",
    "answerDescription": "Clarifying stakeholder expectations ensures that feedback is useful and aligns with project goals."
  },
  {
    "id": "agile_2847",
    "question": "What is the benefit of inviting stakeholders to Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "They can provide direct feedback on completed work", "isCorrect": true },
      { "id": "option_2", "text": "They can assign tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "They can control sprint execution", "isCorrect": false },
      { "id": "option_4", "text": "They can replace the need for a Product Owner", "isCorrect": false }
    ],
    "hint": "Sprint Reviews foster transparency and feedback.",
    "answerDescription": "By participating in Sprint Reviews, stakeholders can assess progress and help refine the product direction."
  },
  {
    "id": "agile_2848",
    "question": "Why is stakeholder engagement crucial in Agile development?",
    "options": [
      { "id": "option_1", "text": "It minimizes customer involvement in decision-making", "isCorrect": false },
      { "id": "option_2", "text": "It allows teams to work without external interference", "isCorrect": false },
      { "id": "option_3", "text": "It ensures alignment with business needs and user expectations", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for iterative feedback", "isCorrect": false }
    ],
    "hint": "Stakeholder engagement helps refine product goals.",
    "answerDescription": "By actively involving stakeholders, teams ensure that the product aligns with evolving business and user needs."
  },
  {
    "id": "agile_2849",
    "question": "What is the primary benefit of frequent stakeholder feedback in Agile?",
    "options": [
      { "id": "option_1", "text": "It slows down development cycles", "isCorrect": false },
      { "id": "option_2", "text": "It increases uncertainty in project direction", "isCorrect": false },
      { "id": "option_3", "text": "It enables rapid course corrections and improved product quality", "isCorrect": true },
      { "id": "option_4", "text": "It reduces the need for user testing", "isCorrect": false }
    ],
    "hint": "Feedback helps teams adjust early.",
    "answerDescription": "Regular feedback allows Agile teams to refine their product direction and enhance quality based on stakeholder input."
  },
  {
    "id": "agile_2850",
    "question": "How do stakeholders contribute to backlog refinement in Agile?",
    "options": [
      { "id": "option_1", "text": "By ignoring user requirements and focusing on business goals only", "isCorrect": false },
      { "id": "option_2", "text": "By controlling the development teamâ€™s tasks", "isCorrect": false },
      { "id": "option_3", "text": "By providing insights on priorities, dependencies, and business value", "isCorrect": true },
      { "id": "option_4", "text": "By finalizing all backlog items at the start of the project", "isCorrect": false }
    ],
    "hint": "Stakeholders provide key business perspectives.",
    "answerDescription": "Stakeholders help refine backlog items by prioritizing them based on business needs and value delivery."
  },
  {
    "id": "agile_2851",
    "question": "What is a key challenge of stakeholder management in Agile?",
    "options": [
      { "id": "option_1", "text": "Stakeholders always agree on priorities", "isCorrect": false },
      { "id": "option_2", "text": "Stakeholders have little impact on project success", "isCorrect": false },
      { "id": "option_3", "text": "Balancing diverse expectations and interests", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholder engagement is only needed at project completion", "isCorrect": false }
    ],
    "hint": "Managing different perspectives can be complex.",
    "answerDescription": "Since stakeholders have varied interests, Agile teams must manage conflicting priorities and ensure alignment."
  },
  {
    "id": "agile_2852",
    "question": "Which stakeholder is most concerned with product-market fit in Agile?",
    "options": [
      { "id": "option_1", "text": "Development team members", "isCorrect": false },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": true },
      { "id": "option_4", "text": "QA Engineers", "isCorrect": false }
    ],
    "hint": "This role defines product vision and prioritization.",
    "answerDescription": "The Product Owner ensures that the product meets market demands and aligns with business strategy."
  },
  {
    "id": "agile_2853",
    "question": "Why is it important to identify key stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To restrict access to project information", "isCorrect": false },
      { "id": "option_2", "text": "To ensure only senior management is involved", "isCorrect": false },
      { "id": "option_3", "text": "To engage the right people for feedback and decision-making", "isCorrect": true },
      { "id": "option_4", "text": "To limit the number of opinions considered", "isCorrect": false }
    ],
    "hint": "Stakeholders influence product direction.",
    "answerDescription": "Engaging the right stakeholders ensures the project aligns with business needs and user expectations."
  },
  {
    "id": "agile_2854",
    "question": "How can Agile teams ensure effective stakeholder communication?",
    "options": [
      { "id": "option_1", "text": "By sending long, detailed reports weekly", "isCorrect": false },
      { "id": "option_2", "text": "By restricting stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "By using frequent, transparent, and concise updates", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding discussions on project challenges", "isCorrect": false }
    ],
    "hint": "Transparency and clarity improve communication.",
    "answerDescription": "Regular, clear, and honest communication fosters strong stakeholder relationships and trust."
  },
  {
    "id": "agile_2855",
    "question": "What role do stakeholders play in Agile sprint reviews?",
    "options": [
      { "id": "option_1", "text": "They approve final product releases", "isCorrect": false },
      { "id": "option_2", "text": "They dictate all development decisions", "isCorrect": false },
      { "id": "option_3", "text": "They provide feedback on the increment and suggest improvements", "isCorrect": true },
      { "id": "option_4", "text": "They determine team velocity", "isCorrect": false }
    ],
    "hint": "Sprint reviews allow stakeholders to assess progress.",
    "answerDescription": "Stakeholders give feedback in sprint reviews, helping the team adjust features and priorities."
  },
  {
    "id": "agile_2856",
    "question": "Which of the following is a best practice for stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "Avoiding discussions on scope changes", "isCorrect": false },
      { "id": "option_2", "text": "Only engaging stakeholders at project completion", "isCorrect": false },
      { "id": "option_3", "text": "Involving stakeholders in iterative feedback loops", "isCorrect": true },
      { "id": "option_4", "text": "Allowing only one stakeholder to make all decisions", "isCorrect": false }
    ],
    "hint": "Frequent interactions help refine requirements.",
    "answerDescription": "Engaging stakeholders continuously ensures alignment with business goals and user needs."
  },
  {
    "id": "agile_2857",
    "question": "What is a key challenge when managing stakeholder expectations in Agile?",
    "options": [
      { "id": "option_1", "text": "Ensuring all requirements are locked upfront", "isCorrect": false },
      { "id": "option_2", "text": "Delivering a fixed scope within a strict timeline", "isCorrect": false },
      { "id": "option_3", "text": "Balancing evolving requirements with team capacity", "isCorrect": true },
      { "id": "option_4", "text": "Preventing stakeholder involvement in iterations", "isCorrect": false }
    ],
    "hint": "Stakeholders often introduce changing requirements that teams must manage.",
    "answerDescription": "Agile teams must balance changing stakeholder needs with the teamâ€™s capacity and development constraints."
  },
  {
    "id": "agile_2858",
    "question": "Which strategy best ensures continuous stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "Limiting interactions to project milestones", "isCorrect": false },
      { "id": "option_2", "text": "Conducting regular meetings and feedback sessions", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding direct discussions on project progress", "isCorrect": false },
      { "id": "option_4", "text": "Only sharing updates when requested", "isCorrect": false }
    ],
    "hint": "Stakeholders should be involved frequently.",
    "answerDescription": "Regular engagement through meetings and feedback sessions ensures alignment with business objectives."
  },
  {
    "id": "agile_2859",
    "question": "What is a key characteristic of an effective stakeholder in Agile development?",
    "options": [
      { "id": "option_1", "text": "Providing rigid, unchangeable requirements", "isCorrect": false },
      { "id": "option_2", "text": "Being open to collaboration and iterative changes", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding participation in sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Focusing only on budget constraints", "isCorrect": false }
    ],
    "hint": "Adaptability is crucial in Agile environments.",
    "answerDescription": "Effective stakeholders collaborate with the team and adapt requirements based on iterative feedback."
  },
  {
    "id": "agile_2860",
    "question": "Why is stakeholder alignment important in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To eliminate flexibility in decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To ensure the project remains focused on common goals", "isCorrect": true },
      { "id": "option_3", "text": "To reduce customer involvement in product development", "isCorrect": false },
      { "id": "option_4", "text": "To avoid changes based on market feedback", "isCorrect": false }
    ],
    "hint": "Common goals help Agile teams stay on track.",
    "answerDescription": "Aligning stakeholders ensures the project direction supports shared objectives and business needs."
  },
  {
    "id": "agile_2861",
    "question": "What is the main reason for prioritizing stakeholder needs in Agile?",
    "options": [
      { "id": "option_1", "text": "To follow a strict hierarchical decision-making process", "isCorrect": false },
      { "id": "option_2", "text": "To deliver maximum value based on business and user priorities", "isCorrect": true },
      { "id": "option_3", "text": "To ensure the product is completed as quickly as possible", "isCorrect": false },
      { "id": "option_4", "text": "To avoid discussions on project scope", "isCorrect": false }
    ],
    "hint": "Value delivery is key in Agile projects.",
    "answerDescription": "Prioritizing stakeholder needs ensures that Agile teams focus on delivering high-value features that align with business goals."
  },
  {
    "id": "agile_2862",
    "question": "How can Agile teams effectively manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By avoiding conversations about project challenges", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining transparency and setting realistic goals", "isCorrect": true },
      { "id": "option_3", "text": "By making promises without considering feasibility", "isCorrect": false },
      { "id": "option_4", "text": "By limiting stakeholder involvement in decision-making", "isCorrect": false }
    ],
    "hint": "Clear communication helps manage expectations.",
    "answerDescription": "Being transparent and setting achievable goals helps Agile teams align with stakeholder expectations and build trust."
  },
  {
    "id": "agile_2863",
    "question": "Which Agile event provides stakeholders an opportunity to review progress?",
    "options": [
      { "id": "option_1", "text": "Daily Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event showcases the increment to stakeholders.",
    "answerDescription": "Sprint Reviews allow stakeholders to assess the product increment and provide valuable feedback."
  },
  {
    "id": "agile_2864",
    "question": "What is a critical factor in maintaining strong stakeholder relationships in Agile?",
    "options": [
      { "id": "option_1", "text": "Minimizing direct communication", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging continuous collaboration and trust-building", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding discussions about project risks", "isCorrect": false },
      { "id": "option_4", "text": "Keeping stakeholders informed only at the projectâ€™s end", "isCorrect": false }
    ],
    "hint": "Regular interactions foster trust.",
    "answerDescription": "Consistent communication and collaboration help Agile teams maintain productive stakeholder relationships."
  },
  {
    "id": "agile_2865",
    "question": "Which role is primarily responsible for managing stakeholder expectations in Scrum?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Agile Coach", "isCorrect": false }
    ],
    "hint": "This role prioritizes and communicates with stakeholders.",
    "answerDescription": "The Product Owner manages stakeholder expectations by defining priorities and ensuring alignment with business objectives."
  },
  {
    "id": "agile_2866",
    "question": "How can stakeholders best support an Agile team?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines with no flexibility", "isCorrect": false },
      { "id": "option_2", "text": "By providing timely feedback and clarifications", "isCorrect": true },
      { "id": "option_3", "text": "By reducing their involvement until product release", "isCorrect": false },
      { "id": "option_4", "text": "By requiring all features to be implemented at once", "isCorrect": false }
    ],
    "hint": "Frequent feedback helps teams stay on track.",
    "answerDescription": "Engaged stakeholders who offer feedback and clarifications enable Agile teams to make informed decisions and adjustments."
  },
  {
    "id": "agile_2867",
    "question": "What is the main goal of stakeholder involvement in Agile retrospectives?",
    "options": [
      { "id": "option_1", "text": "To determine team salaries and promotions", "isCorrect": false },
      { "id": "option_2", "text": "To provide insights that help improve collaboration and processes", "isCorrect": true },
      { "id": "option_3", "text": "To finalize sprint deliverables", "isCorrect": false },
      { "id": "option_4", "text": "To approve feature releases", "isCorrect": false }
    ],
    "hint": "Retrospectives focus on continuous improvement.",
    "answerDescription": "Stakeholder involvement in retrospectives helps Agile teams refine their processes and enhance collaboration."
  },{
    "id": "agile_2868",
    "question": "What is a primary reason for involving stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To impose strict deadlines and penalties", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the team's autonomy", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the project aligns with business goals", "isCorrect": true },
      { "id": "option_4", "text": "To limit changes during development", "isCorrect": false }
    ],
    "hint": "Business alignment is key in Agile.",
    "answerDescription": "Engaging stakeholders ensures that Agile teams deliver solutions aligned with business needs and objectives."
  },
  {
    "id": "agile_2869",
    "question": "How should Agile teams handle conflicting stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "Prioritize the highest-ranking stakeholder's request", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the conflicts to maintain team focus", "isCorrect": false },
      { "id": "option_3", "text": "Facilitate discussions to align expectations", "isCorrect": true },
      { "id": "option_4", "text": "Delay decision-making until the final product release", "isCorrect": false }
    ],
    "hint": "Collaboration helps resolve conflicts.",
    "answerDescription": "Agile teams should foster open discussions to resolve stakeholder conflicts and ensure alignment."
  },
  {
    "id": "agile_2870",
    "question": "Which approach helps maintain stakeholder trust in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Avoid sharing project challenges", "isCorrect": false },
      { "id": "option_2", "text": "Provide updates only when necessary", "isCorrect": false },
      { "id": "option_3", "text": "Ensure transparency in communication", "isCorrect": true },
      { "id": "option_4", "text": "Limit stakeholder involvement in reviews", "isCorrect": false }
    ],
    "hint": "Openness builds trust.",
    "answerDescription": "Clear and transparent communication fosters trust between Agile teams and stakeholders."
  },
  {
    "id": "agile_2871",
    "question": "What is a key benefit of stakeholder feedback in Agile?",
    "options": [
      { "id": "option_1", "text": "It allows stakeholders to control sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "It ensures the team follows a fixed scope", "isCorrect": false },
      { "id": "option_3", "text": "It helps refine the product based on real needs", "isCorrect": true },
      { "id": "option_4", "text": "It prevents scope changes", "isCorrect": false }
    ],
    "hint": "Feedback helps refine deliverables.",
    "answerDescription": "Stakeholder feedback ensures that the product evolves to meet actual business and user needs."
  },
  {
    "id": "agile_2872",
    "question": "Which stakeholder behavior can negatively impact Agile teams?",
    "options": [
      { "id": "option_1", "text": "Providing regular feedback on progress", "isCorrect": false },
      { "id": "option_2", "text": "Participating in sprint reviews", "isCorrect": false },
      { "id": "option_3", "text": "Constantly changing priorities mid-sprint", "isCorrect": true },
      { "id": "option_4", "text": "Aligning expectations with the Product Owner", "isCorrect": false }
    ],
    "hint": "Frequent changes can disrupt progress.",
    "answerDescription": "Shifting priorities mid-sprint can cause disruption and reduce team efficiency."
  },
  {
    "id": "agile_2873",
    "question": "What should Agile teams do when stakeholders request features outside of sprint goals?",
    "options": [
      { "id": "option_1", "text": "Immediately add the feature to the sprint backlog", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the request to stay focused", "isCorrect": false },
      { "id": "option_3", "text": "Evaluate and prioritize it for future sprints", "isCorrect": true },
      { "id": "option_4", "text": "Abandon current sprint goals", "isCorrect": false }
    ],
    "hint": "Prioritization is essential in Agile.",
    "answerDescription": "New feature requests should be assessed and planned for future sprints to maintain sprint focus."
  },
  {
    "id": "agile_2874",
    "question": "How can Agile teams ensure stakeholders remain engaged throughout a project?",
    "options": [
      { "id": "option_1", "text": "Limit their involvement to initial planning", "isCorrect": false },
      { "id": "option_2", "text": "Provide updates only at the end of development", "isCorrect": false },
      { "id": "option_3", "text": "Encourage regular participation in Agile ceremonies", "isCorrect": true },
      { "id": "option_4", "text": "Restrict discussions to product owners only", "isCorrect": false }
    ],
    "hint": "Stakeholder participation is vital.",
    "answerDescription": "Involving stakeholders in Agile ceremonies keeps them informed and engaged throughout the project."
  },
  {
    "id": "agile_2875",
    "question": "What role do stakeholders play in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "They define all sprint tasks", "isCorrect": false },
      { "id": "option_2", "text": "They finalize sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "They provide insights to prioritize backlog items", "isCorrect": true },
      { "id": "option_4", "text": "They manage team workload", "isCorrect": false }
    ],
    "hint": "Stakeholders influence prioritization.",
    "answerDescription": "Stakeholders offer valuable input to help prioritize backlog items for optimal business value."
  },
  {
    "id": "agile_2876",
    "question": "What is the best way to align stakeholder expectations with Agile teams?",
    "options": [
      { "id": "option_1", "text": "Restrict their access to sprint progress updates", "isCorrect": false },
      { "id": "option_2", "text": "Avoid discussing evolving project needs", "isCorrect": false },
      { "id": "option_3", "text": "Set clear expectations through continuous communication", "isCorrect": true },
      { "id": "option_4", "text": "Ensure fixed requirements from the start", "isCorrect": false }
    ],
    "hint": "Clear communication is key.",
    "answerDescription": "Regular communication ensures stakeholder expectations align with Agile team workflows."
  },
  {
    "id": "agile_2877",
    "question": "Why is stakeholder involvement crucial in Agile decision-making?",
    "options": [
      { "id": "option_1", "text": "To micromanage development tasks", "isCorrect": false },
      { "id": "option_2", "text": "To enforce rigid project constraints", "isCorrect": false },
      { "id": "option_3", "text": "To ensure business goals are considered", "isCorrect": true },
      { "id": "option_4", "text": "To reduce team autonomy", "isCorrect": false }
    ],
    "hint": "Business alignment drives Agile success.",
    "answerDescription": "Stakeholders ensure that Agile teams consider business needs in decision-making processes."
  },
  {
    "id": "agile_2878",
    "question": "Why is it important to identify stakeholders early in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To minimize their influence on the project", "isCorrect": false },
      { "id": "option_2", "text": "To ensure they approve every sprint task", "isCorrect": false },
      { "id": "option_3", "text": "To prevent scope creep entirely", "isCorrect": false },
      { "id": "option_4", "text": "To align project goals with business needs", "isCorrect": true }
    ],
    "hint": "Early engagement helps ensure project alignment.",
    "answerDescription": "Identifying stakeholders early helps Agile teams align project goals with business objectives."
  },
  {
    "id": "agile_2879",
    "question": "How can Agile teams effectively manage stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By avoiding discussions about evolving project needs", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring stakeholders review only final deliverables", "isCorrect": false },
      { "id": "option_3", "text": "By keeping stakeholders out of backlog discussions", "isCorrect": false },
      { "id": "option_4", "text": "By maintaining transparency and regular communication", "isCorrect": true }
    ],
    "hint": "Frequent updates help manage expectations.",
    "answerDescription": "Clear communication ensures stakeholders are aligned with Agile teams and understand project progress."
  },
  {
    "id": "agile_2880",
    "question": "Which stakeholder behavior can hinder Agile project success?",
    "options": [
      { "id": "option_1", "text": "Providing consistent feedback", "isCorrect": false },
      { "id": "option_2", "text": "Engaging in backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "Participating in sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Insisting on fixed requirements with no flexibility", "isCorrect": true }
    ],
    "hint": "Agile values adaptability over rigidity.",
    "answerDescription": "Agile thrives on flexibility, and rigid requirements can lead to project inefficiencies."
  },
  {
    "id": "agile_2881",
    "question": "What is the role of a Product Owner in managing stakeholder input?",
    "options": [
      { "id": "option_1", "text": "To prioritize stakeholder demands over team needs", "isCorrect": false },
      { "id": "option_2", "text": "To exclude stakeholders from backlog discussions", "isCorrect": false },
      { "id": "option_3", "text": "To implement every stakeholder request immediately", "isCorrect": false },
      { "id": "option_4", "text": "To balance stakeholder needs with business priorities", "isCorrect": true }
    ],
    "hint": "Product Owners must align priorities effectively.",
    "answerDescription": "A Product Owner ensures stakeholder needs align with business objectives and development priorities."
  },
  {
    "id": "agile_2882",
    "question": "Why is stakeholder feedback crucial in Agile retrospectives?",
    "options": [
      { "id": "option_1", "text": "To dictate the team's process changes", "isCorrect": false },
      { "id": "option_2", "text": "To control the team's daily activities", "isCorrect": false },
      { "id": "option_3", "text": "To define individual team member tasks", "isCorrect": false },
      { "id": "option_4", "text": "To help identify areas for continuous improvement", "isCorrect": true }
    ],
    "hint": "Retrospectives focus on team growth.",
    "answerDescription": "Stakeholder input helps Agile teams refine processes and improve overall performance."
  },
  {
    "id": "agile_2883",
    "question": "How can Agile teams ensure stakeholder collaboration remains productive?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder communication", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding discussions about project risks", "isCorrect": false },
      { "id": "option_3", "text": "By rejecting feedback that contradicts team goals", "isCorrect": false },
      { "id": "option_4", "text": "By fostering open dialogue and shared decision-making", "isCorrect": true }
    ],
    "hint": "Agile values collaboration and transparency.",
    "answerDescription": "Encouraging open discussions ensures stakeholders contribute meaningfully to project decisions."
  },
  {
    "id": "agile_2884",
    "question": "What is a key challenge in managing multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Ensuring all stakeholders have equal decision power", "isCorrect": false },
      { "id": "option_2", "text": "Preventing stakeholders from interacting with the team", "isCorrect": false },
      { "id": "option_3", "text": "Avoiding stakeholder involvement in sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "Balancing conflicting interests while maintaining focus", "isCorrect": true }
    ],
    "hint": "Multiple perspectives can create challenges.",
    "answerDescription": "Agile teams must balance diverse stakeholder needs without losing sight of project goals."
  },
  {
    "id": "agile_2885",
    "question": "Which Agile practice helps stakeholders stay informed about progress?",
    "options": [
      { "id": "option_1", "text": "Restricting access to sprint planning meetings", "isCorrect": false },
      { "id": "option_2", "text": "Providing updates only at project completion", "isCorrect": false },
      { "id": "option_3", "text": "Reducing the number of stakeholder touchpoints", "isCorrect": false },
      { "id": "option_4", "text": "Conducting regular sprint reviews and demos", "isCorrect": true }
    ],
    "hint": "Agile encourages frequent feedback.",
    "answerDescription": "Sprint reviews and demos allow stakeholders to track progress and provide timely input."
  },
  {
    "id": "agile_2886",
    "question": "How can Agile teams handle changing stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "By ignoring changes to maintain the original plan", "isCorrect": false },
      { "id": "option_2", "text": "By requiring approval from all team members", "isCorrect": false },
      { "id": "option_3", "text": "By forcing stakeholders to stick to initial requirements", "isCorrect": false },
      { "id": "option_4", "text": "By adapting the backlog and reassessing priorities", "isCorrect": true }
    ],
    "hint": "Agility means adapting to change.",
    "answerDescription": "Backlog refinement ensures Agile teams can accommodate changing stakeholder priorities."
  },
  {
    "id": "agile_2887",
    "question": "Why should stakeholders participate in Agile sprint planning?",
    "options": [
      { "id": "option_1", "text": "To dictate how the development team works", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all requests are completed in one sprint", "isCorrect": false },
      { "id": "option_3", "text": "To finalize a rigid project plan", "isCorrect": false },
      { "id": "option_4", "text": "To provide input on priority tasks and objectives", "isCorrect": true }
    ],
    "hint": "Stakeholders help define priorities.",
    "answerDescription": "Stakeholders contribute valuable insights to prioritize sprint goals effectively."
  },
  {
    "id": "agile_2888",
    "question": "What is a key responsibility of stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Providing feedback and clarifying requirements", "isCorrect": true },
      { "id": "option_2", "text": "Managing the development teamâ€™s daily tasks", "isCorrect": false },
      { "id": "option_3", "text": "Controlling every decision made by the team", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating Agile ceremonies to speed up delivery", "isCorrect": false }
    ],
    "hint": "Stakeholders help refine the project vision.",
    "answerDescription": "In Agile, stakeholders provide valuable feedback and clarify requirements to ensure project success."
  },
  {
    "id": "agile_2889",
    "question": "Why should stakeholders be involved in sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To evaluate progress and provide feedback", "isCorrect": true },
      { "id": "option_2", "text": "To assign tasks to development team members", "isCorrect": false },
      { "id": "option_3", "text": "To finalize future project budgets", "isCorrect": false },
      { "id": "option_4", "text": "To dictate the sprint goals", "isCorrect": false }
    ],
    "hint": "Sprint reviews provide insight into project progress.",
    "answerDescription": "Stakeholders use sprint reviews to assess the current state of the project and provide necessary input."
  },
  {
    "id": "agile_2890",
    "question": "What is an effective way to engage stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Involving them in backlog refinement discussions", "isCorrect": true },
      { "id": "option_2", "text": "Limiting their participation to project kickoff", "isCorrect": false },
      { "id": "option_3", "text": "Keeping them away from sprint planning", "isCorrect": false },
      { "id": "option_4", "text": "Only updating them after the final release", "isCorrect": false }
    ],
    "hint": "Continuous collaboration is key in Agile.",
    "answerDescription": "In Agile, involving stakeholders in backlog refinement ensures alignment with business priorities."
  },
  {
    "id": "agile_2891",
    "question": "Which Agile event allows stakeholders to provide feedback on working increments?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "Stakeholders review and assess the delivered work.",
    "answerDescription": "Sprint Reviews allow stakeholders to see working increments and provide feedback."
  },
  {
    "id": "agile_2892",
    "question": "How does stakeholder feedback influence Agile development?",
    "options": [
      { "id": "option_1", "text": "It helps refine requirements and priorities", "isCorrect": true },
      { "id": "option_2", "text": "It replaces the role of the Product Owner", "isCorrect": false },
      { "id": "option_3", "text": "It is only considered at project closure", "isCorrect": false },
      { "id": "option_4", "text": "It forces the team to change sprint goals mid-cycle", "isCorrect": false }
    ],
    "hint": "Feedback ensures continuous improvement.",
    "answerDescription": "Stakeholder input is essential for refining requirements and ensuring alignment with business goals."
  },
  {
    "id": "agile_2893",
    "question": "Why is stakeholder buy-in critical for Agile success?",
    "options": [
      { "id": "option_1", "text": "It ensures alignment between business goals and development", "isCorrect": true },
      { "id": "option_2", "text": "It allows stakeholders to directly assign team tasks", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for Agile ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "It prevents the need for backlog refinement", "isCorrect": false }
    ],
    "hint": "Agile works best with stakeholder support.",
    "answerDescription": "When stakeholders support Agile, development aligns better with business needs and priorities."
  },
  {
    "id": "agile_2894",
    "question": "What is a benefit of continuous stakeholder involvement in Agile?",
    "options": [
      { "id": "option_1", "text": "Ensuring the project delivers maximum business value", "isCorrect": true },
      { "id": "option_2", "text": "Eliminating the need for product increments", "isCorrect": false },
      { "id": "option_3", "text": "Allowing developers to ignore changing priorities", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring all tasks are predefined at project start", "isCorrect": false }
    ],
    "hint": "Business value is a key Agile priority.",
    "answerDescription": "Continuous involvement ensures that the project stays aligned with evolving business needs."
  },
  {
    "id": "agile_2895",
    "question": "What is the primary reason for prioritizing stakeholder collaboration in Agile?",
    "options": [
      { "id": "option_1", "text": "To adapt to changes quickly and effectively", "isCorrect": true },
      { "id": "option_2", "text": "To control every aspect of team execution", "isCorrect": false },
      { "id": "option_3", "text": "To slow down decision-making", "isCorrect": false },
      { "id": "option_4", "text": "To make sprint reviews optional", "isCorrect": false }
    ],
    "hint": "Agile values responsiveness to change.",
    "answerDescription": "Stakeholder collaboration ensures agility in adapting to evolving business requirements."
  },
  {
    "id": "agile_2896",
    "question": "Which Agile principle emphasizes working closely with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_2", "text": "Comprehensive documentation over working software", "isCorrect": false },
      { "id": "option_3", "text": "Processes and tools over individuals and interactions", "isCorrect": false },
      { "id": "option_4", "text": "Following a strict project plan", "isCorrect": false }
    ],
    "hint": "Agile prioritizes collaboration over rigid contracts.",
    "answerDescription": "This Agile principle ensures that customer and stakeholder needs are met through close collaboration."
  },
  {
    "id": "agile_2897",
    "question": "How does Agile ensure stakeholder satisfaction?",
    "options": [
      { "id": "option_1", "text": "By delivering working software frequently", "isCorrect": true },
      { "id": "option_2", "text": "By restricting stakeholders from project discussions", "isCorrect": false },
      { "id": "option_3", "text": "By locking requirements at project start", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating sprint reviews", "isCorrect": false }
    ],
    "hint": "Frequent deliveries lead to better feedback cycles.",
    "answerDescription": "Agile ensures stakeholder satisfaction by delivering working software frequently for review."
  },
  {
    "id": "agile_2898",
    "question": "Why is it important for Agile teams to collaborate with stakeholders regularly?",
    "options": [
      { "id": "option_1", "text": "To avoid changing project requirements", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the number of product increments", "isCorrect": false },
      { "id": "option_4", "text": "To limit stakeholder influence on the project", "isCorrect": false }
    ],
    "hint": "Agile teams need to stay aligned with business priorities.",
    "answerDescription": "Regular collaboration with stakeholders ensures that the project continues to meet business objectives."
  },
  {
    "id": "agile_2899",
    "question": "What is a key benefit of involving stakeholders in Agile decision-making?",
    "options": [
      { "id": "option_1", "text": "To prevent Agile teams from making independent decisions", "isCorrect": false },
      { "id": "option_2", "text": "To improve prioritization based on business value", "isCorrect": true },
      { "id": "option_3", "text": "To delay feedback until after project completion", "isCorrect": false },
      { "id": "option_4", "text": "To eliminate sprint planning meetings", "isCorrect": false }
    ],
    "hint": "Business value plays a crucial role in Agile decisions.",
    "answerDescription": "Involving stakeholders helps prioritize work based on business impact and customer needs."
  },
  {
    "id": "agile_2900",
    "question": "How can stakeholders best support Agile development teams?",
    "options": [
      { "id": "option_1", "text": "By setting fixed project requirements", "isCorrect": false },
      { "id": "option_2", "text": "By providing continuous feedback and clarifications", "isCorrect": true },
      { "id": "option_3", "text": "By enforcing strict deadlines without flexibility", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding engagement until project completion", "isCorrect": false }
    ],
    "hint": "Feedback is essential for Agile progress.",
    "answerDescription": "Stakeholders help Agile teams succeed by offering timely feedback and requirement clarifications."
  },
  {
    "id": "agile_2901",
    "question": "Which Agile event is specifically designed to involve stakeholders?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to see progress and give input.",
    "answerDescription": "Sprint Reviews give stakeholders an opportunity to review working increments and provide feedback."
  },
  {
    "id": "agile_2902",
    "question": "What is a common challenge in stakeholder engagement in Agile?",
    "options": [
      { "id": "option_1", "text": "Too much focus on Agile ceremonies", "isCorrect": false },
      { "id": "option_2", "text": "Lack of stakeholder availability for feedback", "isCorrect": true },
      { "id": "option_3", "text": "Having too many user stories in the backlog", "isCorrect": false },
      { "id": "option_4", "text": "Overemphasis on technical documentation", "isCorrect": false }
    ],
    "hint": "Stakeholders need to be engaged consistently.",
    "answerDescription": "One key challenge is ensuring that stakeholders are available to provide continuous input throughout the project."
  },
  {
    "id": "agile_2903",
    "question": "How does Agile encourage stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "By limiting their involvement to project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "By emphasizing frequent communication and feedback", "isCorrect": true },
      { "id": "option_3", "text": "By allowing stakeholders to make all development decisions", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding stakeholder input in backlog prioritization", "isCorrect": false }
    ],
    "hint": "Communication is a key Agile principle.",
    "answerDescription": "Agile relies on regular stakeholder communication to ensure alignment with evolving business needs."
  },
  {
    "id": "agile_2904",
    "question": "Why should stakeholders be involved in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To directly assign tasks to developers", "isCorrect": false },
      { "id": "option_2", "text": "To ensure product backlog items align with business needs", "isCorrect": true },
      { "id": "option_3", "text": "To control technical implementation decisions", "isCorrect": false },
      { "id": "option_4", "text": "To finalize sprint commitments in advance", "isCorrect": false }
    ],
    "hint": "Backlog refinement ensures business priorities are met.",
    "answerDescription": "Stakeholders contribute to backlog refinement by aligning priorities with customer and business needs."
  },
  {
    "id": "agile_2905",
    "question": "Which Agile principle promotes stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "Following a strict project plan", "isCorrect": false },
      { "id": "option_2", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_3", "text": "Working software over comprehensive documentation", "isCorrect": false },
      { "id": "option_4", "text": "Processes and tools over individuals and interactions", "isCorrect": false }
    ],
    "hint": "Agile prioritizes collaboration with customers and stakeholders.",
    "answerDescription": "This principle ensures that stakeholders remain involved throughout the project lifecycle."
  },
  {
    "id": "agile_2906",
    "question": "What is the primary expectation from stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "To dictate how the team executes tasks", "isCorrect": false },
      { "id": "option_2", "text": "To provide timely feedback and insights", "isCorrect": true },
      { "id": "option_3", "text": "To finalize all requirements upfront", "isCorrect": false },
      { "id": "option_4", "text": "To review the product only after development ends", "isCorrect": false }
    ],
    "hint": "Stakeholders play a key role in guiding development.",
    "answerDescription": "Agile depends on stakeholder feedback to make iterative improvements and align with business goals."
  },
  {
    "id": "agile_2907",
    "question": "How does continuous stakeholder involvement benefit an Agile project?",
    "options": [
      { "id": "option_1", "text": "By ensuring all project risks are eliminated", "isCorrect": false },
      { "id": "option_2", "text": "By increasing adaptability to changing requirements", "isCorrect": true },
      { "id": "option_3", "text": "By reducing the need for Agile ceremonies", "isCorrect": false },
      { "id": "option_4", "text": "By finalizing all deliverables at project start", "isCorrect": false }
    ],
    "hint": "Agile thrives on adaptability.",
    "answerDescription": "Engaging stakeholders regularly allows Agile teams to adapt to changes and refine priorities effectively."
  }, {
    "id": "agile_2908",
    "question": "What is the primary role of stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "To dictate technical solutions", "isCorrect": false },
      { "id": "option_2", "text": "To set rigid project deadlines", "isCorrect": false },
      { "id": "option_3", "text": "To provide feedback and prioritize business needs", "isCorrect": true },
      { "id": "option_4", "text": "To approve every sprint increment", "isCorrect": false }
    ],
    "hint": "Stakeholders guide business priorities and feedback.",
    "answerDescription": "Stakeholders help Agile teams align their work with business objectives through feedback and prioritization."
  },
  {
    "id": "agile_2909",
    "question": "Why is early and continuous stakeholder involvement important in Agile?",
    "options": [
      { "id": "option_1", "text": "To finalize requirements before development begins", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the frequency of sprint reviews", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the product evolves based on real needs", "isCorrect": true },
      { "id": "option_4", "text": "To speed up the Agile process by minimizing feedback", "isCorrect": false }
    ],
    "hint": "Stakeholder input helps Agile teams adapt.",
    "answerDescription": "Regular stakeholder involvement ensures that the product remains aligned with evolving business and customer needs."
  },
  {
    "id": "agile_2910",
    "question": "What is a key challenge when engaging stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Too much focus on team autonomy", "isCorrect": false },
      { "id": "option_2", "text": "Excessive documentation requirements", "isCorrect": false },
      { "id": "option_3", "text": "Stakeholder availability and commitment", "isCorrect": true },
      { "id": "option_4", "text": "Strict adherence to traditional project management methods", "isCorrect": false }
    ],
    "hint": "Consistent stakeholder participation is essential.",
    "answerDescription": "One challenge in Agile is ensuring stakeholders remain available and engaged throughout the development process."
  },
  {
    "id": "agile_2911",
    "question": "Which Agile framework emphasizes stakeholder collaboration through program increment planning?",
    "options": [
      { "id": "option_1", "text": "Scrum", "isCorrect": false },
      { "id": "option_2", "text": "Kanban", "isCorrect": false },
      { "id": "option_3", "text": "SAFe (Scaled Agile Framework)", "isCorrect": true },
      { "id": "option_4", "text": "Extreme Programming (XP)", "isCorrect": false }
    ],
    "hint": "This framework is designed for scaling Agile across enterprises.",
    "answerDescription": "SAFe includes program increment (PI) planning to ensure strong stakeholder collaboration and alignment."
  },
  {
    "id": "agile_2912",
    "question": "What is a recommended way for Agile teams to keep stakeholders engaged?",
    "options": [
      { "id": "option_1", "text": "Limiting stakeholder access to backlog discussions", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding stakeholder input until the final product release", "isCorrect": false },
      { "id": "option_3", "text": "Regular sprint reviews and feedback sessions", "isCorrect": true },
      { "id": "option_4", "text": "Finalizing all requirements upfront", "isCorrect": false }
    ],
    "hint": "Frequent feedback opportunities keep stakeholders engaged.",
    "answerDescription": "Regular sprint reviews allow stakeholders to provide input and ensure alignment with project goals."
  },
  {
    "id": "agile_2913",
    "question": "Which of the following is NOT a benefit of involving stakeholders in Agile development?",
    "options": [
      { "id": "option_1", "text": "Improved alignment with business needs", "isCorrect": false },
      { "id": "option_2", "text": "Faster response to changing requirements", "isCorrect": false },
      { "id": "option_3", "text": "Eliminating the need for team retrospectives", "isCorrect": true },
      { "id": "option_4", "text": "Increased customer satisfaction", "isCorrect": false }
    ],
    "hint": "Stakeholders impact product value but not team processes.",
    "answerDescription": "While stakeholder involvement improves many aspects of Agile, it does not replace internal team retrospectives."
  },
  {
    "id": "agile_2914",
    "question": "What is the most effective way for stakeholders to contribute to an Agile project?",
    "options": [
      { "id": "option_1", "text": "By enforcing strict deadlines for each sprint", "isCorrect": false },
      { "id": "option_2", "text": "By managing the team's day-to-day tasks", "isCorrect": false },
      { "id": "option_3", "text": "By providing feedback on deliverables and priorities", "isCorrect": true },
      { "id": "option_4", "text": "By reviewing the product only at project completion", "isCorrect": false }
    ],
    "hint": "Stakeholders help refine priorities and provide input.",
    "answerDescription": "Stakeholders add value by continuously reviewing progress and adjusting priorities to ensure business alignment."
  },
  {
    "id": "agile_2915",
    "question": "How can Agile teams ensure that stakeholder feedback is actionable?",
    "options": [
      { "id": "option_1", "text": "By collecting feedback only at the end of the project", "isCorrect": false },
      { "id": "option_2", "text": "By relying only on automated reports", "isCorrect": false },
      { "id": "option_3", "text": "By organizing structured review sessions", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding feedback that changes project scope", "isCorrect": false }
    ],
    "hint": "Regular, structured discussions help clarify feedback.",
    "answerDescription": "Structured review sessions help Agile teams capture and implement actionable stakeholder feedback."
  },
  {
    "id": "agile_2916",
    "question": "What is a major reason why Agile teams conduct Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To finalize all project documentation", "isCorrect": false },
      { "id": "option_2", "text": "To complete unfinished backlog items", "isCorrect": false },
      { "id": "option_3", "text": "To gather stakeholder feedback on product increments", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks for the next sprint", "isCorrect": false }
    ],
    "hint": "Stakeholders play a key role in Sprint Reviews.",
    "answerDescription": "Sprint Reviews provide an opportunity for stakeholders to review progress and provide input on the next steps."
  },
  {
    "id": "agile_2917",
    "question": "Which metric can help stakeholders assess the progress of an Agile project?",
    "options": [
      { "id": "option_1", "text": "Number of team meetings held", "isCorrect": false },
      { "id": "option_2", "text": "Amount of documentation produced", "isCorrect": false },
      { "id": "option_3", "text": "Velocity of completed story points", "isCorrect": true },
      { "id": "option_4", "text": "Total number of backlog items", "isCorrect": false }
    ],
    "hint": "This metric tracks the team's work output over time.",
    "answerDescription": "Velocity measures how many story points a team completes in a sprint, providing insight into project progress."
  }, {
    "id": "agile_2918",
    "question": "Which type of stakeholder is primarily responsible for defining business requirements in Agile?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Technical Lead", "isCorrect": false },
      { "id": "option_4", "text": "Product Owner", "isCorrect": true }
    ],
    "hint": "This role bridges the gap between business and development.",
    "answerDescription": "The Product Owner is responsible for defining business requirements and maintaining the product backlog."
  },
  {
    "id": "agile_2919",
    "question": "What is the best way for Agile teams to manage conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "Ignore lower-priority stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "Follow the direction of the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_3", "text": "Implement changes without discussion", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions to align priorities", "isCorrect": true }
    ],
    "hint": "Stakeholder collaboration is key in Agile.",
    "answerDescription": "Aligning priorities through facilitated discussions helps ensure that stakeholder expectations are balanced."
  },
  {
    "id": "agile_2920",
    "question": "How can Agile teams ensure that stakeholders remain actively involved?",
    "options": [
      { "id": "option_1", "text": "Restrict stakeholder participation in meetings", "isCorrect": false },
      { "id": "option_2", "text": "Limit updates to only major project milestones", "isCorrect": false },
      { "id": "option_3", "text": "Discourage changes based on feedback", "isCorrect": false },
      { "id": "option_4", "text": "Hold frequent and transparent communication sessions", "isCorrect": true }
    ],
    "hint": "Consistent engagement is crucial for Agile success.",
    "answerDescription": "Frequent communication keeps stakeholders involved, informed, and aligned with the development process."
  },
  {
    "id": "agile_2921",
    "question": "Which of the following is a key responsibility of stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Managing team velocity", "isCorrect": false },
      { "id": "option_2", "text": "Assigning daily tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Overseeing technical implementation", "isCorrect": false },
      { "id": "option_4", "text": "Providing feedback on product increments", "isCorrect": true }
    ],
    "hint": "Stakeholders shape the product through ongoing feedback.",
    "answerDescription": "Stakeholders play a crucial role by reviewing and providing feedback on Agile deliverables."
  },
  {
    "id": "agile_2922",
    "question": "Why is it important for stakeholders to attend sprint reviews?",
    "options": [
      { "id": "option_1", "text": "To evaluate team performance based on speed", "isCorrect": false },
      { "id": "option_2", "text": "To finalize the product scope for the next sprint", "isCorrect": false },
      { "id": "option_3", "text": "To micromanage development progress", "isCorrect": false },
      { "id": "option_4", "text": "To assess product progress and provide input", "isCorrect": true }
    ],
    "hint": "Sprint reviews allow stakeholders to guide development.",
    "answerDescription": "Stakeholders attend sprint reviews to ensure the product is evolving as expected and to offer course corrections."
  },
  {
    "id": "agile_2923",
    "question": "What is the primary purpose of stakeholder feedback in Agile development?",
    "options": [
      { "id": "option_1", "text": "To enforce fixed project deadlines", "isCorrect": false },
      { "id": "option_2", "text": "To validate the technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all requirements are locked in early", "isCorrect": false },
      { "id": "option_4", "text": "To continuously refine and improve the product", "isCorrect": true }
    ],
    "hint": "Agile values iterative improvements based on feedback.",
    "answerDescription": "Stakeholder feedback helps Agile teams refine product features and align with business needs."
  },
  {
    "id": "agile_2924",
    "question": "Which Agile event provides the best opportunity for stakeholders to influence the product direction?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": true }
    ],
    "hint": "This event is specifically designed for stakeholder input.",
    "answerDescription": "Sprint Reviews provide stakeholders with a chance to review progress and shape future development."
  },
  {
    "id": "agile_2925",
    "question": "How should Agile teams handle stakeholder feedback that contradicts product goals?",
    "options": [
      { "id": "option_1", "text": "Immediately implement the changes", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the feedback to stay on schedule", "isCorrect": false },
      { "id": "option_3", "text": "Avoid discussing it with the team", "isCorrect": false },
      { "id": "option_4", "text": "Discuss and align feedback with the product vision", "isCorrect": true }
    ],
    "hint": "Feedback should align with the overall product strategy.",
    "answerDescription": "Teams should engage in discussions with stakeholders to ensure feedback aligns with the broader product vision."
  },
  {
    "id": "agile_2926",
    "question": "Which method helps Agile teams prioritize stakeholder requirements effectively?",
    "options": [
      { "id": "option_1", "text": "Using a first-come, first-served approach", "isCorrect": false },
      { "id": "option_2", "text": "Prioritizing only the most vocal stakeholder's needs", "isCorrect": false },
      { "id": "option_3", "text": "Adding all requests to the backlog without ranking", "isCorrect": false },
      { "id": "option_4", "text": "Using techniques like MoSCoW or WSJF prioritization", "isCorrect": true }
    ],
    "hint": "Frameworks exist to help teams prioritize effectively.",
    "answerDescription": "MoSCoW and WSJF help Agile teams prioritize features based on value and urgency."
  },
  {
    "id": "agile_2927",
    "question": "What is the main benefit of keeping stakeholders involved throughout Agile development?",
    "options": [
      { "id": "option_1", "text": "Faster delivery due to fewer discussions", "isCorrect": false },
      { "id": "option_2", "text": "Less need for backlog refinement", "isCorrect": false },
      { "id": "option_3", "text": "A more rigid and predictable roadmap", "isCorrect": false },
      { "id": "option_4", "text": "A product that better meets business and customer needs", "isCorrect": true }
    ],
    "hint": "Stakeholder involvement leads to better alignment.",
    "answerDescription": "Continuous engagement ensures that the final product aligns with stakeholder expectations and business goals."
  },{
    "id": "agile_2928",
    "question": "Which stakeholder is responsible for defining the product vision in Agile?",
    "options": [
      { "id": "option_1", "text": "Product Owner", "isCorrect": true },
      { "id": "option_2", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Sponsor", "isCorrect": false }
    ],
    "hint": "This stakeholder maintains and communicates the product backlog.",
    "answerDescription": "The Product Owner defines the product vision and ensures alignment with business objectives."
  },
  {
    "id": "agile_2929",
    "question": "What is the best way to manage stakeholder expectations in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Frequent and transparent communication", "isCorrect": true },
      { "id": "option_2", "text": "Only provide updates at the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "Minimize stakeholder involvement to avoid changes", "isCorrect": false },
      { "id": "option_4", "text": "Deliver all requirements upfront", "isCorrect": false }
    ],
    "hint": "Consistent engagement ensures alignment and trust.",
    "answerDescription": "Regular and open communication helps stakeholders stay informed and aligned with project progress."
  },
  {
    "id": "agile_2930",
    "question": "Why is it important to involve stakeholders early in Agile development?",
    "options": [
      { "id": "option_1", "text": "To align product goals with business needs", "isCorrect": true },
      { "id": "option_2", "text": "To reduce development team autonomy", "isCorrect": false },
      { "id": "option_3", "text": "To minimize the need for backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "To lock requirements before development begins", "isCorrect": false }
    ],
    "hint": "Stakeholder input ensures business value is prioritized.",
    "answerDescription": "Early stakeholder involvement helps align the product with business objectives and user needs."
  },
  {
    "id": "agile_2931",
    "question": "Which Agile event provides stakeholders with a chance to review the progress of a sprint?",
    "options": [
      { "id": "option_1", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Refinement", "isCorrect": false }
    ],
    "hint": "This event showcases completed work to stakeholders.",
    "answerDescription": "Sprint Reviews allow stakeholders to see progress and provide feedback on the product."
  },
  {
    "id": "agile_2932",
    "question": "How can Agile teams encourage stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Invite stakeholders to key Agile ceremonies", "isCorrect": true },
      { "id": "option_2", "text": "Only communicate when required by the contract", "isCorrect": false },
      { "id": "option_3", "text": "Limit feedback to the end of development", "isCorrect": false },
      { "id": "option_4", "text": "Avoid stakeholder involvement to speed up development", "isCorrect": false }
    ],
    "hint": "Engagement in Agile events fosters collaboration.",
    "answerDescription": "Including stakeholders in Agile ceremonies ensures continuous alignment and input."
  },
  {
    "id": "agile_2933",
    "question": "What role do stakeholders play in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "They provide feedback on priorities and requirements", "isCorrect": true },
      { "id": "option_2", "text": "They write the user stories for the team", "isCorrect": false },
      { "id": "option_3", "text": "They assign tasks to the development team", "isCorrect": false },
      { "id": "option_4", "text": "They decide on the sprint backlog items", "isCorrect": false }
    ],
    "hint": "Stakeholders help ensure the backlog reflects business needs.",
    "answerDescription": "Stakeholders contribute by refining and prioritizing backlog items based on business value."
  },
  {
    "id": "agile_2934",
    "question": "What is a key challenge when managing multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Balancing competing priorities", "isCorrect": true },
      { "id": "option_2", "text": "Ensuring stakeholders do not attend meetings", "isCorrect": false },
      { "id": "option_3", "text": "Allowing only one stakeholder to make decisions", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing stakeholder communication", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have conflicting interests.",
    "answerDescription": "Managing multiple stakeholders involves balancing diverse interests and aligning them with project goals."
  },
  {
    "id": "agile_2935",
    "question": "Which technique can Agile teams use to prioritize stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "MoSCoW method", "isCorrect": true },
      { "id": "option_2", "text": "Random selection", "isCorrect": false },
      { "id": "option_3", "text": "First-come, first-served approach", "isCorrect": false },
      { "id": "option_4", "text": "Only considering the highest-ranking stakeholder's requests", "isCorrect": false }
    ],
    "hint": "This method categorizes requirements into must-have, should-have, could-have, and wonâ€™t-have.",
    "answerDescription": "The MoSCoW method helps teams prioritize features based on importance and urgency."
  },
  {
    "id": "agile_2936",
    "question": "How should Agile teams handle last-minute stakeholder requests?",
    "options": [
      { "id": "option_1", "text": "Evaluate the impact and prioritize accordingly", "isCorrect": true },
      { "id": "option_2", "text": "Reject all last-minute requests", "isCorrect": false },
      { "id": "option_3", "text": "Immediately implement the request without discussion", "isCorrect": false },
      { "id": "option_4", "text": "Only accept requests from senior management", "isCorrect": false }
    ],
    "hint": "Requests should be assessed based on impact and feasibility.",
    "answerDescription": "Teams should evaluate stakeholder requests and prioritize them based on value and feasibility."
  },
  {
    "id": "agile_2937",
    "question": "Why is continuous stakeholder engagement important in Agile?",
    "options": [
      { "id": "option_1", "text": "It ensures the product aligns with business goals", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the need for retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "It speeds up development by avoiding feedback", "isCorrect": false },
      { "id": "option_4", "text": "It guarantees that all features are implemented", "isCorrect": false }
    ],
    "hint": "Engagement ensures business alignment and product success.",
    "answerDescription": "Continuous engagement ensures the product evolves according to stakeholder needs and business goals."
  },
  {
    "id": "agile_2938",
    "question": "Which Agile practice ensures stakeholders regularly review and provide feedback on the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_3", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event happens at the end of each sprint to showcase progress.",
    "answerDescription": "Sprint Review provides stakeholders with an opportunity to assess progress and suggest improvements."
  },
  {
    "id": "agile_2939",
    "question": "What is the primary role of stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To micromanage the development team", "isCorrect": false },
      { "id": "option_2", "text": "To provide input on priorities and business value", "isCorrect": true },
      { "id": "option_3", "text": "To assign tasks to developers", "isCorrect": false },
      { "id": "option_4", "text": "To define sprint backlog items", "isCorrect": false }
    ],
    "hint": "Stakeholders help shape the product vision and requirements.",
    "answerDescription": "Stakeholders guide the project by providing business insights and prioritization."
  },
  {
    "id": "agile_2940",
    "question": "Why is it important to identify all key stakeholders in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To increase project documentation", "isCorrect": false },
      { "id": "option_2", "text": "To ensure all perspectives and needs are considered", "isCorrect": true },
      { "id": "option_3", "text": "To prevent frequent changes in requirements", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the number of meetings", "isCorrect": false }
    ],
    "hint": "Including diverse perspectives helps build a well-rounded product.",
    "answerDescription": "Engaging all stakeholders ensures the product meets varied business and user needs."
  },
  {
    "id": "agile_2941",
    "question": "How can an Agile team effectively manage conflicting stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By implementing all requested changes immediately", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing based on business value and feasibility", "isCorrect": true },
      { "id": "option_3", "text": "By ignoring less influential stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By freezing requirements early", "isCorrect": false }
    ],
    "hint": "Balancing stakeholder needs requires prioritization strategies.",
    "answerDescription": "Teams should balance stakeholder input by focusing on the highest business value."
  },
  {
    "id": "agile_2942",
    "question": "Which document helps communicate stakeholder expectations and project goals in Agile?",
    "options": [
      { "id": "option_1", "text": "Sprint Backlog", "isCorrect": false },
      { "id": "option_2", "text": "Product Vision Statement", "isCorrect": true },
      { "id": "option_3", "text": "Daily Stand-up Report", "isCorrect": false },
      { "id": "option_4", "text": "Definition of Done", "isCorrect": false }
    ],
    "hint": "This document aligns stakeholders and teams around common objectives.",
    "answerDescription": "A Product Vision Statement ensures all stakeholders share a clear understanding of project goals."
  },
  {
    "id": "agile_2943",
    "question": "How does an Agile team ensure stakeholders remain engaged throughout the project?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder interactions to the start and end of the project", "isCorrect": false },
      { "id": "option_2", "text": "By involving them in regular sprint reviews and backlog discussions", "isCorrect": true },
      { "id": "option_3", "text": "By providing updates only upon request", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding stakeholder feedback to prevent scope changes", "isCorrect": false }
    ],
    "hint": "Consistent engagement improves transparency and alignment.",
    "answerDescription": "Regular involvement in sprint reviews and backlog refinement ensures stakeholders stay engaged."
  },
  {
    "id": "agile_2944",
    "question": "Which Agile principle emphasizes customer and stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "Delivering projects on time", "isCorrect": false },
      { "id": "option_2", "text": "Customer collaboration over contract negotiation", "isCorrect": true },
      { "id": "option_3", "text": "Strict adherence to project plans", "isCorrect": false },
      { "id": "option_4", "text": "Minimizing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Agile values working closely with customers.",
    "answerDescription": "Agile prioritizes collaboration with customers and stakeholders to adapt to evolving needs."
  },
  {
    "id": "agile_2945",
    "question": "How should an Agile team handle a stakeholder who frequently changes requirements?",
    "options": [
      { "id": "option_1", "text": "By refusing all changes after sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "By using backlog refinement to assess and prioritize changes", "isCorrect": true },
      { "id": "option_3", "text": "By implementing all requested changes immediately", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding communication with the stakeholder", "isCorrect": false }
    ],
    "hint": "Agile teams manage changes through structured backlog refinement.",
    "answerDescription": "Regular backlog refinement helps teams evaluate and prioritize requirement changes effectively."
  },
  {
    "id": "agile_2946",
    "question": "What is a key benefit of keeping stakeholders engaged throughout an Agile project?",
    "options": [
      { "id": "option_1", "text": "Reduced need for retrospectives", "isCorrect": false },
      { "id": "option_2", "text": "Increased alignment with business goals", "isCorrect": true },
      { "id": "option_3", "text": "Faster delivery with no changes", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding the need for a product backlog", "isCorrect": false }
    ],
    "hint": "Regular engagement ensures the project stays on track with business needs.",
    "answerDescription": "Continuous stakeholder involvement keeps the project aligned with evolving business priorities."
  },
  {
    "id": "agile_2947",
    "question": "Which stakeholder is primarily responsible for prioritizing the product backlog?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "Project Sponsor", "isCorrect": false }
    ],
    "hint": "This stakeholder ensures backlog items align with business objectives.",
    "answerDescription": "The Product Owner is responsible for prioritizing backlog items based on business value."
  },
  {
    "id": "agile_2948",
    "question": "Which stakeholder is most responsible for defining business requirements in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Development Team", "isCorrect": false },
      { "id": "option_3", "text": "Product Owner", "isCorrect": true },
      { "id": "option_4", "text": "Project Sponsor", "isCorrect": false }
    ],
    "hint": "This role bridges business needs with development efforts.",
    "answerDescription": "The Product Owner ensures business requirements are well-defined and prioritized."
  },
  {
    "id": "agile_2949",
    "question": "Why should Agile teams maintain continuous communication with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To minimize documentation effort", "isCorrect": false },
      { "id": "option_2", "text": "To avoid last-minute requirement changes", "isCorrect": false },
      { "id": "option_3", "text": "To ensure alignment with business goals", "isCorrect": true },
      { "id": "option_4", "text": "To increase the length of sprint cycles", "isCorrect": false }
    ],
    "hint": "Ongoing collaboration keeps development aligned with business needs.",
    "answerDescription": "Regular stakeholder communication ensures that evolving business priorities are reflected in the product."
  },
  {
    "id": "agile_2950",
    "question": "Which Agile practice helps ensure stakeholders are consistently involved in the development process?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Pair Programming", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to see the latest progress.",
    "answerDescription": "Sprint Reviews provide stakeholders an opportunity to give feedback on completed work."
  },
  {
    "id": "agile_2951",
    "question": "How does Agile encourage effective stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By limiting their involvement to project initiation", "isCorrect": false },
      { "id": "option_2", "text": "By assigning them as part of the development team", "isCorrect": false },
      { "id": "option_3", "text": "By integrating stakeholder feedback into iterations", "isCorrect": true },
      { "id": "option_4", "text": "By finalizing all requirements upfront", "isCorrect": false }
    ],
    "hint": "Stakeholder involvement is key to adapting to changing requirements.",
    "answerDescription": "Agile fosters stakeholder engagement by continuously incorporating their feedback throughout development."
  },
  {
    "id": "agile_2952",
    "question": "Which key responsibility do stakeholders have in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Approving all technical decisions", "isCorrect": false },
      { "id": "option_2", "text": "Managing sprint planning sessions", "isCorrect": false },
      { "id": "option_3", "text": "Providing feedback on deliverables", "isCorrect": true },
      { "id": "option_4", "text": "Writing code and tests", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute to project direction rather than execution.",
    "answerDescription": "Stakeholders guide Agile teams by providing feedback on progress and suggesting improvements."
  },
  {
    "id": "agile_2953",
    "question": "What should an Agile team do when a stakeholder requests a major feature change mid-sprint?",
    "options": [
      { "id": "option_1", "text": "Immediately implement the change", "isCorrect": false },
      { "id": "option_2", "text": "Ignore the request until the next release", "isCorrect": false },
      { "id": "option_3", "text": "Assess it in the next backlog refinement session", "isCorrect": true },
      { "id": "option_4", "text": "Abandon the current sprint plan", "isCorrect": false }
    ],
    "hint": "Changes are evaluated before being introduced into upcoming sprints.",
    "answerDescription": "Feature changes are considered in backlog refinement to maintain sprint focus."
  },
  {
    "id": "agile_2954",
    "question": "How can an Agile team gain the most value from stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "By implementing all suggestions immediately", "isCorrect": false },
      { "id": "option_2", "text": "By conducting stakeholder meetings once per project", "isCorrect": false },
      { "id": "option_3", "text": "By prioritizing feedback based on business impact", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding stakeholder involvement after planning", "isCorrect": false }
    ],
    "hint": "Not all feedback should be implemented without prioritization.",
    "answerDescription": "Teams should evaluate feedback based on its business value and feasibility before implementation."
  },
  {
    "id": "agile_2955",
    "question": "Which Agile event provides stakeholders with a regular opportunity to inspect the product?",
    "options": [
      { "id": "option_1", "text": "Sprint Planning", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": true },
      { "id": "option_4", "text": "Sprint Retrospective", "isCorrect": false }
    ],
    "hint": "This event focuses on reviewing completed work at the end of a sprint.",
    "answerDescription": "Sprint Reviews allow stakeholders to inspect the product and provide valuable feedback."
  },
  {
    "id": "agile_2956",
    "question": "What is the best way for Agile teams to manage conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "By focusing only on the highest-paying stakeholderâ€™s requests", "isCorrect": false },
      { "id": "option_2", "text": "By implementing changes without discussion", "isCorrect": false },
      { "id": "option_3", "text": "By using a prioritization framework such as MoSCoW", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding conflict and making no changes", "isCorrect": false }
    ],
    "hint": "Frameworks like MoSCoW help categorize priorities effectively.",
    "answerDescription": "Using prioritization techniques ensures fair and structured decision-making when handling stakeholder conflicts."
  },
  {
    "id": "agile_2957",
    "question": "Why is it important to regularly update stakeholders about project progress?",
    "options": [
      { "id": "option_1", "text": "To reduce the number of development iterations", "isCorrect": false },
      { "id": "option_2", "text": "To finalize the project scope early", "isCorrect": false },
      { "id": "option_3", "text": "To align expectations and gain valuable feedback", "isCorrect": true },
      { "id": "option_4", "text": "To minimize stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Regular updates keep stakeholders informed and engaged.",
    "answerDescription": "Stakeholder updates ensure alignment with business goals and allow for early feedback."
  },
  {
    "id": "agile_2958",
    "question": "What is a key benefit of engaging stakeholders early in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Eliminating the need for a Product Owner", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding scope changes", "isCorrect": false },
      { "id": "option_3", "text": "Minimizing development effort", "isCorrect": false },
      { "id": "option_4", "text": "Ensuring alignment with business goals", "isCorrect": true }
    ],
    "hint": "Stakeholder involvement helps guide project direction.",
    "answerDescription": "Engaging stakeholders early helps align the project with business needs and reduces the risk of misalignment."
  },
  {
    "id": "agile_2959",
    "question": "Why should Agile teams maintain transparency with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To reduce development costs", "isCorrect": false },
      { "id": "option_2", "text": "To shorten sprint duration", "isCorrect": false },
      { "id": "option_3", "text": "To eliminate stakeholder feedback", "isCorrect": false },
      { "id": "option_4", "text": "To build trust and improve collaboration", "isCorrect": true }
    ],
    "hint": "Trust is crucial for effective stakeholder engagement.",
    "answerDescription": "Transparency ensures stakeholders are informed, which fosters trust and collaboration."
  },
  {
    "id": "agile_2960",
    "question": "What should an Agile team do if a stakeholder disagrees with the project direction?",
    "options": [
      { "id": "option_1", "text": "Ignore the stakeholder's concerns", "isCorrect": false },
      { "id": "option_2", "text": "Change the project scope immediately", "isCorrect": false },
      { "id": "option_3", "text": "Delay development until all stakeholders agree", "isCorrect": false },
      { "id": "option_4", "text": "Facilitate discussions to address concerns", "isCorrect": true }
    ],
    "hint": "Collaboration helps resolve conflicts effectively.",
    "answerDescription": "Facilitating discussions allows the team to address concerns while keeping project progress on track."
  },
  {
    "id": "agile_2961",
    "question": "Which Agile ceremony is most valuable for keeping stakeholders updated on progress?",
    "options": [
      { "id": "option_1", "text": "Sprint Retrospective", "isCorrect": false },
      { "id": "option_2", "text": "Daily Stand-up", "isCorrect": false },
      { "id": "option_3", "text": "Backlog Refinement", "isCorrect": false },
      { "id": "option_4", "text": "Sprint Review", "isCorrect": true }
    ],
    "hint": "This meeting allows stakeholders to inspect deliverables and provide feedback.",
    "answerDescription": "Sprint Reviews give stakeholders visibility into project progress and an opportunity to offer input."
  },
  {
    "id": "agile_2962",
    "question": "What is a common challenge when working with multiple stakeholders in Agile?",
    "options": [
      { "id": "option_1", "text": "Lack of technical knowledge among developers", "isCorrect": false },
      { "id": "option_2", "text": "Frequent changes to sprint durations", "isCorrect": false },
      { "id": "option_3", "text": "Over-reliance on automated tools", "isCorrect": false },
      { "id": "option_4", "text": "Conflicting priorities among stakeholders", "isCorrect": true }
    ],
    "hint": "Different stakeholders may have different expectations.",
    "answerDescription": "Managing multiple stakeholders can be challenging due to conflicting priorities, which require structured decision-making."
  },
  {
    "id": "agile_2963",
    "question": "How can an Agile team ensure stakeholder expectations are met?",
    "options": [
      { "id": "option_1", "text": "By avoiding stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "By delivering all requested features immediately", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on technical tasks", "isCorrect": false },
      { "id": "option_4", "text": "By continuously gathering feedback and adjusting priorities", "isCorrect": true }
    ],
    "hint": "Stakeholder feedback helps refine the product.",
    "answerDescription": "Regular feedback cycles help ensure the final product meets stakeholder needs."
  },
  {
    "id": "agile_2964",
    "question": "What role does the Product Owner play in stakeholder management?",
    "options": [
      { "id": "option_1", "text": "Enforces all stakeholder requests", "isCorrect": false },
      { "id": "option_2", "text": "Avoids stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "Focuses only on technical implementation", "isCorrect": false },
      { "id": "option_4", "text": "Acts as a bridge between stakeholders and the development team", "isCorrect": true }
    ],
    "hint": "The Product Owner translates business needs into development goals.",
    "answerDescription": "The Product Owner ensures stakeholder requirements are communicated and prioritized within the development team."
  },
  {
    "id": "agile_2965",
    "question": "What is the primary purpose of a stakeholder register in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To track team attendance", "isCorrect": false },
      { "id": "option_2", "text": "To maintain financial records", "isCorrect": false },
      { "id": "option_3", "text": "To record daily stand-up notes", "isCorrect": false },
      { "id": "option_4", "text": "To document key stakeholders and their expectations", "isCorrect": true }
    ],
    "hint": "This document helps in managing stakeholder relationships.",
    "answerDescription": "A stakeholder register keeps track of stakeholders, their influence, and their expectations to guide project decisions."
  },
  {
    "id": "agile_2966",
    "question": "Which action can help improve stakeholder engagement in Agile projects?",
    "options": [
      { "id": "option_1", "text": "Limiting feedback opportunities", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding updates on project progress", "isCorrect": false },
      { "id": "option_3", "text": "Reducing stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "Encouraging active participation in sprint reviews", "isCorrect": true }
    ],
    "hint": "Stakeholders should be involved in evaluating deliverables.",
    "answerDescription": "Sprint Reviews allow stakeholders to provide feedback, ensuring their concerns are addressed throughout the project."
  },
  {
    "id": "agile_2967",
    "question": "Why is it important to identify key stakeholders at the beginning of an Agile project?",
    "options": [
      { "id": "option_1", "text": "To finalize the entire project scope upfront", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the number of required Agile ceremonies", "isCorrect": false },
      { "id": "option_3", "text": "To limit stakeholder involvement in later stages", "isCorrect": false },
      { "id": "option_4", "text": "To ensure their needs and expectations are understood early", "isCorrect": true }
    ],
    "hint": "Early stakeholder involvement helps set project direction.",
    "answerDescription": "Identifying stakeholders early ensures their needs are incorporated into project planning and execution."
  },{
    "id": "agile_2968",
    "question": "What is the primary responsibility of stakeholders in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Providing feedback and setting expectations", "isCorrect": true },
      { "id": "option_2", "text": "Managing daily development tasks", "isCorrect": false },
      { "id": "option_3", "text": "Writing and testing code", "isCorrect": false },
      { "id": "option_4", "text": "Handling sprint planning", "isCorrect": false }
    ],
    "hint": "Stakeholders influence project direction rather than execution.",
    "answerDescription": "Stakeholders play a crucial role by providing input and setting priorities to align the project with business goals."
  },
  {
    "id": "agile_2969",
    "question": "Why is it important for Agile teams to regularly communicate with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure alignment with business goals", "isCorrect": true },
      { "id": "option_2", "text": "To increase the length of sprints", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the need for retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "To avoid updating the backlog", "isCorrect": false }
    ],
    "hint": "Regular communication helps maintain project direction.",
    "answerDescription": "Frequent communication ensures the team is meeting stakeholder expectations and delivering valuable outcomes."
  },
  {
    "id": "agile_2970",
    "question": "How can an Agile team ensure stakeholders are engaged throughout a project?",
    "options": [
      { "id": "option_1", "text": "By involving them in Sprint Reviews", "isCorrect": true },
      { "id": "option_2", "text": "By limiting feedback opportunities", "isCorrect": false },
      { "id": "option_3", "text": "By excluding them from backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "By delivering all features at the end of the project", "isCorrect": false }
    ],
    "hint": "Stakeholders should be involved in key Agile ceremonies.",
    "answerDescription": "Sprint Reviews provide stakeholders with insight into progress and allow them to give feedback."
  },
  {
    "id": "agile_2971",
    "question": "What should an Agile team do if stakeholders request frequent changes to project scope?",
    "options": [
      { "id": "option_1", "text": "Assess and prioritize changes in the backlog", "isCorrect": true },
      { "id": "option_2", "text": "Reject all scope changes", "isCorrect": false },
      { "id": "option_3", "text": "Pause development until all changes are finalized", "isCorrect": false },
      { "id": "option_4", "text": "Limit communication with stakeholders", "isCorrect": false }
    ],
    "hint": "Changes should be evaluated rather than ignored.",
    "answerDescription": "The backlog should be updated and prioritized based on stakeholder input and business value."
  },
  {
    "id": "agile_2972",
    "question": "What is one way Agile teams can manage conflicting stakeholder priorities?",
    "options": [
      { "id": "option_1", "text": "Facilitate discussions to reach alignment", "isCorrect": true },
      { "id": "option_2", "text": "Ignore lower-priority stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Assign priority based on stakeholder hierarchy", "isCorrect": false },
      { "id": "option_4", "text": "Avoid stakeholder involvement in decision-making", "isCorrect": false }
    ],
    "hint": "Discussions help resolve conflicts.",
    "answerDescription": "Facilitating discussions ensures that different perspectives are considered and alignment is achieved."
  },
  {
    "id": "agile_2973",
    "question": "How can Agile teams ensure that stakeholders provide valuable feedback?",
    "options": [
      { "id": "option_1", "text": "By asking specific and structured questions", "isCorrect": true },
      { "id": "option_2", "text": "By limiting the number of stakeholders involved", "isCorrect": false },
      { "id": "option_3", "text": "By only seeking feedback at the projectâ€™s end", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding detailed discussions", "isCorrect": false }
    ],
    "hint": "Guided feedback is more actionable.",
    "answerDescription": "Structured questions help stakeholders provide relevant and actionable feedback."
  },
  {
    "id": "agile_2974",
    "question": "Why is it beneficial to have stakeholders involved in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To ensure priorities align with business needs", "isCorrect": true },
      { "id": "option_2", "text": "To avoid technical discussions", "isCorrect": false },
      { "id": "option_3", "text": "To reduce the role of the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "To shorten sprint durations", "isCorrect": false }
    ],
    "hint": "Stakeholder input helps shape backlog priorities.",
    "answerDescription": "Stakeholder involvement ensures that high-priority features are identified and addressed early."
  },
  {
    "id": "agile_2975",
    "question": "What can Agile teams do to keep stakeholders aligned with project goals?",
    "options": [
      { "id": "option_1", "text": "Hold regular status updates and demos", "isCorrect": true },
      { "id": "option_2", "text": "Minimize interactions with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Only share progress at the end of development", "isCorrect": false },
      { "id": "option_4", "text": "Allow stakeholders to dictate development timelines", "isCorrect": false }
    ],
    "hint": "Frequent updates foster alignment.",
    "answerDescription": "Regular updates and demos help stakeholders stay informed and aligned with the project direction."
  },
  {
    "id": "agile_2976",
    "question": "How does Agile encourage stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "By involving them in iterative development cycles", "isCorrect": true },
      { "id": "option_2", "text": "By limiting communication to the end of the project", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on internal team goals", "isCorrect": false },
      { "id": "option_4", "text": "By reducing the need for stakeholder input", "isCorrect": false }
    ],
    "hint": "Frequent iterations allow stakeholder engagement.",
    "answerDescription": "Stakeholders are involved in each iteration to provide feedback and ensure project success."
  },
  {
    "id": "agile_2977",
    "question": "What is an effective way to manage stakeholder expectations in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Setting clear goals and communicating progress regularly", "isCorrect": true },
      { "id": "option_2", "text": "Avoiding discussions on project limitations", "isCorrect": false },
      { "id": "option_3", "text": "Making all requested changes immediately", "isCorrect": false },
      { "id": "option_4", "text": "Reducing transparency to prevent conflicts", "isCorrect": false }
    ],
    "hint": "Clarity and regular updates help manage expectations.",
    "answerDescription": "Clearly defined goals and continuous communication ensure stakeholders remain informed and aligned."
  },{
    "id": "agile_2978",
    "question": "What is a key benefit of engaging stakeholders early in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Avoiding changes to requirements", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring alignment with business objectives", "isCorrect": true },
      { "id": "option_3", "text": "Reducing the need for user feedback", "isCorrect": false },
      { "id": "option_4", "text": "Eliminating the need for a Product Owner", "isCorrect": false }
    ],
    "hint": "Early engagement helps with strategic alignment.",
    "answerDescription": "Involving stakeholders early ensures the project aligns with business needs and reduces misalignment risks."
  },
  {
    "id": "agile_2979",
    "question": "Why is it important for Agile teams to consider stakeholder feedback during development?",
    "options": [
      { "id": "option_1", "text": "To extend project timelines", "isCorrect": false },
      { "id": "option_2", "text": "To enhance product value and usability", "isCorrect": true },
      { "id": "option_3", "text": "To reduce team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "To increase backlog complexity", "isCorrect": false }
    ],
    "hint": "Stakeholder feedback contributes to product success.",
    "answerDescription": "Incorporating stakeholder feedback helps Agile teams deliver products that provide real value to users."
  },
  {
    "id": "agile_2980",
    "question": "What role do stakeholders play in Agile decision-making?",
    "options": [
      { "id": "option_1", "text": "They dictate all project decisions", "isCorrect": false },
      { "id": "option_2", "text": "They provide insights to guide priorities", "isCorrect": true },
      { "id": "option_3", "text": "They replace the Product Owner", "isCorrect": false },
      { "id": "option_4", "text": "They finalize sprint tasks", "isCorrect": false }
    ],
    "hint": "Stakeholders influence decisions without micromanaging.",
    "answerDescription": "Stakeholders provide valuable insights that help Agile teams prioritize and align work with business objectives."
  },
  {
    "id": "agile_2981",
    "question": "How can Agile teams effectively manage multiple stakeholder inputs?",
    "options": [
      { "id": "option_1", "text": "By only considering the highest-ranking stakeholder", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing inputs based on business value", "isCorrect": true },
      { "id": "option_3", "text": "By limiting feedback sessions", "isCorrect": false },
      { "id": "option_4", "text": "By making ad-hoc changes without evaluation", "isCorrect": false }
    ],
    "hint": "Not all inputs have equal impact.",
    "answerDescription": "Agile teams prioritize stakeholder feedback based on business value to ensure meaningful improvements."
  },
  {
    "id": "agile_2982",
    "question": "What is a best practice for engaging stakeholders in Agile ceremonies?",
    "options": [
      { "id": "option_1", "text": "Keeping meetings invitation-only", "isCorrect": false },
      { "id": "option_2", "text": "Encouraging active participation", "isCorrect": true },
      { "id": "option_3", "text": "Restricting their involvement to the final release", "isCorrect": false },
      { "id": "option_4", "text": "Avoiding their input in backlog discussions", "isCorrect": false }
    ],
    "hint": "Stakeholders should be actively involved.",
    "answerDescription": "Encouraging stakeholders to participate ensures transparency and alignment with project goals."
  },
  {
    "id": "agile_2983",
    "question": "How can Agile teams prevent misalignment with stakeholder expectations?",
    "options": [
      { "id": "option_1", "text": "By avoiding frequent updates", "isCorrect": false },
      { "id": "option_2", "text": "By maintaining continuous communication", "isCorrect": true },
      { "id": "option_3", "text": "By limiting feedback to retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on technical requirements", "isCorrect": false }
    ],
    "hint": "Communication is key to expectation management.",
    "answerDescription": "Regular updates and discussions with stakeholders ensure alignment and reduce potential conflicts."
  },
  {
    "id": "agile_2984",
    "question": "What is an advantage of involving stakeholders in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "It reduces team accountability", "isCorrect": false },
      { "id": "option_2", "text": "It allows for real-time feedback", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for Product Backlog refinement", "isCorrect": false },
      { "id": "option_4", "text": "It finalizes all project deliverables", "isCorrect": false }
    ],
    "hint": "Sprint Reviews provide visibility into progress.",
    "answerDescription": "Stakeholder participation in Sprint Reviews enables real-time feedback and helps refine project direction."
  },
  {
    "id": "agile_2985",
    "question": "How can Agile teams ensure they are meeting stakeholder needs?",
    "options": [
      { "id": "option_1", "text": "By following the original plan without adjustments", "isCorrect": false },
      { "id": "option_2", "text": "By validating requirements through feedback loops", "isCorrect": true },
      { "id": "option_3", "text": "By deprioritizing stakeholder input", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding discussions on changing priorities", "isCorrect": false }
    ],
    "hint": "Feedback loops ensure ongoing alignment.",
    "answerDescription": "Frequent validation of requirements helps Agile teams adjust their approach to better meet stakeholder needs."
  },
  {
    "id": "agile_2986",
    "question": "What challenge do Agile teams face when working with multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Lack of available backlog items", "isCorrect": false },
      { "id": "option_2", "text": "Conflicting priorities among stakeholders", "isCorrect": true },
      { "id": "option_3", "text": "Having too few feedback opportunities", "isCorrect": false },
      { "id": "option_4", "text": "Minimal involvement in sprint planning", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different goals.",
    "answerDescription": "Agile teams must balance stakeholder priorities to ensure fair and effective decision-making."
  },
  {
    "id": "agile_2987",
    "question": "What is one way to manage shifting stakeholder requirements in Agile?",
    "options": [
      { "id": "option_1", "text": "By finalizing all requirements at the start", "isCorrect": false },
      { "id": "option_2", "text": "By continuously refining the backlog", "isCorrect": true },
      { "id": "option_3", "text": "By preventing changes once a sprint starts", "isCorrect": false },
      { "id": "option_4", "text": "By minimizing stakeholder involvement", "isCorrect": false }
    ],
    "hint": "The backlog should be a living document.",
    "answerDescription": "Regular backlog refinement helps accommodate changing requirements without disrupting Agile workflows."
  },
  {
    "id": "agile_2988",
    "question": "What is the primary reason Agile teams engage stakeholders throughout the development process?",
    "options": [
      { "id": "option_1", "text": "To increase project documentation", "isCorrect": false },
      { "id": "option_2", "text": "To reduce the need for retrospectives", "isCorrect": false },
      { "id": "option_3", "text": "To ensure continuous alignment with business goals", "isCorrect": true },
      { "id": "option_4", "text": "To limit the number of change requests", "isCorrect": false }
    ],
    "hint": "Engaging stakeholders helps maintain strategic direction.",
    "answerDescription": "Ongoing stakeholder engagement ensures that the Agile team stays aligned with evolving business needs."
  },
  {
    "id": "agile_2989",
    "question": "Which approach helps Agile teams effectively prioritize stakeholder feedback?",
    "options": [
      { "id": "option_1", "text": "Handling all feedback immediately", "isCorrect": false },
      { "id": "option_2", "text": "Ignoring conflicting inputs", "isCorrect": false },
      { "id": "option_3", "text": "Evaluating feedback based on business value", "isCorrect": true },
      { "id": "option_4", "text": "Allowing only senior stakeholders to provide input", "isCorrect": false }
    ],
    "hint": "Not all feedback has equal impact.",
    "answerDescription": "Prioritizing feedback based on business value ensures that Agile teams focus on impactful changes."
  },
  {
    "id": "agile_2990",
    "question": "Why is stakeholder participation in Sprint Reviews beneficial?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for sprint planning", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the number of development iterations", "isCorrect": false },
      { "id": "option_3", "text": "It allows for early feedback and course correction", "isCorrect": true },
      { "id": "option_4", "text": "It finalizes project scope immediately", "isCorrect": false }
    ],
    "hint": "Sprint Reviews help refine product direction.",
    "answerDescription": "Stakeholder involvement in Sprint Reviews helps Agile teams adapt to changing requirements efficiently."
  },
  {
    "id": "agile_2991",
    "question": "How does Agile encourage stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "By limiting communication to project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "By preventing scope changes after planning", "isCorrect": false },
      { "id": "option_3", "text": "By fostering transparency and frequent interactions", "isCorrect": true },
      { "id": "option_4", "text": "By reducing the role of the Product Owner", "isCorrect": false }
    ],
    "hint": "Collaboration thrives with open communication.",
    "answerDescription": "Agile principles emphasize transparency and regular interactions to ensure stakeholders and teams work together effectively."
  },
  {
    "id": "agile_2992",
    "question": "What is a challenge Agile teams face when dealing with multiple stakeholders?",
    "options": [
      { "id": "option_1", "text": "Having too many backlog items", "isCorrect": false },
      { "id": "option_2", "text": "Reducing the number of user stories", "isCorrect": false },
      { "id": "option_3", "text": "Managing conflicting priorities", "isCorrect": true },
      { "id": "option_4", "text": "Minimizing the need for feedback sessions", "isCorrect": false }
    ],
    "hint": "Different stakeholders may have different objectives.",
    "answerDescription": "Agile teams must balance and negotiate conflicting stakeholder needs to ensure smooth project progress."
  },
  {
    "id": "agile_2993",
    "question": "How can Agile teams ensure stakeholder requirements are met without disrupting the sprint?",
    "options": [
      { "id": "option_1", "text": "By accepting all change requests immediately", "isCorrect": false },
      { "id": "option_2", "text": "By freezing requirements after sprint planning", "isCorrect": false },
      { "id": "option_3", "text": "By refining the backlog regularly", "isCorrect": true },
      { "id": "option_4", "text": "By allowing unlimited changes at any time", "isCorrect": false }
    ],
    "hint": "The backlog is key to handling evolving requirements.",
    "answerDescription": "Frequent backlog refinement allows Agile teams to manage stakeholder needs while maintaining sprint focus."
  },
  {
    "id": "agile_2994",
    "question": "Which Agile practice helps keep stakeholders informed about progress?",
    "options": [
      { "id": "option_1", "text": "Eliminating daily standups", "isCorrect": false },
      { "id": "option_2", "text": "Minimizing communication with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "Conducting Sprint Reviews and demos", "isCorrect": true },
      { "id": "option_4", "text": "Only updating stakeholders at project completion", "isCorrect": false }
    ],
    "hint": "Stakeholder updates are a regular Agile practice.",
    "answerDescription": "Sprint Reviews and demos provide stakeholders with insights into project progress and gather valuable feedback."
  },
  {
    "id": "agile_2995",
    "question": "How should Agile teams handle stakeholder feedback that contradicts business goals?",
    "options": [
      { "id": "option_1", "text": "By implementing all feedback regardless of impact", "isCorrect": false },
      { "id": "option_2", "text": "By disregarding feedback entirely", "isCorrect": false },
      { "id": "option_3", "text": "By evaluating feedback against business objectives", "isCorrect": true },
      { "id": "option_4", "text": "By making changes without consulting the team", "isCorrect": false }
    ],
    "hint": "Not all feedback aligns with project goals.",
    "answerDescription": "Agile teams assess stakeholder feedback to ensure that implemented changes align with business priorities."
  },
  {
    "id": "agile_2996",
    "question": "What is a common mistake Agile teams make when working with stakeholders?",
    "options": [
      { "id": "option_1", "text": "Over-communicating project progress", "isCorrect": false },
      { "id": "option_2", "text": "Allowing stakeholders to manage sprint tasks", "isCorrect": false },
      { "id": "option_3", "text": "Not setting clear expectations for involvement", "isCorrect": true },
      { "id": "option_4", "text": "Encouraging feedback in sprint planning", "isCorrect": false }
    ],
    "hint": "Stakeholders need guidance on their role.",
    "answerDescription": "Clearly defining stakeholder roles helps prevent misunderstandings and ensures effective collaboration."
  },
  {
    "id": "agile_2997",
    "question": "Which strategy helps Agile teams align stakeholder expectations with project realities?",
    "options": [
      { "id": "option_1", "text": "Making commitments without validation", "isCorrect": false },
      { "id": "option_2", "text": "Avoiding conversations about feasibility", "isCorrect": false },
      { "id": "option_3", "text": "Setting realistic goals and providing transparency", "isCorrect": true },
      { "id": "option_4", "text": "Only sharing progress at project completion", "isCorrect": false }
    ],
    "hint": "Transparency and realistic planning build trust.",
    "answerDescription": "Clearly defined goals and open communication help Agile teams manage stakeholder expectations effectively."
  },
  {
    "id": "agile_3008",
    "question": "Why is early stakeholder involvement crucial in Agile projects?",
    "options": [
      { "id": "option_1", "text": "To align expectations and prevent major changes later", "isCorrect": true },
      { "id": "option_2", "text": "To allow stakeholders to control sprint execution", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all features are pre-defined", "isCorrect": false },
      { "id": "option_4", "text": "To reduce the need for iterations", "isCorrect": false }
    ],
    "hint": "Early involvement helps prevent last-minute surprises.",
    "answerDescription": "Engaging stakeholders early ensures alignment, reduces rework, and increases project success."
  },
  {
    "id": "agile_3009",
    "question": "How can Agile teams ensure continuous stakeholder engagement?",
    "options": [
      { "id": "option_1", "text": "By conducting regular sprint reviews and demos", "isCorrect": true },
      { "id": "option_2", "text": "By limiting interactions to project initiation", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding changes based on feedback", "isCorrect": false },
      { "id": "option_4", "text": "By sharing updates only at project completion", "isCorrect": false }
    ],
    "hint": "Regular interaction ensures alignment with business needs.",
    "answerDescription": "Frequent sprint reviews help keep stakeholders engaged and provide timely feedback."
  },
  {
    "id": "agile_3010",
    "question": "What is a key benefit of having active stakeholder participation in Agile?",
    "options": [
      { "id": "option_1", "text": "Faster decision-making and risk mitigation", "isCorrect": true },
      { "id": "option_2", "text": "Increased micromanagement of development teams", "isCorrect": false },
      { "id": "option_3", "text": "Delays due to constant feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "Reduced need for prioritization", "isCorrect": false }
    ],
    "hint": "Active stakeholders help resolve blockers efficiently.",
    "answerDescription": "Engaged stakeholders contribute to quicker decisions and better alignment with business goals."
  },
  {
    "id": "agile_3011",
    "question": "Which Agile practice ensures that stakeholders have visibility into project progress?",
    "options": [
      { "id": "option_1", "text": "Using information radiators like Kanban boards", "isCorrect": true },
      { "id": "option_2", "text": "Keeping all progress updates internal", "isCorrect": false },
      { "id": "option_3", "text": "Restricting access to reports", "isCorrect": false },
      { "id": "option_4", "text": "Providing updates only at the projectâ€™s end", "isCorrect": false }
    ],
    "hint": "Transparency is key in Agile.",
    "answerDescription": "Information radiators, such as Kanban boards, help stakeholders track progress in real time."
  },
  {
    "id": "agile_3012",
    "question": "How can stakeholders contribute to Agile team success?",
    "options": [
      { "id": "option_1", "text": "By reviewing only the final product", "isCorrect": false },
      { "id": "option_2", "text": "By actively participating in Agile ceremonies", "isCorrect": true },
      { "id": "option_3", "text": "By requesting major scope changes late in development", "isCorrect": false },
      { "id": "option_4", "text": "By demanding fixed deadlines regardless of complexity", "isCorrect": false }
    ],
    "hint": "Stakeholder engagement is crucial in Agile methodologies.",
    "answerDescription": "Active stakeholder participation in Agile events improves collaboration and project alignment."
  },
  {
    "id": "agile_3013",
    "question": "What is the primary responsibility of a stakeholder in an Agile project?",
    "options": [
      { "id": "option_1", "text": "Providing timely feedback and business priorities", "isCorrect": true },
      { "id": "option_2", "text": "Directly assigning tasks to developers", "isCorrect": false },
      { "id": "option_3", "text": "Deciding the length of sprints", "isCorrect": false },
      { "id": "option_4", "text": "Controlling the daily standups", "isCorrect": false }
    ],
    "hint": "Stakeholders contribute to business alignment.",
    "answerDescription": "Stakeholders guide Agile teams by sharing priorities and giving feedback to align development with business goals."
  },
  {
    "id": "agile_3014",
    "question": "Why should stakeholders be involved in backlog refinement?",
    "options": [
      { "id": "option_1", "text": "To ensure the backlog reflects business needs", "isCorrect": true },
      { "id": "option_2", "text": "To approve technical implementations", "isCorrect": false },
      { "id": "option_3", "text": "To prevent Agile teams from reprioritizing work", "isCorrect": false },
      { "id": "option_4", "text": "To control team velocity", "isCorrect": false }
    ],
    "hint": "Backlog refinement helps maintain business relevance.",
    "answerDescription": "Engaging stakeholders in backlog refinement ensures that work remains aligned with business priorities."
  },
  {
    "id": "agile_3015",
    "question": "How can Agile teams help stakeholders adapt to iterative development?",
    "options": [
      { "id": "option_1", "text": "By educating them on Agile principles and processes", "isCorrect": true },
      { "id": "option_2", "text": "By limiting their involvement to final reviews", "isCorrect": false },
      { "id": "option_3", "text": "By restricting changes to the backlog", "isCorrect": false },
      { "id": "option_4", "text": "By delivering the entire product at once", "isCorrect": false }
    ],
    "hint": "Understanding Agile helps stakeholders work more effectively with teams.",
    "answerDescription": "Educating stakeholders on Agile methodologies helps them engage effectively in iterative development."
  },
  {
    "id": "agile_3016",
    "question": "Why is it important for Agile teams to regularly validate deliverables with stakeholders?",
    "options": [
      { "id": "option_1", "text": "To ensure the product meets business expectations", "isCorrect": true },
      { "id": "option_2", "text": "To finalize all requirements upfront", "isCorrect": false },
      { "id": "option_3", "text": "To avoid making changes during development", "isCorrect": false },
      { "id": "option_4", "text": "To increase project complexity", "isCorrect": false }
    ],
    "hint": "Regular validation prevents misalignment.",
    "answerDescription": "Continuous validation with stakeholders ensures that Agile teams deliver value-driven solutions."
  },
  {
    "id": "agile_3017",
    "question": "How can Agile teams encourage productive stakeholder collaboration?",
    "options": [
      { "id": "option_1", "text": "By fostering open and continuous communication", "isCorrect": true },
      { "id": "option_2", "text": "By limiting stakeholder input to formal meetings", "isCorrect": false },
      { "id": "option_3", "text": "By minimizing discussions on priorities", "isCorrect": false },
      { "id": "option_4", "text": "By avoiding feedback until the final release", "isCorrect": false }
    ],
    "hint": "Good communication strengthens stakeholder relationships.",
    "answerDescription": "Open communication helps stakeholders stay engaged and contribute effectively to Agile projects."
  },
  {
    "id": "agile_3018",
    "question": "What is a key reason for keeping stakeholders informed throughout an Agile project?",
    "options": [
      { "id": "option_1", "text": "To reduce their involvement in decision-making", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment with business goals and expectations", "isCorrect": true },
      { "id": "option_3", "text": "To minimize feedback loops", "isCorrect": false },
      { "id": "option_4", "text": "To prevent changes to the backlog", "isCorrect": false }
    ],
    "hint": "Stakeholders must be engaged to align project outcomes with business needs.",
    "answerDescription": "Regular updates help stakeholders stay aligned with the projectâ€™s progress and ensure that their expectations are met."
  },
  {
    "id": "agile_3019",
    "question": "How can Agile teams effectively manage conflicting stakeholder requirements?",
    "options": [
      { "id": "option_1", "text": "By implementing all stakeholder requests equally", "isCorrect": false },
      { "id": "option_2", "text": "By prioritizing requirements based on business value", "isCorrect": true },
      { "id": "option_3", "text": "By ignoring conflicts until later stages", "isCorrect": false },
      { "id": "option_4", "text": "By allowing only one stakeholder to define priorities", "isCorrect": false }
    ],
    "hint": "Value-driven prioritization helps resolve conflicts effectively.",
    "answerDescription": "Stakeholder needs should be prioritized based on business value to ensure the most impactful features are delivered."
  },
  {
    "id": "agile_3020",
    "question": "Which Agile ceremony is most beneficial for keeping stakeholders engaged?",
    "options": [
      { "id": "option_1", "text": "Daily Standups", "isCorrect": false },
      { "id": "option_2", "text": "Sprint Reviews", "isCorrect": true },
      { "id": "option_3", "text": "Retrospectives", "isCorrect": false },
      { "id": "option_4", "text": "Backlog Grooming", "isCorrect": false }
    ],
    "hint": "This event allows stakeholders to see progress and provide feedback.",
    "answerDescription": "Sprint reviews provide stakeholders with visibility into completed work and an opportunity to give feedback."
  },
  {
    "id": "agile_3021",
    "question": "Why is transparency important when working with Agile stakeholders?",
    "options": [
      { "id": "option_1", "text": "To limit stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "To build trust and ensure informed decision-making", "isCorrect": true },
      { "id": "option_3", "text": "To speed up the development process", "isCorrect": false },
      { "id": "option_4", "text": "To prevent scope changes", "isCorrect": false }
    ],
    "hint": "Trust and visibility lead to better collaboration.",
    "answerDescription": "Transparency ensures stakeholders have a clear view of progress, fostering trust and better decision-making."
  },
  {
    "id": "agile_3022",
    "question": "What should Agile teams do if stakeholders frequently change requirements?",
    "options": [
      { "id": "option_1", "text": "Reject all changes to avoid disruptions", "isCorrect": false },
      { "id": "option_2", "text": "Adapt to changes through iterative development", "isCorrect": true },
      { "id": "option_3", "text": "Freeze requirements after the first sprint", "isCorrect": false },
      { "id": "option_4", "text": "Delay work until requirements are final", "isCorrect": false }
    ],
    "hint": "Agile embraces change to deliver better value.",
    "answerDescription": "Iterative development allows teams to incorporate evolving requirements without disrupting the entire project."
  },
  {
    "id": "agile_3023",
    "question": "Which stakeholder role is most responsible for defining and prioritizing the product backlog?",
    "options": [
      { "id": "option_1", "text": "Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "Development Team", "isCorrect": false },
      { "id": "option_4", "text": "End Users", "isCorrect": false }
    ],
    "hint": "This role represents the business and manages the backlog.",
    "answerDescription": "The Product Owner is responsible for prioritizing the backlog to ensure business value is maximized."
  },
  {
    "id": "agile_3024",
    "question": "How can Agile teams help stakeholders make informed decisions?",
    "options": [
      { "id": "option_1", "text": "By withholding technical details", "isCorrect": false },
      { "id": "option_2", "text": "By providing regular progress reports and demos", "isCorrect": true },
      { "id": "option_3", "text": "By limiting stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "By delaying feedback sessions", "isCorrect": false }
    ],
    "hint": "Regular updates empower stakeholders to make better decisions.",
    "answerDescription": "Frequent demos and progress reports help stakeholders understand project status and make informed decisions."
  },
  {
    "id": "agile_3025",
    "question": "Why should Agile teams continuously communicate project risks to stakeholders?",
    "options": [
      { "id": "option_1", "text": "To shift responsibility for mitigation", "isCorrect": false },
      { "id": "option_2", "text": "To avoid taking accountability for decisions", "isCorrect": false },
      { "id": "option_3", "text": "To enable proactive decision-making and adjustments", "isCorrect": true },
      { "id": "option_4", "text": "To create a sense of urgency regardless of impact", "isCorrect": false }
    ],
    "hint": "Transparency in risk management leads to better stakeholder decisions.",
    "answerDescription": "Communicating risks early helps stakeholders make informed choices and allows teams to take corrective actions proactively."
  },
  {
    "id": "agile_3026",
    "question": "What is a primary benefit of Agileâ€™s iterative approach for stakeholders?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for stakeholder involvement", "isCorrect": false },
      { "id": "option_2", "text": "It ensures all work is completed in one release", "isCorrect": false },
      { "id": "option_3", "text": "It allows stakeholders to provide feedback frequently", "isCorrect": true },
      { "id": "option_4", "text": "It prevents any changes after development starts", "isCorrect": false }
    ],
    "hint": "Frequent feedback loops help refine the product continuously.",
    "answerDescription": "The iterative approach enables stakeholders to review progress and provide feedback, ensuring the product meets their needs."
  },
  {
    "id": "agile_3027",
    "question": "How can Agile teams demonstrate value to stakeholders effectively?",
    "options": [
      { "id": "option_1", "text": "By focusing solely on documentation", "isCorrect": false },
      { "id": "option_2", "text": "By avoiding changes to the original plan", "isCorrect": false },
      { "id": "option_3", "text": "By delivering working software incrementally", "isCorrect": true },
      { "id": "option_4", "text": "By limiting stakeholder involvement to final reviews", "isCorrect": false }
    ],
    "hint": "Working software is a key indicator of progress in Agile.",
    "answerDescription": "Agile teams showcase value by delivering working software frequently, allowing stakeholders to see real progress."
  },
  {
    "id": "agile_3028",
    "question": "What is the primary reason for engaging stakeholders early in an Agile project?",
    "options": [
      { "id": "option_1", "text": "To finalize all requirements upfront", "isCorrect": false },
      { "id": "option_2", "text": "To minimize their involvement later", "isCorrect": false },
      { "id": "option_3", "text": "To align expectations and ensure valuable feedback", "isCorrect": true },
      { "id": "option_4", "text": "To delegate decision-making responsibilities", "isCorrect": false }
    ],
    "hint": "Early involvement helps shape the project direction effectively.",
    "answerDescription": "Engaging stakeholders early ensures that their expectations align with project goals and facilitates valuable feedback."
  },
  {
    "id": "agile_3029",
    "question": "How can Agile teams ensure stakeholders remain engaged throughout the project?",
    "options": [
      { "id": "option_1", "text": "By limiting stakeholder interactions to the project kickoff", "isCorrect": false },
      { "id": "option_2", "text": "By presenting only final deliverables", "isCorrect": false },
      { "id": "option_3", "text": "By providing regular updates and involving them in key decisions", "isCorrect": true },
      { "id": "option_4", "text": "By requiring stakeholders to attend daily standups", "isCorrect": false }
    ],
    "hint": "Ongoing communication keeps stakeholders involved and informed.",
    "answerDescription": "Regular updates and participation in key decisions help keep stakeholders engaged and aligned with the project's progress."
  },
  {
    "id": "agile_3030",
    "question": "Why should Agile teams involve stakeholders in Sprint Reviews?",
    "options": [
      { "id": "option_1", "text": "To collect final project approvals", "isCorrect": false },
      { "id": "option_2", "text": "To replace retrospective discussions", "isCorrect": false },
      { "id": "option_3", "text": "To showcase progress and gather feedback", "isCorrect": true },
      { "id": "option_4", "text": "To delegate sprint planning tasks", "isCorrect": false }
    ],
    "hint": "Sprint Reviews provide visibility and foster collaboration.",
    "answerDescription": "Sprint Reviews allow stakeholders to see completed work, provide feedback, and align expectations for future sprints."
},
{
    "id": "agile_3031",
    "question": "What is the primary purpose of user stories in Agile development?",
    "options": [
      { "id": "option_1", "text": "To define detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "To ensure only developers understand the requirements", "isCorrect": false },
      { "id": "option_3", "text": "To capture user needs in a simple, clear format", "isCorrect": true },
      { "id": "option_4", "text": "To replace all documentation in Agile projects", "isCorrect": false }
    ],
    "hint": "User stories focus on user needs rather than technical details.",
    "answerDescription": "User stories describe the value a feature provides to users in an easily understandable way."
  },
  {
    "id": "agile_3032",
    "question": "Which format is commonly used for writing user stories?",
    "options": [
      { "id": "option_1", "text": "IF-THEN logic statements", "isCorrect": false },
      { "id": "option_2", "text": "Formal contract-like documents", "isCorrect": false },
      { "id": "option_3", "text": "As a [role], I want [feature] so that [benefit]", "isCorrect": true },
      { "id": "option_4", "text": "A numbered list of requirements", "isCorrect": false }
    ],
    "hint": "User stories follow a structure that highlights the userâ€™s perspective.",
    "answerDescription": "The format 'As a [role], I want [feature] so that [benefit]' keeps the focus on user needs and outcomes."
  },
  {
    "id": "agile_3033",
    "question": "Why are acceptance criteria important in user stories?",
    "options": [
      { "id": "option_1", "text": "They specify how users should write code", "isCorrect": false },
      { "id": "option_2", "text": "They ensure all team members agree on the implementation details", "isCorrect": false },
      { "id": "option_3", "text": "They define the conditions that must be met for the story to be considered complete", "isCorrect": true },
      { "id": "option_4", "text": "They make user stories unnecessary", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help teams define 'done' for a story.",
    "answerDescription": "Clear acceptance criteria help ensure that development meets the intended purpose of the user story."
  },
  {
    "id": "agile_3034",
    "question": "What happens if user stories lack clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "The story can still be implemented successfully", "isCorrect": false },
      { "id": "option_2", "text": "Developers will always know exactly what to build", "isCorrect": false },
      { "id": "option_3", "text": "There may be confusion about what defines 'done'", "isCorrect": true },
      { "id": "option_4", "text": "Stakeholders will automatically approve the work", "isCorrect": false }
    ],
    "hint": "Acceptance criteria provide a shared understanding of completion.",
    "answerDescription": "Without clear acceptance criteria, teams risk misunderstanding requirements, leading to rework."
  },
  {
    "id": "agile_3035",
    "question": "Which characteristic is essential for a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It contains extensive technical details", "isCorrect": false },
      { "id": "option_2", "text": "It includes a fixed implementation approach", "isCorrect": false },
      { "id": "option_3", "text": "It is concise, user-focused, and testable", "isCorrect": true },
      { "id": "option_4", "text": "It defines a full product roadmap", "isCorrect": false }
    ],
    "hint": "Good user stories should be easy to understand and verify.",
    "answerDescription": "A good user story is simple, focused on the user, and includes testable criteria."
  },
  {
    "id": "agile_3036",
    "question": "What is the INVEST principle in relation to user stories?",
    "options": [
      { "id": "option_1", "text": "A financial strategy for Agile teams", "isCorrect": false },
      { "id": "option_2", "text": "A way to prioritize backlog items based on cost", "isCorrect": false },
      { "id": "option_3", "text": "A guideline ensuring stories are Independent, Negotiable, Valuable, Estimable, Small, and Testable", "isCorrect": true },
      { "id": "option_4", "text": "A formula for calculating project ROI", "isCorrect": false }
    ],
    "hint": "The INVEST principle helps define quality user stories.",
    "answerDescription": "Following the INVEST criteria ensures user stories are structured effectively for Agile teams."
  },
  {
    "id": "agile_3037",
    "question": "How do user stories help Agile teams?",
    "options": [
      { "id": "option_1", "text": "By focusing only on technical implementation", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring only business analysts write requirements", "isCorrect": false },
      { "id": "option_3", "text": "By providing a shared understanding of customer needs", "isCorrect": true },
      { "id": "option_4", "text": "By defining exact coding steps for developers", "isCorrect": false }
    ],
    "hint": "User stories facilitate communication between teams and stakeholders.",
    "answerDescription": "User stories bridge the gap between users and developers, helping teams deliver meaningful features."
  },
  {
    "id": "agile_3038",
    "question": "What should be avoided when writing user stories?",
    "options": [
      { "id": "option_1", "text": "Keeping the focus on user needs", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring stories are independent", "isCorrect": false },
      { "id": "option_3", "text": "Overloading stories with technical details", "isCorrect": true },
      { "id": "option_4", "text": "Including acceptance criteria", "isCorrect": false }
    ],
    "hint": "User stories should remain simple and focused on the user.",
    "answerDescription": "Too much technical detail in a user story can shift the focus away from the userâ€™s needs."
  },
  {
    "id": "agile_3039",
    "question": "What is a common way to refine user stories?",
    "options": [
      { "id": "option_1", "text": "Adding more complex details", "isCorrect": false },
      { "id": "option_2", "text": "Rewriting them as long technical documents", "isCorrect": false },
      { "id": "option_3", "text": "Breaking large stories into smaller, manageable ones", "isCorrect": true },
      { "id": "option_4", "text": "Ignoring stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Smaller user stories make implementation easier.",
    "answerDescription": "Breaking down user stories ensures they remain actionable and achievable within sprints."
  },
  {
    "id": "agile_3040",
    "question": "Why should teams regularly review and update user stories?",
    "options": [
      { "id": "option_1", "text": "To make them more complex over time", "isCorrect": false },
      { "id": "option_2", "text": "To ensure they stay aligned with evolving project needs", "isCorrect": true },
      { "id": "option_3", "text": "To replace user stories with technical requirements", "isCorrect": false },
      { "id": "option_4", "text": "To increase project scope", "isCorrect": false }
    ],
    "hint": "User stories should reflect changing priorities and feedback.",
    "answerDescription": "Regularly updating user stories keeps them relevant and aligned with project goals."
  },
 {
    "id": "agile_3041",
    "question": "Which of the following is NOT a key characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "Independent", "isCorrect": false },
      { "id": "option_2", "text": "Negotiable", "isCorrect": false },
      { "id": "option_3", "text": "Testable", "isCorrect": false },
      { "id": "option_4", "text": "Highly technical", "isCorrect": true }
    ],
    "hint": "User stories should be user-centric rather than focused on technical details.",
    "answerDescription": "A well-written user story should be clear and testable, avoiding unnecessary technical complexity."
  },
  {
    "id": "agile_3042",
    "question": "Why should user stories be small and manageable?",
    "options": [
      { "id": "option_1", "text": "To reduce team communication", "isCorrect": false },
      { "id": "option_2", "text": "To make them difficult to estimate", "isCorrect": false },
      { "id": "option_3", "text": "To allow for multiple stakeholders' opinions", "isCorrect": false },
      { "id": "option_4", "text": "To enable faster development and testing", "isCorrect": true }
    ],
    "hint": "Smaller stories are easier to implement and validate.",
    "answerDescription": "Breaking down user stories ensures they can be completed and tested within a sprint."
  },
  {
    "id": "agile_3043",
    "question": "What is the primary goal of acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "To describe the user interface in detail", "isCorrect": false },
      { "id": "option_2", "text": "To limit the scope of a project", "isCorrect": false },
      { "id": "option_3", "text": "To provide flexibility in feature implementation", "isCorrect": false },
      { "id": "option_4", "text": "To define what must be met for a story to be considered complete", "isCorrect": true }
    ],
    "hint": "Acceptance criteria help define 'done' for a user story.",
    "answerDescription": "They ensure that all stakeholders agree on what needs to be achieved before a story is accepted."
  },
  {
    "id": "agile_3044",
    "question": "Which of the following best describes a good user story?",
    "options": [
      { "id": "option_1", "text": "A detailed technical specification", "isCorrect": false },
      { "id": "option_2", "text": "A description of the expected software behavior", "isCorrect": false },
      { "id": "option_3", "text": "A list of feature requirements", "isCorrect": false },
      { "id": "option_4", "text": "A concise, user-focused statement with clear goals", "isCorrect": true }
    ],
    "hint": "User stories should be simple and user-centric.",
    "answerDescription": "A well-written user story is short, to the point, and focused on user needs."
  },
  {
    "id": "agile_3045",
    "question": "What is a common mistake when writing user stories?",
    "options": [
      { "id": "option_1", "text": "Keeping them simple and user-focused", "isCorrect": false },
      { "id": "option_2", "text": "Using the 'As a... I want... so that...' format", "isCorrect": false },
      { "id": "option_3", "text": "Defining clear acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "Adding too much technical detail", "isCorrect": true }
    ],
    "hint": "User stories should focus on what the user needs, not technical specifics.",
    "answerDescription": "Too much technical detail can make stories hard to understand and reduce flexibility."
  },
  {
    "id": "agile_3046",
    "question": "What should teams do if a user story is too large?",
    "options": [
      { "id": "option_1", "text": "Reject it entirely", "isCorrect": false },
      { "id": "option_2", "text": "Implement it without changes", "isCorrect": false },
      { "id": "option_3", "text": "Ignore any acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "Break it down into smaller, manageable stories", "isCorrect": true }
    ],
    "hint": "Smaller user stories improve clarity and execution.",
    "answerDescription": "Large stories should be refined into smaller units to ensure they can be completed in a sprint."
  },
  {
    "id": "agile_3047",
    "question": "Who is primarily responsible for writing user stories?",
    "options": [
      { "id": "option_1", "text": "Software developers", "isCorrect": false },
      { "id": "option_2", "text": "Testers", "isCorrect": false },
      { "id": "option_3", "text": "Project managers", "isCorrect": false },
      { "id": "option_4", "text": "The product owner with input from the team", "isCorrect": true }
    ],
    "hint": "The person responsible for maximizing product value usually writes user stories.",
    "answerDescription": "The product owner typically writes user stories, incorporating feedback from the development team and stakeholders."
  },
  {
    "id": "agile_3048",
    "question": "Why should acceptance criteria be written before development begins?",
    "options": [
      { "id": "option_1", "text": "To allow developers to write code before planning", "isCorrect": false },
      { "id": "option_2", "text": "To reduce stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "To avoid changing requirements later", "isCorrect": false },
      { "id": "option_4", "text": "To ensure a shared understanding of what 'done' means", "isCorrect": true }
    ],
    "hint": "Clarity before development prevents misunderstandings.",
    "answerDescription": "Writing acceptance criteria early helps all team members understand expectations before work starts."
  },
  {
    "id": "agile_3049",
    "question": "What is the main reason for prioritizing user stories in a backlog?",
    "options": [
      { "id": "option_1", "text": "To assign work randomly", "isCorrect": false },
      { "id": "option_2", "text": "To ensure developers work on the easiest tasks first", "isCorrect": false },
      { "id": "option_3", "text": "To focus on the most valuable features first", "isCorrect": true },
      { "id": "option_4", "text": "To follow a strict order without flexibility", "isCorrect": false }
    ],
    "hint": "The backlog helps deliver high-value features first.",
    "answerDescription": "Prioritizing user stories ensures that teams work on the most important and impactful features first."
  },
  {
    "id": "agile_3050",
    "question": "Which factor should NOT determine the priority of a user story?",
    "options": [
      { "id": "option_1", "text": "Customer value", "isCorrect": false },
      { "id": "option_2", "text": "Business impact", "isCorrect": false },
      { "id": "option_3", "text": "Technical complexity", "isCorrect": false },
      { "id": "option_4", "text": "Personal preference of the developer", "isCorrect": true }
    ],
    "hint": "Story priority should align with business and customer needs.",
    "answerDescription": "Prioritization should be based on value and impact, not individual preferences."
  },
  {
    "id": "agile_3051",
    "question": "What is the primary benefit of using user stories in Agile development?",
    "options": [
      { "id": "option_1", "text": "They help capture user needs in a simple and understandable way", "isCorrect": true },
      { "id": "option_2", "text": "They eliminate the need for communication with stakeholders", "isCorrect": false },
      { "id": "option_3", "text": "They ensure developers work independently without guidance", "isCorrect": false },
      { "id": "option_4", "text": "They replace all technical documentation", "isCorrect": false }
    ],
    "hint": "User stories focus on user needs rather than technical details.",
    "answerDescription": "User stories provide a clear, user-centric way to define requirements that guide development."
  },
  {
    "id": "agile_3052",
    "question": "Which format is most commonly used when writing a user story?",
    "options": [
      { "id": "option_1", "text": "As a [user], I want [feature], so that [benefit]", "isCorrect": true },
      { "id": "option_2", "text": "A detailed technical specification document", "isCorrect": false },
      { "id": "option_3", "text": "A bulleted list of system functionalities", "isCorrect": false },
      { "id": "option_4", "text": "A flowchart of the system architecture", "isCorrect": false }
    ],
    "hint": "A standard template exists to ensure clarity in user stories.",
    "answerDescription": "The 'As a... I want... so that...' format ensures that stories remain focused on the userâ€™s perspective and benefits."
  },
  {
    "id": "agile_3053",
    "question": "What makes a user story testable?",
    "options": [
      { "id": "option_1", "text": "Having well-defined acceptance criteria", "isCorrect": true },
      { "id": "option_2", "text": "Being vague to allow flexibility", "isCorrect": false },
      { "id": "option_3", "text": "Only describing the business goal", "isCorrect": false },
      { "id": "option_4", "text": "Being purely technical without any user perspective", "isCorrect": false }
    ],
    "hint": "A story should have measurable success conditions.",
    "answerDescription": "Acceptance criteria define the conditions under which a story is considered complete, making it testable."
  },
  {
    "id": "agile_3054",
    "question": "Why should user stories avoid technical jargon?",
    "options": [
      { "id": "option_1", "text": "To ensure that all stakeholders can understand them", "isCorrect": true },
      { "id": "option_2", "text": "To make them easier for developers only", "isCorrect": false },
      { "id": "option_3", "text": "To limit stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "To increase complexity and specificity", "isCorrect": false }
    ],
    "hint": "User stories should be accessible to non-technical stakeholders.",
    "answerDescription": "A good user story should be understandable by business and development teams alike, facilitating collaboration."
  },
  {
    "id": "agile_3055",
    "question": "What role do acceptance criteria play in user stories?",
    "options": [
      { "id": "option_1", "text": "They define the conditions for accepting a story as complete", "isCorrect": true },
      { "id": "option_2", "text": "They specify only the UI design details", "isCorrect": false },
      { "id": "option_3", "text": "They serve as a replacement for test cases", "isCorrect": false },
      { "id": "option_4", "text": "They describe how developers should write code", "isCorrect": false }
    ],
    "hint": "They ensure everyone agrees on when a story is done.",
    "answerDescription": "Acceptance criteria provide clear expectations for when a story is considered finished, ensuring quality and alignment."
  },
  {
    "id": "agile_3056",
    "question": "What is a common mistake teams make when defining acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Not making them specific and measurable", "isCorrect": true },
      { "id": "option_2", "text": "Keeping them clear and concise", "isCorrect": false },
      { "id": "option_3", "text": "Ensuring they are aligned with business goals", "isCorrect": false },
      { "id": "option_4", "text": "Reviewing them with stakeholders", "isCorrect": false }
    ],
    "hint": "Vague criteria make it difficult to validate completion.",
    "answerDescription": "Acceptance criteria should be specific and testable to ensure clarity on what defines a successful implementation."
  },
  {
    "id": "agile_3057",
    "question": "Why is it important for user stories to be independent?",
    "options": [
      { "id": "option_1", "text": "To allow teams to work on them in any order", "isCorrect": true },
      { "id": "option_2", "text": "To make planning more complex", "isCorrect": false },
      { "id": "option_3", "text": "To increase the dependency between teams", "isCorrect": false },
      { "id": "option_4", "text": "To ensure all features are delivered together", "isCorrect": false }
    ],
    "hint": "User stories should not be blocked by others.",
    "answerDescription": "Independent stories enable teams to prioritize and deliver value without unnecessary dependencies."
  },
  {
    "id": "agile_3058",
    "question": "What is the INVEST principle in Agile user stories?",
    "options": [
      { "id": "option_1", "text": "A guideline for writing effective user stories", "isCorrect": true },
      { "id": "option_2", "text": "A project budgeting technique", "isCorrect": false },
      { "id": "option_3", "text": "A performance tracking metric", "isCorrect": false },
      { "id": "option_4", "text": "A tool for estimating story points", "isCorrect": false }
    ],
    "hint": "It stands for Independent, Negotiable, Valuable, Estimable, Small, Testable.",
    "answerDescription": "The INVEST principle ensures that user stories are well-defined and actionable for Agile teams."
  },
  {
    "id": "agile_3059",
    "question": "Why should user stories be small enough to complete in a single sprint?",
    "options": [
      { "id": "option_1", "text": "To ensure quick feedback and iteration", "isCorrect": true },
      { "id": "option_2", "text": "To make sprint planning more difficult", "isCorrect": false },
      { "id": "option_3", "text": "To limit the scope of Agile teams", "isCorrect": false },
      { "id": "option_4", "text": "To reduce collaboration between developers", "isCorrect": false }
    ],
    "hint": "Shorter stories improve adaptability and delivery speed.",
    "answerDescription": "Small stories allow teams to deliver working features quickly and adapt to changes more easily."
  },
  {
    "id": "agile_3060",
    "question": "Who should be involved in defining acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "The product owner, developers, and testers", "isCorrect": true },
      { "id": "option_2", "text": "Only the product owner", "isCorrect": false },
      { "id": "option_3", "text": "Only the development team", "isCorrect": false },
      { "id": "option_4", "text": "Only the QA team", "isCorrect": false }
    ],
    "hint": "Acceptance criteria require collaboration from multiple roles.",
    "answerDescription": "By involving all key stakeholders, teams ensure that acceptance criteria align with business needs and technical feasibility."
  },
  {
    "id": "agile_3061",
    "question": "What is the characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It contains detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "It is focused on user needs and business value", "isCorrect": true },
      { "id": "option_3", "text": "It includes all possible edge cases", "isCorrect": false },
      { "id": "option_4", "text": "It is written in complex language for developers", "isCorrect": false }
    ],
    "hint": "A good user story should prioritize the end-user experience.",
    "answerDescription": "User stories are meant to capture user needs in a simple and business-focused way, ensuring alignment with product goals."
  },
  {
    "id": "agile_3062",
    "question": "Why should acceptance criteria be defined before development begins?",
    "options": [
      { "id": "option_1", "text": "To prevent developers from making design decisions", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment on expected outcomes", "isCorrect": true },
      { "id": "option_3", "text": "To reduce the need for testing", "isCorrect": false },
      { "id": "option_4", "text": "To avoid writing test cases", "isCorrect": false }
    ],
    "hint": "Acceptance criteria define when a user story is considered done.",
    "answerDescription": "Defining acceptance criteria early ensures that everyone involved understands what is needed for successful implementation."
  },
  {
    "id": "agile_3063",
    "question": "Which of the following is NOT an ideal characteristic of a user story?",
    "options": [
      { "id": "option_1", "text": "It is independent of other stories", "isCorrect": false },
      { "id": "option_2", "text": "It is highly technical and difficult to understand", "isCorrect": true },
      { "id": "option_3", "text": "It delivers value to the user", "isCorrect": false },
      { "id": "option_4", "text": "It is small enough to complete in one sprint", "isCorrect": false }
    ],
    "hint": "User stories should be simple and accessible to all stakeholders.",
    "answerDescription": "A user story should be clear, focused on value, and understandable, rather than overly technical."
  },
  {
    "id": "agile_3064",
    "question": "Which element is typically included in well-defined acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "A list of all technical requirements", "isCorrect": false },
      { "id": "option_2", "text": "Clear conditions that determine if a story is complete", "isCorrect": true },
      { "id": "option_3", "text": "A timeline for project delivery", "isCorrect": false },
      { "id": "option_4", "text": "A breakdown of internal team tasks", "isCorrect": false }
    ],
    "hint": "Acceptance criteria define what success looks like for a story.",
    "answerDescription": "Well-defined acceptance criteria provide clear, testable conditions for story completion, ensuring alignment among stakeholders."
  },
  {
    "id": "agile_3065",
    "question": "What is the primary purpose of writing user stories?",
    "options": [
      { "id": "option_1", "text": "To specify implementation details for developers", "isCorrect": false },
      { "id": "option_2", "text": "To describe the desired functionality from a user's perspective", "isCorrect": true },
      { "id": "option_3", "text": "To document technical architecture", "isCorrect": false },
      { "id": "option_4", "text": "To replace formal requirement documents", "isCorrect": false }
    ],
    "hint": "User stories should capture user needs rather than technical details.",
    "answerDescription": "User stories focus on describing functionality in terms of user goals, ensuring alignment with business value."
  },
  {
    "id": "agile_3066",
    "question": "Which of the following is a common mistake when writing acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Making them specific and measurable", "isCorrect": false },
      { "id": "option_2", "text": "Leaving them vague or ambiguous", "isCorrect": true },
      { "id": "option_3", "text": "Ensuring they align with business needs", "isCorrect": false },
      { "id": "option_4", "text": "Defining testable conditions", "isCorrect": false }
    ],
    "hint": "Ambiguous criteria make testing difficult.",
    "answerDescription": "Acceptance criteria should be clear and measurable to ensure that development meets user expectations."
  },
  {
    "id": "agile_3067",
    "question": "Why should user stories be negotiable?",
    "options": [
      { "id": "option_1", "text": "To allow for flexibility in implementation", "isCorrect": false },
      { "id": "option_2", "text": "To enable collaboration between stakeholders and development teams", "isCorrect": true },
      { "id": "option_3", "text": "To change requirements frequently without structure", "isCorrect": false },
      { "id": "option_4", "text": "To avoid defining clear goals", "isCorrect": false }
    ],
    "hint": "User stories should encourage discussion and refinement.",
    "answerDescription": "A negotiable story allows room for collaboration, ensuring that both business and technical needs are met."
  },
  {
    "id": "agile_3068",
    "question": "How do acceptance criteria support test automation?",
    "options": [
      { "id": "option_1", "text": "By providing a list of potential test cases", "isCorrect": false },
      { "id": "option_2", "text": "By defining expected behavior that can be validated", "isCorrect": true },
      { "id": "option_3", "text": "By replacing the need for manual testing", "isCorrect": false },
      { "id": "option_4", "text": "By eliminating the need for QA involvement", "isCorrect": false }
    ],
    "hint": "Acceptance criteria guide what should be tested.",
    "answerDescription": "Well-written acceptance criteria help automate tests by clearly defining expected functionality and conditions for success."
  },
  {
    "id": "agile_3069",
    "question": "What is an effective way to ensure user stories meet business needs?",
    "options": [
      { "id": "option_1", "text": "Having only the development team review them", "isCorrect": false },
      { "id": "option_2", "text": "Collaborating with stakeholders throughout the process", "isCorrect": true },
      { "id": "option_3", "text": "Skipping refinement meetings to save time", "isCorrect": false },
      { "id": "option_4", "text": "Making them as broad and generic as possible", "isCorrect": false }
    ],
    "hint": "Business stakeholders should be actively involved in defining stories.",
    "answerDescription": "Engaging stakeholders ensures that user stories align with real business requirements and priorities."
  },
  {
    "id": "agile_3070",
    "question": "Which of the following is a key benefit of defining clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "It allows developers to work without testing", "isCorrect": false },
      { "id": "option_2", "text": "It ensures shared understanding of success criteria", "isCorrect": true },
      { "id": "option_3", "text": "It eliminates the need for user feedback", "isCorrect": false },
      { "id": "option_4", "text": "It replaces agile ceremonies", "isCorrect": false }
    ],
    "hint": "Acceptance criteria ensure everyone agrees on what 'done' means.",
    "answerDescription": "Clear acceptance criteria provide a common understanding, reducing confusion and ensuring quality outcomes."
  },  {
    "id": "agile_3071",
    "question": "What is the primary reason for using the INVEST criteria when writing user stories?",
    "options": [
      { "id": "option_1", "text": "To ensure stories are written in technical language", "isCorrect": false },
      { "id": "option_2", "text": "To create stories that are large and complex", "isCorrect": false },
      { "id": "option_3", "text": "To ensure stories are independent, valuable, and testable", "isCorrect": true },
      { "id": "option_4", "text": "To avoid collaboration with stakeholders", "isCorrect": false }
    ],
    "hint": "INVEST helps make user stories clear and actionable.",
    "answerDescription": "The INVEST criteria help ensure user stories are well-structured and deliver value efficiently."
  },
  {
    "id": "agile_3072",
    "question": "Which of the following best describes acceptance criteria in Agile?",
    "options": [
      { "id": "option_1", "text": "A checklist for documenting design details", "isCorrect": false },
      { "id": "option_2", "text": "A way to replace product backlog items", "isCorrect": false },
      { "id": "option_3", "text": "A set of conditions that must be met for a story to be accepted", "isCorrect": true },
      { "id": "option_4", "text": "A list of potential implementation methods", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help define when a story is considered done.",
    "answerDescription": "Well-defined acceptance criteria establish clear conditions that ensure a story meets business and user needs."
  },
  {
    "id": "agile_3073",
    "question": "Why should user stories be written in a non-technical language?",
    "options": [
      { "id": "option_1", "text": "To prevent developers from making changes", "isCorrect": false },
      { "id": "option_2", "text": "To make them difficult to implement", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all stakeholders can understand them", "isCorrect": true },
      { "id": "option_4", "text": "To avoid documenting business value", "isCorrect": false }
    ],
    "hint": "User stories should be understandable by both business and technical teams.",
    "answerDescription": "User stories should be written in simple, user-focused language so that all stakeholders can engage with them."
  },
  {
    "id": "agile_3074",
    "question": "Which of the following is NOT a benefit of writing clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "It helps ensure alignment between developers and stakeholders", "isCorrect": false },
      { "id": "option_2", "text": "It reduces ambiguity in requirements", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for testing", "isCorrect": true },
      { "id": "option_4", "text": "It supports better estimation and planning", "isCorrect": false }
    ],
    "hint": "Acceptance criteria guide development but do not replace testing.",
    "answerDescription": "While clear acceptance criteria help in development, they do not remove the need for proper testing."
  },
  {
    "id": "agile_3075",
    "question": "What makes a user story â€˜valuableâ€™ in Agile development?",
    "options": [
      { "id": "option_1", "text": "It contains detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "It is written only for developers", "isCorrect": false },
      { "id": "option_3", "text": "It delivers a benefit to users or the business", "isCorrect": true },
      { "id": "option_4", "text": "It follows a strict format regardless of context", "isCorrect": false }
    ],
    "hint": "A valuable user story must provide benefits to stakeholders.",
    "answerDescription": "A valuable user story ensures that each feature contributes to business objectives and user satisfaction."
  },
  {
    "id": "agile_3076",
    "question": "What is a common challenge in defining acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Ensuring they are testable and measurable", "isCorrect": false },
      { "id": "option_2", "text": "Writing them before development starts", "isCorrect": false },
      { "id": "option_3", "text": "Keeping them vague and open-ended", "isCorrect": true },
      { "id": "option_4", "text": "Aligning them with user needs", "isCorrect": false }
    ],
    "hint": "Vague acceptance criteria lead to misunderstandings.",
    "answerDescription": "Acceptance criteria should be clearly defined to provide precise validation points for a story."
  },
  {
    "id": "agile_3077",
    "question": "How can teams improve the quality of their user stories?",
    "options": [
      { "id": "option_1", "text": "By making them as broad as possible", "isCorrect": false },
      { "id": "option_2", "text": "By writing them without stakeholder input", "isCorrect": false },
      { "id": "option_3", "text": "By refining them through backlog grooming sessions", "isCorrect": true },
      { "id": "option_4", "text": "By avoiding acceptance criteria", "isCorrect": false }
    ],
    "hint": "User stories improve through continuous refinement.",
    "answerDescription": "Regular backlog grooming sessions help ensure user stories remain clear, actionable, and aligned with business needs."
  },
  {
    "id": "agile_3078",
    "question": "Which of the following best describes a well-written acceptance criterion?",
    "options": [
      { "id": "option_1", "text": "It contains ambiguous expectations", "isCorrect": false },
      { "id": "option_2", "text": "It requires interpretation by the development team", "isCorrect": false },
      { "id": "option_3", "text": "It clearly defines expected behavior and outcomes", "isCorrect": true },
      { "id": "option_4", "text": "It replaces the need for conversations", "isCorrect": false }
    ],
    "hint": "Good acceptance criteria leave no room for confusion.",
    "answerDescription": "A well-defined acceptance criterion provides clear, measurable, and testable conditions for story completion."
  },
  {
    "id": "agile_3079",
    "question": "How do well-defined user stories contribute to Agile project success?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for testing", "isCorrect": false },
      { "id": "option_2", "text": "By increasing project documentation", "isCorrect": false },
      { "id": "option_3", "text": "By ensuring clear requirements and user focus", "isCorrect": true },
      { "id": "option_4", "text": "By eliminating the need for stakeholder involvement", "isCorrect": false }
    ],
    "hint": "Clear user stories improve project alignment and execution.",
    "answerDescription": "Well-defined user stories ensure teams understand and deliver value-driven features effectively."
  },
  {
    "id": "agile_3080",
    "question": "Which aspect is NOT typically included in user stories?",
    "options": [
      { "id": "option_1", "text": "User role or persona", "isCorrect": false },
      { "id": "option_2", "text": "Expected outcome or value", "isCorrect": false },
      { "id": "option_3", "text": "Detailed technical implementation", "isCorrect": true },
      { "id": "option_4", "text": "Acceptance criteria", "isCorrect": false }
    ],
    "hint": "User stories focus on needs, not implementation details.",
    "answerDescription": "User stories capture the 'what' and 'why' rather than the 'how' of implementation."
  },
  {
    "id": "agile_3081",
    "question": "What is the primary purpose of a user story in Agile?",
    "options": [
      { "id": "option_1", "text": "To describe technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "To create long documentation", "isCorrect": false },
      { "id": "option_3", "text": "To restrict stakeholder involvement", "isCorrect": false },
      { "id": "option_4", "text": "To capture a userâ€™s needs and expected outcomes", "isCorrect": true }
    ],
    "hint": "User stories focus on delivering value to users.",
    "answerDescription": "User stories help ensure Agile teams build features that align with user needs and business objectives."
  },
  {
    "id": "agile_3082",
    "question": "Which component is essential in a well-defined acceptance criterion?",
    "options": [
      { "id": "option_1", "text": "Vague requirements", "isCorrect": false },
      { "id": "option_2", "text": "Detailed UI design elements", "isCorrect": false },
      { "id": "option_3", "text": "Implementation details", "isCorrect": false },
      { "id": "option_4", "text": "Clear and measurable conditions", "isCorrect": true }
    ],
    "hint": "Acceptance criteria should define what must be met for a story to be complete.",
    "answerDescription": "Clear and measurable acceptance criteria ensure that teams can validate whether a story is complete."
  },
  {
    "id": "agile_3083",
    "question": "Why we should write the acceptance criteria before the development begins?",
    "options": [
      { "id": "option_1", "text": "To increase development complexity", "isCorrect": false },
      { "id": "option_2", "text": "To eliminate the need for testing", "isCorrect": false },
      { "id": "option_3", "text": "To replace the need for user feedback", "isCorrect": false },
      { "id": "option_4", "text": "To establish clear expectations for completion", "isCorrect": true }
    ],
    "hint": "Well-defined acceptance criteria guide development and testing.",
    "answerDescription": "Acceptance criteria ensure that all stakeholders understand the expected functionality before development starts."
  },
  {
    "id": "agile_3084",
    "question": "How does defining acceptance criteria benefit an Agile team?",
    "options": [
      { "id": "option_1", "text": "It eliminates the need for communication", "isCorrect": false },
      { "id": "option_2", "text": "It increases the number of user stories required", "isCorrect": false },
      { "id": "option_3", "text": "It makes backlog refinement unnecessary", "isCorrect": false },
      { "id": "option_4", "text": "It ensures alignment between stakeholders and developers", "isCorrect": true }
    ],
    "hint": "Acceptance criteria help bridge the gap between business needs and technical implementation.",
    "answerDescription": "Clearly defined acceptance criteria align teams, ensuring that features meet business requirements and user needs."
  },
  {
    "id": "agile_3085",
    "question": "What is a key characteristic of an effective user story?",
    "options": [
      { "id": "option_1", "text": "It is long and highly detailed", "isCorrect": false },
      { "id": "option_2", "text": "It focuses on technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "It excludes acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "It describes a small, valuable piece of functionality", "isCorrect": true }
    ],
    "hint": "User stories should be concise and provide value to the user.",
    "answerDescription": "An effective user story is small enough to be completed in a sprint while delivering clear value."
  },
  {
    "id": "agile_3086",
    "question": "Which statement about user stories is true?",
    "options": [
      { "id": "option_1", "text": "They should contain detailed technical solutions", "isCorrect": false },
      { "id": "option_2", "text": "They must be written only by developers", "isCorrect": false },
      { "id": "option_3", "text": "They should be as broad as possible", "isCorrect": false },
      { "id": "option_4", "text": "They are written from the userâ€™s perspective", "isCorrect": true }
    ],
    "hint": "User stories describe what the user wants to achieve, not how it is built.",
    "answerDescription": "User stories focus on the user's perspective to ensure development aligns with actual needs."
  },
  {
    "id": "agile_3087",
    "question": "What is a potential risk of not having clear acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "User stories will be too simple", "isCorrect": false },
      { "id": "option_2", "text": "The development team will not need testing", "isCorrect": false },
      { "id": "option_3", "text": "The backlog will become too small", "isCorrect": false },
      { "id": "option_4", "text": "Different stakeholders may have different expectations", "isCorrect": true }
    ],
    "hint": "Without acceptance criteria, there is no clear definition of 'done.'",
    "answerDescription": "Lack of clear acceptance criteria can lead to misalignment between stakeholders and developers."
  },
  {
    "id": "agile_3088",
    "question": "Why is it important to prioritize user stories in a product backlog?",
    "options": [
      { "id": "option_1", "text": "To increase documentation requirements", "isCorrect": false },
      { "id": "option_2", "text": "To prevent developers from contributing", "isCorrect": false },
      { "id": "option_3", "text": "To create unnecessary work for the team", "isCorrect": false },
      { "id": "option_4", "text": "To ensure high-value features are developed first", "isCorrect": true }
    ],
    "hint": "Prioritization helps teams deliver the most impactful features first.",
    "answerDescription": "Well-prioritized backlogs ensure that teams focus on the most valuable user stories first."
  },
  {
    "id": "agile_3089",
    "question": "Which Agile practice helps refine user stories over time?",
    "options": [
      { "id": "option_1", "text": "Pair programming", "isCorrect": false },
      { "id": "option_2", "text": "Test-driven development", "isCorrect": false },
      { "id": "option_3", "text": "Daily stand-ups", "isCorrect": false },
      { "id": "option_4", "text": "Backlog grooming", "isCorrect": true }
    ],
    "hint": "This practice ensures user stories remain relevant and well-defined.",
    "answerDescription": "Backlog grooming sessions help refine user stories, making them more precise and actionable."
  },
  {
    "id": "agile_3090",
    "question": "What happens when a user story does not meet its acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "It is automatically marked as done", "isCorrect": false },
      { "id": "option_2", "text": "It is added to the next sprint without discussion", "isCorrect": false },
      { "id": "option_3", "text": "It is ignored by the team", "isCorrect": false },
      { "id": "option_4", "text": "It is reviewed and either refined or reworked", "isCorrect": true }
    ],
    "hint": "User stories must meet acceptance criteria before being marked as complete.",
    "answerDescription": "When a user story does not meet its acceptance criteria, it needs further refinement or implementation adjustments."
  },
  {
    "id": "3091",
    "question": "What is the primary purpose of acceptance criteria in a user story?",
    "options": [
      { "id": "option_1", "text": "To define the conditions for meeting the story's requirements", "isCorrect": true },
      { "id": "option_2", "text": "To replace the user story itself", "isCorrect": false },
      { "id": "option_3", "text": "To describe the technical implementation details", "isCorrect": false },
      { "id": "option_4", "text": "To prioritize backlog items", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help verify whether a story is complete.",
    "answerDescription": "Acceptance criteria provide clear conditions that must be met for a user story to be considered done."
  },
  {
    "id": "3092",
    "question": "Which of the following is a key characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It is written in a simple and user-centric manner", "isCorrect": true },
      { "id": "option_2", "text": "It includes all possible technical specifications", "isCorrect": false },
      { "id": "option_3", "text": "It is assigned to a specific developer", "isCorrect": false },
      { "id": "option_4", "text": "It is detailed enough to cover all future changes", "isCorrect": false }
    ],
    "hint": "User stories focus on user needs rather than technical details.",
    "answerDescription": "A well-written user story is simple, clear, and focused on the userâ€™s perspective."
  },
  {
    "id": "3093",
    "question": "Why should user stories follow the INVEST principle?",
    "options": [
      { "id": "option_1", "text": "To ensure they are Independent, Negotiable, Valuable, Estimable, Small, and Testable", "isCorrect": true },
      { "id": "option_2", "text": "To include as many technical details as possible", "isCorrect": false },
      { "id": "option_3", "text": "To ensure they are always assigned to a senior developer", "isCorrect": false },
      { "id": "option_4", "text": "To replace the need for acceptance criteria", "isCorrect": false }
    ],
    "hint": "INVEST ensures user stories are high quality and manageable.",
    "answerDescription": "The INVEST principle helps teams create well-structured and effective user stories."
  },
  {
    "id": "3094",
    "question": "How do acceptance criteria benefit Agile teams?",
    "options": [
      { "id": "option_1", "text": "They define when a user story is considered done", "isCorrect": true },
      { "id": "option_2", "text": "They ensure that only developers can approve a feature", "isCorrect": false },
      { "id": "option_3", "text": "They allow stakeholders to rewrite user stories", "isCorrect": false },
      { "id": "option_4", "text": "They replace the need for sprint planning", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help define completion standards for a story.",
    "answerDescription": "Acceptance criteria serve as a guideline for teams to determine when a user story is successfully implemented."
  },
  {
    "id": "3095",
    "question": "What is a common mistake when writing user stories?",
    "options": [
      { "id": "option_1", "text": "Including multiple functionalities in a single story", "isCorrect": true },
      { "id": "option_2", "text": "Writing the story in non-technical language", "isCorrect": false },
      { "id": "option_3", "text": "Using the INVEST principle", "isCorrect": false },
      { "id": "option_4", "text": "Defining clear acceptance criteria", "isCorrect": false }
    ],
    "hint": "User stories should be small and manageable.",
    "answerDescription": "User stories should be concise and focus on one feature to ensure they are easy to implement and test."
  },
  {
    "id": "3096",
    "question": "How do user stories contribute to Agile development?",
    "options": [
      { "id": "option_1", "text": "They help define customer needs in a simple format", "isCorrect": true },
      { "id": "option_2", "text": "They specify the exact technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "They are used to track developer performance", "isCorrect": false },
      { "id": "option_4", "text": "They replace project documentation", "isCorrect": false }
    ],
    "hint": "User stories focus on describing what the user wants.",
    "answerDescription": "User stories ensure that Agile teams deliver valuable features by focusing on user needs."
  },
  {
    "id": "3097",
    "question": "What is the purpose of the 'As a... I want... So that...' format in user stories?",
    "options": [
      { "id": "option_1", "text": "To clarify the user, action, and benefit of the story", "isCorrect": true },
      { "id": "option_2", "text": "To specify technical details upfront", "isCorrect": false },
      { "id": "option_3", "text": "To replace acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "To ensure only developers write user stories", "isCorrect": false }
    ],
    "hint": "This format helps express user needs clearly.",
    "answerDescription": "The format ensures clarity by defining the role, the need, and the benefit of the feature."
  },
  {
    "id": "3098",
    "question": "Which statement about user stories is true?",
    "options": [
      { "id": "option_1", "text": "They should be small, independent, and testable", "isCorrect": true },
      { "id": "option_2", "text": "They must contain detailed technical specifications", "isCorrect": false },
      { "id": "option_3", "text": "They should be assigned to a single developer", "isCorrect": false },
      { "id": "option_4", "text": "They must be approved by all stakeholders before development", "isCorrect": false }
    ],
    "hint": "Good user stories are concise and testable.",
    "answerDescription": "A good user story follows the INVEST principle and is easy to validate."
  },
  {
    "id": "3099",
    "question": "Why are acceptance criteria essential in Agile development?",
    "options": [
      { "id": "option_1", "text": "They ensure a common understanding of success", "isCorrect": true },
      { "id": "option_2", "text": "They define the technical architecture", "isCorrect": false },
      { "id": "option_3", "text": "They replace the need for user feedback", "isCorrect": false },
      { "id": "option_4", "text": "They eliminate the need for sprint reviews", "isCorrect": false }
    ],
    "hint": "Acceptance criteria clarify when a story is complete.",
    "answerDescription": "Acceptance criteria help teams align on the expected outcomes of a user story."
  },
  {
    "id": "3100",
    "question": "What should acceptance criteria focus on?",
    "options": [
      { "id": "option_1", "text": "The expected behavior and conditions for completion", "isCorrect": true },
      { "id": "option_2", "text": "The internal coding structure", "isCorrect": false },
      { "id": "option_3", "text": "The estimated effort required", "isCorrect": false },
      { "id": "option_4", "text": "The developer's preferred implementation method", "isCorrect": false }
    ],
    "hint": "Acceptance criteria should define expected results, not technical details.",
    "answerDescription": "They ensure a user story meets functional requirements by defining expected behavior."
  },{
    "id": "3101",
    "question": "What is the purpose of acceptance criteria in a user story?",
    "options": [
      { "id": "option_1", "text": "To describe the technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "To define the conditions that must be met for the story to be accepted", "isCorrect": true },
      { "id": "option_3", "text": "To determine the priority of the user story", "isCorrect": false },
      { "id": "option_4", "text": "To specify the estimated effort for development", "isCorrect": false }
    ],
    "hint": "Acceptance criteria set clear guidelines for completing a user story.",
    "answerDescription": "Acceptance criteria help define when a user story is considered done and ensure alignment between stakeholders and developers."
  },
  {
    "id": "3102",
    "question": "Which statement best describes a well-written user story?",
    "options": [
      { "id": "option_1", "text": "A detailed technical specification of a feature", "isCorrect": false },
      { "id": "option_2", "text": "A short and clear description of a user's need or requirement", "isCorrect": true },
      { "id": "option_3", "text": "A list of tasks developers need to complete", "isCorrect": false },
      { "id": "option_4", "text": "A report of completed work", "isCorrect": false }
    ],
    "hint": "User stories focus on the user's perspective and need.",
    "answerDescription": "A good user story captures the who, what, and why of a requirement in a concise manner."
  },
  {
    "id": "3103",
    "question": "What role do stakeholders play in defining acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "They develop and test the code", "isCorrect": false },
      { "id": "option_2", "text": "They provide input on what conditions must be met for the feature to be acceptable", "isCorrect": true },
      { "id": "option_3", "text": "They determine the sprint timeline", "isCorrect": false },
      { "id": "option_4", "text": "They assign developers to the task", "isCorrect": false }
    ],
    "hint": "Stakeholders ensure business needs are reflected in acceptance criteria.",
    "answerDescription": "Stakeholders define the criteria that guide development and testing to align with business goals."
  },
  {
    "id": "3104",
    "question": "Why is it important to have clear and specific acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "To allow flexibility in feature implementation", "isCorrect": false },
      { "id": "option_2", "text": "To ensure alignment on what is required for completion", "isCorrect": true },
      { "id": "option_3", "text": "To give developers full control over the final product", "isCorrect": false },
      { "id": "option_4", "text": "To increase the complexity of testing", "isCorrect": false }
    ],
    "hint": "Acceptance criteria define when a story is done.",
    "answerDescription": "Clear acceptance criteria help prevent misunderstandings and ensure smooth development and testing."
  },
  {
    "id": "3105",
    "question": "Which of the following best describes INVEST criteria for a good user story?",
    "options": [
      { "id": "option_1", "text": "A framework for estimating story points", "isCorrect": false },
      { "id": "option_2", "text": "A guideline to ensure user stories are independent, negotiable, valuable, estimable, small, and testable", "isCorrect": true },
      { "id": "option_3", "text": "A technique for writing unit tests", "isCorrect": false },
      { "id": "option_4", "text": "A method for assigning tasks to developers", "isCorrect": false }
    ],
    "hint": "INVEST helps create effective user stories.",
    "answerDescription": "Following the INVEST criteria ensures user stories are well-defined and manageable within Agile development."
  },
  {
    "id": "3106",
    "question": "What is a key benefit of writing user stories from a user's perspective?",
    "options": [
      { "id": "option_1", "text": "It ensures the development team focuses on internal technical requirements", "isCorrect": false },
      { "id": "option_2", "text": "It helps maintain a customer-centric approach in product development", "isCorrect": true },
      { "id": "option_3", "text": "It simplifies the project managerâ€™s work", "isCorrect": false },
      { "id": "option_4", "text": "It reduces the need for collaboration between teams", "isCorrect": false }
    ],
    "hint": "User stories prioritize the end-user experience.",
    "answerDescription": "By focusing on the user's needs, development teams can build products that deliver real value."
  },
  {
    "id": "3107",
    "question": "When should acceptance criteria be defined in Agile development?",
    "options": [
      { "id": "option_1", "text": "After the feature has been developed", "isCorrect": false },
      { "id": "option_2", "text": "Before development begins to guide implementation", "isCorrect": true },
      { "id": "option_3", "text": "During the final testing phase", "isCorrect": false },
      { "id": "option_4", "text": "After receiving user feedback", "isCorrect": false }
    ],
    "hint": "Acceptance criteria guide development from the start.",
    "answerDescription": "Defining acceptance criteria early ensures clear expectations and smoother development and testing processes."
  },
  {
    "id": "3108",
    "question": "Which of the following is NOT a common format for writing user stories?",
    "options": [
      { "id": "option_1", "text": "'As a [user], I want [goal] so that [reason]'", "isCorrect": false },
      { "id": "option_2", "text": "'Given [context], when [action], then [outcome]'", "isCorrect": true },
      { "id": "option_3", "text": "'User story: [title]'", "isCorrect": false },
      { "id": "option_4", "text": "'Requirement: [detailed specifications]'", "isCorrect": false }
    ],
    "hint": "A common user story format follows the 'As a... I want... so that...' structure.",
    "answerDescription": "The 'Given-When-Then' format is typically used for test scenarios, while user stories focus on user needs."
  },
  {
    "id": "3109",
    "question": "What happens if a user story does not meet its acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "It is marked as complete and released", "isCorrect": false },
      { "id": "option_2", "text": "It is reviewed and reworked until it meets the criteria", "isCorrect": true },
      { "id": "option_3", "text": "It is discarded", "isCorrect": false },
      { "id": "option_4", "text": "It is automatically deferred to the next sprint", "isCorrect": false }
    ],
    "hint": "Acceptance criteria ensure a story is ready for release.",
    "answerDescription": "Stories that do not meet the criteria must be revised to align with the expected outcome."
  },
  {
    "id": "3110",
    "question": "How can acceptance criteria improve communication between stakeholders and developers?",
    "options": [
      { "id": "option_1", "text": "By providing vague requirements to allow flexibility", "isCorrect": false },
      { "id": "option_2", "text": "By setting clear expectations for when a story is considered complete", "isCorrect": true },
      { "id": "option_3", "text": "By ensuring only developers define requirements", "isCorrect": false },
      { "id": "option_4", "text": "By focusing on technical details rather than business needs", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help define 'done' clearly.",
    "answerDescription": "Clear acceptance criteria ensure that both business and technical teams are aligned on requirements and expectations."
  },
  {
    "id": "3111",
    "question": "What is a key characteristic of a well-defined user story?",
    "options": [
      { "id": "option_1", "text": "It should be as detailed as possible upfront", "isCorrect": false },
      { "id": "option_2", "text": "It should be independent and valuable", "isCorrect": true },
      { "id": "option_3", "text": "It should have a fixed and non-negotiable scope", "isCorrect": false },
      { "id": "option_4", "text": "It should contain technical implementation details", "isCorrect": false }
    ],
    "hint": "A good user story should follow the INVEST principles.",
    "answerDescription": "User stories should be Independent, Negotiable, Valuable, Estimable, Small, and Testable (INVEST)."
  },
  {
    "id": "3112",
    "question": "Which aspect is essential in writing effective acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Describing all possible edge cases", "isCorrect": false },
      { "id": "option_2", "text": "Defining clear pass/fail conditions", "isCorrect": true },
      { "id": "option_3", "text": "Listing all technical dependencies", "isCorrect": false },
      { "id": "option_4", "text": "Focusing on non-functional requirements only", "isCorrect": false }
    ],
    "hint": "Acceptance criteria should determine whether a story is done.",
    "answerDescription": "Acceptance criteria define the expected outcome and conditions to determine whether a user story is completed correctly."
  },
  {
    "id": "3113",
    "question": "How do user stories help Agile teams?",
    "options": [
      { "id": "option_1", "text": "They enforce strict deadlines", "isCorrect": false },
      { "id": "option_2", "text": "They provide a shared understanding of user needs", "isCorrect": true },
      { "id": "option_3", "text": "They eliminate the need for communication", "isCorrect": false },
      { "id": "option_4", "text": "They replace technical specifications", "isCorrect": false }
    ],
    "hint": "User stories promote collaboration and understanding.",
    "answerDescription": "User stories help Agile teams align on user needs and provide a framework for discussing requirements and solutions."
  },
  {
    "id": "3114",
    "question": "What is the primary focus of a user story?",
    "options": [
      { "id": "option_1", "text": "Technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "User value and experience", "isCorrect": true },
      { "id": "option_3", "text": "Project timeline estimation", "isCorrect": false },
      { "id": "option_4", "text": "Defining database structures", "isCorrect": false }
    ],
    "hint": "User stories emphasize what users need, not how to build it.",
    "answerDescription": "A user story focuses on delivering value to the end user by defining their needs and expected benefits."
  },
  {
    "id": "3115",
    "question": "Why should acceptance criteria be written before development starts?",
    "options": [
      { "id": "option_1", "text": "To define the implementation steps", "isCorrect": false },
      { "id": "option_2", "text": "To establish clear expectations and testability", "isCorrect": true },
      { "id": "option_3", "text": "To lock the requirements permanently", "isCorrect": false },
      { "id": "option_4", "text": "To reduce developer autonomy", "isCorrect": false }
    ],
    "hint": "Acceptance criteria guide both development and testing.",
    "answerDescription": "By defining acceptance criteria early, teams ensure alignment on expectations and testable outcomes."
  },
  {
    "id": "3116",
    "question": "What is the recommended format for writing user stories?",
    "options": [
      { "id": "option_1", "text": "Listing all technical requirements", "isCorrect": false },
      { "id": "option_2", "text": "As a [user], I want [goal] so that [benefit]", "isCorrect": true },
      { "id": "option_3", "text": "Using a detailed use case diagram", "isCorrect": false },
      { "id": "option_4", "text": "Following a strict BRD format", "isCorrect": false }
    ],
    "hint": "The format should capture who, what, and why.",
    "answerDescription": "User stories are typically written in the format 'As a [user], I want [goal] so that [benefit]' to ensure clarity and purpose."
  },
  {
    "id": "3117",
    "question": "Which factor makes acceptance criteria more effective?",
    "options": [
      { "id": "option_1", "text": "Being open-ended and flexible", "isCorrect": false },
      { "id": "option_2", "text": "Being specific and measurable", "isCorrect": true },
      { "id": "option_3", "text": "Being vague to allow creativity", "isCorrect": false },
      { "id": "option_4", "text": "Being written only after testing", "isCorrect": false }
    ],
    "hint": "Clear criteria ensure consistent validation.",
    "answerDescription": "Effective acceptance criteria provide specific, measurable conditions that define when a story is complete."
  },
  {
    "id": "3118",
    "question": "How do user stories contribute to Agile project success?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for customer collaboration", "isCorrect": false },
      { "id": "option_2", "text": "By facilitating iterative and incremental development", "isCorrect": true },
      { "id": "option_3", "text": "By replacing traditional project management documents", "isCorrect": false },
      { "id": "option_4", "text": "By ensuring fixed project scope", "isCorrect": false }
    ],
    "hint": "User stories align with Agile principles of flexibility and collaboration.",
    "answerDescription": "User stories enable iterative and incremental development by providing a user-centered approach to building functionality."
  },
  {
    "id": "3119",
    "question": "What is a major benefit of well-defined user stories?",
    "options": [
      { "id": "option_1", "text": "They eliminate the need for refinement meetings", "isCorrect": false },
      { "id": "option_2", "text": "They help teams prioritize and plan work effectively", "isCorrect": true },
      { "id": "option_3", "text": "They replace all other Agile documentation", "isCorrect": false },
      { "id": "option_4", "text": "They ensure that no changes are needed", "isCorrect": false }
    ],
    "hint": "Good user stories support Agile backlog management.",
    "answerDescription": "Well-defined user stories help teams understand priorities, estimate effort, and plan work efficiently."
  },
  {
    "id": "3120",
    "question": "What should acceptance criteria focus on?",
    "options": [
      { "id": "option_1", "text": "Technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "Expected outcomes and behaviors", "isCorrect": true },
      { "id": "option_3", "text": "Development teamâ€™s workload", "isCorrect": false },
      { "id": "option_4", "text": "Budget constraints", "isCorrect": false }
    ],
    "hint": "Acceptance criteria should describe the desired result.",
    "answerDescription": "Acceptance criteria define expected behaviors and outcomes, helping ensure the user story meets requirements."
  },
  {
    "id": "3121",
    "question": "What is the primary purpose of acceptance criteria in user stories?",
    "options": [
      { "id": "option_1", "text": "To describe the UI design in detail", "isCorrect": false },
      { "id": "option_2", "text": "To outline the business justification", "isCorrect": false },
      { "id": "option_3", "text": "To define conditions for story completion", "isCorrect": true },
      { "id": "option_4", "text": "To assign tasks to developers", "isCorrect": false }
    ],
    "hint": "Acceptance criteria ensure the story meets business and technical requirements.",
    "answerDescription": "Acceptance criteria provide a clear definition of when a user story is considered complete and functioning as expected."
  },
  {
    "id": "3122",
    "question": "Which characteristic is essential for a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It should contain a complete technical solution", "isCorrect": false },
      { "id": "option_2", "text": "It should be vague enough for interpretation", "isCorrect": false },
      { "id": "option_3", "text": "It should be independent and negotiable", "isCorrect": true },
      { "id": "option_4", "text": "It should be assigned to a specific developer", "isCorrect": false }
    ],
    "hint": "Good user stories follow the INVEST principle.",
    "answerDescription": "User stories should be independent, negotiable, and valuable to provide flexibility and clarity."
  },
  {
    "id": "3123",
    "question": "Why is it important for acceptance criteria to be clear and measurable?",
    "options": [
      { "id": "option_1", "text": "To allow for creative interpretation", "isCorrect": false },
      { "id": "option_2", "text": "To prevent rework and misunderstandings", "isCorrect": false },
      { "id": "option_3", "text": "To ensure developers and testers have a shared understanding", "isCorrect": true },
      { "id": "option_4", "text": "To prioritize stories based on difficulty", "isCorrect": false }
    ],
    "hint": "Clear acceptance criteria reduce ambiguity.",
    "answerDescription": "Explicit and measurable criteria help align expectations between developers, testers, and stakeholders."
  },
  {
    "id": "3124",
    "question": "How do acceptance criteria support agile development?",
    "options": [
      { "id": "option_1", "text": "By providing exhaustive documentation", "isCorrect": false },
      { "id": "option_2", "text": "By ensuring requirements remain flexible", "isCorrect": false },
      { "id": "option_3", "text": "By defining done conditions for user stories", "isCorrect": true },
      { "id": "option_4", "text": "By reducing the need for collaboration", "isCorrect": false }
    ],
    "hint": "Acceptance criteria clarify when a story is complete.",
    "answerDescription": "They help define when a user story meets all functional and non-functional requirements."
  },
  {
    "id": "3125",
    "question": "Which of the following is NOT a common format for writing acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Scenario-Oriented Criteria", "isCorrect": false },
      { "id": "option_2", "text": "Checklist-Based Criteria", "isCorrect": false },
      { "id": "option_3", "text": "Randomized Test Criteria", "isCorrect": true },
      { "id": "option_4", "text": "Given-When-Then Criteria", "isCorrect": false }
    ],
    "hint": "Acceptance criteria follow structured formats.",
    "answerDescription": "Common formats include scenario-based and Gherkin syntax, while 'randomized test criteria' is not a standard format."
  },
  {
    "id": "3126",
    "question": "What is a key benefit of well-defined acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "It makes design decisions for developers", "isCorrect": false },
      { "id": "option_2", "text": "It reduces the need for user testing", "isCorrect": false },
      { "id": "option_3", "text": "It ensures alignment between stakeholders and developers", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for code reviews", "isCorrect": false }
    ],
    "hint": "Acceptance criteria act as a communication bridge.",
    "answerDescription": "Well-defined criteria help ensure that developers and stakeholders share the same understanding of requirements."
  },
  {
    "id": "3127",
    "question": "How do user stories contribute to agile development?",
    "options": [
      { "id": "option_1", "text": "By providing step-by-step coding instructions", "isCorrect": false },
      { "id": "option_2", "text": "By focusing on detailed technical specifications", "isCorrect": false },
      { "id": "option_3", "text": "By emphasizing user needs and business value", "isCorrect": true },
      { "id": "option_4", "text": "By reducing the number of team interactions", "isCorrect": false }
    ],
    "hint": "User stories focus on user-centric development.",
    "answerDescription": "User stories help teams build features that align with user expectations and business goals."
  },
  {
    "id": "3128",
    "question": "What role does feedback play in refining user stories?",
    "options": [
      { "id": "option_1", "text": "It slows down the development process", "isCorrect": false },
      { "id": "option_2", "text": "It introduces unnecessary complexity", "isCorrect": false },
      { "id": "option_3", "text": "It helps improve clarity and alignment", "isCorrect": true },
      { "id": "option_4", "text": "It eliminates the need for backlog grooming", "isCorrect": false }
    ],
    "hint": "Feedback ensures continuous improvement.",
    "answerDescription": "Regular feedback loops help teams refine user stories for better understanding and execution."
  },
  {
    "id": "3129",
    "question": "Which principle ensures that user stories are actionable and testable?",
    "options": [
      { "id": "option_1", "text": "The DRY principle", "isCorrect": false },
      { "id": "option_2", "text": "The SOLID principle", "isCorrect": false },
      { "id": "option_3", "text": "The INVEST principle", "isCorrect": true },
      { "id": "option_4", "text": "The KISS principle", "isCorrect": false }
    ],
    "hint": "This principle ensures stories are Independent, Negotiable, Valuable, Estimable, Small, and Testable.",
    "answerDescription": "The INVEST principle helps teams create well-defined, manageable user stories."
  },
  {
    "id": "3130",
    "question": "What is an anti-pattern in writing acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Writing them in a clear and structured format", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring they are testable and measurable", "isCorrect": false },
      { "id": "option_3", "text": "Defining vague and subjective criteria", "isCorrect": true },
      { "id": "option_4", "text": "Aligning them with business objectives", "isCorrect": false }
    ],
    "hint": "Ambiguity in acceptance criteria leads to misinterpretation.",
    "answerDescription": "Vague criteria create confusion, making it difficult to determine if a story is truly complete."
  },
  {
    "id": "3131",
    "question": "What is the main purpose of acceptance criteria in a user story?",
    "options": [
      { "id": "option_1", "text": "To describe the userâ€™s emotions while using the product", "isCorrect": false },
      { "id": "option_2", "text": "To specify the deployment process for a feature", "isCorrect": false },
      { "id": "option_3", "text": "To list all possible future requirements", "isCorrect": false },
      { "id": "option_4", "text": "To define conditions that must be met for a story to be accepted", "isCorrect": true }
    ],
    "hint": "It ensures clarity on when a story is considered complete.",
    "answerDescription": "Acceptance criteria provide a clear definition of done for a user story, ensuring alignment between developers and stakeholders."
  },
  {
    "id": "3132",
    "question": "Which of the following best describes INVEST criteria for a good user story?",
    "options": [
      { "id": "option_1", "text": "It ensures user stories are large and complex", "isCorrect": false },
      { "id": "option_2", "text": "It focuses on technical implementation details", "isCorrect": false },
      { "id": "option_3", "text": "It defines the UI design of a feature", "isCorrect": false },
      { "id": "option_4", "text": "It ensures stories are independent, negotiable, valuable, estimable, small, and testable", "isCorrect": true }
    ],
    "hint": "INVEST is a guideline for writing effective user stories.",
    "answerDescription": "A good user story follows the INVEST principle, ensuring it is clear, actionable, and well-scoped."
  },
  {
    "id": "3133",
    "question": "Why is it important for user stories to be small and estimable?",
    "options": [
      { "id": "option_1", "text": "To allow teams to deliver incremental value quickly", "isCorrect": false },
      { "id": "option_2", "text": "To ensure that all stories fit within a sprint", "isCorrect": false },
      { "id": "option_3", "text": "To avoid writing acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "To reduce complexity and improve planning accuracy", "isCorrect": true }
    ],
    "hint": "Smaller stories lead to better estimation and predictability.",
    "answerDescription": "Breaking down stories into smaller, estimable units improves team efficiency and facilitates better sprint planning."
  },
  {
    "id": "3134",
    "question": "How does acceptance criteria improve communication between stakeholders and developers?",
    "options": [
      { "id": "option_1", "text": "By eliminating the need for discussions", "isCorrect": false },
      { "id": "option_2", "text": "By making developers responsible for defining requirements", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on functional requirements", "isCorrect": false },
      { "id": "option_4", "text": "By providing clear expectations for feature completion", "isCorrect": true }
    ],
    "hint": "It ensures alignment between stakeholders and the development team.",
    "answerDescription": "Acceptance criteria act as a contract between stakeholders and developers, ensuring mutual understanding of expected outcomes."
  },
  {
    "id": "3135",
    "question": "What should acceptance criteria primarily focus on?",
    "options": [
      { "id": "option_1", "text": "How a feature is implemented in code", "isCorrect": false },
      { "id": "option_2", "text": "The technical stack used for development", "isCorrect": false },
      { "id": "option_3", "text": "The detailed project roadmap", "isCorrect": false },
      { "id": "option_4", "text": "The expected behavior of a feature", "isCorrect": true }
    ],
    "hint": "It defines the success conditions for a user story.",
    "answerDescription": "Acceptance criteria outline what must be achieved for a feature to be considered complete and functional."
  },
  {
    "id": "3136",
    "question": "Which format is commonly used for writing acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Gherkin (Given-When-Then)", "isCorrect": false },
      { "id": "option_2", "text": "Feature branch specifications", "isCorrect": false },
      { "id": "option_3", "text": "Technical API documentation", "isCorrect": false },
      { "id": "option_4", "text": "Formal test scripts", "isCorrect": true }
    ],
    "hint": "It is widely used in Behavior-Driven Development (BDD).",
    "answerDescription": "Gherkin syntax helps define expected behavior in an easy-to-read format, facilitating automated testing and validation."
  },
  {
    "id": "3137",
    "question": "What happens if a user story lacks well-defined acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "The team can assume any implementation is correct", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner takes full responsibility for testing", "isCorrect": false },
      { "id": "option_3", "text": "Developers have no clear definition of done", "isCorrect": false },
      { "id": "option_4", "text": "The team may deliver something that does not meet user expectations", "isCorrect": true }
    ],
    "hint": "Clear acceptance criteria help ensure the right feature is built.",
    "answerDescription": "Without defined acceptance criteria, developers may build something that does not align with stakeholder needs, leading to rework and delays."
  },
  {
    "id": "3138",
    "question": "Why should acceptance criteria be written before development begins in agile?",
    "options": [
      { "id": "option_1", "text": "To allow testers to start early", "isCorrect": false },
      { "id": "option_2", "text": "To prevent scope creep and ambiguity", "isCorrect": false },
      { "id": "option_3", "text": "To avoid writing documentation later", "isCorrect": false },
      { "id": "option_4", "text": "To ensure alignment on expected outcomes before coding starts", "isCorrect": true }
    ],
    "hint": "It helps avoid misunderstandings and rework.",
    "answerDescription": "Defining acceptance criteria upfront ensures clarity and alignment, reducing the risk of incorrect implementation."
  },
  {
    "id": "3139",
    "question": "What role do acceptance criteria play in automated testing?",
    "options": [
      { "id": "option_1", "text": "They define the test data structure", "isCorrect": false },
      { "id": "option_2", "text": "They determine the programming language for tests", "isCorrect": false },
      { "id": "option_3", "text": "They provide the expected conditions for pass/fail tests", "isCorrect": false },
      { "id": "option_4", "text": "They serve as the basis for writing automated test cases", "isCorrect": true }
    ],
    "hint": "They guide the creation of automated test cases.",
    "answerDescription": "Well-defined acceptance criteria enable test automation by specifying expected behavior and conditions for verification."
  },
  {
    "id": "3140",
    "question": "How do well-crafted acceptance criteria benefit Agile teams?",
    "options": [
      { "id": "option_1", "text": "By ensuring faster deployment cycles", "isCorrect": false },
      { "id": "option_2", "text": "By reducing team discussions", "isCorrect": false },
      { "id": "option_3", "text": "By enforcing strict coding standards", "isCorrect": false },
      { "id": "option_4", "text": "By improving clarity, alignment, and testability", "isCorrect": true }
    ],
    "hint": "They provide clarity and improve collaboration.",
    "answerDescription": "Clear acceptance criteria ensure shared understanding, facilitate testing, and align expectations between stakeholders and development teams."
  },
  {
    "id": "3141",
    "question": "What is the primary purpose of a user story in Agile development?",
    "options": [
      { "id": "option_1", "text": "To describe a feature from the end-user's perspective", "isCorrect": true },
      { "id": "option_2", "text": "To document technical specifications in detail", "isCorrect": false },
      { "id": "option_3", "text": "To replace all documentation in Agile projects", "isCorrect": false },
      { "id": "option_4", "text": "To enforce rigid project requirements", "isCorrect": false }
    ],
    "hint": "User stories focus on user needs rather than technical details.",
    "answerDescription": "User stories help Agile teams understand what users want and why, ensuring value-driven development."
  },
  {
    "id": "3142",
    "question": "Why should user stories include acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "To define the conditions under which a story is considered complete", "isCorrect": true },
      { "id": "option_2", "text": "To specify detailed coding guidelines", "isCorrect": false },
      { "id": "option_3", "text": "To ensure that testing is optional", "isCorrect": false },
      { "id": "option_4", "text": "To restrict flexibility in development", "isCorrect": false }
    ],
    "hint": "Acceptance criteria act as a checklist for completion.",
    "answerDescription": "Clear acceptance criteria help define the scope of a user story, ensuring alignment between stakeholders and developers."
  },
  {
    "id": "3143",
    "question": "Which format is commonly used to write user stories?",
    "options": [
      { "id": "option_1", "text": "\"As a [user], I want [feature] so that [benefit]\"", "isCorrect": true },
      { "id": "option_2", "text": "\"If [condition] then [action] else [alternative]\"", "isCorrect": false },
      { "id": "option_3", "text": "\"[Feature] should be implemented using [technology]\"", "isCorrect": false },
      { "id": "option_4", "text": "\"The system must follow [specific methodology]\"", "isCorrect": false }
    ],
    "hint": "The format focuses on user perspective and motivation.",
    "answerDescription": "User stories follow a simple, structured format that helps teams understand the userâ€™s needs and the expected value of a feature."
  },
  {
    "id": "3144",
    "question": "What is an INVEST-compliant user story?",
    "options": [
      { "id": "option_1", "text": "A story that is Independent, Negotiable, Valuable, Estimable, Small, and Testable", "isCorrect": true },
      { "id": "option_2", "text": "A story that is In-depth, Necessary, Verified, Extensible, Sustainable, and Technical", "isCorrect": false },
      { "id": "option_3", "text": "A story that is Immediately actionable, Not changeable, Verified by design, and Test-dependent", "isCorrect": false },
      { "id": "option_4", "text": "A story that is Integrated, Non-negotiable, Verified by stakeholders, and Tested in isolation", "isCorrect": false }
    ],
    "hint": "This acronym describes the key qualities of a good user story.",
    "answerDescription": "An INVEST-compliant story ensures that stories are well-defined, independent, and testable, making Agile development smoother."
  },
  {
    "id": "3145",
    "question": "How does acceptance criteria benefit Agile teams?",
    "options": [
      { "id": "option_1", "text": "It provides a clear definition of when a user story is done", "isCorrect": true },
      { "id": "option_2", "text": "It limits the number of possible implementations", "isCorrect": false },
      { "id": "option_3", "text": "It replaces the need for sprint reviews", "isCorrect": false },
      { "id": "option_4", "text": "It forces developers to work on only one task at a time", "isCorrect": false }
    ],
    "hint": "It helps in validating story completion.",
    "answerDescription": "Acceptance criteria act as a guideline for developers and testers to confirm that a feature meets expectations before delivery."
  },
  {
    "id": "3146",
    "question": "Which of the following best describes a well-defined user story?",
    "options": [
      { "id": "option_1", "text": "A concise statement describing user needs and value", "isCorrect": true },
      { "id": "option_2", "text": "A lengthy document detailing system architecture", "isCorrect": false },
      { "id": "option_3", "text": "A predefined checklist for code implementation", "isCorrect": false },
      { "id": "option_4", "text": "A fixed set of instructions with no room for negotiation", "isCorrect": false }
    ],
    "hint": "User stories focus on the user and value delivered.",
    "answerDescription": "A well-defined user story should be simple, clear, and user-centered, ensuring easy understanding by all stakeholders."
  },
  {
    "id": "3147",
    "question": "What is the role of personas in user story creation?",
    "options": [
      { "id": "option_1", "text": "They help identify user needs and behaviors", "isCorrect": true },
      { "id": "option_2", "text": "They replace the need for user research", "isCorrect": false },
      { "id": "option_3", "text": "They are used only for marketing purposes", "isCorrect": false },
      { "id": "option_4", "text": "They serve as a formal project requirement", "isCorrect": false }
    ],
    "hint": "Personas represent different user types.",
    "answerDescription": "Personas allow teams to create more meaningful user stories by understanding different user perspectives and motivations."
  },
  {
    "id": "3148",
    "question": "Why is it important for user stories to be small and manageable?",
    "options": [
      { "id": "option_1", "text": "To ensure they can be completed within a sprint", "isCorrect": true },
      { "id": "option_2", "text": "To avoid writing detailed documentation", "isCorrect": false },
      { "id": "option_3", "text": "To prevent developers from working on complex tasks", "isCorrect": false },
      { "id": "option_4", "text": "To enforce strict time limits on developers", "isCorrect": false }
    ],
    "hint": "Breaking down work helps with sprint planning.",
    "answerDescription": "Smaller user stories allow for faster development and testing, ensuring smooth progress within Agile sprints."
  },
  {
    "id": "3149",
    "question": "What should a team do if a user story is too large?",
    "options": [
      { "id": "option_1", "text": "Split it into smaller, more manageable stories", "isCorrect": true },
      { "id": "option_2", "text": "Remove it from the backlog entirely", "isCorrect": false },
      { "id": "option_3", "text": "Ignore it until a later sprint", "isCorrect": false },
      { "id": "option_4", "text": "Write a separate document instead", "isCorrect": false }
    ],
    "hint": "Smaller stories fit better into Agile workflows.",
    "answerDescription": "Breaking down large stories ensures that they can be completed within a sprint and remain aligned with Agile principles."
  },
  {
    "id": "3150",
    "question": "How can teams ensure user stories remain valuable?",
    "options": [
      { "id": "option_1", "text": "By aligning them with business goals and user needs", "isCorrect": true },
      { "id": "option_2", "text": "By focusing only on technical implementation", "isCorrect": false },
      { "id": "option_3", "text": "By limiting collaboration between stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By reusing the same user stories for every sprint", "isCorrect": false }
    ],
    "hint": "Stories should deliver meaningful value to users.",
    "answerDescription": "A valuable user story ensures that the feature being developed contributes to both business objectives and user satisfaction."
  },{
    "id": "3151",
    "question": "What is a key characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It contains detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "It is independent, negotiable, valuable, estimable, small, and testable", "isCorrect": true },
      { "id": "option_3", "text": "It must be approved by the development team only", "isCorrect": false },
      { "id": "option_4", "text": "It focuses solely on non-functional requirements", "isCorrect": false }
    ],
    "hint": "A good user story follows the INVEST principle.",
    "answerDescription": "A well-written user story should be independent, negotiable, valuable, estimable, small, and testable (INVEST)."
  },
  {
    "id": "3152",
    "question": "Which of the following best describes acceptance criteria in Agile?",
    "options": [
      { "id": "option_1", "text": "A checklist for tracking project progress", "isCorrect": false },
      { "id": "option_2", "text": "Conditions that must be met for a user story to be accepted", "isCorrect": true },
      { "id": "option_3", "text": "A document outlining all project requirements", "isCorrect": false },
      { "id": "option_4", "text": "A tool used to prioritize backlog items", "isCorrect": false }
    ],
    "hint": "Acceptance criteria define the 'done' conditions for a user story.",
    "answerDescription": "Acceptance criteria establish the conditions that must be satisfied for a user story to be considered complete and accepted."
  },
  {
    "id": "3153",
    "question": "Why is it important to define acceptance criteria for user stories?",
    "options": [
      { "id": "option_1", "text": "To ensure developers follow a strict implementation plan", "isCorrect": false },
      { "id": "option_2", "text": "To provide clarity on the expected functionality and testing conditions", "isCorrect": true },
      { "id": "option_3", "text": "To replace user stories with detailed requirement documents", "isCorrect": false },
      { "id": "option_4", "text": "To restrict flexibility in software development", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help define expected results and guide testing.",
    "answerDescription": "Defining acceptance criteria ensures that all stakeholders have a clear understanding of expected functionality and test conditions."
  },
  {
    "id": "3154",
    "question": "Which role is primarily responsible for writing user stories in Agile?",
    "options": [
      { "id": "option_1", "text": "The Scrum Master", "isCorrect": false },
      { "id": "option_2", "text": "The Product Owner", "isCorrect": true },
      { "id": "option_3", "text": "The Development Team", "isCorrect": false },
      { "id": "option_4", "text": "The Project Sponsor", "isCorrect": false }
    ],
    "hint": "The person responsible for managing the backlog writes user stories.",
    "answerDescription": "The Product Owner is responsible for writing user stories, ensuring they capture customer needs and business requirements."
  },
  {
    "id": "3155",
    "question": "What does the 'INVEST' acronym stand for in Agile user stories?",
    "options": [
      { "id": "option_1", "text": "Independent, Necessary, Valuable, Estimable, Simple, Testable", "isCorrect": false },
      { "id": "option_2", "text": "Independent, Negotiable, Valuable, Estimable, Small, Testable", "isCorrect": true },
      { "id": "option_3", "text": "Identifiable, Notable, Viable, Estimable, Scalable, Trackable", "isCorrect": false },
      { "id": "option_4", "text": "Intelligent, Noteworthy, Versatile, Evaluative, Specific, Thorough", "isCorrect": false }
    ],
    "hint": "The INVEST principle ensures high-quality user stories.",
    "answerDescription": "INVEST stands for Independent, Negotiable, Valuable, Estimable, Small, and Testableâ€”key qualities of a good user story."
  },
  {
    "id": "3156",
    "question": "Which of the following is NOT a recommended characteristic of a user story?",
    "options": [
      { "id": "option_1", "text": "Testable", "isCorrect": false },
      { "id": "option_2", "text": "Overly detailed", "isCorrect": true },
      { "id": "option_3", "text": "Small in size", "isCorrect": false },
      { "id": "option_4", "text": "Valuable to stakeholders", "isCorrect": false }
    ],
    "hint": "User stories should be simple and concise.",
    "answerDescription": "User stories should not be overly detailed; instead, they should be concise while conveying the necessary information."
  },
  {
    "id": "3157",
    "question": "What is the primary benefit of using acceptance criteria in Agile?",
    "options": [
      { "id": "option_1", "text": "To define rigid technical implementation details", "isCorrect": false },
      { "id": "option_2", "text": "To provide clear validation points for testing and acceptance", "isCorrect": true },
      { "id": "option_3", "text": "To replace communication between developers and stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "To remove the need for backlog refinement meetings", "isCorrect": false }
    ],
    "hint": "Acceptance criteria serve as a basis for testing and validation.",
    "answerDescription": "Acceptance criteria ensure that functionality is properly validated through testing, reducing ambiguity and improving clarity."
  },
  {
    "id": "3158",
    "question": "Which Agile practice ensures user stories are well-defined and refined before implementation?",
    "options": [
      { "id": "option_1", "text": "Daily Stand-ups", "isCorrect": false },
      { "id": "option_2", "text": "Backlog Refinement", "isCorrect": true },
      { "id": "option_3", "text": "Sprint Review", "isCorrect": false },
      { "id": "option_4", "text": "Pair Programming", "isCorrect": false }
    ],
    "hint": "This practice is used to groom the backlog before a sprint.",
    "answerDescription": "Backlog refinement ensures user stories are clear, well-defined, and ready for implementation in upcoming sprints."
  },
  {
    "id": "3159",
    "question": "Which statement about user stories in Agile is correct?",
    "options": [
      { "id": "option_1", "text": "They must include detailed technical specifications", "isCorrect": false },
      { "id": "option_2", "text": "They focus on delivering value from the userâ€™s perspective", "isCorrect": true },
      { "id": "option_3", "text": "They replace all forms of project documentation", "isCorrect": false },
      { "id": "option_4", "text": "They are only written by developers", "isCorrect": false }
    ],
    "hint": "User stories emphasize user needs and value.",
    "answerDescription": "User stories in Agile prioritize user needs and business value, ensuring functionality aligns with stakeholder expectations."
  },
  {
    "id": "3160",
    "question": "What is the role of a development team in relation to user stories?",
    "options": [
      { "id": "option_1", "text": "To approve or reject user stories", "isCorrect": false },
      { "id": "option_2", "text": "To collaborate in refining, estimating, and implementing them", "isCorrect": true },
      { "id": "option_3", "text": "To define business objectives for stories", "isCorrect": false },
      { "id": "option_4", "text": "To dictate how user stories are written", "isCorrect": false }
    ],
    "hint": "Development teams work closely on story refinement and execution.",
    "answerDescription": "Development teams contribute to refining, estimating, and implementing user stories to deliver high-value outcomes."
  },
  {
    "id": "3161",
    "question": "Why is it important to define clear acceptance criteria for user stories?",
    "options": [
      { "id": "option_1", "text": "To allow developers to skip testing", "isCorrect": false },
      { "id": "option_2", "text": "To make user stories more complex", "isCorrect": false },
      { "id": "option_3", "text": "To ensure a common understanding of requirements", "isCorrect": true },
      { "id": "option_4", "text": "To increase the workload of the QA team", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help set expectations for completion.",
    "answerDescription": "Clear acceptance criteria ensure all stakeholders have a shared understanding of what is needed for a user story to be considered done."
  },
  {
    "id": "3162",
    "question": "What is the primary benefit of using the INVEST criteria for user stories?",
    "options": [
      { "id": "option_1", "text": "To make stories dependent on each other", "isCorrect": false },
      { "id": "option_2", "text": "To ensure user stories are long and detailed", "isCorrect": false },
      { "id": "option_3", "text": "To improve the quality and feasibility of user stories", "isCorrect": true },
      { "id": "option_4", "text": "To allow only developers to define user stories", "isCorrect": false }
    ],
    "hint": "INVEST helps define effective user stories.",
    "answerDescription": "Using the INVEST model ensures that user stories are independent, negotiable, valuable, estimable, small, and testable."
  },
  {
    "id": "3163",
    "question": "How does defining acceptance criteria improve Agile development?",
    "options": [
      { "id": "option_1", "text": "By making development cycles longer", "isCorrect": false },
      { "id": "option_2", "text": "By limiting collaboration between teams", "isCorrect": false },
      { "id": "option_3", "text": "By providing clear guidelines for when a story is complete", "isCorrect": true },
      { "id": "option_4", "text": "By increasing the number of defects in the product", "isCorrect": false }
    ],
    "hint": "Clear acceptance criteria help define completeness.",
    "answerDescription": "Acceptance criteria set clear conditions that must be met for a story to be considered complete, reducing ambiguity and improving quality."
  },
  {
    "id": "3164",
    "question": "Which of the following is an essential characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It is detailed and rigid", "isCorrect": false },
      { "id": "option_2", "text": "It lacks stakeholder involvement", "isCorrect": false },
      { "id": "option_3", "text": "It is concise and user-focused", "isCorrect": true },
      { "id": "option_4", "text": "It includes implementation details", "isCorrect": false }
    ],
    "hint": "A good user story focuses on the userâ€™s needs.",
    "answerDescription": "A well-written user story is short, clear, and centered around user needs rather than technical details."
  },
  {
    "id": "3165",
    "question": "What role does a Product Owner play in defining user stories?",
    "options": [
      { "id": "option_1", "text": "Writing code to implement the story", "isCorrect": false },
      { "id": "option_2", "text": "Designing UI components", "isCorrect": false },
      { "id": "option_3", "text": "Prioritizing and ensuring user stories meet business needs", "isCorrect": true },
      { "id": "option_4", "text": "Ignoring feedback from stakeholders", "isCorrect": false }
    ],
    "hint": "A Product Owner ensures alignment with business goals.",
    "answerDescription": "The Product Owner is responsible for defining and prioritizing user stories to align with business objectives."
  },
  {
    "id": "3166",
    "question": "How can a team ensure that user stories are testable?",
    "options": [
      { "id": "option_1", "text": "By avoiding acceptance criteria", "isCorrect": false },
      { "id": "option_2", "text": "By making stories complex and ambiguous", "isCorrect": false },
      { "id": "option_3", "text": "By including clear and measurable acceptance criteria", "isCorrect": true },
      { "id": "option_4", "text": "By skipping validation processes", "isCorrect": false }
    ],
    "hint": "Clear acceptance criteria improve testability.",
    "answerDescription": "User stories should include acceptance criteria that define measurable conditions for successful implementation."
  },
  {
    "id": "3167",
    "question": "What is a common pitfall when writing user stories?",
    "options": [
      { "id": "option_1", "text": "Making them too small to be valuable", "isCorrect": false },
      { "id": "option_2", "text": "Including implementation details instead of focusing on user needs", "isCorrect": true },
      { "id": "option_3", "text": "Ensuring they are independent", "isCorrect": false },
      { "id": "option_4", "text": "Using clear language", "isCorrect": false }
    ],
    "hint": "User stories should focus on the user, not technical details.",
    "answerDescription": "User stories should describe user needs and avoid implementation specifics, leaving technical decisions to the development team."
  },
  {
    "id": "3168",
    "question": "What is the purpose of a user storyâ€™s 'Definition of Ready'?",
    "options": [
      { "id": "option_1", "text": "To indicate when a story is ready for release", "isCorrect": false },
      { "id": "option_2", "text": "To define the deployment strategy", "isCorrect": false },
      { "id": "option_3", "text": "To ensure all necessary information is available before development starts", "isCorrect": true },
      { "id": "option_4", "text": "To mark the end of sprint planning", "isCorrect": false }
    ],
    "hint": "It ensures the story is clear and actionable.",
    "answerDescription": "The 'Definition of Ready' ensures a story is well-defined and has enough details to be implemented effectively."
  },
  {
    "id": "3169",
    "question": "Why should acceptance criteria be written in a format like Given-When-Then?",
    "options": [
      { "id": "option_1", "text": "To make them harder to understand", "isCorrect": false },
      { "id": "option_2", "text": "To limit flexibility in implementation", "isCorrect": false },
      { "id": "option_3", "text": "To provide a structured way to define expected behavior", "isCorrect": true },
      { "id": "option_4", "text": "To increase the length of documentation", "isCorrect": false }
    ],
    "hint": "A structured format helps define expected outcomes.",
    "answerDescription": "Using the Given-When-Then format makes acceptance criteria more readable and ensures a common understanding of expected behavior."
  },
  {
    "id": "3170",
    "question": "What happens if a user story lacks proper acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Developers can easily complete the story without clarification", "isCorrect": false },
      { "id": "option_2", "text": "Testing becomes more efficient", "isCorrect": false },
      { "id": "option_3", "text": "There is a higher chance of misinterpretation and rework", "isCorrect": true },
      { "id": "option_4", "text": "The story is automatically rejected", "isCorrect": false }
    ],
    "hint": "Ambiguity leads to misunderstandings.",
    "answerDescription": "Without clear acceptance criteria, the team may misinterpret requirements, leading to more rework and inefficiencies."
  },
  {
    "id": "3171",
    "question": "Which aspect of a user story ensures that it can be completed within a single iteration?",
    "options": [
      { "id": "option_1", "text": "It is dependent on multiple other stories", "isCorrect": false },
      { "id": "option_2", "text": "It is overly detailed with multiple objectives", "isCorrect": false },
      { "id": "option_3", "text": "It lacks clear acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "It is small and estimable", "isCorrect": true }
    ],
    "hint": "The story should be manageable within a sprint.",
    "answerDescription": "User stories should be small enough to be completed within a single sprint and estimable by the team."
  },
  {
    "id": "3172",
    "question": "How do acceptance criteria contribute to collaboration between developers and testers?",
    "options": [
      { "id": "option_1", "text": "By reducing the need for discussion", "isCorrect": false },
      { "id": "option_2", "text": "By making testing optional", "isCorrect": false },
      { "id": "option_3", "text": "By focusing only on the developerâ€™s perspective", "isCorrect": false },
      { "id": "option_4", "text": "By defining clear success conditions for both teams", "isCorrect": true }
    ],
    "hint": "Clear conditions help ensure proper validation.",
    "answerDescription": "Acceptance criteria provide a shared understanding of expected outcomes, facilitating smoother collaboration between developers and testers."
  },
  {
    "id": "3173",
    "question": "What is the main reason for breaking down large user stories into smaller ones?",
    "options": [
      { "id": "option_1", "text": "To increase development complexity", "isCorrect": false },
      { "id": "option_2", "text": "To make tracking progress more difficult", "isCorrect": false },
      { "id": "option_3", "text": "To ensure the story remains vague and flexible", "isCorrect": false },
      { "id": "option_4", "text": "To make development and testing more manageable", "isCorrect": true }
    ],
    "hint": "Smaller stories help with progress tracking.",
    "answerDescription": "Breaking down large stories into smaller ones makes them easier to develop, test, and complete within a sprint."
  },
  {
    "id": "3174",
    "question": "Why should user stories be written from the end user's perspective?",
    "options": [
      { "id": "option_1", "text": "To emphasize technical details", "isCorrect": false },
      { "id": "option_2", "text": "To reduce flexibility in implementation", "isCorrect": false },
      { "id": "option_3", "text": "To prioritize system functionality over user experience", "isCorrect": false },
      { "id": "option_4", "text": "To ensure the story focuses on user needs and value", "isCorrect": true }
    ],
    "hint": "User stories should describe value from the user's perspective.",
    "answerDescription": "Writing from the userâ€™s perspective ensures that the story delivers real value to the end user and aligns with their needs."
  },
  {
    "id": "3175",
    "question": "What is the role of acceptance criteria in preventing scope creep?",
    "options": [
      { "id": "option_1", "text": "They make changes easier to introduce", "isCorrect": false },
      { "id": "option_2", "text": "They allow stakeholders to modify requirements frequently", "isCorrect": false },
      { "id": "option_3", "text": "They encourage open-ended development", "isCorrect": false },
      { "id": "option_4", "text": "They define clear boundaries for what is included in a story", "isCorrect": true }
    ],
    "hint": "Acceptance criteria help define what is 'done.'",
    "answerDescription": "By clearly stating what needs to be achieved, acceptance criteria prevent unnecessary additions that could lead to scope creep."
  },
  {
    "id": "3176",
    "question": "Which statement best describes a good acceptance criterion?",
    "options": [
      { "id": "option_1", "text": "It is vague and open to interpretation", "isCorrect": false },
      { "id": "option_2", "text": "It focuses only on the implementation details", "isCorrect": false },
      { "id": "option_3", "text": "It allows multiple interpretations by different teams", "isCorrect": false },
      { "id": "option_4", "text": "It is clear, specific, and testable", "isCorrect": true }
    ],
    "hint": "Good acceptance criteria should be easy to test.",
    "answerDescription": "A well-written acceptance criterion is specific and provides a clear testable condition for verifying the user story."
  },
  {
    "id": "3177",
    "question": "Why should teams avoid making user stories too detailed?",
    "options": [
      { "id": "option_1", "text": "Because details are unnecessary in Agile", "isCorrect": false },
      { "id": "option_2", "text": "Because stakeholders do not need information", "isCorrect": false },
      { "id": "option_3", "text": "Because detailed stories reduce team autonomy", "isCorrect": false },
      { "id": "option_4", "text": "Because too much detail can limit flexibility and adaptability", "isCorrect": true }
    ],
    "hint": "User stories should leave room for collaboration.",
    "answerDescription": "Overly detailed user stories can constrain the development teamâ€™s ability to find the best implementation approach."
  },
  {
    "id": "3178",
    "question": "What is the best approach to writing effective acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Avoid involving stakeholders in defining them", "isCorrect": false },
      { "id": "option_2", "text": "Ensure they are as vague as possible", "isCorrect": false },
      { "id": "option_3", "text": "Write them after development is completed", "isCorrect": false },
      { "id": "option_4", "text": "Define them collaboratively with clear expected outcomes", "isCorrect": true }
    ],
    "hint": "Collaboration ensures better-defined criteria.",
    "answerDescription": "Acceptance criteria should be defined with input from stakeholders, testers, and developers to ensure clarity and alignment."
  },
  {
    "id": "3179",
    "question": "How does splitting user stories help maintain a sustainable development pace?",
    "options": [
      { "id": "option_1", "text": "By making work less predictable", "isCorrect": false },
      { "id": "option_2", "text": "By increasing the amount of work-in-progress", "isCorrect": false },
      { "id": "option_3", "text": "By delaying feature delivery", "isCorrect": false },
      { "id": "option_4", "text": "By allowing incremental progress and faster feedback", "isCorrect": true }
    ],
    "hint": "Small increments allow better tracking and faster feedback.",
    "answerDescription": "Splitting stories enables teams to deliver value iteratively while ensuring steady progress and reducing bottlenecks."
  },
  {
    "id": "3180",
    "question": "Why is it important to keep user stories independent?",
    "options": [
      { "id": "option_1", "text": "To make development unpredictable", "isCorrect": false },
      { "id": "option_2", "text": "To increase dependencies between teams", "isCorrect": false },
      { "id": "option_3", "text": "To create bottlenecks in the workflow", "isCorrect": false },
      { "id": "option_4", "text": "To allow flexibility in prioritization and implementation", "isCorrect": true }
    ],
    "hint": "Independent stories help teams work more efficiently.",
    "answerDescription": "Keeping stories independent allows teams to prioritize and implement them without being blocked by other work."
  },
  {
    "id": "3181",
    "question": "What is the primary benefit of defining acceptance criteria for a user story?",
    "options": [
      { "id": "option_1", "text": "It provides a clear definition of done", "isCorrect": true },
      { "id": "option_2", "text": "It makes stories more complex", "isCorrect": false },
      { "id": "option_3", "text": "It reduces the need for communication", "isCorrect": false },
      { "id": "option_4", "text": "It allows last-minute changes to requirements", "isCorrect": false }
    ],
    "hint": "Acceptance criteria ensure a story is complete.",
    "answerDescription": "Clearly defined acceptance criteria help teams understand when a user story is fully implemented and meets expectations."
  },
  {
    "id": "3182",
    "question": "Why is it important to keep user stories small and manageable?",
    "options": [
      { "id": "option_1", "text": "It ensures faster development and testing", "isCorrect": true },
      { "id": "option_2", "text": "It reduces the number of acceptance criteria needed", "isCorrect": false },
      { "id": "option_3", "text": "It increases dependencies between teams", "isCorrect": false },
      { "id": "option_4", "text": "It allows for more detailed stories", "isCorrect": false }
    ],
    "hint": "Smaller stories improve agility and efficiency.",
    "answerDescription": "Keeping stories small allows teams to complete them quickly and ensures they can be tested and delivered efficiently."
  },
  {
    "id": "3183",
    "question": "Which principle should teams follow when writing user stories?",
    "options": [
      { "id": "option_1", "text": "Stories should focus on user needs", "isCorrect": true },
      { "id": "option_2", "text": "Stories should be technical and complex", "isCorrect": false },
      { "id": "option_3", "text": "Stories should be vague to allow flexibility", "isCorrect": false },
      { "id": "option_4", "text": "Stories should only focus on backend functionality", "isCorrect": false }
    ],
    "hint": "User stories should deliver value to users.",
    "answerDescription": "A good user story focuses on what the user needs, ensuring that development is driven by real-world use cases."
  },
  {
    "id": "3184",
    "question": "How can well-defined acceptance criteria improve team alignment?",
    "options": [
      { "id": "option_1", "text": "It sets clear expectations for all stakeholders", "isCorrect": true },
      { "id": "option_2", "text": "It allows each team member to interpret requirements differently", "isCorrect": false },
      { "id": "option_3", "text": "It eliminates the need for team discussions", "isCorrect": false },
      { "id": "option_4", "text": "It makes testing optional", "isCorrect": false }
    ],
    "hint": "Clear expectations help teams work efficiently.",
    "answerDescription": "Acceptance criteria ensure that developers, testers, and stakeholders have a shared understanding of what is required."
  },
  {
    "id": "3185",
    "question": "What is a key characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It is independent and self-contained", "isCorrect": true },
      { "id": "option_2", "text": "It relies on multiple other stories to be completed", "isCorrect": false },
      { "id": "option_3", "text": "It is highly detailed with strict implementation steps", "isCorrect": false },
      { "id": "option_4", "text": "It does not need to be testable", "isCorrect": false }
    ],
    "hint": "A good user story should stand alone.",
    "answerDescription": "Independent stories ensure that they can be developed, tested, and completed without being blocked by other stories."
  },
  {
    "id": "3186",
    "question": "Why should acceptance criteria be testable?",
    "options": [
      { "id": "option_1", "text": "To ensure that the feature works as expected", "isCorrect": true },
      { "id": "option_2", "text": "To increase ambiguity in requirements", "isCorrect": false },
      { "id": "option_3", "text": "To make stories more complex", "isCorrect": false },
      { "id": "option_4", "text": "To avoid collaboration between teams", "isCorrect": false }
    ],
    "hint": "Testability ensures successful validation.",
    "answerDescription": "Acceptance criteria should be verifiable so that teams can confirm the feature works correctly before release."
  },
  {
    "id": "3187",
    "question": "What is an effective way to write user stories?",
    "options": [
      { "id": "option_1", "text": "Use the 'As a [user], I want [feature] so that [benefit]' format", "isCorrect": true },
      { "id": "option_2", "text": "Describe only technical details", "isCorrect": false },
      { "id": "option_3", "text": "Avoid specifying user roles", "isCorrect": false },
      { "id": "option_4", "text": "Exclude the expected outcome", "isCorrect": false }
    ],
    "hint": "A structured approach helps define good stories.",
    "answerDescription": "The 'As a... I want... so that...' format ensures clarity and user focus in writing user stories."
  },
  {
    "id": "3188",
    "question": "How do well-defined user stories contribute to Agile development?",
    "options": [
      { "id": "option_1", "text": "They enable iterative and incremental delivery", "isCorrect": true },
      { "id": "option_2", "text": "They make it harder to estimate effort", "isCorrect": false },
      { "id": "option_3", "text": "They increase dependencies between teams", "isCorrect": false },
      { "id": "option_4", "text": "They require detailed upfront documentation", "isCorrect": false }
    ],
    "hint": "Agile development relies on frequent, incremental progress.",
    "answerDescription": "User stories help teams work in small increments, ensuring continuous delivery and adaptability."
  },
  {
    "id": "3189",
    "question": "Why is it beneficial to involve stakeholders in defining user stories?",
    "options": [
      { "id": "option_1", "text": "It ensures alignment with business goals", "isCorrect": true },
      { "id": "option_2", "text": "It increases development complexity", "isCorrect": false },
      { "id": "option_3", "text": "It limits the team's ability to implement solutions", "isCorrect": false },
      { "id": "option_4", "text": "It removes flexibility from the development process", "isCorrect": false }
    ],
    "hint": "Stakeholder input ensures relevance and value.",
    "answerDescription": "Involving stakeholders helps ensure that the user stories align with business needs and provide real value."
  },
  {
    "id": "3190",
    "question": "How can teams ensure that user stories remain relevant and useful?",
    "options": [
      { "id": "option_1", "text": "By regularly refining and reprioritizing them", "isCorrect": true },
      { "id": "option_2", "text": "By keeping them unchanged after writing", "isCorrect": false },
      { "id": "option_3", "text": "By avoiding input from stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "By focusing only on technical implementation", "isCorrect": false }
    ],
    "hint": "Continuous refinement keeps stories relevant.",
    "answerDescription": "User stories should be refined and reprioritized regularly to ensure they continue to align with business needs."
  },
  {
    "id": "3191",
    "question": "Which of the following best describes a well-defined user story?",
    "options": [
      { "id": "option_1", "text": "A long and detailed technical specification", "isCorrect": false },
      { "id": "option_2", "text": "A short, clear description of a user's need", "isCorrect": true },
      { "id": "option_3", "text": "A document with exhaustive acceptance tests", "isCorrect": false },
      { "id": "option_4", "text": "A feature request from management", "isCorrect": false }
    ],
    "hint": "User stories should be simple and focused on user needs.",
    "answerDescription": "A well-defined user story concisely describes what the user needs and why, making it easy to understand and implement."
  },
  {
    "id": "3192",
    "question": "What does the INVEST acronym in Agile user stories stand for?",
    "options": [
      { "id": "option_1", "text": "Innovative, Necessary, Valuable, Exact, Secure, Testable", "isCorrect": false },
      { "id": "option_2", "text": "Independent, Negotiable, Valuable, Estimable, Small, Testable", "isCorrect": true },
      { "id": "option_3", "text": "Iterative, Navigable, Verified, Extensible, Scalable, Transparent", "isCorrect": false },
      { "id": "option_4", "text": "Individual, Networked, Vast, Effective, Strong, Traceable", "isCorrect": false }
    ],
    "hint": "Each letter represents a key characteristic of a good user story.",
    "answerDescription": "A good user story follows the INVEST principle, ensuring it is Independent, Negotiable, Valuable, Estimable, Small, and Testable."
  },
  {
    "id": "3193",
    "question": "Why is it essential for acceptance criteria to be defined before development starts?",
    "options": [
      { "id": "option_1", "text": "To finalize all technical details", "isCorrect": false },
      { "id": "option_2", "text": "To provide clear guidelines for completion", "isCorrect": true },
      { "id": "option_3", "text": "To increase the flexibility of implementation", "isCorrect": false },
      { "id": "option_4", "text": "To avoid communication with stakeholders", "isCorrect": false }
    ],
    "hint": "Acceptance criteria help define the expected outcome.",
    "answerDescription": "Defining acceptance criteria before development ensures that the team knows what is required to complete the story successfully."
  },
  {
    "id": "3194",
    "question": "Which of the following is NOT a characteristic of a well-written user story?",
    "options": [
      { "id": "option_1", "text": "It focuses on user needs", "isCorrect": false },
      { "id": "option_2", "text": "It is overly detailed and prescriptive", "isCorrect": true },
      { "id": "option_3", "text": "It includes acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "It is independent and testable", "isCorrect": false }
    ],
    "hint": "User stories should remain high-level and avoid excessive detail.",
    "answerDescription": "User stories should provide a high-level view of the requirement rather than specifying every implementation detail."
  },
  {
    "id": "3195",
    "question": "How does prioritizing user stories benefit Agile development?",
    "options": [
      { "id": "option_1", "text": "It ensures that only high-risk stories are completed", "isCorrect": false },
      { "id": "option_2", "text": "It helps deliver the most valuable features first", "isCorrect": true },
      { "id": "option_3", "text": "It removes the need for backlog grooming", "isCorrect": false },
      { "id": "option_4", "text": "It allows for random selection of stories", "isCorrect": false }
    ],
    "hint": "Prioritization ensures focus on delivering value.",
    "answerDescription": "Prioritizing user stories helps teams focus on the most valuable features first, ensuring efficient use of development time."
  },
  {
    "id": "3196",
    "question": "What should a team do if a user story is too large to complete in one sprint?",
    "options": [
      { "id": "option_1", "text": "Delay it until more resources are available", "isCorrect": false },
      { "id": "option_2", "text": "Break it down into smaller stories", "isCorrect": true },
      { "id": "option_3", "text": "Ignore the acceptance criteria", "isCorrect": false },
      { "id": "option_4", "text": "Extend the sprint duration", "isCorrect": false }
    ],
    "hint": "Large stories should be refined for better execution.",
    "answerDescription": "Splitting large stories into smaller, more manageable ones ensures they can be completed and tested within a sprint."
  },
  {
    "id": "3197",
    "question": "Which factor is most important when defining acceptance criteria?",
    "options": [
      { "id": "option_1", "text": "Including as many technical details as possible", "isCorrect": false },
      { "id": "option_2", "text": "Ensuring they are clear and measurable", "isCorrect": true },
      { "id": "option_3", "text": "Avoiding discussions with stakeholders", "isCorrect": false },
      { "id": "option_4", "text": "Leaving room for interpretation", "isCorrect": false }
    ],
    "hint": "Acceptance criteria should provide clarity and testability.",
    "answerDescription": "Clear and measurable acceptance criteria ensure that the expected outcome can be tested and validated effectively."
  },
  {
    "id": "3198",
    "question": "Why should user stories avoid specifying implementation details?",
    "options": [
      { "id": "option_1", "text": "To ensure developers do not follow any guidelines", "isCorrect": false },
      { "id": "option_2", "text": "To allow flexibility in technical solutions", "isCorrect": true },
      { "id": "option_3", "text": "To make estimation easier", "isCorrect": false },
      { "id": "option_4", "text": "To remove the need for acceptance criteria", "isCorrect": false }
    ],
    "hint": "User stories should describe what is needed, not how to build it.",
    "answerDescription": "Keeping implementation details out of user stories allows developers to choose the best approach while focusing on user needs."
  },
  {
    "id": "3199",
    "question": "How can teams ensure that user stories remain relevant throughout development?",
    "options": [
      { "id": "option_1", "text": "By locking them once they are written", "isCorrect": false },
      { "id": "option_2", "text": "By regularly refining and discussing them", "isCorrect": true },
      { "id": "option_3", "text": "By prioritizing older stories over new ones", "isCorrect": false },
      { "id": "option_4", "text": "By ignoring stakeholder feedback", "isCorrect": false }
    ],
    "hint": "Continuous collaboration helps keep stories up to date.",
    "answerDescription": "Regular refinement ensures user stories stay aligned with project goals and changing business needs."
  },
  {
    "id": "3200",
    "question": "What is the primary goal of acceptance criteria in a user story?",
    "options": [
      { "id": "option_1", "text": "To describe the business impact of the story", "isCorrect": false },
      { "id": "option_2", "text": "To define when a story is considered complete", "isCorrect": true },
      { "id": "option_3", "text": "To list all possible test cases", "isCorrect": false },
      { "id": "option_4", "text": "To provide detailed technical specifications", "isCorrect": false }
    ],
    "hint": "Acceptance criteria determine the conditions for completion.",
    "answerDescription": "Clearly defined acceptance criteria help the team know when a story is finished and meets the expected requirements."
  },


  
  
  
  


]